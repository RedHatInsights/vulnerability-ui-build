(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["CVEPage~VulnerabilitiesCVEs"],{

/***/ "./node_modules/babel-runtime/core-js/array/from.js":
/*!**********************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/array/from.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/array/from */ "./node_modules/babel-runtime/node_modules/core-js/library/fn/array/from.js"), __esModule: true };

/***/ }),

/***/ "./node_modules/babel-runtime/helpers/toConsumableArray.js":
/*!*****************************************************************!*\
  !*** ./node_modules/babel-runtime/helpers/toConsumableArray.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _from = __webpack_require__(/*! ../core-js/array/from */ "./node_modules/babel-runtime/core-js/array/from.js");

var _from2 = _interopRequireDefault(_from);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  } else {
    return (0, _from2.default)(arr);
  }
};

/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/fn/array/from.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/fn/array/from.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.string.iterator */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.iterator.js");
__webpack_require__(/*! ../../modules/es6.array.from */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.from.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js").Array.from;


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_create-property.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_create-property.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $defineProperty = __webpack_require__(/*! ./_object-dp */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-dp.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_property-desc.js");

module.exports = function (object, index, value) {
  if (index in object) $defineProperty.f(object, index, createDesc(0, value));
  else object[index] = value;
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.from.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.from.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_ctx.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_export.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-object.js");
var call = __webpack_require__(/*! ./_iter-call */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-call.js");
var isArrayIter = __webpack_require__(/*! ./_is-array-iter */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_is-array-iter.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-length.js");
var createProperty = __webpack_require__(/*! ./_create-property */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_create-property.js");
var getIterFn = __webpack_require__(/*! ./core.get-iterator-method */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/core.get-iterator-method.js");

$export($export.S + $export.F * !__webpack_require__(/*! ./_iter-detect */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-detect.js")(function (iter) { Array.from(iter); }), 'Array', {
  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
    var O = toObject(arrayLike);
    var C = typeof this == 'function' ? this : Array;
    var aLen = arguments.length;
    var mapfn = aLen > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    var index = 0;
    var iterFn = getIterFn(O);
    var length, result, step, iterator;
    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
    // if object isn't iterable or it's array with default iterator - use simple case
    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
      }
    } else {
      length = toLength(O.length);
      for (result = new C(length); length > index; index++) {
        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
      }
    }
    result.length = index;
    return result;
  }
});


/***/ }),

/***/ "./node_modules/dateformat/lib/dateformat.js":
/*!***************************************************!*\
  !*** ./node_modules/dateformat/lib/dateformat.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;/*
 * Date Format 1.2.3
 * (c) 2007-2009 Steven Levithan <stevenlevithan.com>
 * MIT license
 *
 * Includes enhancements by Scott Trenda <scott.trenda.net>
 * and Kris Kowal <cixar.com/~kris.kowal/>
 *
 * Accepts a date, a mask, or a date and a mask.
 * Returns a formatted version of the given date.
 * The date defaults to the current date/time.
 * The mask defaults to dateFormat.masks.default.
 */

(function(global) {
  'use strict';

  var dateFormat = (function() {
      var token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\1?|[LloSZWN]|"[^"]*"|'[^']*'/g;
      var timezone = /\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g;
      var timezoneClip = /[^-+\dA-Z]/g;
  
      // Regexes and supporting functions are cached through closure
      return function (date, mask, utc, gmt) {
  
        // You can't provide utc if you skip other args (use the 'UTC:' mask prefix)
        if (arguments.length === 1 && kindOf(date) === 'string' && !/\d/.test(date)) {
          mask = date;
          date = undefined;
        }
  
        date = date || new Date;
  
        if(!(date instanceof Date)) {
          date = new Date(date);
        }
  
        if (isNaN(date)) {
          throw TypeError('Invalid date');
        }
  
        mask = String(dateFormat.masks[mask] || mask || dateFormat.masks['default']);
  
        // Allow setting the utc/gmt argument via the mask
        var maskSlice = mask.slice(0, 4);
        if (maskSlice === 'UTC:' || maskSlice === 'GMT:') {
          mask = mask.slice(4);
          utc = true;
          if (maskSlice === 'GMT:') {
            gmt = true;
          }
        }
  
        var _ = utc ? 'getUTC' : 'get';
        var d = date[_ + 'Date']();
        var D = date[_ + 'Day']();
        var m = date[_ + 'Month']();
        var y = date[_ + 'FullYear']();
        var H = date[_ + 'Hours']();
        var M = date[_ + 'Minutes']();
        var s = date[_ + 'Seconds']();
        var L = date[_ + 'Milliseconds']();
        var o = utc ? 0 : date.getTimezoneOffset();
        var W = getWeek(date);
        var N = getDayOfWeek(date);
        var flags = {
          d:    d,
          dd:   pad(d),
          ddd:  dateFormat.i18n.dayNames[D],
          dddd: dateFormat.i18n.dayNames[D + 7],
          m:    m + 1,
          mm:   pad(m + 1),
          mmm:  dateFormat.i18n.monthNames[m],
          mmmm: dateFormat.i18n.monthNames[m + 12],
          yy:   String(y).slice(2),
          yyyy: y,
          h:    H % 12 || 12,
          hh:   pad(H % 12 || 12),
          H:    H,
          HH:   pad(H),
          M:    M,
          MM:   pad(M),
          s:    s,
          ss:   pad(s),
          l:    pad(L, 3),
          L:    pad(Math.round(L / 10)),
          t:    H < 12 ? dateFormat.i18n.timeNames[0] : dateFormat.i18n.timeNames[1],
          tt:   H < 12 ? dateFormat.i18n.timeNames[2] : dateFormat.i18n.timeNames[3],
          T:    H < 12 ? dateFormat.i18n.timeNames[4] : dateFormat.i18n.timeNames[5],
          TT:   H < 12 ? dateFormat.i18n.timeNames[6] : dateFormat.i18n.timeNames[7],
          Z:    gmt ? 'GMT' : utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),
          o:    (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),
          S:    ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10],
          W:    W,
          N:    N
        };
  
        return mask.replace(token, function (match) {
          if (match in flags) {
            return flags[match];
          }
          return match.slice(1, match.length - 1);
        });
      };
    })();

  dateFormat.masks = {
    'default':               'ddd mmm dd yyyy HH:MM:ss',
    'shortDate':             'm/d/yy',
    'mediumDate':            'mmm d, yyyy',
    'longDate':              'mmmm d, yyyy',
    'fullDate':              'dddd, mmmm d, yyyy',
    'shortTime':             'h:MM TT',
    'mediumTime':            'h:MM:ss TT',
    'longTime':              'h:MM:ss TT Z',
    'isoDate':               'yyyy-mm-dd',
    'isoTime':               'HH:MM:ss',
    'isoDateTime':           'yyyy-mm-dd\'T\'HH:MM:sso',
    'isoUtcDateTime':        'UTC:yyyy-mm-dd\'T\'HH:MM:ss\'Z\'',
    'expiresHeaderFormat':   'ddd, dd mmm yyyy HH:MM:ss Z'
  };

  // Internationalization strings
  dateFormat.i18n = {
    dayNames: [
      'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat',
      'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'
    ],
    monthNames: [
      'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec',
      'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'
    ],
    timeNames: [
      'a', 'p', 'am', 'pm', 'A', 'P', 'AM', 'PM'
    ]
  };

function pad(val, len) {
  val = String(val);
  len = len || 2;
  while (val.length < len) {
    val = '0' + val;
  }
  return val;
}

/**
 * Get the ISO 8601 week number
 * Based on comments from
 * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html
 *
 * @param  {Object} `date`
 * @return {Number}
 */
function getWeek(date) {
  // Remove time components of date
  var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate());

  // Change date to Thursday same week
  targetThursday.setDate(targetThursday.getDate() - ((targetThursday.getDay() + 6) % 7) + 3);

  // Take January 4th as it is always in week 1 (see ISO 8601)
  var firstThursday = new Date(targetThursday.getFullYear(), 0, 4);

  // Change date to Thursday same week
  firstThursday.setDate(firstThursday.getDate() - ((firstThursday.getDay() + 6) % 7) + 3);

  // Check if daylight-saving-time-switch occurred and correct for it
  var ds = targetThursday.getTimezoneOffset() - firstThursday.getTimezoneOffset();
  targetThursday.setHours(targetThursday.getHours() - ds);

  // Number of weeks between target Thursday and first Thursday
  var weekDiff = (targetThursday - firstThursday) / (86400000*7);
  return 1 + Math.floor(weekDiff);
}

/**
 * Get ISO-8601 numeric representation of the day of the week
 * 1 (for Monday) through 7 (for Sunday)
 * 
 * @param  {Object} `date`
 * @return {Number}
 */
function getDayOfWeek(date) {
  var dow = date.getDay();
  if(dow === 0) {
    dow = 7;
  }
  return dow;
}

/**
 * kind-of shortcut
 * @param  {*} val
 * @return {String}
 */
function kindOf(val) {
  if (val === null) {
    return 'null';
  }

  if (val === undefined) {
    return 'undefined';
  }

  if (typeof val !== 'object') {
    return typeof val;
  }

  if (Array.isArray(val)) {
    return 'array';
  }

  return {}.toString.call(val)
    .slice(8, -1).toLowerCase();
};



  if (true) {
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
      return dateFormat;
    }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this);


/***/ }),

/***/ "./node_modules/lodash/_baseKeys.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_baseKeys.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var overArg = __webpack_require__(/*! ./_overArg */ "./node_modules/lodash/_overArg.js");

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys = overArg(Object.keys, Object);

module.exports = nativeKeys;


/***/ }),

/***/ "./node_modules/lodash/isEmpty.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/isEmpty.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseKeys = __webpack_require__(/*! ./_baseKeys */ "./node_modules/lodash/_baseKeys.js"),
    getTag = __webpack_require__(/*! ./_getTag */ "./node_modules/lodash/_getTag.js"),
    isArguments = __webpack_require__(/*! ./isArguments */ "./node_modules/lodash/isArguments.js"),
    isArray = __webpack_require__(/*! ./isArray */ "./node_modules/lodash/isArray.js"),
    isArrayLike = __webpack_require__(/*! ./isArrayLike */ "./node_modules/lodash/isArrayLike.js"),
    isBuffer = __webpack_require__(/*! ./isBuffer */ "./node_modules/lodash/isBuffer.js"),
    isPrototype = __webpack_require__(/*! ./_isPrototype */ "./node_modules/lodash/_isPrototype.js"),
    isTypedArray = __webpack_require__(/*! ./isTypedArray */ "./node_modules/lodash/isTypedArray.js");

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    setTag = '[object Set]';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Checks if `value` is an empty object, collection, map, or set.
 *
 * Objects are considered empty if they have no own enumerable string keyed
 * properties.
 *
 * Array-like values such as `arguments` objects, arrays, buffers, strings, or
 * jQuery-like collections are considered empty if they have a `length` of `0`.
 * Similarly, maps and sets are considered empty if they have a `size` of `0`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is empty, else `false`.
 * @example
 *
 * _.isEmpty(null);
 * // => true
 *
 * _.isEmpty(true);
 * // => true
 *
 * _.isEmpty(1);
 * // => true
 *
 * _.isEmpty([1, 2, 3]);
 * // => false
 *
 * _.isEmpty({ 'a': 1 });
 * // => false
 */
function isEmpty(value) {
  if (value == null) {
    return true;
  }
  if (isArrayLike(value) &&
      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
        isBuffer(value) || isTypedArray(value) || isArguments(value))) {
    return !value.length;
  }
  var tag = getTag(value);
  if (tag == mapTag || tag == setTag) {
    return !value.size;
  }
  if (isPrototype(value)) {
    return !baseKeys(value).length;
  }
  for (var key in value) {
    if (hasOwnProperty.call(value, key)) {
      return false;
    }
  }
  return true;
}

module.exports = isEmpty;


/***/ }),

/***/ "./node_modules/reselect/lib/index.js":
/*!********************************************!*\
  !*** ./node_modules/reselect/lib/index.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.defaultMemoize = defaultMemoize;
exports.createSelectorCreator = createSelectorCreator;
exports.createStructuredSelector = createStructuredSelector;
function defaultEqualityCheck(a, b) {
  return a === b;
}

function areArgumentsShallowlyEqual(equalityCheck, prev, next) {
  if (prev === null || next === null || prev.length !== next.length) {
    return false;
  }

  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.
  var length = prev.length;
  for (var i = 0; i < length; i++) {
    if (!equalityCheck(prev[i], next[i])) {
      return false;
    }
  }

  return true;
}

function defaultMemoize(func) {
  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;

  var lastArgs = null;
  var lastResult = null;
  // we reference arguments instead of spreading them for performance reasons
  return function () {
    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {
      // apply arguments instead of spreading for performance.
      lastResult = func.apply(null, arguments);
    }

    lastArgs = arguments;
    return lastResult;
  };
}

function getDependencies(funcs) {
  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;

  if (!dependencies.every(function (dep) {
    return typeof dep === 'function';
  })) {
    var dependencyTypes = dependencies.map(function (dep) {
      return typeof dep;
    }).join(', ');
    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));
  }

  return dependencies;
}

function createSelectorCreator(memoize) {
  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    memoizeOptions[_key - 1] = arguments[_key];
  }

  return function () {
    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      funcs[_key2] = arguments[_key2];
    }

    var recomputations = 0;
    var resultFunc = funcs.pop();
    var dependencies = getDependencies(funcs);

    var memoizedResultFunc = memoize.apply(undefined, [function () {
      recomputations++;
      // apply arguments instead of spreading for performance.
      return resultFunc.apply(null, arguments);
    }].concat(memoizeOptions));

    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.
    var selector = defaultMemoize(function () {
      var params = [];
      var length = dependencies.length;

      for (var i = 0; i < length; i++) {
        // apply arguments instead of spreading and mutate a local list of params for performance.
        params.push(dependencies[i].apply(null, arguments));
      }

      // apply arguments instead of spreading for performance.
      return memoizedResultFunc.apply(null, params);
    });

    selector.resultFunc = resultFunc;
    selector.recomputations = function () {
      return recomputations;
    };
    selector.resetRecomputations = function () {
      return recomputations = 0;
    };
    return selector;
  };
}

var createSelector = exports.createSelector = createSelectorCreator(defaultMemoize);

function createStructuredSelector(selectors) {
  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;

  if (typeof selectors !== 'object') {
    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));
  }
  var objectKeys = Object.keys(selectors);
  return selectorCreator(objectKeys.map(function (key) {
    return selectors[key];
  }), function () {
    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      values[_key3] = arguments[_key3];
    }

    return values.reduce(function (composition, value, index) {
      composition[objectKeys[index]] = value;
      return composition;
    }, {});
  });
}

/***/ }),

/***/ "./src/Helpers/CVE/CVEHelper.js":
/*!**************************************!*\
  !*** ./src/Helpers/CVE/CVEHelper.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getCVEsWithSystems = undefined;

var _toConsumableArray2 = __webpack_require__(/*! babel-runtime/helpers/toConsumableArray */ "./node_modules/babel-runtime/helpers/toConsumableArray.js");

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _regenerator = __webpack_require__(/*! babel-runtime/regenerator */ "./node_modules/babel-runtime/regenerator/index.js");

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = __webpack_require__(/*! babel-runtime/helpers/asyncToGenerator */ "./node_modules/babel-runtime/helpers/asyncToGenerator.js");

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _extends2 = __webpack_require__(/*! babel-runtime/helpers/extends */ "./node_modules/babel-runtime/helpers/extends.js");

var _extends3 = _interopRequireDefault(_extends2);

var _isEmpty2 = __webpack_require__(/*! lodash/isEmpty */ "./node_modules/lodash/isEmpty.js");

var _isEmpty3 = _interopRequireDefault(_isEmpty2);

var getCVEsWithSystems = exports.getCVEsWithSystems = function () {
    var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
        var cvesWithSystems, cveList, cves;
        return _regenerator2.default.wrap(function _callee$(_context) {
            while (1) {
                switch (_context.prev = _context.next) {
                    case 0:
                        cvesWithSystems = [];
                        cveList = ['CVE-2017-5715', 'CVE-2017-5753', 'CVE-2017-5754', 'CVE-2017-5756', 'CVE-2018-10931', 'CVE_2015_3456', 'CVE_2015_3456', 'CVE_2015_7547', 'CVE-2016-0800', 'CVE_2016_3714', 'CVE-2014-0160', 'CVE-2018-1102', 'CVE-2018-2814', 'CVE-2017-1000502', 'CVE-2018-10908', 'CVE-2018-4117'];
                        _context.next = 4;
                        return getVMaaSCVEs({ cve_list: cveList });

                    case 4:
                        cves = _context.sent;

                        cvesWithSystems = Object.values(cves).map(function (item) {
                            return (0, _extends3.default)({}, item, { systems: getNumberOfAffectedSystems(item.synopsis) });
                        });
                        return _context.abrupt('return', cvesWithSystems);

                    case 7:
                    case 'end':
                        return _context.stop();
                }
            }
        }, _callee, this);
    }));

    return function getCVEsWithSystems() {
        return _ref.apply(this, arguments);
    };
}();

exports.getVMaaSCVEs = getVMaaSCVEs;
exports.getNumberOfAffectedSystems = getNumberOfAffectedSystems;
exports.createCveWithSystemsTable = createCveWithSystemsTable;
exports.createExposedSystemsTable = createExposedSystemsTable;
exports.createCveDetailsPage = createCveDetailsPage;
exports.processRawCVEs = processRawCVEs;

var _react = __webpack_require__(/*! react */ "./node_modules/react/index.js");

var _react2 = _interopRequireDefault(_react);

var _insightsFrontendComponents = __webpack_require__(/*! @red-hat-insights/insights-frontend-components */ "./node_modules/@red-hat-insights/insights-frontend-components/index.js");

var _reactIcons = __webpack_require__(/*! @patternfly/react-icons */ "./node_modules/@patternfly/react-icons/dist/esm/index.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* global require */

function getVMaaSCVEs(apiProps) {
    apiProps = (0, _extends3.default)({}, apiProps, { cve_list: optimizeCveList(apiProps.cve_list) });
    return fetch('https://webapp-vmaas-ci.1b13.insights.openshiftapps.com/api/v1/cves/', {
        method: 'post',
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(apiProps)
    }).then(function (res) {
        return res.json();
    }).then(function (resJson) {
        return processRawCVEs(resJson);
    });
}

function getNumberOfAffectedSystems(cve) {
    var number = getDemoCVESystem().filter(function (item) {
        return item.cve === cve;
    });
    number = [].concat((0, _toConsumableArray3.default)(new Set(number.map(function (item) {
        return item.system;
    }))));
    return number.length;
}

function createCveWithSystemsTable(cves) {
    var modCves = Object.values(cves);
    modCves = modCves.map(function (cve) {
        return {
            impact: processImpactForTable(cve.impact),
            synopsis: processSynopsisForTable(cve.synopsis),
            public_date: processDate(cve.public_date),
            systems: processSystemsForTable(cve.systems),
            total_risk: processRiskForTable(cve.impact, false),
            description: truncate(cve.description, 200)
        };
    });
    var table = modCves.map(function (cve) {
        return { cells: Object.values(cve), synopsis: cve.synopsis.props.children };
    });
    return table;
}

function getAffectedSystems(cve) {
    var systems = getDemoCVESystem().filter(function (item) {
        return item.cve === cve;
    }).map(function (single) {
        return single.system;
    });
    return systems;
}

function createExposedSystemsTable(cves) {
    if (cves.isLoading) {
        return [];
    }

    var singleCve = cves.items[0];
    var affectedSystems = [].concat((0, _toConsumableArray3.default)(new Set(getAffectedSystems(singleCve.synopsis))));
    return affectedSystems.map(function (system) {
        var icon = _react2.default.createElement(_reactIcons.LaptopIcon, { size: 'lg' });
        var ansibleIcon = _react2.default.createElement(
            'a',
            { download: true, href: '../common/AnsiblePlaybook.yml' },
            _react2.default.createElement(_insightsFrontendComponents.Ansible, null)
        );
        return { cells: [icon, system, ansibleIcon] };
    });
}

function createCveDetailsPage(cves) {
    if ((0, _isEmpty3.default)(cves.items)) {
        return {
            impact: '',
            public_date: '',
            description: '',
            synopsis: '',
            errata_list: [],
            isLoading: true
        };
    }

    var singleCve = cves.items[0];
    var isLoading = cves.isLoading;
    return {
        impact: processImpactForTable(singleCve.impact),
        public_date: processDate(singleCve.public_date),
        description: singleCve.description,
        synopsis: singleCve.synopsis,
        errata_list: singleCve.errata_list.map(function (item) {
            return _react2.default.createElement(
                'li',
                { key: item },
                createErrataLink(item)
            );
        }),
        package_list: singleCve.package_list.map(function (item) {
            return _react2.default.createElement(
                'li',
                { key: item },
                item
            );
        }),
        url_list: linkToDatabase(singleCve.synopsis),
        isLoading: isLoading
    };
}

function createErrataLink(item) {
    return _react2.default.createElement(
        'a',
        { href: 'https://access.redhat.com/errata/' + item },
        item
    );
}

function linkToDatabase(cve) {
    var link = 'https://access.redhat.com/security/cve/' + cve;
    return _react2.default.createElement(
        'a',
        { href: link },
        _react2.default.createElement(_reactIcons.LinkIcon, { title: 'link' }),
        ' link'
    );
}

function processSynopsisForTable(synopsis) {
    return _react2.default.createElement(
        'b',
        null,
        synopsis
    );
}

function truncate(str, max) {
    return str.length > max ? str.substr(0, max - 1) + '…' : str;
}

function processSystemsForTable(number) {
    return _react2.default.createElement(
        _react2.default.Fragment,
        null,
        _react2.default.createElement(
            'div',
            { style: { width: '120px' } },
            _react2.default.createElement(
                'span',
                { style: { textAlign: 'center', display: 'block' } },
                _react2.default.createElement(
                    'b',
                    null,
                    number
                )
            ),
            'Systems/Groups'
        )
    );
}

function optimizeCveList(cveList) {
    return cveList;
}

function processRawCVEs(rawcves) {
    var cveItems = [];
    for (var row in rawcves.cve_list) {
        var newRow = processCVErow(row, rawcves.cve_list[row]);
        cveItems.push(newRow);
    }

    return (0, _extends3.default)({}, cveItems);
}

function processCVErow(key, data) {
    var modifiedData = (0, _extends3.default)({}, data, {
        synopsis: data.synopsis,
        cwe_list: data.cwe_list,
        public_date: data.public_date,
        modified_date: data.modified_date,
        impact: data.impact,
        redhat_url: data.redhat_url,
        secondary_url: data.secondary_url,
        errata_list: data.errata_list,
        package_list: data.package_list
    });
    return modifiedData;
}

function processDate(dateString) {
    var date = new Date(dateString);
    var dateFormat = __webpack_require__(/*! dateformat */ "./node_modules/dateformat/lib/dateformat.js");
    return dateFormat(date, 'yyyy/mm/dd');
}

function processRiskForTable(impact) {
    var hiddenLabel = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

    var icon = void 0;
    switch (impact) {
        case 'High':
        case 'Important':
            icon = _react2.default.createElement(_insightsFrontendComponents.Battery, { label: 'Important', severity: 3, labelHidden: hiddenLabel });
            break;
        case 'Medium':
        case 'Moderate':
            icon = _react2.default.createElement(_insightsFrontendComponents.Battery, { label: 'Medium', severity: 2, labelHidden: hiddenLabel });
            break;
        case 'Critical':
            icon = _react2.default.createElement(_insightsFrontendComponents.Battery, { label: 'Critical', severity: 4, labelHidden: hiddenLabel });
            break;
        case 'Low':
            icon = _react2.default.createElement(_insightsFrontendComponents.Battery, { label: 'Low', severity: 1, labelHidden: hiddenLabel });
            break;
    }

    return icon;
}

function processImpactForTable(impact) {
    var icon = void 0;
    switch (impact) {
        case 'High':
        case 'Important':
            icon = _react2.default.createElement(_reactIcons.ExclamationTriangleIcon, { size: 'lg', color: '#ec7a08' });
            break;
        case 'Medium':
        case 'Moderate':
            icon = _react2.default.createElement(_reactIcons.ExclamationTriangleIcon, { size: 'lg', color: 'var(--pf-global--warning-color--100)' });
            break;
        case 'Critical':
            icon = _react2.default.createElement(_reactIcons.ExclamationTriangleIcon, { size: 'lg', color: 'var(--pf-global--danger-color--100)' });
            break;
        case 'Low':
            icon = _react2.default.createElement(_reactIcons.ExclamationTriangleIcon, { size: 'lg', color: 'var(--pf-global--BackgroundColor--disabled)' });
            break;
    }

    return _react2.default.createElement(
        'span',
        null,
        icon
    );
}

function getDemoCVESystem() {
    return [{
        system: 'spirit.example.redhat.com',
        cve: 'CVE-2016-0800'
    }, {
        system: 'kickapoo.example.redhat.com',
        cve: 'CVE-2016-0800'
    }, {
        system: 'cypress.example.redhat.com',
        cve: 'CVE-2018-10908'
    }, {
        system: 'kissimmee.example.redhat.com',
        cve: 'CVE-2016-0800'
    }, {
        system: 'sevuer.example.redhat.com',
        cve: 'CVE-2018-10931'
    }, {
        system: 'candlewood.example.redhat.com',
        cve: 'CVE-2018-10931'
    }, {
        system: 'leech.example.redhat.com',
        cve: 'CVE-2018-10931'
    }, {
        system: 'sabine.example.redhat.com',
        cve: 'CVE-2018-1102'
    }, {
        system: 'locust.example.redhat.com',
        cve: 'CVE-2017-1000502'
    }, {
        system: 'sutton.example.redhat.com',
        cve: 'CVE_2015_7547'
    }, {
        system: 'sawtooth.example.redhat.com',
        cve: 'CVE-2018-10931'
    }, {
        system: 'erie.example.redhat.com',
        cve: 'CVE-2017-5715'
    }, {
        system: 'trinity.example.redhat.com',
        cve: 'CVE-2017-5753'
    }, {
        system: 'sinclair.example.redhat.com',
        cve: 'CVE-2014-0160'
    }, {
        system: 'cumberland.example.redhat.com',
        cve: 'CVE_2016_3714'
    }, {
        system: 'lurleen.example.redhat.com',
        cve: 'CVE_2015_3456'
    }, {
        system: 'donner.example.redhat.com',
        cve: 'CVE_2015_3456'
    }, {
        system: 'verret.example.redhat.com',
        cve: 'CVE_2015_3456'
    }, {
        system: 'eagle.example.redhat.com',
        cve: 'CVE_2015_3456'
    }, {
        system: 'ute.example.redhat.com',
        cve: 'CVE_2016_3714'
    }, {
        system: 'tule.example.redhat.com',
        cve: 'CVE-2017-5756'
    }, {
        system: 'pleasant.example.redhat.com',
        cve: 'CVE_2016_3714'
    }, {
        system: 'erie.example.redhat.com',
        cve: 'CVE-2018-10931'
    }, {
        system: 'walker.example.redhat.com',
        cve: 'CVE_2016_3714'
    }, {
        system: 'enid.example.redhat.com',
        cve: 'CVE_2015_3456'
    }, {
        system: 'sinclair.example.redhat.com',
        cve: 'CVE-2018-10908'
    }, {
        system: 'ute.example.redhat.com',
        cve: 'CVE-2017-5753'
    }, {
        system: 'placid.example.redhat.com',
        cve: 'CVE-2017-1000502'
    }, {
        system: 'mono.example.redhat.com',
        cve: 'CVE-2017-5715'
    }, {
        system: 'harding.example.redhat.com',
        cve: 'CVE-2016-0800'
    }, {
        system: 'saugatuck.example.redhat.com',
        cve: 'CVE_2015_3456'
    }, {
        system: 'harding.example.redhat.com',
        cve: 'CVE_2016_3714'
    }, {
        system: 'sawtooth.example.redhat.com',
        cve: 'CVE_2016_3714'
    }, {
        system: 'liberty.example.redhat.com',
        cve: 'CVE-2017-5753'
    }, {
        system: 'minnetonkas.example.redhat.com',
        cve: 'CVE-2017-5756'
    }, {
        system: 'cowan.example.redhat.com',
        cve: 'CVE_2016_3714'
    }, {
        system: 'patoka.example.redhat.com',
        cve: 'CVE_2016_3714'
    }, {
        system: 'walker.example.redhat.com',
        cve: 'CVE-2018-1102'
    }, {
        system: 'peck.example.redhat.com',
        cve: 'CVE_2015_3456'
    }, {
        system: 'walloon.example.redhat.com',
        cve: 'CVE-2017-5753'
    }, {
        system: 'bantam.example.redhat.com',
        cve: 'CVE-2017-5753'
    }, {
        system: 'bluewater.example.redhat.com',
        cve: 'CVE_2015_3456'
    }, {
        system: 'shasta.example.redhat.com',
        cve: 'CVE-2017-5754'
    }, {
        system: 'stump.example.redhat.com',
        cve: 'CVE-2017-5753'
    }, {
        system: 'harding.example.redhat.com',
        cve: 'CVE_2015_3456'
    }, {
        system: 'champlain.example.redhat.com',
        cve: 'CVE-2018-1102'
    }, {
        system: 'locust.example.redhat.com',
        cve: 'CVE_2015_7547'
    }, {
        system: 'crescent.example.redhat.com',
        cve: 'CVE_2015_3456'
    }, {
        system: 'marion.example.redhat.com',
        cve: 'CVE-2017-5756'
    }, {
        system: 'greeson.example.redhat.com',
        cve: 'CVE_2016_3714'
    }, {
        system: 'hauser.example.redhat.com',
        cve: 'CVE-2017-5756'
    }, {
        system: 'zoar.example.redhat.com',
        cve: 'CVE_2015_7547'
    }, {
        system: 'sunapee.example.redhat.com',
        cve: 'CVE-2018-10931'
    }, {
        system: 'hauser.example.redhat.com',
        cve: 'CVE-2017-1000502'
    }, {
        system: 'salton.example.redhat.com',
        cve: 'CVE-2016-0800'
    }, {
        system: 'locust.example.redhat.com',
        cve: 'CVE-2017-5753'
    }, {
        system: 'harris.example.redhat.com',
        cve: 'CVE-2017-1000502'
    }, {
        system: 'walker.example.redhat.com',
        cve: 'CVE_2015_3456'
    }, {
        system: 'rush.example.redhat.com',
        cve: 'CVE-2018-10908'
    }, {
        system: 'pleasant.example.redhat.com',
        cve: 'CVE-2016-0800'
    }, {
        system: 'tupper.example.redhat.com',
        cve: 'CVE-2018-1102'
    }, {
        system: 'cypress.example.redhat.com',
        cve: 'CVE-2017-1000502'
    }, {
        system: 'huron.example.redhat.com',
        cve: 'CVE-2017-5756'
    }, {
        system: 'navajo.example.redhat.com',
        cve: 'CVE_2015_3456'
    }, {
        system: 'saugatuck.example.redhat.com',
        cve: 'CVE-2016-0800'
    }, {
        system: 'sabine.example.redhat.com',
        cve: 'CVE-2014-0160'
    }, {
        system: 'tule.example.redhat.com',
        cve: 'CVE-2017-5756'
    }, {
        system: 'harris.example.redhat.com',
        cve: 'CVE_2016_3714'
    }, {
        system: 'sawtooth.example.redhat.com',
        cve: 'CVE_2015_3456'
    }, {
        system: 'cypress.example.redhat.com',
        cve: 'CVE_2015_7547'
    }, {
        system: 'claytor.example.redhat.com',
        cve: 'CVE-2018-10908'
    }, {
        system: 'minnetonkas.example.redhat.com',
        cve: 'CVE-2017-5753'
    }, {
        system: 'summer.example.redhat.com',
        cve: 'CVE-2017-5753'
    }, {
        system: 'tygart.example.redhat.com',
        cve: 'CVE_2015_3456'
    }, {
        system: 'ute.example.redhat.com',
        cve: 'CVE-2018-1102'
    }, {
        system: 'heron.example.redhat.com',
        cve: 'CVE-2016-0800'
    }, {
        system: 'como.example.redhat.com',
        cve: 'CVE-2018-10908'
    }, {
        system: 'sevuer.example.redhat.com',
        cve: 'CVE-2017-5754'
    }, {
        system: 'storm.example.redhat.com',
        cve: 'CVE-2017-1000502'
    }, {
        system: 'eagle.example.redhat.com',
        cve: 'CVE-2017-5756'
    }, {
        system: 'michigan.example.redhat.com',
        cve: 'CVE-2017-5753'
    }, {
        system: 'peck.example.redhat.com',
        cve: 'CVE-2018-10908'
    }, {
        system: 'walker.example.redhat.com',
        cve: 'CVE_2015_3456'
    }, {
        system: 'ontario.example.redhat.com',
        cve: 'CVE-2017-1000502'
    }, {
        system: 'huron.example.redhat.com',
        cve: 'CVE-2017-5715'
    }, {
        system: 'cumberland.example.redhat.com',
        cve: 'CVE-2017-5756'
    }, {
        system: 'perry.example.redhat.com',
        cve: 'CVE-2018-1102'
    }, {
        system: 'leech.example.redhat.com',
        cve: 'CVE-2017-5756'
    }, {
        system: 'summer.example.redhat.com',
        cve: 'CVE-2016-0800'
    }, {
        system: 'degray.example.redhat.com',
        cve: 'CVE-2018-10931'
    }, {
        system: 'walker.example.redhat.com',
        cve: 'CVE_2016_3714'
    }, {
        system: 'greers.example.redhat.com',
        cve: 'CVE-2017-5753'
    }, {
        system: 'tahoe.example.redhat.com',
        cve: 'CVE-2017-5756'
    }, {
        system: 'greenbo.example.redhat.com',
        cve: 'CVE-2018-10931'
    }, {
        system: 'harris.example.redhat.com',
        cve: 'CVE-2017-5715'
    }, {
        system: 'como.example.redhat.com',
        cve: 'CVE_2015_3456'
    }, {
        system: 'kickapoo.example.redhat.com',
        cve: 'CVE-2017-5715'
    }, {
        system: 'crystal.example.redhat.com',
        cve: 'CVE-2017-5754'
    }, {
        system: 'beshear.example.redhat.com',
        cve: 'CVE-2017-1000502'
    }, {
        system: 'como.example.redhat.com',
        cve: 'CVE-2018-1102'
    }, {
        system: 'elwell.example.redhat.com',
        cve: 'CVE-2018-1102'
    }, {
        system: 'baron.example.redhat.com',
        cve: 'CVE-2014-0160'
    }, {
        system: 'lurleen.example.redhat.com',
        cve: 'CVE-2014-0160'
    }, {
        system: 'bluewater.example.redhat.com',
        cve: 'CVE-2016-0800'
    }, {
        system: 'seeley.example.redhat.com',
        cve: 'CVE_2015_3456'
    }, {
        system: 'gull.example.redhat.com',
        cve: 'CVE-2018-10908'
    }, {
        system: 'stump.example.redhat.com',
        cve: 'CVE-2017-5753'
    }, {
        system: 'higgins.example.redhat.com',
        cve: 'CVE_2015_3456'
    }, {
        system: 'fairfax.example.redhat.com',
        cve: 'CVE-2017-5756'
    }, {
        system: 'elwell.example.redhat.com',
        cve: 'CVE-2017-5715'
    }, {
        system: 'locust.example.redhat.com',
        cve: 'CVE-2014-0160'
    }, {
        system: 'saugatuck.example.redhat.com',
        cve: 'CVE-2014-0160'
    }, {
        system: 'spirit.example.redhat.com',
        cve: 'CVE-2018-10908'
    }, {
        system: 'storm.example.redhat.com',
        cve: 'CVE-2018-1102'
    }, {
        system: 'emporia.example.redhat.com',
        cve: 'CVE_2015_7547'
    }, {
        system: 'harding.example.redhat.com',
        cve: 'CVE-2017-5754'
    }, {
        system: 'como.example.redhat.com',
        cve: 'CVE-2018-10931'
    }, {
        system: 'walker.example.redhat.com',
        cve: 'CVE-2017-5756'
    }, {
        system: 'navajo.example.redhat.com',
        cve: 'CVE_2015_3456'
    }, {
        system: 'hartwell.example.redhat.com',
        cve: 'CVE-2018-10908'
    }, {
        system: 'rend.example.redhat.com',
        cve: 'CVE-2017-5753'
    }, {
        system: 'rush.example.redhat.com',
        cve: 'CVE_2015_7547'
    }, {
        system: 'cowan.example.redhat.com',
        cve: 'CVE-2017-5715'
    }, {
        system: 'ozarks.example.redhat.com',
        cve: 'CVE-2014-0160'
    }, {
        system: 'ute.example.redhat.com',
        cve: 'CVE_2015_7547'
    }, {
        system: 'sunapee.example.redhat.com',
        cve: 'CVE-2017-5756'
    }, {
        system: 'rico.example.redhat.com',
        cve: 'CVE-2018-10931'
    }, {
        system: 'beaver.example.redhat.com',
        cve: 'CVE_2015_3456'
    }, {
        system: 'rico.example.redhat.com',
        cve: 'CVE_2015_7547'
    }, {
        system: 'greers.example.redhat.com',
        cve: 'CVE_2015_3456'
    }, {
        system: 'pleasant.example.redhat.com',
        cve: 'CVE_2015_3456'
    }, {
        system: 'salton.example.redhat.com',
        cve: 'CVE-2014-0160'
    }, {
        system: 'rico.example.redhat.com',
        cve: 'CVE_2015_7547'
    }, {
        system: 'seeley.example.redhat.com',
        cve: 'CVE-2017-5753'
    }, {
        system: 'pyramid.example.redhat.com',
        cve: 'CVE-2017-5756'
    }, {
        system: 'stump.example.redhat.com',
        cve: 'CVE-2018-1102'
    }, {
        system: 'bantam.example.redhat.com',
        cve: 'CVE-2016-0800'
    }, {
        system: 'peck.example.redhat.com',
        cve: 'CVE-2016-0800'
    }, {
        system: 'storm.example.redhat.com',
        cve: 'CVE-2017-5754'
    }, {
        system: 'walker.example.redhat.com',
        cve: 'CVE-2018-10931'
    }, {
        system: 'crystal.example.redhat.com',
        cve: 'CVE_2016_3714'
    }];
}

/***/ }),

/***/ "./src/Helpers/Selectors/CVESelectors.js":
/*!***********************************************!*\
  !*** ./src/Helpers/Selectors/CVESelectors.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sExposedSystemsTable = exports.sCveDetailsPage = exports.sCvesWithSystemsTable = undefined;

var _reselect = __webpack_require__(/*! reselect */ "./node_modules/reselect/lib/index.js");

var _CVEHelper = __webpack_require__(/*! ../CVE/CVEHelper */ "./src/Helpers/CVE/CVEHelper.js");

var cveListWithSystemsSelector = function cveListWithSystemsSelector(state) {
  return state.CVEStore.cveListWithSystems.items;
};
var cveDetailsPageSelector = function cveDetailsPageSelector(state) {
  return state.CVEStore.cveList;
};

var sCvesWithSystemsTable = exports.sCvesWithSystemsTable = (0, _reselect.createSelector)([cveListWithSystemsSelector], _CVEHelper.createCveWithSystemsTable);
var sCveDetailsPage = exports.sCveDetailsPage = (0, _reselect.createSelector)([cveDetailsPageSelector], _CVEHelper.createCveDetailsPage);
var sExposedSystemsTable = exports.sExposedSystemsTable = (0, _reselect.createSelector)([cveDetailsPageSelector], _CVEHelper.createExposedSystemsTable);

/***/ }),

/***/ "./src/Store/Actions/CVEActions.js":
/*!*****************************************!*\
  !*** ./src/Store/Actions/CVEActions.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.searchCVEs = exports.fetchCVEsWithSystems = exports.fetchCVEListFromVMaaS = undefined;

var _ActionTypes = __webpack_require__(/*! ../../Store/ActionTypes */ "./src/Store/ActionTypes.js");

var ActionTypes = _interopRequireWildcard(_ActionTypes);

var _CVEHelper = __webpack_require__(/*! ../../Helpers/CVE/CVEHelper */ "./src/Helpers/CVE/CVEHelper.js");

var CVEHelper = _interopRequireWildcard(_CVEHelper);

var _ReducerRegistry = __webpack_require__(/*! ../../Utilities/ReducerRegistry */ "./src/Utilities/ReducerRegistry.js");

var _ReducerRegistry2 = _interopRequireDefault(_ReducerRegistry);

var _CVEStore = __webpack_require__(/*! ../../Store/Reducers/CVEStore */ "./src/Store/Reducers/CVEStore.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

_ReducerRegistry2.default.register({ CVEStore: _CVEStore.CVEReducer });

var fetchCVEListFromVMaaS = exports.fetchCVEListFromVMaaS = function fetchCVEListFromVMaaS(apiProps) {
    return {
        type: ActionTypes.FETCH_CVES,
        payload: new Promise(function (resolve) {
            resolve(CVEHelper.getVMaaSCVEs(apiProps));
        })
    };
};

var fetchCVEsWithSystems = exports.fetchCVEsWithSystems = function fetchCVEsWithSystems(apiProps) {
    return {
        type: ActionTypes.FETCH_CVES_WITH_SYSTEMS,
        payload: new Promise(function (resolve) {
            resolve(CVEHelper.getCVEsWithSystems(apiProps));
        })
    };
};

var searchCVEs = exports.searchCVEs = function searchCVEs(value) {
    return {
        type: ActionTypes.FILTER_CVES,
        payload: new Promise(function (resolve) {
            resolve(value);
        })
    };
};

/***/ }),

/***/ "./src/Store/Reducers/CVEStore.js":
/*!****************************************!*\
  !*** ./src/Store/Reducers/CVEStore.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CVEReducer = undefined;

var _extends2 = __webpack_require__(/*! babel-runtime/helpers/extends */ "./node_modules/babel-runtime/helpers/extends.js");

var _extends3 = _interopRequireDefault(_extends2);

var _ActionTypes = __webpack_require__(/*! ../../Store/ActionTypes */ "./src/Store/ActionTypes.js");

var ActionTypes = _interopRequireWildcard(_ActionTypes);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Initial State
var initialState = {
    cveList: {
        isLoading: true,
        items: {}
    },
    cveListWithSystems: {
        isLoading: true,
        items: []
    }
};

// Reducer
var CVEReducer = exports.CVEReducer = function CVEReducer() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
    var action = arguments[1];

    switch (action.type) {
        case ActionTypes.FETCH_CVES + '_PENDING':
            return (0, _extends3.default)({}, state, {
                cveList: {
                    items: state.cveList.items,
                    isLoading: true
                }
            });
        case ActionTypes.FETCH_CVES + '_FULFILLED':
            return (0, _extends3.default)({}, state, {
                cveList: {
                    items: action.payload,
                    isLoading: false
                }
            });
        case ActionTypes.FETCH_CVES_WITH_SYSTEMS + '_PENDING':
            return (0, _extends3.default)({}, state, {
                cveListWithSystems: {
                    items: state.cveListWithSystems.items,
                    isLoading: true
                }
            });
        case ActionTypes.FETCH_CVES_WITH_SYSTEMS + '_FULFILLED':
            return (0, _extends3.default)({}, state, {
                cveListWithSystems: {
                    items: action.payload,
                    isLoading: false
                }
            });
        case ActionTypes.FILTER_CVES + '_FULFILLED':
            return (0, _extends3.default)({}, state, {
                filterValue: action.payload
            });
        default:
            return state;
    }
};

/***/ })

}]);
//# sourceMappingURL=../sourcemaps/CVEPage~VulnerabilitiesCVEs.js.map