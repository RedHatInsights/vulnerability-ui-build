{"version":3,"sources":["webpack:///./node_modules/@patternfly/react-core/dist/js/components/TextArea/TextArea.js","webpack:///./src/Components/SmartComponents/Modals/BaseModal.js","webpack:///./src/Components/PresentationalComponents/DownloadReportKebab/KebabItems.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/SecurityRuleFilter.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/StatusFilter.js","webpack:///./src/Components/PresentationalComponents/PopUp/popup.scss","webpack:///./src/Components/SmartComponents/Modals/BusinessRiskModal.js","webpack:///./src/Components/SmartComponents/Modals/CveStatusModal.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/info-circle-icon.js","webpack:///./src/Components/PresentationalComponents/PaginationWrapper/PaginationWrapper.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/components/cjs/TableToolbar.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/components/cjs/SkeletonTable.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/PublishDateFilter.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/CvssBaseScoreFilter.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/ImpactFilter.js","webpack:///./node_modules/lodash/unionWith.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/BusinessRiskFilter.js","webpack:///./src/Components/PresentationalComponents/PopUp/popup.scss?f1f5","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Card/CardHeader.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Card/CardActions.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/times-icon.js","webpack:///./src/Components/PresentationalComponents/PopUp/PopUp.js","webpack:///./src/Components/SmartComponents/CVEs/CVEsTable.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/AffectingFilter.js","webpack:///./src/Components/SmartComponents/CVEs/CVEsTableToolbar.js","webpack:///./src/Components/SmartComponents/CVEs/CVEs.js","webpack:///./src/Components/SmartComponents/LandingPage/LandingPage.js"],"names":["Object","defineProperty","exports","value","TextArea","TextAreaBase","TextAreResizeOrientation","tslib_1","React","__importStar","form_control_1","__importDefault","react_styles_1","helpers_1","Component","props","super","this","handleChange","event","onChange","currentTarget","id","console","error","_a","className","validated","isRequired","resizeOrientation","innerRef","__rest","orientation","capitalize","createElement","assign","css","default","formControl","both","modifiers","ValidatedOptions","success","warning","defaultValue","required","ref","displayName","defaultProps","createRef","forwardRef","useStatusSelect","initialValue","useState","statusId","setStatusId","setProps","StatusSelect","label","messages","statusLabel","fieldId","aria-label","selection","STATUS_OPTIONS","map","key","useJustificationInput","justification","setJustification","JustificationInput","justificationLabel","type","BaseModal","items","title","onSave","onSuccessNotification","targetItems","setTargetItems","handleClose","undefined","useEffect","clearNotifications","Fragment","variant","isOpen","Boolean","onClose","actions","ouiaId","onClick","then","notification","addNotification","save","cancel","children","propTypes","any","func","array","updateRef","string","object","connect","dispatch","data","kebabItemDownloadPDF","loading","downloadReport","component","kebabExportAsPDF","kebabItemEditBusinessRisk","showBusinessRiskModal","cves","kebabEditBusinessRisk","kebabItemEditStatus","showStatusModal","inventoryIds","kebabEditStatus","securityRuleFilter","apply","currentFilter","dynamicFilters","currentValue","rule_presence","concat","split","rule_key","filterBySecurityRule","values","filter","includes","join","page","intl","formatMessage","securityRules","conditionalFilterType","checkbox","filterValues","unionWith","RULE_PRESENCE_OPTIONS","isEqual","item","statusFilter","status_id","filterByStatus","length","status","___CSS_LOADER_API_IMPORT___","push","module","i","BusinessRiskModal","cveList","businessRiskId","setBusinessRiskId","setLabel","getDefaultLabel","useCallback","business_risk_id","toString","handleOnRadioChange","_","successNotification","businessRiskUpdateSuccessful","count","setBusinessRisk","parseInt","cve","business_risk_text","businessRiskModalTitle","hasGutter","businessRiskModalInfo","businessRiskLabel","BUSINESS_RISK_OPTIONS","isChecked","name","injectIntl","CveStatusModal","setSelectProps","checkboxState","setCheckboxState","cveStatusModalUpdateSuccessful","cveStatusModalTitle","cveIds","setCveStatus","status_text","setSystemCveStatus","cveStatusModalSelected","cveId","b","chunks","fontSize","color","cveStatusModalInfo","trigger","content","cveStatusModalInfoTooltip","style","verticalAlign","cveStatusModalOverwriteCheckbox","checked","cveStatusModalOverwriteTooltip","__esModule","InfoCircleIconConfig","height","width","svgPath","yOffset","xOffset","InfoCircleIcon","createIcon","PaginationWrapper","handleChangePage","_event","pageNumber","handleSetPageSize","perPage","page_size","nextProps","meta","totalItems","total_items","pageSize","itemCount","DEFAULT_PAGE_SIZE","onSetPage","onPerPageSelect","PaginationVariant","_interopDefault","e","_extends","objectWithoutProperties","React__default","PropTypes","classNames","Toolbar_js","TableToolbar","t","isFooter","r","results","a","o","selected","s","l","_objectWithoutProperties","c","_defineProperty","Toolbar","generateCount","bool","number","toConsumableArray","getPrototypeOf","reactTable","Skeleton","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","prototype","call","SkeletonTable","_inherits","_getPrototypeOf","constructor","arguments","_possibleConstructorReturn","_createSuper","_classCallCheck","Array","n","_assertThisInitialized","colSize","_toConsumableArray","size","SkeletonSize","sm","paddingColumnSize","columns","newArray","createColumns","rowSize","cells","md","_createClass","Table","getColumns","rows","createRows","sortBy","TableHeader","TableBody","shape","index","direction","oneOf","publishDateFilter","publish_date","filterByPublishDate","publishDate","radio","urlParam","PUBLIC_DATE_OPTIONS","cvssBaseScoreFilter","cvss_filter","filterByCvssScore","cvssBaseScore","CVSS_OPTIONS","impactFilter","impact","filterByImpact","IMPACT_OPTIONS","hasIcon","iconColor","baseFlatten","baseRest","baseUniq","isArrayLikeObject","last","arrays","comparator","businessRiskFilter","filterByBusinessRisk","businessRisk","options","update","locals","hot","invalidate","oldLocals","accept","isNamedExport","p","isEqualLocals","dispose","CardHeader","card_1","Card_1","Button_1","angle_right_icon_1","onExpand","toggleButtonProps","CardContext","Consumer","cardId","cardHeader","cardHeaderToggle","Button","evt","cardHeaderToggleIcon","CardActions","cardActions","TimesIconConfig","TimesIcon","PopUp","body","hidden","setHidden","popupsStore","useSelector","AppStore","popup","pop","Card","TextContent","Text","TextVariants","h3","CardBody","CVEsTableWithContext","context","header","entity","methods","selectedCves","openedCves","isEmpty","current","isLoading","isStickyHeader","canSelectAll","heightAuto","colSpan","hasOwnProperty","FilterNotFoundForCVE","EmptyCVEListForSystem","EmptyCVEList","noCves","onSelect","isSelected","rowId","cveName","selectCves","onCollapse","rowKey","openCves","actionResolver","rowData","rowIndex","cveTableRowActions","createSortBy","sort","onSort","handleSortColumn","gridBreakPoint","CVEsTable","CVETableContext","affectingFilter","affecting","filterByAffecting","defaultValues","forEach","affectsSystems","AFFECTING_FILTER_OPTIONS","flatMap","toLowerCase","CVEsTableToolbarWithContext","exportPDF","setExportPDF","params","expandCveDescription","selectedCvesCount","selectOptions","selectAllCheckbox","selectedItems","selectorHandler","fetchResource","ops","fetchCvesIds","multiRow","editBusinessRisk","isDisabled","editStatus","kebabCollapseCves","kebabExpandCves","PrimaryToolbar","pagination","actionsConfig","dropdownProps","bulkSelect","handleOnCheckboxChange","filterConfig","searchFilter","searchFilterByCveID","activeFiltersConfig","filters","buildActiveFilters","onDelete","removeFilters","exportConfig","extraItems","DownloadCVEsReport","showButton","onSuccess","totalNumber","createContext","CVEs","useDispatch","setStatusModal","CveBusinessRiskModal","setBusinessRiskModal","urlParamsAllowed","setUrlParamsAllowed","isFirstLoad","setIsFirstLoad","CVEsStore","parameters","useMemo","createCveListByAccount","useCreateUrlParams","CVES_ALLOWED_PARAMS","createUrlParams","urlParameters","filterParams","constructFilterParameters","changeCveListParameters","fetchCveListByAccount","clearCVEsStore","errors","GenericError","Provider","format","DownloadReport","exec","cveNames","selectCve","cvesList","expandCve","Stack","StackItem","VULNERABILITIES_HEADER","LandingPage","unsupported","togglePopup","Header","showBreadcrumb","Main"],"mappings":"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","file":"js/LandingPage.9e0cb84361f25843b099.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TextArea = exports.TextAreaBase = exports.TextAreResizeOrientation = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst form_control_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/FormControl/form-control\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst helpers_1 = require(\"../../helpers\");\nvar TextAreResizeOrientation;\n(function (TextAreResizeOrientation) {\n    TextAreResizeOrientation[\"horizontal\"] = \"horizontal\";\n    TextAreResizeOrientation[\"vertical\"] = \"vertical\";\n    TextAreResizeOrientation[\"both\"] = \"both\";\n})(TextAreResizeOrientation = exports.TextAreResizeOrientation || (exports.TextAreResizeOrientation = {}));\nclass TextAreaBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = (event) => {\n            if (this.props.onChange) {\n                this.props.onChange(event.currentTarget.value, event);\n            }\n        };\n        if (!props.id && !props['aria-label']) {\n            // eslint-disable-next-line no-console\n            console.error('TextArea: TextArea requires either an id or aria-label to be specified');\n        }\n    }\n    render() {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _a = this.props, { className, value, onChange, validated, isRequired, resizeOrientation, innerRef } = _a, props = tslib_1.__rest(_a, [\"className\", \"value\", \"onChange\", \"validated\", \"isRequired\", \"resizeOrientation\", \"innerRef\"]);\n        const orientation = `resize${helpers_1.capitalize(resizeOrientation)}`;\n        return (React.createElement(\"textarea\", Object.assign({ className: react_styles_1.css(form_control_1.default.formControl, className, resizeOrientation !== TextAreResizeOrientation.both && form_control_1.default.modifiers[orientation], validated === helpers_1.ValidatedOptions.success && form_control_1.default.modifiers.success, validated === helpers_1.ValidatedOptions.warning && form_control_1.default.modifiers.warning), onChange: this.handleChange }, (typeof this.props.defaultValue !== 'string' && { value }), { \"aria-invalid\": validated === helpers_1.ValidatedOptions.error, required: isRequired, ref: innerRef }, props)));\n    }\n}\nexports.TextAreaBase = TextAreaBase;\nTextAreaBase.displayName = 'TextArea';\nTextAreaBase.defaultProps = {\n    innerRef: React.createRef(),\n    className: '',\n    isRequired: false,\n    validated: 'default',\n    resizeOrientation: 'both',\n    'aria-label': null\n};\nexports.TextArea = React.forwardRef((props, ref) => (React.createElement(TextAreaBase, Object.assign({}, props, { innerRef: ref }))));\nexports.TextArea.displayName = 'TextArea';\n//# sourceMappingURL=TextArea.js.map","import { Button, FormGroup, FormSelect, FormSelectOption, Modal, TextArea } from '@patternfly/react-core';\nimport {\n    addNotification,\n    clearNotifications\n} from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\nimport propTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { STATUS_OPTIONS } from '../../../Helpers/constants';\nimport messages from '../../../Messages';\nimport { FormattedMessage } from 'react-intl';\n\nexport function useStatusSelect(initialValue) {\n    const [statusId, setStatusId] = useState(initialValue);\n    const [props, setProps] = useState({});\n    const StatusSelect = (\n        <FormGroup label={<FormattedMessage {...messages.statusLabel} />} fieldId={'statusId'}>\n            <FormSelect aria-label=\"Select Input\" onChange={selection => setStatusId(selection)} value={statusId} {...props}>\n                {STATUS_OPTIONS.map(({ value, label }) => (\n                    <FormSelectOption key={value} value={value} label={label} />\n                ))}\n            </FormSelect>\n        </FormGroup>\n    );\n    return { StatusSelect, statusId, setStatusId, setProps };\n}\n\nexport function useJustificationInput(initialValue) {\n    const [justification, setJustification] = useState(initialValue);\n    const [props, setProps] = useState({});\n    const JustificationInput = (\n        <FormGroup label={<FormattedMessage {...messages.justificationLabel} />} fieldId={'label'}>\n            <TextArea\n                key=\"input\"\n                type=\"text\"\n                onChange={value => setJustification(value)}\n                value={justification}\n                resizeOrientation='vertical'\n                aria-label={'justification note'}\n                {...props}\n            />\n        </FormGroup>\n    );\n    return { JustificationInput, justification, setJustification, setProps };\n}\n\nexport const BaseModal = ({ items, title, onSave, onSuccessNotification, ...props }) => {\n    const [targetItems, setTargetItems] = useState(items);\n\n    const createNotification = notification => {\n        return props.addNotification(notification);\n    };\n\n    const handleClose = () => {\n        setTargetItems(undefined);\n    };\n\n    const handleSave = () => {\n        onSave().then(() => createNotification(onSuccessNotification));\n        handleClose();\n    };\n\n    useEffect(() => {\n        return () => {\n            props.clearNotifications();\n        };\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Modal\n                variant=\"small\"\n                title={title}\n                isOpen={Boolean(targetItems)}\n                onClose={handleClose}\n                actions={[\n                    <Button key=\"save\" variant=\"primary\" ouiaId='save' onClick={handleSave}>\n                        {<FormattedMessage {...messages.save} />}\n                    </Button>,\n                    <Button key=\"cancel\" variant=\"secondary\" ouiaId='close' onClick={handleClose}>\n                        {<FormattedMessage {...messages.cancel} />}\n                    </Button>\n                ]}\n                ouiaId={props.ouiaId}\n            >\n                {props.children}\n            </Modal>\n        </React.Fragment>\n    );\n};\n\nBaseModal.propTypes = {\n    children: propTypes.any,\n    onClose: propTypes.func,\n    items: propTypes.array,\n    updateRef: propTypes.func,\n    addNotification: propTypes.func,\n    title: propTypes.string,\n    onSave: propTypes.func,\n    onSuccessNotification: propTypes.object,\n    clearNotifications: propTypes.func,\n    ouiaId: propTypes.string\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addNotification: data => dispatch(addNotification(data)),\n        clearNotifications: () => dispatch(clearNotifications())\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(BaseModal);\n","import { DropdownItem } from '@patternfly/react-core';\nimport React from 'react';\nimport messages from '../../../Messages';\nimport { FormattedMessage } from 'react-intl';\n\nexport const kebabItemDownloadJSON = (downloadReport, { ...props }) => (\n    <DropdownItem key=\"json\" component=\"button\" onClick={() => downloadReport('json')} {...props}>\n        <FormattedMessage {...messages.kebabExportAsJson} />\n    </DropdownItem>\n);\n\nexport const kebabItemDownloadCSV = (downloadReport, { ...props }) => (\n    <DropdownItem key=\"csv\" component=\"button\" onClick={() => downloadReport('csv')} {...props}>\n        <FormattedMessage {...messages.kebabExportAsCsv} />\n    </DropdownItem>\n);\n\nexport const kebabItemDownloadPDF = (loading, downloadReport, { ...props }) => (\n    <DropdownItem key=\"pdf\" component=\"button\" onClick={() => downloadReport(true)} {...props}>\n        {loading ? <FormattedMessage {...messages.loading} /> : <FormattedMessage {...messages.kebabExportAsPDF} />}\n    </DropdownItem>\n);\n\nexport const kebabItemEditBusinessRisk = (showBusinessRiskModal, cves, { ...props }) => (\n    <DropdownItem key=\"editBusinessRisk\" component=\"button\" onClick={() => showBusinessRiskModal(cves)} {...props}>\n        <FormattedMessage {...messages.kebabEditBusinessRisk} />\n    </DropdownItem>\n);\n\nexport const kebabItemEditStatus = (showStatusModal, cves, inventoryIds,  { ...props }) => (\n    <DropdownItem key=\"editStatus\" component=\"button\" onClick={() => showStatusModal(cves, inventoryIds)} {...props}>\n        <FormattedMessage {...messages.kebabEditStatus} />\n    </DropdownItem>\n);\n","\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components';\nimport { RULE_PRESENCE_OPTIONS } from '../../../../Helpers/constants';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\nimport unionWith from 'lodash/unionWith';\nimport isEqual from 'lodash/isEqual';\n\nconst securityRuleFilter = (apply, currentFilter = {}, dynamicFilters = []) => {\n    let currentValue = [];\n    if (currentFilter.rule_presence) {\n        currentValue = currentValue.concat(currentFilter.rule_presence.split(','));\n    }\n\n    if (currentFilter.rule_key) {\n        currentValue = currentValue.concat(currentFilter.rule_key.split(','));\n    }\n\n    const filterBySecurityRule = values => {\n        apply({\n            rule_presence: values.filter(value => ['true', 'false'].includes(value)).join(',') || undefined,\n            rule_key: values.filter(value => !['true', 'false'].includes(value)).join(',') || undefined,\n            page: 1\n        });\n    };\n\n    return {\n        label: intl.formatMessage(messages.securityRules),\n        type: conditionalFilterType.checkbox,\n        filterValues: {\n            onChange: (event, value) => {\n                filterBySecurityRule(value);\n            },\n            items:\n                unionWith(RULE_PRESENCE_OPTIONS, dynamicFilters, isEqual).map(item => ({ label: item.label, value: item.value })),\n            value: currentValue\n        }\n    };\n};\n\nexport default securityRuleFilter;\n","\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components';\nimport { STATUS_OPTIONS } from '../../../../Helpers/constants';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\n\nconst statusFilter = (apply, currentFilter = {}) => {\n\n    let { status_id: currentValue } = currentFilter;\n\n    const filterByStatus = values => {\n        apply({ status_id: (values.length > '0' && values.filter(value => value !== ',').join(',')) || '', page: 1 });\n    };\n\n    return {\n        label: intl.formatMessage(messages.status),\n        type: conditionalFilterType.checkbox,\n        filterValues: {\n            onChange: (event, value) => {\n                filterByStatus(value);\n            },\n            items: STATUS_OPTIONS.map(item => ({ label: item.label, value: item.value })),\n            value: (currentValue ? currentValue.split(',') : [])\n        }\n    };\n};\n\nexport default statusFilter;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".popup {\\n  position: absolute;\\n  z-index: 10000;\\n  bottom: 40px;\\n  right: 0px;\\n  width: 550px; }\\n  .popup .actions {\\n    cursor: pointer; }\\n  .popup .icon {\\n    margin-right: 12px; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import { Form, FormGroup, Radio, Stack, StackItem, TextArea } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { setBusinessRisk } from '../../../Helpers/APIHelper';\nimport { BUSINESS_RISK_OPTIONS } from '../../../Helpers/constants';\nimport BaseModal from './BaseModal';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nexport const BusinessRiskModal = ({ cves, updateRef, intl }) => {\n    const [cveList] = useState(cves);\n    const [businessRiskId, setBusinessRiskId] = useState('0');\n    const [label, setLabel] = useState();\n\n    const getDefaultLabel = useCallback(() => {\n        setLabel((cveList && cveList.length === 1 && cveList[0].justification) || '');\n    }, [cveList]);\n\n    useEffect(() => {\n        const getDefaultBusinessRisk = () => {\n            setBusinessRiskId((cveList && cveList.length === 1 && cveList[0].business_risk_id.toString()) || '0');\n        };\n\n        getDefaultBusinessRisk();\n        getDefaultLabel();\n    }, [cves, getDefaultLabel, cveList]);\n\n    useEffect(getDefaultLabel, [cves]);\n\n    const handleOnRadioChange = (_, event) => {\n        const { value } = event.currentTarget;\n        setBusinessRiskId(value);\n    };\n\n    const handleOnLabelChange = value => {\n        setLabel(value);\n    };\n\n    const handleSave = () => {\n        return setBusinessRisk({\n            business_risk_id: parseInt(businessRiskId),\n            cve: cveList.map(item => item.id),\n            business_risk_text: label\n        }).then(updateRef);\n    };\n\n    const successNotification = {\n        variant: 'success',\n        title: intl.formatMessage(messages.businessRiskUpdateSuccessful, { count: cveList.length || 0 })\n    };\n\n    return (\n        <BaseModal\n            items={cveList}\n            onSave={handleSave}\n            onSuccessNotification={successNotification}\n            title={intl.formatMessage(messages.businessRiskModalTitle)}\n            ouiaId={'business-risk-modal'}\n        >\n            <Stack hasGutter>\n                <StackItem>\n                    {intl.formatMessage(messages.businessRiskModalInfo)}\n                </StackItem>\n                <StackItem>\n                    <Form>\n                        <FormGroup label={intl.formatMessage(messages.businessRiskLabel)} fieldId={'businessRiskId'}>\n                            {BUSINESS_RISK_OPTIONS.map(item => (\n                                <Radio\n                                    className={'business-risk-radio'}\n                                    value={item.value}\n                                    isChecked={businessRiskId === item.value}\n                                    onChange={handleOnRadioChange}\n                                    label={item.label}\n                                    key={item.value}\n                                    id={item.value}\n                                    name={item.label}\n                                    aria-label={item.label}\n                                    ouiaId={'business-risk-radio'}\n                                />\n                            ))}\n                        </FormGroup>\n                        <FormGroup label={intl.formatMessage(messages.justificationLabel)} fieldId={'label'}>\n                            <TextArea\n                                type=\"text\"\n                                onChange={handleOnLabelChange}\n                                value={label}\n                                resizeOrientation='vertical'\n                                aria-label={'justification'}\n                            />\n                        </FormGroup>\n                    </Form>\n                </StackItem>\n            </Stack>\n        </BaseModal>\n    );\n};\n\nBusinessRiskModal.propTypes = {\n    cves: propTypes.array,\n    updateRef: propTypes.func,\n    intl: propTypes.any\n};\n\nexport default injectIntl(BusinessRiskModal);\n","import { Checkbox, Form, FormGroup, Split, SplitItem, Stack, StackItem, Tooltip } from '@patternfly/react-core';\nimport { InfoCircleIcon, OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport propTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { setCveStatus, setSystemCveStatus } from '../../../Helpers/APIHelper';\nimport BaseModal, { useJustificationInput, useStatusSelect } from './BaseModal';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nexport const CveStatusModal = ({ cves, updateRef, intl }) => {\n    const [cveList] = useState(cves);\n    const { StatusSelect, statusId, setProps: setSelectProps } = useStatusSelect(getDefaultStatus());\n    const { JustificationInput, justification } = useJustificationInput(getDefaultLabel());\n    const [checkboxState, setCheckboxState] = useState(false);\n\n    useEffect(() => {\n        setSelectProps({ ouiaId: 'status-select' });\n    }, [setSelectProps]);\n\n    const handleSave = () => {\n        const cveIds = cveList.map(item => item.id);\n        return setCveStatus({\n            status_id: parseInt(statusId),\n            cve: cveIds,\n            status_text: justification\n        })\n        .then(() => !checkboxState && setSystemCveStatus({ cve: cveIds }))\n        .then(updateRef);\n    };\n\n    function getDefaultStatus() {\n        return (cveList && cveList.length === 1 && cveList[0].status_id.toString()) || '0';\n    }\n\n    function getDefaultLabel() {\n        return (cveList && cveList.length === 1 && cveList[0].justification) || '';\n    }\n\n    const successNotification = {\n        variant: 'success',\n        title: intl.formatMessage(messages.cveStatusModalUpdateSuccessful, { count: cveList.length || 0 })\n    };\n    const title = intl.formatMessage(messages.cveStatusModalTitle, { count: cveList.length || 0 });\n\n    return (\n        <BaseModal\n            items={cveList}\n            onSave={handleSave}\n            onSuccessNotification={successNotification}\n            title={title}\n            ouiaId={'status-modal'}\n        >\n            <Stack hasGutter>\n                <StackItem>\n                    {intl.formatMessage(\n                        messages.cveStatusModalSelected,\n                        {\n                            count: cveList.length || 0,\n                            cveId: cveList[0].id, // only used when length is 1\n                            b: (...chunks) => <b>{chunks}</b> // explicitly specifying what is wrapped <b> should be bold\n                        }\n                    )}\n                </StackItem>\n                <StackItem>\n                    <InfoCircleIcon\n                        className=\"pf-u-mr-xs\"\n                        fontSize=\"var(--pf-global--FontSize--md)\"\n                        color=\"var(--pf-global--active-color--300)\"\n                    />\n                    {intl.formatMessage(messages.cveStatusModalInfo, { count: cveList.length || 0 })}\n                    <Tooltip\n                        trigger='mouseenter focus click'\n                        content={intl.formatMessage(messages.cveStatusModalInfoTooltip)}\n                    >\n                        <React.Fragment>\n                            <OutlinedQuestionCircleIcon\n                                className=\"pf-u-ml-xs\"\n                                color=\"var(--pf-global--Color--200)\"\n                                style={{ verticalAlign: '-0.125em' }}\n                            />\n                        </React.Fragment>\n                    </Tooltip>\n                </StackItem>\n                <StackItem>\n                    <Form key=\"key\">\n                        {StatusSelect}\n                        {JustificationInput}\n                        <FormGroup fieldId={'overwrite'}>\n                            <Split>\n                                <SplitItem>\n                                    <Checkbox\n                                        label={intl.formatMessage(messages.cveStatusModalOverwriteCheckbox)}\n                                        id=\"alt-form-checkbox-1\"\n                                        name=\"alt-form-checkbox-1\"\n                                        isChecked={checkboxState}\n                                        onChange={checked => setCheckboxState(checked)}\n                                    />\n                                </SplitItem>\n                                <SplitItem>\n                                    <Tooltip\n                                        trigger='mouseenter focus click'\n                                        content={intl.formatMessage(messages.cveStatusModalOverwriteTooltip)}\n                                    >\n                                        <OutlinedQuestionCircleIcon\n                                            className=\"pf-u-ml-xs\"\n                                            color=\"var(--pf-global--Color--200)\"\n                                            style={{ verticalAlign: '0' }}\n                                        />\n                                    </Tooltip>\n                                </SplitItem>\n                            </Split>\n                        </FormGroup>\n                    </Form>\n                </StackItem>\n            </Stack>\n        </BaseModal>\n    );\n};\n\nCveStatusModal.propTypes = {\n    cves: propTypes.array,\n    updateRef: propTypes.func,\n    intl: propTypes.any\n};\n\nexport default injectIntl(CveStatusModal);\n","\"use strict\"\nexports.__esModule = true;\nexports.InfoCircleIconConfig = {\n  name: 'InfoCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.InfoCircleIcon = require('../createIcon').createIcon(exports.InfoCircleIconConfig);\nexports[\"default\"] = exports.InfoCircleIcon;","\nimport { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { DEFAULT_PAGE_SIZE } from '../../../Helpers/constants';\n\nclass PaginationWrapper extends Component {\n    static propTypes = {\n        apply: propTypes.func,\n        meta: propTypes.object,\n        variant: propTypes.string\n    };\n\n    static defaultProps = {\n        variant: 'bottom'\n    };\n    shouldComponentUpdate(nextProps) {\n        if (nextProps.meta === this.props.meta) {\n            return false;\n        }\n\n        return true;\n    }\n    handleChangePage = (_event, pageNumber) => this.props.apply({ page: pageNumber });\n\n    handleSetPageSize = (_event, perPage) => this.props.apply({ page_size: perPage, page: 1 });\n\n    render() {\n        const { meta, variant } = this.props;\n        const { page, total_items: totalItems, page_size: pageSize } = meta;\n        return (\n            <React.Fragment>\n                <Pagination\n                    page={page || 1}\n                    itemCount={totalItems || 0}\n                    perPage={pageSize || DEFAULT_PAGE_SIZE}\n                    onSetPage={this.handleChangePage}\n                    onPerPageSelect={this.handleSetPageSize}\n                    variant={PaginationVariant[variant]}\n                    ouiaId={'pagination-'.concat(PaginationVariant[variant])}\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default PaginationWrapper;\n","\"use strict\";function _interopDefault(e){return e&&\"object\"==typeof e&&\"default\"in e?e.default:e}Object.defineProperty(exports,\"__esModule\",{value:!0}),require(\"./_commonjsHelpers-32c5d30b.js\");var _extends=require(\"./extends-7fa7e501.js\"),defineProperty=require(\"./defineProperty-cf06dcaa.js\"),objectWithoutProperties=require(\"./objectWithoutProperties-9e2b4e81.js\"),React=require(\"react\"),React__default=_interopDefault(React),PropTypes=_interopDefault(require(\"prop-types\")),classNames=_interopDefault(require(\"classnames\")),Toolbar_js=require(\"@patternfly/react-core/dist/js/components/Toolbar/Toolbar.js\");function generateCount(e){return\"\".concat(e,e>1||e<1?\" Results\":\" Result\")}var TableToolbar=function TableToolbar(e){var t=e.isFooter,r=e.results,a=e.className,o=e.selected,s=e.children,l=objectWithoutProperties._objectWithoutProperties(e,[\"isFooter\",\"results\",\"className\",\"selected\",\"children\"]),c=classNames(\"ins-c-table__toolbar\",defineProperty._defineProperty({},\"ins-m-footer\",t),a);return React__default.createElement(React.Fragment,null,React__default.createElement(Toolbar_js.Toolbar,_extends._extends({className:c},l),\" \",s),(r>=0||o>=0)&&React__default.createElement(\"div\",{className:\"ins-c-table__toolbar-results\"},r>=0&&React__default.createElement(\"span\",{className:\"ins-c-table__toolbar-results-count\"},\" \",generateCount(r),\" \"),o>=0&&React__default.createElement(\"span\",{className:\"ins-c-table__toolbar-results-selected\"},\" \",o,\" Selected \")))};TableToolbar.propTypes={isFooter:PropTypes.bool,results:PropTypes.number,children:PropTypes.any,className:PropTypes.string,selected:PropTypes.number},TableToolbar.defaultProps={isFooter:!1},exports.TableToolbar=TableToolbar;\n","\"use strict\";function _interopDefault(e){return e&&\"object\"==typeof e&&\"default\"in e?e.default:e}Object.defineProperty(exports,\"__esModule\",{value:!0}),require(\"./_commonjsHelpers-32c5d30b.js\"),require(\"./extends-7fa7e501.js\");var defineProperty=require(\"./defineProperty-cf06dcaa.js\");require(\"./objectWithoutProperties-9e2b4e81.js\");var React=require(\"react\"),React__default=_interopDefault(React),PropTypes=_interopDefault(require(\"prop-types\"));require(\"classnames\");var toConsumableArray=require(\"./toConsumableArray-017cf31e.js\"),getPrototypeOf=require(\"./getPrototypeOf-c749744b.js\"),reactTable=require(\"@patternfly/react-table\"),Skeleton=require(\"./Skeleton.js\");function _createSuper(e){return function(){var t,r=getPrototypeOf._getPrototypeOf(e);if(_isNativeReflectConstruct()){var o=getPrototypeOf._getPrototypeOf(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return getPrototypeOf._possibleConstructorReturn(this,t)}}function _isNativeReflectConstruct(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}var SkeletonTable=function(e){getPrototypeOf._inherits(SkeletonTable,e);var t=_createSuper(SkeletonTable);function SkeletonTable(){var e;getPrototypeOf._classCallCheck(this,SkeletonTable);for(var r=arguments.length,o=new Array(r),n=0;n<r;n++)o[n]=arguments[n];return e=t.call.apply(t,[this].concat(o)),defineProperty._defineProperty(getPrototypeOf._assertThisInitialized(e),\"createColumns\",(function(){var t=e.props.colSize;return toConsumableArray._toConsumableArray(Array(t)).map((function(){return{title:React__default.createElement(Skeleton.Skeleton,{size:Skeleton.SkeletonSize.sm})}}))})),defineProperty._defineProperty(getPrototypeOf._assertThisInitialized(e),\"getColumns\",(function(){var t=e.props,r=t.paddingColumnSize,o=t.columns;return e.newArray(r).map((function(){return\"\"})).concat(o||e.createColumns())})),defineProperty._defineProperty(getPrototypeOf._assertThisInitialized(e),\"createRows\",(function(){var t=e.props,r=t.colSize,o=t.rowSize,n=t.columns,a=t.paddingColumnSize,l=n?n.length:r;return e.newArray(o).map((function(){return{cells:e.newArray(a).map((function(){return\"\"})).concat(e.newArray(l).map((function(){return{title:React__default.createElement(Skeleton.Skeleton,{size:Skeleton.SkeletonSize.md})}})))}}))})),defineProperty._defineProperty(getPrototypeOf._assertThisInitialized(e),\"newArray\",(function(e){return toConsumableArray._toConsumableArray(Array(e))})),e}return getPrototypeOf._createClass(SkeletonTable,[{key:\"render\",value:function render(){return React__default.createElement(reactTable.Table,{cells:this.getColumns(),rows:this.createRows(),sortBy:this.props.sortBy,\"aria-label\":\"Loading\"},React__default.createElement(reactTable.TableHeader,null),React__default.createElement(reactTable.TableBody,null))}}]),SkeletonTable}(React__default.Component);SkeletonTable.propTypes={colSize:PropTypes.number,rowSize:PropTypes.number,columns:PropTypes.array,paddingColumnSize:PropTypes.number,sortBy:PropTypes.shape({index:PropTypes.number,direction:PropTypes.oneOf([\"asc\",\"desc\"])})},SkeletonTable.defaultProps={rowSize:0,paddingColumnSize:0},exports.SkeletonTable=SkeletonTable;\n","\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components';\nimport { PUBLIC_DATE_OPTIONS } from '../../../../Helpers/constants';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\n\nconst publishDateFilter = (apply, currentFilter = {}) => {\n    let { publish_date: currentValue } = currentFilter;\n\n    // Empty string value is not supported by PF Radio at the moment\n    if (currentValue === '' || !currentValue) {\n        currentValue = '0';\n    }\n\n    const filterByPublishDate = value => {\n        apply({ publish_date: (value !== '0' && value) || '', page: 1 });\n    };\n\n    return {\n        label: intl.formatMessage(messages.publishDate),\n        type: conditionalFilterType.radio,\n        urlParam: 'publish_date',\n        filterValues: {\n            onChange: (event, value) => {\n                filterByPublishDate(value);\n            },\n            items: PUBLIC_DATE_OPTIONS.map(item => ({ label: item.label, value: item.value })),\n            value: currentValue\n        }\n    };\n};\n\nexport default publishDateFilter;\n","\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components';\nimport { CVSS_OPTIONS } from '../../../../Helpers/constants';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\n\nconst cvssBaseScoreFilter = (apply, currentFilter = {}) => {\n    let { cvss_filter: currentValue } = currentFilter;\n\n    // Empty string value is not supported by PF Radio at the moment\n    if (currentValue === '' || !currentValue) {\n        currentValue = '0';\n    }\n\n    const filterByCvssScore = value => {\n        apply({ cvss_filter: (value !== '0' && value) || '', page: 1 });\n    };\n\n    return {\n        label: intl.formatMessage(messages.cvssBaseScore),\n        type: conditionalFilterType.radio,\n        urlParam: 'cvss_filter',\n        filterValues: {\n            onChange: (event, value) => {\n                filterByCvssScore(value);\n            },\n            items: CVSS_OPTIONS.map(item => ({ label: item.label, value: item.value })),\n            value: currentValue\n        }\n    };\n};\n\nexport default cvssBaseScoreFilter;\n","\nimport React from 'react';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components';\nimport { IMPACT_OPTIONS } from '../../../../Helpers/constants';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\nimport { SecurityIcon } from '@patternfly/react-icons';\n\nconst impactFilter = (apply, currentFilter = {}) => {\n    let { impact: currentValue } = currentFilter;\n\n    const filterByImpact = values => {\n        apply({ impact: (values.length > '0' && values.filter(value => value !== ',').join(',')) || '', page: 1 });\n    };\n\n    return {\n        label: intl.formatMessage(messages.impact),\n        type: conditionalFilterType.checkbox,\n        urlParam: 'impact',\n        filterValues: {\n            onChange: (event, value) => {\n                filterByImpact(value);\n            },\n            items: IMPACT_OPTIONS.map(item => ({\n                label: (\n                    <React.Fragment>\n                        { item.hasIcon && <SecurityIcon className=\"pf-u-mr-xs\" color={item.iconColor}/> }\n                        {item.label}\n                    </React.Fragment>\n                ),\n                value: item.value\n            })),\n            value: (currentValue ? currentValue.split(',') : [])\n        }\n    };\n};\n\nexport default impactFilter;\n","var baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    baseUniq = require('./_baseUniq'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    last = require('./last');\n\n/**\n * This method is like `_.union` except that it accepts `comparator` which\n * is invoked to compare elements of `arrays`. Result values are chosen from\n * the first array in which the value occurs. The comparator is invoked\n * with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.unionWith(objects, others, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n */\nvar unionWith = baseRest(function(arrays) {\n  var comparator = last(arrays);\n  comparator = typeof comparator == 'function' ? comparator : undefined;\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n});\n\nmodule.exports = unionWith;\n","\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components';\nimport { BUSINESS_RISK_OPTIONS } from '../../../../Helpers/constants';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\n\nconst businessRiskFilter = (apply, currentFilter = {}) => {\n    let { business_risk_id: currentValue } = currentFilter;\n\n    const filterByBusinessRisk = values => {\n        apply({ business_risk_id: (values.length > '0' && values.filter(value => value !== ',').join(',')) || '', page: 1 });\n    };\n\n    return {\n        label: intl.formatMessage(messages.businessRisk),\n        type: conditionalFilterType.checkbox,\n        urlParam: 'business_risk_id',\n        filterValues: {\n            onChange: (event, value) => {\n                filterByBusinessRisk(value);\n            },\n            items: BUSINESS_RISK_OPTIONS.map(item => ({ label: item.label, value: item.value })),\n            value: (currentValue ? currentValue.split(',') : [])\n        }\n    };\n};\n\nexport default businessRiskFilter;\n","import api from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/lib/loader.js!./popup.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/lib/loader.js!./popup.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CardHeader = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst card_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Card/card\"));\nconst Card_1 = require(\"./Card\");\nconst Button_1 = require(\"../Button\");\nconst angle_right_icon_1 = tslib_1.__importDefault(require(\"@patternfly/react-icons/dist/js/icons/angle-right-icon\"));\nexports.CardHeader = (_a) => {\n    var { children = null, className = '', id, onExpand, toggleButtonProps } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"id\", \"onExpand\", \"toggleButtonProps\"]);\n    return (React.createElement(Card_1.CardContext.Consumer, null, ({ cardId }) => (React.createElement(\"div\", Object.assign({ className: react_styles_1.css(card_1.default.cardHeader, className), id: id }, props),\n        onExpand && (React.createElement(\"div\", { className: react_styles_1.css(card_1.default.cardHeaderToggle) },\n            React.createElement(Button_1.Button, Object.assign({ variant: \"plain\", type: \"button\", onClick: evt => {\n                    onExpand(evt, cardId);\n                } }, toggleButtonProps),\n                React.createElement(\"span\", { className: react_styles_1.css(card_1.default.cardHeaderToggleIcon) },\n                    React.createElement(angle_right_icon_1.default, { \"aria-hidden\": \"true\" }))))),\n        children))));\n};\nexports.CardHeader.displayName = 'CardHeader';\n//# sourceMappingURL=CardHeader.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CardActions = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst card_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Card/card\"));\nexports.CardActions = (_a) => {\n    var { children = null, className = '' } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"div\", Object.assign({ className: react_styles_1.css(card_1.default.cardActions, className) }, props), children));\n};\nexports.CardActions.displayName = 'CardActions';\n//# sourceMappingURL=CardActions.js.map","\"use strict\"\nexports.__esModule = true;\nexports.TimesIconConfig = {\n  name: 'TimesIcon',\n  height: 512,\n  width: 352,\n  svgPath: 'M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.TimesIcon = require('../createIcon').createIcon(exports.TimesIconConfig);\nexports[\"default\"] = exports.TimesIcon;","import React, { useState, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nimport {\n    TextContent,\n    Text,\n    TextVariants,\n    Card,\n    CardBody,\n    CardActions,\n    CardHeader\n} from '@patternfly/react-core';\nimport { ExclamationTriangleIcon, TimesIcon } from '@patternfly/react-icons';\nimport './popup.scss';\n\nconst PopUp = ({ body, title, page }) => {\n    const [hidden, setHidden] = useState(false);\n\n    const popupsStore = useSelector(\n        ({ AppStore }) =>  AppStore.popup\n    );\n\n    const pop =  popupsStore?.[page];\n\n    return  <Fragment>\n        {\n            !hidden && pop &&\n            <Card className=\"popup\">\n                <CardHeader>\n                    <TextContent>\n                        <Text component={TextVariants.h3}>\n                            <ExclamationTriangleIcon className=\"icon\" color={'var(--pf-global--warning-color--100)'} />\n                            {title}\n                        </Text>\n                    </TextContent>\n                    <CardActions className=\"actions\">\n                        <TimesIcon onClick={() => setHidden(true)}/>\n                    </CardActions>\n                </CardHeader>\n                <CardBody>{body}</CardBody>\n            </Card>\n        }\n    </Fragment>;\n};\n\nPopUp.propTypes = {\n    body: PropTypes.string,\n    title: PropTypes.string,\n    page: PropTypes.string\n};\n\nPopUp.defaultProps = {\n    title: 'Tag and workload filtration temporarily unavailable',\n    body: 'Tag and workload filtration is temporarily unavailable on this page. We\\'re working to resolve this soon.'\n};\n\nexport default PopUp;\n","import React, { Fragment } from 'react';\nimport propTypes from 'prop-types';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { SkeletonTable, TableToolbar } from '@redhat-cloud-services/frontend-components';\nimport { cveTableRowActions } from '../../../Helpers/CVEHelper';\nimport { createSortBy, handleSortColumn } from '../../../Helpers/MiscHelper';\nimport PaginationWrapper from '../../PresentationalComponents/PaginationWrapper/PaginationWrapper';\nimport {\n    FilterNotFoundForCVE,\n    EmptyCVEListForSystem,\n    EmptyCVEList\n} from '../../PresentationalComponents/EmptyStates/EmptyStates';\nimport { CVETableContext } from './CVEs';\n\nconst CVEsTableWithContext = ({ context, header, entity }) => {\n\n    const noCves = () => {\n        const { cves } = context;\n        const filterFields = ['filter', 'cvss_from', 'cvss_to', 'public_from', 'public_to', 'impact', 'status_id'].filter(\n            item => Object.prototype.hasOwnProperty.call(cves.meta, item) && cves.meta[item]\n        );\n\n        let emptyComponent = filterFields.length !== 0\n            ? FilterNotFoundForCVE\n            : entity\n                ? EmptyCVEListForSystem\n                : cves.data.length === 0\n                    && EmptyCVEList;\n\n        return ([{\n            heightAuto: true,\n            cells: [\n                {\n                    props: { colSpan: 8 },\n                    title: (\n                        emptyComponent\n                    )\n                }\n            ]\n        }]);\n    };\n\n    const handleOnSelect = (event, isSelected, rowId) => {\n        const { cves, methods } = context;\n        const cveName = cves.data[rowId] && cves.data[rowId].id;\n        methods.selectCves(isSelected, cveName);\n    };\n\n    const { cves, methods, selectedCves, openedCves } = context;\n    const isEmpty = cves.data.length === 0;\n\n    const rows = cves.data && cves.data\n    .map(cve => (selectedCves.includes(cve.id) && { ...cve, selected: true }) || cve)\n    .map((cve, index) => {\n        const current = index % 2 === 0 ? openedCves.includes(cve.id) : undefined;\n        return ({ ...cve, isOpen: current });\n    });\n\n    return (\n        <Fragment>\n            {!cves.isLoading ? (\n                <Fragment>\n                    <Table\n                        isStickyHeader\n                        canSelectAll={false}\n                        aria-label={'Vulnerability CVE table'}\n                        cells={header}\n                        rows={isEmpty ? noCves() : rows}\n                        onSelect={!isEmpty ? handleOnSelect : undefined}\n                        onCollapse={!isEmpty ?  (event, rowKey) => methods.openCves(rowKey) : undefined}\n                        actionResolver={!(cves.data.length === 0) ?\n                            (rowData, rowIndex) => cveTableRowActions(methods, rowIndex.rowIndex) : undefined}\n                        sortBy={!isEmpty ?\n                            createSortBy([{ key: 'collapse' }, { key: 'checkbox' }, ...header], cves.meta.sort) : undefined}\n                        onSort={!isEmpty ?\n                            (event, key, direction) =>\n                                handleSortColumn(\n                                    key,\n                                    direction,\n                                    [{ key: 'collapse' }, { key: 'checkbox' }, ...header],\n                                    cves.meta.sort,\n                                    methods.apply\n                                ) : undefined\n                        }\n                        gridBreakPoint={'grid-lg'}\n                        ouiaId={'cves-table'}\n                    >\n                        <Fragment>\n                            <TableHeader />\n                            <TableBody />\n                        </Fragment>\n                    </Table>\n                    <TableToolbar>\n                        <PaginationWrapper meta={cves.meta} apply={methods.apply} />\n                    </TableToolbar>\n                </Fragment>\n            ) : (\n                <SkeletonTable colSize={7} rowSize={20} />\n            )}\n        </Fragment>\n    );\n\n};\n\nCVEsTableWithContext.propTypes = {\n    context: propTypes.any,\n    header: propTypes.array,\n    entity: propTypes.object\n};\n\nconst CVEsTable = props => (\n    <CVETableContext.Consumer>\n        {context => <CVEsTableWithContext context={context} {...props} />}\n    </CVETableContext.Consumer>\n);\n\nexport default CVEsTable;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\nimport { AFFECTING_FILTER_OPTIONS } from '../../../../Helpers/constants';\n\nconst affectingFilter = (apply, currentFilter = {}) => {\n    let { affecting: currentValue } = currentFilter;\n\n    const filterByAffecting = (values) => {\n        const defaultValues = [false, false];\n        values.forEach(item => { defaultValues[item] = true; });\n        const filter = defaultValues.join(',');\n        apply({ affecting: filter === 'false,false' ? '' : filter });\n    };\n\n    return {\n        label: intl.formatMessage(messages.affectsSystems),\n        type: conditionalFilterType.checkbox,\n        urlParam: 'affecting',\n        filterValues: {\n            onChange: (event, value) => {\n                filterByAffecting(value);\n            },\n            items: AFFECTING_FILTER_OPTIONS.map(item => ({ label: item.label, value: item.value })),\n            value: currentValue?.split(',').flatMap((value, index) => value?.toLowerCase() === 'true' ? index.toString() : [])\n        }\n    };\n};\n\nexport default affectingFilter;\n","import React, { useState } from 'react';\nimport propTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport { CVETableContext } from './CVEs';\nimport { fetchCvesIds } from '../../../Store/Actions/Actions';\nimport selectAllCheckbox from '../../../Helpers/selectAllCheckboxHelper';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components';\nimport affectingFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/AffectingFilter';\nimport publishDateFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/PublishDateFilter';\nimport cvssBaseScoreFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/CvssBaseScoreFilter';\nimport impactFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/ImpactFilter';\nimport searchFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/SearchFilter';\nimport securityRuleFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/SecurityRuleFilter';\nimport businessRiskFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/BusinessRiskFilter';\nimport statusFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/StatusFilter';\nimport { kebabItemDownloadPDF } from '../../PresentationalComponents/DownloadReportKebab/KebabItems';\nimport DownloadCVEsReport from '../Reports/DownloadCVEsReport';\nimport {\n    handleChangePage,\n    handleSetPageSize,\n    exportConfig,\n    buildActiveFilters,\n    removeFilters\n} from '../../../Helpers/TableToolbarHelper';\n\nconst CVEsTableToolbarWithContext = (props) => {\n    const [exportPDF, setExportPDF] = useState(false);\n\n    const handleCveDescription = () => {\n        const { context } = props;\n        const { cves, methods, expandCveDescription } = context;\n\n        const openedCves = !expandCveDescription ? cves.data.filter(cve => cve.id).map(cve => cve.id) : [];\n        methods.openCves(openedCves);\n    };\n\n    const { context } = props;\n    const { cves, params, methods, selectedCves, expandCveDescription } = context;\n    const { filter } = params;\n    const selectedCvesCount = selectedCves && selectedCves.length;\n\n    const selectOptions  = selectAllCheckbox({\n        selectedItems: selectedCves,\n        selectorHandler: methods.selectCves,\n        items: cves,\n        fetchResource: ops => fetchCvesIds({ ...params, ...ops }),\n        multiRow: true\n    });\n\n    const actions = [\n        '', // #NOTE empty intentionally, Remediation holder\n        {\n            label: props.intl.formatMessage(messages.editBusinessRisk),\n            onClick: () => methods.showBusinessRiskModal(selectedCves.map(item => ({ id: item, business_risk_id: '0' }))),\n            props: { isDisabled: !selectedCvesCount }\n        },\n        {\n            label: props.intl.formatMessage(messages.editStatus),\n            onClick: () => methods.showStatusModal(selectedCves.map(item => ({ id: item, status_id: '0' }), [])),\n            props: { isDisabled: !selectedCvesCount }\n        },\n        {\n            label: expandCveDescription ? props.intl.formatMessage(messages.kebabCollapseCves)\n                : props.intl.formatMessage(messages.kebabExpandCves),\n            onClick: handleCveDescription,\n            props: { isDisabled: cves.meta.total_items === 0 }\n        }\n    ];\n\n    return (\n        <React.Fragment>\n            <PrimaryToolbar\n                pagination={{\n                    itemCount: cves.meta.total_items || 0,\n                    page: cves.meta.page || 1,\n                    perPage: cves.meta.page_size || 1,\n                    ouiaId: 'pagination-top',\n                    onSetPage: (_event, page) => handleChangePage(_event, page, methods.apply),\n                    onPerPageSelect: (_event, perPage) => handleSetPageSize(_event, perPage, methods.apply)\n                }}\n                actionsConfig={{\n                    actions,\n                    dropdownProps: { ouiaId: 'toolbar-actions' }\n                }}\n                bulkSelect={{\n                    count: selectedCvesCount,\n                    items: selectOptions.items,\n                    isDisabled: cves.meta.total_items === 0 && selectedCvesCount === 0,\n                    checked: Boolean(selectedCvesCount),\n                    ouiaId: 'bulk-select',\n                    onSelect: ()=> selectOptions.handleOnCheckboxChange()\n                }}\n                filterConfig={{\n                    items: [\n                        searchFilter('filter', messages.cve, messages.searchFilterByCveID, filter, methods.apply),\n                        securityRuleFilter(methods.apply, params),\n                        impactFilter(methods.apply, params),\n                        cvssBaseScoreFilter(methods.apply, params),\n                        businessRiskFilter(methods.apply, params),\n                        statusFilter(methods.apply, params),\n                        publishDateFilter(methods.apply, params),\n                        affectingFilter(methods.apply, params)\n                    ]\n                }}\n                activeFiltersConfig={{\n                    filters: buildActiveFilters(params),\n                    onDelete: (e, i) => removeFilters(i, methods.apply)\n                }}\n                exportConfig = {{\n                    isDisabled: cves.meta.total_items === 0,\n                    extraItems: [kebabItemDownloadPDF(exportPDF, setExportPDF)],\n                    ouiaId: 'export',\n                    ...exportConfig(methods)\n                }}\n            />\n            { exportPDF &&\n                <DownloadCVEsReport\n                    showButton={false}\n                    type='cves'\n                    params={params}\n                    filters={buildActiveFilters(params)}\n                    onSuccess={() => setExportPDF(false)}\n                />\n            }\n\n        </React.Fragment>\n    );\n};\n\nCVEsTableToolbarWithContext.propTypes = {\n    context: propTypes.object,\n    intl: propTypes.object\n};\n\nCVEsTableToolbarWithContext.defaultProps = {\n    totalNumber: 0,\n    apply: () => undefined,\n    downloadReport: () => undefined\n};\n\nconst CVEsTableToolbar = props => (\n    <CVETableContext.Consumer>\n        {context => <CVEsTableToolbarWithContext context={context} {...props} />}\n    </CVETableContext.Consumer>\n);\nexport default injectIntl(CVEsTableToolbar);\n","import React, { useMemo, useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Stack, StackItem } from '@patternfly/react-core';\nimport { VULNERABILITIES_HEADER, CVES_ALLOWED_PARAMS } from '../../../Helpers/constants';\nimport { GenericError } from '../../PresentationalComponents/EmptyStates/EmptyStates';\nimport { createCveListByAccount } from '../../../Helpers/VulnerabilityHelper';\nimport { constructFilterParameters, updateRef, useCreateUrlParams } from '../../../Helpers/MiscHelper';\nimport BusinessRiskModal from '../Modals/BusinessRiskModal';\nimport StatusModal from '../Modals/CveStatusModal';\nimport CVEsTable from './CVEsTable';\nimport CVEsTableToolbar from './CVEsTableToolbar';\nimport DownloadReport from '../../../Helpers/DownloadReport';\nimport {\n    changeCveListParameters,\n    fetchCveListByAccount,\n    selectCve,\n    expandCve,\n    clearCVEsStore\n} from '../../../Store/Actions/Actions';\nimport {\n    clearNotifications\n} from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\n\nexport const CVETableContext = React.createContext({});\n\nexport const CVEs = () => {\n    const dispatch = useDispatch();\n    const [CveStatusModal, setStatusModal] = useState(() => () => null);\n    const [CveBusinessRiskModal, setBusinessRiskModal] = useState(() => () => null);\n    const [urlParamsAllowed, setUrlParamsAllowed] = useState(false);\n    const [isFirstLoad, setIsFirstLoad] = useState(true);\n\n    const cveList = useSelector(\n        ({ CVEsStore }) =>  CVEsStore.cveList\n    );\n    const parameters = useSelector(\n        ({ CVEsStore }) => CVEsStore.parameters\n    );\n    const selectedCves = useSelector(\n        ({ CVEsStore }) => CVEsStore.selectedCves\n    );\n    const openedCves = useSelector(\n        ({ CVEsStore }) => CVEsStore.openedCves\n    );\n    const expandCveDescription = useSelector(\n        ({ CVEsStore }) => CVEsStore.expandCveDescription\n    );\n\n    const cves = useMemo(() => createCveListByAccount(cveList), [cveList]);\n    const [createUrlParams, urlParameters] = useCreateUrlParams(['show_irrelevant', ...CVES_ALLOWED_PARAMS]);\n\n    const apply = (filterParams = {}) => {\n        const params = constructFilterParameters(filterParams);\n        dispatch(changeCveListParameters(params));\n    };\n\n    useEffect(() => {\n        if (isFirstLoad) {\n            apply(urlParameters);\n            setIsFirstLoad(false);\n        }\n        else {\n            dispatch(fetchCveListByAccount(parameters));\n            urlParamsAllowed\n                && createUrlParams({ ...parameters })\n                || setUrlParamsAllowed(true);\n        }\n    }, [parameters]);\n\n    useEffect(() => {\n        return () => {\n            dispatch(clearCVEsStore());\n        };\n    }, []);\n\n    const processError = () => {\n        dispatch(clearNotifications());\n        return GenericError;\n    };\n\n    const handleCveSelect = (isSelected, cveNames) => {\n        dispatch(selectCve(cveNames || []));\n    };\n\n    const downloadReport = format => {\n        DownloadReport.exec(fetchCveListByAccount, parameters, format, 'cves');\n    };\n\n    const showBusinessRiskModal = cvesList => {\n        const  { meta } = cves;\n        setBusinessRiskModal(() => () =>\n            (<BusinessRiskModal cves={cvesList} updateRef={() => updateRef(meta, apply)} />)\n        );\n    };\n\n    const showStatusModal = cvesList => {\n        const  { meta } = cves;\n        setStatusModal(() => () =>\n            (<StatusModal cves={cvesList} updateRef={() => updateRef(meta, apply)} />)\n        );\n    };\n\n    const openCves = (cves) => {\n        dispatch(expandCve(cves));\n    };\n\n    if (!cves.errors) {\n        return (\n            <CVETableContext.Provider\n                value={{\n                    cves,\n                    params: parameters,\n                    selectedCves,\n                    openedCves,\n                    expandCveDescription,\n                    methods: {\n                        apply,\n                        downloadReport,\n                        selectCves: handleCveSelect,\n                        showBusinessRiskModal,\n                        showStatusModal,\n                        openCves\n                    }\n                }}\n            >\n                <CveBusinessRiskModal />\n                <CveStatusModal />\n\n                <Stack>\n                    <StackItem>\n                        <CVEsTableToolbar />\n                    </StackItem>\n                    <StackItem>\n                        <CVEsTable header={VULNERABILITIES_HEADER} />\n                    </StackItem>\n                </Stack>\n            </CVETableContext.Provider>\n        );\n    } else {\n        return processError();\n    }\n\n};\n\nexport default CVEs;\n","import React, { Fragment, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Main } from '@redhat-cloud-services/frontend-components';\nimport Header from '../../PresentationalComponents/Header/Header';\nimport { togglePopup } from '../../../Store/Actions/Actions';\nimport PopUp from '../../PresentationalComponents/PopUp/PopUp';\nimport CVEs from '../CVEs/CVEs';\n\nconst LandingPage = () => {\n    const dispatch = useDispatch();\n\n    const unsupported = useSelector(\n        ({ CVEsStore }) =>  CVEsStore.unsupported\n    );\n\n    useEffect(() => {\n        if (unsupported) {\n            dispatch(togglePopup('landing', true));\n        }\n    }, [unsupported, dispatch]);\n\n    return (\n        <Fragment>\n            <Header showBreadcrumb={false} />\n            <Main>\n                <CVEs/>\n                <PopUp page=\"landing\"/>\n            </Main>\n        </Fragment>\n    );\n};\n\nexport default LandingPage;\n"],"sourceRoot":""}