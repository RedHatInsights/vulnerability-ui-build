{"version":3,"sources":["webpack://@redhat-cloud-services/frontend-components-inventory-vulnerabilities/./src/Components/PresentationalComponents/CSAwRuleBox/CSAwRuleBox.scss","webpack://@redhat-cloud-services/frontend-components-inventory-vulnerabilities/./src/Components/PresentationalComponents/CVEInfoBox/CVEInfoBox.scss","webpack://@redhat-cloud-services/frontend-components-inventory-vulnerabilities/./src/Components/PresentationalComponents/CVEPageDetailsDescription/CVEPageDetailsDescription.scss","webpack://@redhat-cloud-services/frontend-components-inventory-vulnerabilities/./src/Components/PresentationalComponents/CvssVector/CvssVector.scss","webpack://@redhat-cloud-services/frontend-components-inventory-vulnerabilities/./src/Components/PresentationalComponents/CVEPageDetailsDescription/SnippetWithHeaderAndTooltip.js","webpack://@redhat-cloud-services/frontend-components-inventory-vulnerabilities/./src/Components/PresentationalComponents/CVEPageDetailsDescription/CVEPageDetailsDescription.js","webpack://@redhat-cloud-services/frontend-components-inventory-vulnerabilities/./src/Components/PresentationalComponents/WithLoader/WithLoader.js","webpack://@redhat-cloud-services/frontend-components-inventory-vulnerabilities/./src/Components/PresentationalComponents/CVEInfoBox/CVEInfoBox.js","webpack://@redhat-cloud-services/frontend-components-inventory-vulnerabilities/./src/Components/PresentationalComponents/CvssVector/vectorNames.js","webpack://@redhat-cloud-services/frontend-components-inventory-vulnerabilities/./src/Components/PresentationalComponents/CvssVector/CvssVector.js","webpack://@redhat-cloud-services/frontend-components-inventory-vulnerabilities/./src/Components/PresentationalComponents/CVEPageDetailsSeverity/CVEPageDetailsSeverity.js","webpack://@redhat-cloud-services/frontend-components-inventory-vulnerabilities/./src/Components/PresentationalComponents/CSAwRuleBox/CSAwRuleBox.js","webpack://@redhat-cloud-services/frontend-components-inventory-vulnerabilities/./src/Components/PresentationalComponents/CVEPageDetails/CVEPageDetails.js","webpack://@redhat-cloud-services/frontend-components-inventory-vulnerabilities/./src/Components/SmartComponents/SystemsExposedTable/SystemsExposedTable.js","webpack://@redhat-cloud-services/frontend-components-inventory-vulnerabilities/./src/Components/SmartComponents/CVEDetailsPage/CVEDetailsPage.js","webpack://@redhat-cloud-services/frontend-components-inventory-vulnerabilities/./src/Components/PresentationalComponents/CSAwRuleBox/CSAwRuleBox.scss?34eb","webpack://@redhat-cloud-services/frontend-components-inventory-vulnerabilities/./src/Components/PresentationalComponents/CVEInfoBox/CVEInfoBox.scss?3385","webpack://@redhat-cloud-services/frontend-components-inventory-vulnerabilities/./src/Components/PresentationalComponents/CVEPageDetailsDescription/CVEPageDetailsDescription.scss?7461","webpack://@redhat-cloud-services/frontend-components-inventory-vulnerabilities/./src/Components/PresentationalComponents/CvssVector/CvssVector.scss?26a9"],"names":["exports","___CSS_LOADER_API_IMPORT___","push","module","id","___CSS_LOADER_AT_RULE_IMPORT_0___","___CSS_LOADER_AT_RULE_IMPORT_1___","i","SnippetWithHeaderAndPopover","props","title","value","content","Popover","bodyContent","headerContent","aria-label","position","Stack","style","display","cursor","StackItem","Label","propTypes","CVEPageDetailsDescription","cveAttributes","intl","publishDate","public_date","description","link","rh_link","businessRisk","business_risk","businessRiskJustification","business_risk_justification","status","statusJustification","status_justification","systemsStatusDetail","systems_status_detail","systemsStatusDivergent","systems_status_divergent","detailRows","Object","keys","map","item","STATUS_OPTIONS","toString","label","brPopoverContent","TextContent","StyledText","fontWeight","StyledConstants","fontSize","lineHeight","formatMessage","messages","statusPopoverContent","marginTop","className","Table","borders","gridBreakPoint","cells","rows","TableHeader","TableBody","hasGutter","Split","SplitItem","color","Text","component","TextVariants","marginBottom","injectIntl","WithLoader","undefined","loading","variant","Spinner","centered","CVEPageOverviewItemLoader","List","BulletList","TrendBoxLoader","CurrentVulnerabilitiesItemLoader","Skeleton","size","SkeletonSize","children","height","width","x","y","rx","ry","speed","primaryColor","secondaryColor","cx","cy","r","CVEInfoBox","CVEPageContext","Consumer","context","isLoading","titleColor","Bullseye","titleContent","isFilled","descriptionTitle","descriptionContent","V3names","AV","name","values","N","A","L","P","AC","H","PR","UI","R","S","U","C","I","CVSS","V2names","Au","M","CvssVector","vector","namesMapping","res","CVSS2Vector","cvss2_metrics","CVSS3Vector","cvss3_metrics","cvssVer","cvssVector","parsedVector","split","forEach","curr","key","val","cvssVersion","maxWidth","enableFlip","TableVariant","entries","learnMorePopover","cveDetails","severity","text","footerContent","href","target","rel","CVEPageDetailsSeverity","getImpactDetails","impact","cvss3_score","cvss2_score","parseCvssScore","version","defaultProps","CSAwRuleBox","rules","synopsis","changeExposedSystemsParameters","dispatch","useDispatch","useState","numberOfCards","setNumberOfCards","sortedRules","concat","sort","a","b","systems_affected","ruleCards","length","slice","Fragment","rule","Card","rule_id","CardBody","Grid","GridItem","span","Tooltip","CSAwLabel","CSAwRuleSummary","summary","associated_cves","filter","cve","_i","CVES_PATH","reduce","prev","kbase_node_id","RH_KB_URL","onClick","ruleId","rule_key","rule_presence","Link","to","count","rule_impact","InsightsLabel","impactTextList","RISK_OF_CHANGE_LABEL","change_risk","RISK_OF_CHANGE_TOOLTIP","playbook_count","reboot_required","Button","PropTypes","CVEPageDetails","data","md","sm","SystemsExposedTable","StatusModal","setStatusModal","selectedHosts","setSelectedHosts","inventory","React","useUrlParams","SYSTEMS_EXPOSED_ALLOWED_PARAMS","urlParameters","setUrlParams","affectedSystems","useSelector","CVEDetailsPageStore","affectedSystemsByCVE","parameters","metadata","payload","meta","items","useMemo","createExposedSystemsTable","apply","config","handleSelect","isChecked","middlewareListener","on","callback","newSelected","selected","onSelect","useEffect","current","fetchAffectedSystemsByCVE","selectMultipleEntities","clearCveStore","clearInventoryStore","showStatusModal","cves","inventories","CvePairStatusModal","cveList","updateRef","fetchCveDetails","inventoryList","type","kebabOptions","cveStatusDetails","includes","inventory_id","display_name","status_id","justification","status_text","isDisabled","selectOptions","selectAllCheckbox","selectedItems","selectorHandler","total_items","fetchResource","ops","fetchAffectedSystemsIdsByCve","selectedHostsData","s","sortingHeader","patch_access","SYSTEMS_EXPOSED_SORTING_HEADER","Inventory","onLoad","mergeWithEntities","mergeWithDetail","ReducerRegistry","inventoryEntitiesReducer","SYSTEMS_EXPOSED_HEADER","tableProps","isStickyHeader","canSelectAll","onSort","_event","index","direction","handleSortColumn","sortBy","createSortBy","actionResolver","rowData","rowIndex","systemExposedTableRowActions","showTags","ref","expandable","onRefresh","page","pageSize","per_page","page_size","onRefreshData","total","isLoaded","perPage","hasCheckbox","showActions","exportConfig","ouiaId","downloadReport","format","params","DownloadReport","onExpandClick","_e","isOpen","expandRow","dedicatedAction","Remediation","manyRules","systems","filterRuleValues","actionsConfig","actions","kebabToggleProps","dropdownProps","activeFiltersConfig","filters","buildActiveFilters","onDelete","e","removeFilters","bulkSelect","checked","Boolean","handleOnCheckboxChange","filterConfig","searchFilter","securityRuleFilter","statusFilter","advisory","withRouter","CVEDetailsPage","match","cveName","BusinessModal","setBusinessRisk","details","createCveDetailsPage","exposedSystems","CveStatusModal","error","exposed_systems_count","kebabItems","kebabItemEditBusinessRisk","BusinessRiskModal","open","business_risk_id","kebabItemEditStatus","Header","InvalidObject","Provider","actionsOuiaId","breadcrumbs","PATHS","loaded","isActive","labels","attributes","Main","methods","handleCveDetailsError","update","hot","invalidate","oldLocals","accept","isNamedExport","p","isEqualLocals","dispose"],"mappings":"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","file":"js/CVEDetailsPage.ce18d920a9dc2f0aa641.js","sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".vulnerability .label{min-width:140px}.vulnerability .l-sm-spacer{margin-left:var(--pf-global--spacer--sm)}.vulnerability .ansible-success{color:var(--pf-global--success-color--200)}.vulnerability .card-box-shadow{box-shadow:var(--pf-global--BoxShadow--md);border:1px solid var(--pf-global--BorderColor--dark-100)}.vulnerability .fontsize--lg{font-size:var(--pf-global--FontSize--lg)}.vulnerability .ansibeTowerIcon{vertical-align:-0.25em;font-size:0.8em}.vulnerability .checkCircleIcon{color:var(--pf-global--success-color--100);vertical-align:-0.15em}.vulnerability .powerOffIcon{color:var(--pf-global--danger-color--100);vertical-align:'-0.125em'}.vulnerability .outlinedQuestionCircleIcon{color:var(--pf-global--secondary-color--100)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@redhat-cloud-services/frontend-components-notifications/index.css\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_1___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@redhat-cloud-services/frontend-components/index.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_1___);\n// Module\nexports.push([module.id, \".vulnerability{}.vulnerability :root{--ins-color--orange: #ec7a08}.vulnerability button:focus{outline:none}.vulnerability .vulnerability{overflow:inherit !important}.vulnerability .csaw-icon{vertical-align:-0.125em;margin-right:var(--pf-global--spacer--xs)}.vulnerability .icon-with-label:not(:last-child){margin-right:var(--pf-global--spacer--sm)}.vulnerability .icon-with-label>svg{margin-right:var(--pf-global--spacer--sm)}.vulnerability .business-risk-radio>input{margin-left:1px}.vulnerability .pf-c-button.pf-c-dropdown__menu-item{padding-left:4px}.vulnerability #custom-report-modal{width:50rem}.vulnerability #custom-report-modal .report-text-input{width:80%}.vulnerability .custom-report-filter-wrapper{width:calc(50rem - 2 * 24px)}.vulnerability .custom-report-filter-select{max-width:100%}.vulnerability .toolip-link--embeded{text-decoration:underline;color:var(--pf-global--palette--white);z-index:10000}.vulnerability .report-card{height:100%}.vulnerability .infobox-square{background-color:var(--pf-global--BackgroundColor--200);border:var(--pf-global--BorderColor--300) var(--pf-global--BorderWidth--sm) solid;height:65px}.vulnerability .infobox-square>.pf-l-split__item:first-child{width:65px;color:black;background-color:white}.vulnerability .infobox-square>.pf-l-split__item:first-child:not(.severity-unknown)>div.pf-l-bullseye svg{color:white}.vulnerability .infobox-square h3,.vulnerability .infobox-square h6{margin:0}.vulnerability .infobox-square>.pf-l-split__item:nth-child(2){display:flex;justify-content:flex-start;align-items:center}.vulnerability .severity-low{background-color:var(--pf-global--Color--200) !important}.vulnerability .severity-critical{background-color:var(--pf-global--danger-color--100) !important}.vulnerability .severity-moderate{background-color:var(--pf-global--warning-color--100) !important}.vulnerability .severity-color-important{background-color:var(--pf-global--palette--orange-300) !important}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@redhat-cloud-services/frontend-components-notifications/index.css\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_1___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@redhat-cloud-services/frontend-components/index.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_1___);\n// Module\nexports.push([module.id, \".vulnerability{}.vulnerability :root{--ins-color--orange: #ec7a08}.vulnerability button:focus{outline:none}.vulnerability .vulnerability{overflow:inherit !important}.vulnerability .csaw-icon{vertical-align:-0.125em;margin-right:var(--pf-global--spacer--xs)}.vulnerability .icon-with-label:not(:last-child){margin-right:var(--pf-global--spacer--sm)}.vulnerability .icon-with-label>svg{margin-right:var(--pf-global--spacer--sm)}.vulnerability .business-risk-radio>input{margin-left:1px}.vulnerability .pf-c-button.pf-c-dropdown__menu-item{padding-left:4px}.vulnerability #custom-report-modal{width:50rem}.vulnerability #custom-report-modal .report-text-input{width:80%}.vulnerability .custom-report-filter-wrapper{width:calc(50rem - 2 * 24px)}.vulnerability .custom-report-filter-select{max-width:100%}.vulnerability .toolip-link--embeded{text-decoration:underline;color:var(--pf-global--palette--white);z-index:10000}.vulnerability .report-card{height:100%}.vulnerability .splitter{margin-bottom:var(--pf-global--spacer--sm) !important;margin-top:var(--pf-global--spacer--sm) !important}.vulnerability .status-breakdown-table tr th{font-weight:normal;padding-left:0px;padding-right:var(--pf-global--spacer--md);padding-bottom:var(--pf-global--spacer--sm)}.vulnerability .status-breakdown-table tr th:last-child{text-align:right;min-width:8em}.vulnerability .status-breakdown-table tr td{padding-left:0px;padding-right:var(--pf-global--spacer--md);white-space:nowrap;padding-top:var(--pf-global--spacer--sm);padding-bottom:var(--pf-global--spacer--sm)}.vulnerability .status-breakdown-table tr td:last-child{text-align:right}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".vulnerability .severity-info-box>div h6{margin:0}.vulnerability .severity-info-box>div>div:nth-child(3) h6 .ins-c-skeleton{max-height:30px !important;max-width:30% !important}.vulnerability .severity-info-box>div>div:nth-child(3) div>.ins-c-skeleton{max-height:25px !important;max-width:80% !important}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import { Popover, Stack, StackItem } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport Label from '../Snippets/Label';\nimport './CVEPageDetailsDescription.scss';\n\nconst SnippetWithHeaderAndPopover = props => {\n    const { title, value, content } = props;\n\n    return (\n        <Popover id=\"popover\" bodyContent={content} headerContent={''} aria-label=\"Business risk popover\" position=\"right\">\n            <Stack style={{ display: 'inline-block', cursor: 'pointer' }}>\n                <StackItem>\n                    <Label>{title}</Label>\n                </StackItem>\n                <StackItem>\n                    <a>{value}</a>\n                </StackItem>\n            </Stack>\n        </Popover>\n    );\n};\n\nSnippetWithHeaderAndPopover.propTypes = {\n    title: propTypes.any,\n    value: propTypes.any,\n    content: propTypes.any\n};\nexport default SnippetWithHeaderAndPopover;\n","import { Stack, StackItem, Text, TextContent, TextVariants, Split, SplitItem } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { StyledText, StyledConstants } from '@patternfly/react-styled-system';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { STATUS_OPTIONS } from '../../../Helpers/constants';\nimport './CVEPageDetailsDescription.scss';\nimport SnippetWithHeaderAndPopover from './SnippetWithHeaderAndTooltip';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst CVEPageDetailsDescription = ({ cveAttributes, intl }) => {\n    const {\n        public_date: publishDate,\n        description,\n        rh_link: link,\n        business_risk: businessRisk,\n        business_risk_justification: businessRiskJustification,\n        status,\n        status_justification: statusJustification,\n        systems_status_detail: systemsStatusDetail,\n        systems_status_divergent: systemsStatusDivergent\n    } = cveAttributes;\n\n    const detailRows =\n        systemsStatusDetail &&\n        Object.keys(systemsStatusDetail).map(item => [\n            STATUS_OPTIONS.find(status => status.value === item.toString()).label,\n            systemsStatusDetail[item].toString()\n        ]);\n\n    const brPopoverContent = (\n        <TextContent>\n            <Stack>\n                <StackItem>\n                    <StyledText\n                        fontWeight={StyledConstants.fontWeights.bold}\n                        fontSize={StyledConstants.fontSizes.sm}\n                        lineHeight={StyledConstants.lineHeights.sm}\n                    >\n                        {intl.formatMessage(messages.justificationNote)}\n                    </StyledText>\n                </StackItem>\n                <StackItem>{businessRiskJustification || '--'}</StackItem>\n            </Stack>\n        </TextContent>\n    );\n\n    const statusPopoverContent = (\n        <Stack>\n            <StackItem>\n                <StyledText\n                    fontWeight={StyledConstants.fontWeights.bold}\n                    fontSize={StyledConstants.fontSizes.sm}\n                    lineHeight={StyledConstants.lineHeights.sm}\n                >\n                    {intl.formatMessage(messages.cveStatus)}\n                </StyledText>\n                {status || '--'}\n\n                <StyledText\n                    fontWeight={StyledConstants.fontWeights.bold}\n                    fontSize={StyledConstants.fontSizes.sm}\n                    lineHeight={StyledConstants.lineHeights.sm}\n                    style={{ marginTop: 'var(--pf-global--spacer--sm)' }}\n                >\n                    {intl.formatMessage(messages.justificationNote)}\n                </StyledText>\n                {statusJustification || '--'}\n            </StackItem>\n            {systemsStatusDivergent > 0 && (\n                <StackItem>\n                    <TextContent>\n                        <hr className={'splitter'} />\n                    </TextContent>\n                    <StyledText fontWeight={StyledConstants.fontWeights.semi_bold} lineHeight={StyledConstants.lineHeights.sm}>\n                        {intl.formatMessage(messages.cvePageDetailsSystemsWTCves)}\n                    </StyledText>\n                    <Table\n                        aria-label={'Status details'}\n                        borders={false}\n                        gridBreakPoint={null}\n                        cells={[intl.formatMessage(messages.statusLabel), intl.formatMessage(messages.count)]}\n                        rows={detailRows}\n                        className={'status-breakdown-table'}\n                    >\n                        <TableHeader />\n                        <TableBody />\n                    </Table>\n                </StackItem>\n            )}\n        </Stack>\n    );\n    return (\n\n        <Stack hasGutter>\n            <StackItem />\n            <StackItem>\n                <Split hasGutter>\n                    <SplitItem>\n                        <SnippetWithHeaderAndPopover\n                            title={intl.formatMessage(messages.businessRiskLabel)}\n                            value={businessRisk}\n                            content={brPopoverContent}\n                        />\n                    </SplitItem>\n                    <SplitItem>\n                        <SnippetWithHeaderAndPopover\n                            title={intl.formatMessage(messages.statusLabel)}\n                            content={statusPopoverContent}\n                            value={\n                                <span>\n                                    {systemsStatusDivergent > 0 && (\n                                        <ExclamationTriangleIcon color={'var(--pf-global--primary-color--100)'} />\n                                    )}{' '}\n                                    {status}\n                                </span>\n                            }\n                        />\n                    </SplitItem>\n                </Split>\n            </StackItem>\n            <StackItem>\n                <TextContent>\n                    <Text component={TextVariants.p}>{description}</Text>\n                </TextContent>\n            </StackItem>\n            <StackItem>\n                <div style={{ marginBottom: 'var(--pf-global--spacer--xs)' }}>\n                    {intl.formatMessage(messages.publishDate)}: {publishDate}\n                </div>\n                <div>{link}</div>\n            </StackItem>\n        </Stack>\n\n    );\n};\n\nCVEPageDetailsDescription.propTypes = {\n    cveAttributes: propTypes.any,\n    intl: propTypes.any\n};\n\nexport default injectIntl(CVEPageDetailsDescription);\n","import { Skeleton, SkeletonSize, Spinner } from '@redhat-cloud-services/frontend-components';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport ContentLoader, { BulletList, List } from 'react-content-loader';\n\nconst WithLoader = props => {\n    if (props === undefined || props.loading !== false) {\n        switch (props.variant) {\n            case 'spinner':\n                return <Spinner centered />;\n            case 'cvePageOverviewItem':\n                return <CVEPageOverviewItemLoader />;\n            case 'list':\n                return <List />;\n            case 'bulletList':\n                return <BulletList />;\n            case 'trendBox':\n                return <TrendBoxLoader />;\n            case 'currentVulnerabilitiesItem':\n                return <CurrentVulnerabilitiesItemLoader />;\n            default:\n                return <Skeleton size={SkeletonSize.lg} />;\n        }\n    }\n\n    return props.children;\n};\n\n// Loaders\nconst CVEPageOverviewItemLoader = () => {\n    return (\n        <ContentLoader height={61} width={120}>\n            <rect x=\"35\" y=\"0\" rx=\"0\" ry=\"0\" width=\"50\" height=\"35\" />\n            <rect x=\"0\" y=\"45\" rx=\"0\" ry=\"0\" width=\"120\" height=\"16\" />\n        </ContentLoader>\n    );\n};\n\nconst TrendBoxLoader = () => {\n    return (\n        <ContentLoader height={100} width={300}>\n            <rect x=\"388.58\" y=\"109.13\" rx=\"0\" ry=\"0\" width=\"0\" height=\"0\" />\n            <rect x=\"11.58\" y=\"16.13\" rx=\"0\" ry=\"0\" width=\"37\" height=\"62\" />\n            <rect x=\"52.58\" y=\"52.13\" rx=\"0\" ry=\"0\" width=\"17\" height=\"26\" />\n            <rect x=\"76.58\" y=\"52.13\" rx=\"0\" ry=\"0\" width=\"17\" height=\"26\" />\n            <rect x=\"4.58\" y=\"82.13\" rx=\"0\" ry=\"0\" width=\"154\" height=\"22\" />\n        </ContentLoader>\n    );\n};\n\nconst CurrentVulnerabilitiesItemLoader = () => {\n    return (\n        <ContentLoader height={50} width={200} speed={2} primaryColor=\"#f3f3f3\" secondaryColor=\"#ecebeb\">\n            <rect x=\"82.58\" y=\"15.13\" rx=\"0\" ry=\"0\" width=\"110.88\" height=\"21.42\" />\n            <circle cx=\"25\" cy=\"25\" r=\"25\" />\n        </ContentLoader>\n    );\n};\n\nWithLoader.propTypes = {\n    loading: propTypes.bool,\n    variant: propTypes.string\n};\n\nexport default WithLoader;\n","import { Bullseye, Split, SplitItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { CVEPageContext } from '../../SmartComponents/CVEDetailsPage/CVEDetailsPage';\nimport WithLoader from '../WithLoader/WithLoader';\nimport './CVEInfoBox.scss';\n\nconst CVEInfoBox = (props) => {\n    return (\n        <CVEPageContext.Consumer>\n            {context => (\n                <Split className=\"infobox-square\" hasGutter>\n                    <WithLoader loading={context.isLoading}>\n                        <SplitItem className={props.titleColor}>\n                            <Bullseye>{props.titleContent}</Bullseye>\n                        </SplitItem>\n                        <SplitItem isFilled>\n                            <TextContent>\n                                <Text component={TextVariants.h6}>{props.descriptionTitle}</Text>\n                                <Text component={TextVariants.p}>{props.descriptionContent}</Text>\n                            </TextContent>\n                        </SplitItem>\n                    </WithLoader>\n                </Split>\n            )}\n        </CVEPageContext.Consumer>\n    );\n};\n\nCVEInfoBox.propTypes = {\n    titleContent: propTypes.any,\n    titleColor: propTypes.any,\n    descriptionContent: propTypes.any,\n    descriptionTitle: propTypes.any\n};\n\nexport default CVEInfoBox;\n","import { intl } from '../../../Utilities/IntlProvider';\nimport messages from '../../../Messages';\n\nexport const V3names = {\n    AV: {\n        name: intl.formatMessage(messages.vectorNamesV3AV),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNetwork),\n            A: intl.formatMessage(messages.vectorValuesAdjacent),\n            L: intl.formatMessage(messages.vectorValuesLocal),\n            P: intl.formatMessage(messages.vectorValuesPhysical)\n        }\n    },\n    AC: {\n        name: intl.formatMessage(messages.vectorNamesV3AC),\n        values: {\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    PR: {\n        name: intl.formatMessage(messages.vectorNamesV3PR),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    UI: {\n        name: intl.formatMessage(messages.vectorNamesV3UI),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            R: intl.formatMessage(messages.vectorValuesRequired)\n        }\n    },\n    S: {\n        name: intl.formatMessage(messages.vectorNamesV3S),\n        values: {\n            U: intl.formatMessage(messages.vectorValuesUnchanged),\n            C: intl.formatMessage(messages.vectorValuesChanged)\n        }\n    },\n    C: {\n        name: intl.formatMessage(messages.vectorNamesV3C),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    I: {\n        name: intl.formatMessage(messages.vectorNamesV3I),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    A: {\n        name: intl.formatMessage(messages.vectorNamesV3A),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    CVSS: {\n        name: intl.formatMessage(messages.vectorNamesCvssVersion),\n        values: {\n            '3.0': 3.0\n        }\n    }\n};\n\nexport const V2names = {\n    AV: {\n        name: intl.formatMessage(messages.vectorNamesV2AV),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNetwork),\n            A: intl.formatMessage(messages.vectorValuesAdjacentNetwork),\n            L: intl.formatMessage(messages.vectorValuesLocal)\n        }\n    },\n    AC: {\n        name: intl.formatMessage(messages.vectorNamesV2AC),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    Au: {\n        name: intl.formatMessage(messages.vectorNamesV2AU),\n        values: {\n            M: intl.formatMessage(messages.vectorValuesMultiple),\n            S: intl.formatMessage(messages.vectorValuesSingle),\n            N: intl.formatMessage(messages.vectorValuesNone)\n        }\n    },\n    C: {\n        name: intl.formatMessage(messages.vectorNamesV2C),\n        values: {\n            C: intl.formatMessage(messages.vectorValuesComplete),\n            P: intl.formatMessage(messages.vectorValuesPartial),\n            N: intl.formatMessage(messages.vectorValuesNone)\n        }\n    },\n    I: {\n        name: intl.formatMessage(messages.vectorNamesV2I),\n        values: {\n            C: intl.formatMessage(messages.vectorValuesComplete),\n            P: intl.formatMessage(messages.vectorValuesPartial),\n            N: intl.formatMessage(messages.vectorValuesNone)\n        }\n    },\n    A: {\n        name: intl.formatMessage(messages.vectorNamesV2A),\n        values: {\n            C: intl.formatMessage(messages.vectorValuesComplete),\n            P: intl.formatMessage(messages.vectorValuesPartial),\n            N: intl.formatMessage(messages.vectorValuesNone)\n        }\n    }\n};\n","import { Popover, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { Table, TableBody, TableHeader, TableVariant } from '@patternfly/react-table';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { CVEPageContext } from '../../SmartComponents/CVEDetailsPage/CVEDetailsPage';\nimport WithLoader from '../WithLoader/WithLoader';\nimport './CvssVector.scss';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport { V3names, V2names } from './vectorNames';\n\nexport const parseVector = (vector, namesMapping) => {\n    let res = {};\n    vector &&\n        vector.split('/').forEach(curr => {\n            let [key, val] = curr.split(':');\n            const name = namesMapping[key] && namesMapping[key].name;\n            const value = (namesMapping[key] && namesMapping[key].values[val]) || 'N/A';\n            if (name) {\n                res[name] = value;\n            }\n        });\n    return res;\n};\n\nconst CvssVector = props => {\n    const { cvss2_metrics: CVSS2Vector, cvss3_metrics: CVSS3Vector, intl } = props;\n    const cvssVer = (CVSS3Vector && 'CVSS 3.0') || (CVSS2Vector && 'CVSS 2.0') || 'CVSS 3.0';\n    const cvssVector = CVSS3Vector || CVSS2Vector;\n    const namesMapping = (CVSS3Vector && V3names) || (CVSS2Vector && V2names);\n    const parsedVector = parseVector(cvssVector, namesMapping);\n    const notAvailable = 'N/A';\n    // eslint-disable-next-line no-unused-vars\n    const { cvssVersion, ...values } = parsedVector;\n\n    return (\n        <CVEPageContext.Consumer>\n            {context => (\n                <TextContent>\n                    <WithLoader loading={context.isLoading}>\n                        <Popover\n                            id=\"popover-cvss\"\n                            position=\"bottom\"\n                            maxWidth={'100%'}\n                            enableFlip\n                            headerContent={ `${cvssVer} ${intl.formatMessage(messages.cvssVectorPopoverTitle)}` }\n                            bodyContent={\n                                cvssVector ?\n                                    (\n                                        <Table\n                                            aria-label={'Metric breakdown'}\n                                            variant={TableVariant.compact}\n                                            gridBreakPoint={null}\n                                            cells={\n                                                [intl.formatMessage(messages.cvssVectorMetric),\n                                                    intl.formatMessage(messages.cvssVectorValue)]\n                                            }\n                                            rows={Object.entries(values)}\n                                        >\n                                            <TableHeader />\n                                            <TableBody />\n                                        </Table>\n                                    ) : (notAvailable)\n                            }\n                        >\n                            <React.Fragment>\n                                <Text component={TextVariants.h6} style={{ display: 'inline-block', cursor: 'pointer' }}>\n                                    {cvssVer} {intl.formatMessage(messages.cvssVectorVectorString)}\n                                    <OutlinedQuestionCircleIcon\n                                        color={'var(--pf-global--secondary-color--100)'}\n                                        className=\"pf-u-ml-xs\"\n                                    />\n                                </Text>\n                                <br />\n                            </React.Fragment>\n                        </Popover>\n                    </WithLoader>\n\n                    <WithLoader loading={context.isLoading}>{cvssVector || notAvailable} </WithLoader>\n                </TextContent>\n            )}\n        </CVEPageContext.Consumer>\n    );\n};\n\nCvssVector.propTypes = {\n    cvss2_metrics: propTypes.string,\n    cvss3_metrics: propTypes.string,\n    intl: propTypes.any\n};\n\nexport default injectIntl(CvssVector);\n","import { Popover, Stack, StackItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { parseCvssScore } from '@redhat-cloud-services/frontend-components-utilities/files/cjs/helpers';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { getImpactDetails } from '../../../Helpers/MiscHelper';\nimport CVEInfoBox from '../CVEInfoBox/CVEInfoBox';\nimport CvssVector from '../CvssVector/CvssVector';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst learnMorePopover = (cveDetails, intl) => {\n    return (\n        <Popover\n            id=\"learn-more\"\n            aria-label=\"Learn more\"\n            position=\"bottom\"\n            enableFlip\n            headerContent={\n                <div>\n                    {intl.formatMessage(messages.cvePageSeverityDetailsImpact, { severity: cveDetails.title })}\n                </div>\n            }\n            bodyContent={\n                <TextContent>\n                    <Text component={TextVariants.p}>{cveDetails.text}</Text>\n                </TextContent>\n            }\n            footerContent={\n                <a href=\"https://access.redhat.com/security/updates/classification/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    {intl.formatMessage(messages.cvePageSeverityDetailsLearnMoreRatings)}  <ExternalLinkAltIcon />\n                </a>\n            }\n        >\n            <a>{intl.formatMessage(messages.cvePageSeverityDetailsLearnMore)}</a>\n        </Popover>\n    );\n};\n\nconst CVEPageDetailsSeverity = (props) => {\n    const cveDetails = getImpactDetails(props.impact);\n    const cvssVersion = (props.cvss3_score && 'CVSS 3.0') || (props.cvss2_score && 'CVSS 2.0') || 'CVSS 3.0';\n    return (\n        <Stack hasGutter>\n            <StackItem>\n                <CVEInfoBox\n                    titleColor={cveDetails.color}\n                    titleContent={cveDetails.titleContent}\n                    descriptionContent={learnMorePopover(cveDetails, props.intl)}\n                    descriptionTitle={\n                        props.intl.formatMessage(messages.cvePageSeverityDetailsImpact, { severity: cveDetails.title })\n                    }\n                />\n            </StackItem>\n            <StackItem>\n                <CVEInfoBox\n                    titleContent={\n                        <TextContent>\n                            <Text component={TextVariants.h3}>{parseCvssScore(props.cvss2_score, props.cvss3_score)}</Text>\n                        </TextContent>\n                    }\n                    descriptionTitle={\n                        props.intl.formatMessage(messages.cvePageSeverityDetailsBaseScore, { version: cvssVersion })\n                    }\n                />\n            </StackItem>\n\n            <StackItem>\n                <CvssVector cvss2_metrics={props.cvss2_metrics} cvss3_metrics={props.cvss3_metrics} />\n            </StackItem>\n        </Stack>\n    );\n};\n\nCVEPageDetailsSeverity.propTypes = {\n    impact: propTypes.string,\n    cvss2_score: propTypes.any,\n    cvss3_score: propTypes.any,\n    cvss2_metrics: propTypes.any,\n    cvss3_metrics: propTypes.any,\n    intl: propTypes.any\n};\n\nCVEPageDetailsSeverity.defaultProps = {\n    impact: 'Unknown',\n    cvss2_score: undefined,\n    cvss3_score: undefined,\n    cvss2_metrics: undefined,\n    cvss3_metrics: undefined\n};\n\nexport default injectIntl(CVEPageDetailsSeverity);\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Stack,\n    StackItem,\n    Text,\n    TextContent,\n    TextVariants,\n    Tooltip,\n    SplitItem,\n    Split,\n    Grid,\n    GridItem,\n    Card,\n    CardBody,\n    Button\n} from '@patternfly/react-core';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { InsightsLabel } from '@redhat-cloud-services/frontend-components';\nimport {\n    CheckCircleIcon,\n    OutlinedQuestionCircleIcon,\n    ExternalLinkAltIcon,\n    AnsibeTowerIcon,\n    PowerOffIcon\n} from '@patternfly/react-icons';\nimport { injectIntl } from 'react-intl';\nimport Label from '../Snippets/Label';\nimport messages from '../../../Messages';\nimport {\n    RISK_OF_CHANGE_TOOLTIP,\n    RISK_OF_CHANGE_LABEL,\n    RH_KB_URL,\n    CVES_PATH,\n    impactTextList\n} from '../../../Helpers/constants';\nimport CSAwLabel from '../Snippets/CSAwLabel';\nimport CSAwRuleSummary from './CSAwRuleSummary';\nimport './CSAwRuleBox.scss';\n\nconst CSAwRuleBox = ({ rules, synopsis, changeExposedSystemsParameters, intl }) => {\n    const dispatch = useDispatch();\n    const [numberOfCards, setNumberOfCards] = useState(2);\n\n    const sortedRules = [].concat(rules).sort((a, b) => (b.systems_affected - a.systems_affected));\n\n    const ruleCards = sortedRules.length > numberOfCards && sortedRules.slice(0, numberOfCards) || sortedRules;\n\n    const handleExposedSystemFilter = (ruleId) => {\n        const params = { rule_key: ruleId, rule_presence: 'true' };\n        dispatch(changeExposedSystemsParameters(params));\n    };\n\n    return <Fragment>\n        {ruleCards && ruleCards.map(rule => (\n            <Card className=\"card-box-shadow\" key={rule.rule_id}>\n                <CardBody>\n                    <Grid hasGutter>\n                        <GridItem span={12}>\n                            <TextContent className={'icon-with-label'}>\n                                <Text component={TextVariants.h3}>\n                                    <Tooltip\n                                        content={intl.formatMessage(messages.rulesIconTooltip)}\n                                    >\n                                        <CSAwLabel className=\"pf-u-mr-sm\"/>\n                                    </Tooltip>\n                                    {rule.description}\n                                </Text>\n                            </TextContent>\n                        </GridItem>\n                        <GridItem span={8}>\n                            <Stack hasGutter>\n                                <StackItem>\n                                    <CSAwRuleSummary text={rule.summary} />\n                                </StackItem>\n\n                                <StackItem>\n                                    <TextContent>\n                                        <Text component={TextVariants.p}\n                                            className=\"pf-u-mb-xs fontsize--lg\">\n                                            {intl.formatMessage(messages.associatedCves)}\n                                        </Text>\n                                        <Text component={TextVariants.p}>\n                                            {synopsis} ({intl.formatMessage(messages.current)})\n                                            {\n                                                rule.associated_cves\n                                                .filter(cve => cve !== synopsis)\n                                                .map((cve, _i) =>\n                                                    <a\n                                                        className=\"associated-cve-link\"\n                                                        key={_i}\n                                                        href={`${CVES_PATH}/${cve}`}\n                                                    >\n                                                        {cve}\n                                                    </a>\n                                                )\n                                                .reduce((prev, curr) => [prev, ', ', curr], [''])\n                                            }\n                                        </Text>\n                                    </TextContent>\n                                </StackItem>\n\n                                {\n                                    rule.kbase_node_id &&\n                                    <StackItem>\n                                        <TextContent>\n                                            <Text\n                                                className={'icon-with-label'}\n                                                component={TextVariants.p}\n                                            >\n                                                <a\n                                                    className=\"kb-link\"\n                                                    href={`${RH_KB_URL}/${rule.kbase_node_id}`}\n                                                    target=\"_blank\"\n                                                    rel=\"noopener noreferrer\"\n                                                >\n                                                    {\n                                                        intl.formatMessage(messages.knowledgebaseArticle)\n                                                    }\n                                                    <ExternalLinkAltIcon className=\"l-sm-spacer\"/>\n                                                </a>\n                                            </Text>\n                                        </TextContent>\n                                    </StackItem>\n                                }\n\n                            </Stack>\n                        </GridItem>\n                        <GridItem span={4}>\n                            <Stack hasGutter>\n                                {rule.rule_id &&\n                                    <StackItem>\n                                        <TextContent>\n                                            <Text\n                                                className={'filter-affected-systems'}\n                                                onClick={() => handleExposedSystemFilter(rule.rule_id)}\n                                            >\n                                                <Link\n                                                    key={rule.rule_id}\n                                                    to={`/cves/${synopsis}/?rule_key=${rule.rule_id}`}\n                                                >\n                                                    {\n                                                        intl.formatMessage(\n                                                            messages.filterByAffectedSystems,\n                                                            {\n                                                                count: rule.systems_affected ?? -1\n                                                            }\n                                                        )\n                                                    }\n                                                </Link>\n                                            </Text>\n                                        </TextContent>\n                                    </StackItem>\n                                }\n                                <StackItem>\n                                    <TextContent>\n                                        {\n                                            rule.rule_impact &&\n                                            (\n                                                <Split hasGutter className=\"pf-u-mt-sm\">\n                                                    <SplitItem>\n                                                        <Label className=\"label\">\n                                                            {intl.formatMessage(messages.impact)}\n                                                        </Label>\n                                                    </SplitItem>\n                                                    <SplitItem isFilled className=\"icon-with-label\">\n\n                                                        <InsightsLabel value={rule.rule_impact}/>\n\n                                                        <Tooltip\n                                                            content={Object.values(impactTextList)[rule.rule_impact - 1]}\n                                                        >\n                                                            <OutlinedQuestionCircleIcon\n                                                                className=\"l-sm-spacer outlinedQuestionCircleIcon\"\n                                                            />\n                                                        </Tooltip>\n\n                                                    </SplitItem>\n                                                </Split>\n                                            )\n                                        }\n\n                                        <Split hasGutter className=\"pf-u-mt-sm\">\n                                            <SplitItem>\n                                                <Label className=\"label\">\n                                                    {intl.formatMessage(messages.riskOfChange)}\n                                                </Label>\n                                            </SplitItem>\n                                            <SplitItem isFilled className=\"icon-with-label\">\n                                                { RISK_OF_CHANGE_LABEL[rule.change_risk] }\n\n                                                <Tooltip\n                                                    content={RISK_OF_CHANGE_TOOLTIP[rule.change_risk]}\n                                                >\n                                                    <OutlinedQuestionCircleIcon\n                                                        className=\"l-sm-spacer outlinedQuestionCircleIcon\"\n                                                    />\n                                                </Tooltip>\n\n                                            </SplitItem>\n                                        </Split>\n                                        <Split hasGutter className=\"pf-u-mt-sm\">\n                                            <SplitItem>\n                                                <Label className=\"label\">\n                                                    <AnsibeTowerIcon\n                                                        size=\"md\"\n                                                        className=\"pf-u-mr-xs ansibeTowerIcon\"\n                                                    />\n                                                    {intl.formatMessage(messages.remediationLabel)}\n                                                </Label>\n                                            </SplitItem>\n                                            <SplitItem className=\"icon-with-label\" isFilled>\n                                                { !rule.playbook_count\n                                                    ? intl.formatMessage(messages.no)\n                                                    : (\n                                                        <Fragment>\n                                                            <CheckCircleIcon\n                                                                className=\"checkCircleIcon\"\n                                                            />\n                                                            {intl.formatMessage(messages.yes)}\n                                                            <Tooltip\n                                                                content={intl.formatMessage(messages.ansibleRemediationTooltip)}\n                                                            >\n                                                                <OutlinedQuestionCircleIcon\n                                                                    className=\"l-sm-spacer outlinedQuestionCircleIcon\"\n                                                                />\n                                                            </Tooltip>\n                                                        </Fragment>\n                                                    )\n                                                }\n                                                <div className=\"pf-u-mt-xs\">\n                                                    { rule.reboot_required &&\n                                                        <Text>\n                                                            <PowerOffIcon\n                                                                className=\"pf-u-mr-xs powerOffIcon\"\n                                                            />\n                                                            {intl.formatMessage(messages.rebootRequired)}\n                                                        </Text>\n                                                    }\n                                                </div>\n                                            </SplitItem>\n\n                                        </Split>\n                                    </TextContent>\n                                </StackItem>\n                            </Stack>\n                        </GridItem>\n                    </Grid>\n                </CardBody>\n            </Card>\n        ))}\n        {\n            rules.length > numberOfCards && (\n                <Grid>\n                    <GridItem>\n                        <Button key=\"viewMoreRules\" variant=\"secondary\" onClick={() => setNumberOfCards(rules.length)}>\n                            {intl.formatMessage(messages.viewMoreScurityRules, { rules: (rules.length - numberOfCards) })}\n                        </Button>\n                    </GridItem>\n                </Grid>\n            )\n        }\n    </Fragment>;\n};\n\nCSAwRuleBox.defaultProps = {\n    rules: []\n};\n\nCSAwRuleBox.propTypes = {\n    intl: PropTypes.any,\n    rules: PropTypes.array,\n    synopsis: PropTypes.string,\n    changeExposedSystemsParameters: PropTypes.func\n};\n\nexport default injectIntl(CSAwRuleBox);\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { CVEPageContext } from '../../SmartComponents/CVEDetailsPage/CVEDetailsPage';\nimport CVEPageDetailsDescription from '../CVEPageDetailsDescription/CVEPageDetailsDescription';\nimport CVEPageDetailsSeverity from '../CVEPageDetailsSeverity/CVEPageDetailsSeverity';\nimport WithLoader from '../WithLoader/WithLoader';\nimport CSAwRuleBox from '../CSAwRuleBox/CSAwRuleBox';\n\nconst CVEPageDetails = ({ data, changeExposedSystemsParameters }) => {\n    return (\n        <CVEPageContext.Consumer>\n            {context => (\n                <Grid hasGutter>\n                    <GridItem md={8} sm={12}>\n                        <WithLoader loading={context.isLoading} variant=\"spinner\">\n                            <CVEPageDetailsDescription cveAttributes={data.data} />\n                        </WithLoader>\n                    </GridItem>\n\n                    <GridItem md={4} sm={12} className=\"severity-info-box pf-u-mt-md\">\n                        <CVEPageDetailsSeverity\n                            impact={data.data.impact}\n                            cvss2_score={data.data.cvss2_score}\n                            cvss3_score={data.data.cvss3_score}\n                            cvss2_metrics={data.data.cvss2_metrics}\n                            cvss3_metrics={data.data.cvss3_metrics}\n                        />\n                    </GridItem>\n                    <CSAwRuleBox\n                        changeExposedSystemsParameters = {changeExposedSystemsParameters}\n                        synopsis={data.data.synopsis}\n                        rules={data.data.rules}\n                    />\n                </Grid>\n\n            )}\n        </CVEPageContext.Consumer>\n    );\n};\n\nCVEPageDetails.propTypes = {\n    data: propTypes.object,\n    changeExposedSystemsParameters: propTypes.func\n};\n\nexport default CVEPageDetails;\n","import propTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport { withRouter } from 'react-router-dom';\nimport { useUrlParams, updateRef, createSortBy, handleSortColumn } from '../../../Helpers/MiscHelper';\nimport { useDispatch, useSelector } from 'react-redux';\nimport React, { useEffect, useState, useMemo } from 'react';\nimport CvePairStatusModal from '../Modals/CvePairStatusModal';\nimport ReducerRegistry from '../../../Utilities/ReducerRegistry';\nimport { middlewareListener } from '../../../Utilities/ReducerRegistry';\nimport selectAllCheckbox from '../../../Helpers/selectAllCheckboxHelper';\nimport { Text, TextContent, TextVariants, Stack, StackItem } from '@patternfly/react-core';\nimport { systemExposedTableRowActions, createExposedSystemsTable } from '../../../Helpers/CVEHelper';\nimport { inventoryEntitiesReducer } from '../../../Store/Reducers/InventoryEntitiesReducer';\nimport DownloadReport from '../../../Helpers/DownloadReport';\nimport Remediation from '../Remediation/Remediation';\nimport searchFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/SearchFilter';\nimport securityRuleFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/SecurityRuleFilter';\nimport statusFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/StatusFilter';\nimport { exportConfig, buildActiveFilters, removeFilters } from '../../../Helpers/TableToolbarHelper';\nimport {\n    selectMultipleEntities,\n    fetchAffectedSystemsByCVE,\n    fetchCveDetails,\n    expandRow,\n    changeExposedSystemsParameters,\n    clearCveStore,\n    fetchAffectedSystemsIdsByCve,\n    clearInventoryStore\n} from '../../../Store/Actions/Actions';\nimport {\n    SYSTEMS_EXPOSED_HEADER,\n    SYSTEMS_EXPOSED_ALLOWED_PARAMS,\n    SYSTEMS_EXPOSED_SORTING_HEADER\n} from '../../../Helpers/constants';\nimport { InventoryTable } from '@redhat-cloud-services/frontend-components/components/esm/Inventory';\n\nconst SystemsExposedTable = (props) => {\n    const [StatusModal, setStatusModal] = useState(() => () => null);\n    const [selectedHosts, setSelectedHosts] = useState(undefined);\n\n    const inventory = React.createRef();\n    const dispatch = useDispatch();\n    const [urlParameters, setUrlParams] = useUrlParams(SYSTEMS_EXPOSED_ALLOWED_PARAMS);\n\n    const affectedSystems = useSelector(\n        ({ CVEDetailsPageStore }) => CVEDetailsPageStore.affectedSystemsByCVE\n    );\n\n    const isLoading = useSelector(\n        ({ CVEDetailsPageStore }) => CVEDetailsPageStore.affectedSystemsByCVE.isLoading\n    );\n\n    const parameters = useSelector(\n        ({ CVEDetailsPageStore }) => CVEDetailsPageStore.parameters\n    );\n\n    const metadata = useSelector(\n        ({ CVEDetailsPageStore }) => CVEDetailsPageStore.affectedSystemsByCVE.payload.meta\n    );\n    const items = useMemo(() => createExposedSystemsTable({ ...affectedSystems }, props.cve), [affectedSystems]);\n\n    const apply = (config) => dispatch(\n        changeExposedSystemsParameters(config)\n    );\n\n    const inventoryRefresh = ({ page, per_page: pageSize }) => {\n\n        if (inventory.current && (metadata.page !== page || metadata.page_size !== pageSize)) {\n            apply({ page, page_size: pageSize });\n        }\n\n        if (metadata && metadata.total_items <= pageSize && inventory.current) {\n            inventory.current.onRefreshData({ page, page_size: pageSize });\n        }\n    };\n\n    const handleSelect = (isChecked, payload) => {\n        const selectedHosts = payload ? payload : [];\n        setSelectedHosts(selectedHosts);\n    };\n\n    const onSelect = (payload) => {\n        const newSelected = payload.data.selected ? [payload.data.id, ...(selectedHosts || [])]\n            : selectedHosts && selectedHosts.filter(item => item !== payload.data.id);\n\n        handleSelect(false, newSelected);\n    };\n\n    middlewareListener.addNew({\n        on: 'SELECT_ENTITY',\n        callback: payload => onSelect(payload)\n    });\n\n    useEffect(() => {\n        if (!inventory.current) {\n            apply(urlParameters);\n        }\n        else {\n            dispatch(fetchAffectedSystemsByCVE(props.cve, { ...parameters }));\n            setUrlParams({ ...parameters });\n        }\n    }, [parameters]);\n\n    useEffect(() => {\n        if (selectedHosts) {\n            dispatch(selectMultipleEntities(selectedHosts));\n        }\n    }, [selectedHosts, dispatch]);\n\n    useEffect(() => {\n        return () => {\n            dispatch(clearCveStore());\n            dispatch(clearInventoryStore());\n        };\n    }, []);\n\n    const downloadReport = format => {\n        let params = [props.cve, { ...parameters }];\n        DownloadReport.exec(fetchAffectedSystemsByCVE, params, format, 'systems-exposed');\n    };\n\n    const showStatusModal = (cves, inventories) => {\n        setStatusModal(\n            () => () =>\n                <CvePairStatusModal\n                    cveList={cves}\n                    updateRef={() => {\n                        updateRef(items.meta, apply);\n                        fetchCveDetails(props.cve);\n                    }}\n                    inventoryList={inventories}\n                    type={'systemsExposed'}\n                />\n\n        );\n    };\n\n    const getSelectedSystemsData = () => {\n        let systemsList = items.data.filter(item => selectedHosts.includes(item.inventory_id));\n        // eslint-disable-next-line camelcase\n        systemsList = systemsList.map(({ inventory_id, display_name, status_id, status_text: justification }) =>\n            ({ inventory_id, display_name, status_id, justification })); // omit properties we don't need\n\n        return systemsList;\n    };\n\n    const kebabOptions = ['',\n        {\n            label: props.intl.formatMessage(messages.editStatus),\n            onClick: () => showStatusModal(\n                [props.cveStatusDetails],\n                getSelectedSystemsData()\n            ),\n            props: { isDisabled: !selectedHosts || selectedHosts.length === 0 }\n        }\n    ];\n\n    const selectOptions = useMemo(() => selectAllCheckbox({\n        selectedItems: selectedHosts || [],\n        selectorHandler: handleSelect,\n        items: items.data && items || { data: [], meta: { total_items: 0 } },\n        fetchResource: ops => fetchAffectedSystemsIdsByCve(props.cve, { ...parameters, ...ops })\n    }), [items, selectedHosts, parameters]);\n\n    const selectedHostsData = useMemo(() => (\n        items?.data.filter(s => selectedHosts?.includes(s.id))\n    ), [selectedHosts, items]);\n\n    const sortingHeader = items?.meta?.patch_access\n        ? SYSTEMS_EXPOSED_SORTING_HEADER\n        : SYSTEMS_EXPOSED_SORTING_HEADER.filter(item => item.key !== 'advisory');\n\n    const sortBy = () =>\n        createSortBy(\n            sortingHeader,\n            metadata.sort\n        );\n\n    const onSort = (_event, index, direction) =>\n        handleSortColumn(\n            index,\n            direction,\n            sortingHeader,\n            urlParameters.sort,\n            apply\n        );\n\n    return (\n        <React.Fragment>\n            <Stack hasGutter>\n                <StackItem>\n                    <TextContent>\n                        <Text component={TextVariants.h2}>\n                            {props.intl.formatMessage(messages.systemsExposedTableHeader)}\n                        </Text>\n                    </TextContent>\n                </StackItem>\n                <StackItem>\n                    <InventoryTable\n                        onLoad={({ mergeWithEntities, mergeWithDetail }) => {\n\n                            ReducerRegistry.register({\n                                ...mergeWithEntities(inventoryEntitiesReducer(SYSTEMS_EXPOSED_HEADER)),\n                                ...mergeWithDetail()\n                            });\n                        }}\n                        tableProps={{\n                            isStickyHeader: true,\n                            canSelectAll: false,\n                            onSort: (items.data.length > 0) && onSort,\n                            sortBy: (items.data.length > 0) && sortBy(),\n                            actionResolver: (rowData, rowIndex) => (\n                                items.data.length > 0 &&\n                                systemExposedTableRowActions(\n                                    showStatusModal,\n                                    props.cveStatusDetails,\n                                    rowIndex.rowIndex\n                                )\n                            )\n                        }}\n                        showTags\n                        items={items.data}\n                        key={'inventory'}\n                        ref={inventory}\n                        expandable='true'\n                        onRefresh={inventoryRefresh}\n                        page={parameters.page}\n                        total={metadata.total_items}\n                        isLoaded={!isLoading}\n                        perPage={parameters.page_size}\n                        hasCheckbox={items && items.length !== 0}\n                        showActions={items && items.length !== 0}\n                        exportConfig={{\n                            isDisabled: items.meta.total_items === 0 && (!selectedHosts || selectedHosts.length === 0),\n                            ouiaId: 'export',\n                            ...exportConfig({ downloadReport })\n                        }}\n                        onExpandClick={(_e, _i, isOpen, { id }) => dispatch(expandRow(id, isOpen))}\n                        dedicatedAction={(!isLoading &&\n                            <Remediation\n                                manyRules\n                                systems={selectedHostsData}\n                                cves={{ id: props.cve, rules: props.filterRuleValues }}\n                            />\n                        )}\n                        actionsConfig={{\n                            actions: kebabOptions,\n                            kebabToggleProps: { isDisabled: !selectedHosts || selectedHosts.length === 0 },\n                            dropdownProps: { ouiaId: 'toolbar-actions' }\n                        }}\n                        activeFiltersConfig={{\n                            filters: buildActiveFilters({ ...parameters }, props.filterRuleValues),\n                            onDelete: (e, i) => removeFilters(i, apply)\n                        }}\n                        bulkSelect={selectOptions && {\n                            count: selectedHosts && selectedHosts.length,\n                            items: selectOptions.items,\n                            isDisabled: items.meta.total_items === 0 && (!selectedHosts || selectedHosts.length === 0),\n                            checked: Boolean(selectedHosts && selectedHosts.length),\n                            ouiaId: 'bulk-select',\n                            onSelect: () => selectOptions.handleOnCheckboxChange()\n                        }}\n                        filterConfig={{\n                            items: [\n                                searchFilter(\n                                    'filter',\n                                    messages.systemsSearchName,\n                                    messages.searchFilterByName,\n                                    parameters.filter, apply\n                                ),\n                                securityRuleFilter(apply, parameters, props.filterRuleValues),\n                                statusFilter(apply, parameters),\n                                searchFilter('advisory', messages.advisory, messages.search, parameters.advisory, apply)\n\n                            ]\n                        }}\n                    >\n                        {StatusModal && <StatusModal />}\n                    </InventoryTable>\n                </StackItem>\n            </Stack>\n        </React.Fragment>\n    );\n};\n\nSystemsExposedTable.propTypes = {\n    intl: propTypes.object,\n    cve: propTypes.string,\n    cveStatusDetails: propTypes.object,\n    filterRuleValues: propTypes.array\n};\n\nexport default injectIntl(\n    withRouter(\n        SystemsExposedTable\n    )\n);\n","import { InvalidObject, Main } from '@redhat-cloud-services/frontend-components';\nimport propTypes from 'prop-types';\nimport React, { useMemo, useState, useEffect } from 'react';\nimport { createCveDetailsPage } from '../../../Helpers/CVEHelper';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    fetchCveDetails,\n    changeExposedSystemsParameters,\n    fetchAffectedSystemsByCVE\n} from '../../../Store/Actions/Actions';\nimport { withRouter } from 'react-router-dom';\nimport { PATHS } from '../../../Helpers/constants';\nimport CVEPageDetails from '../../PresentationalComponents/CVEPageDetails/CVEPageDetails';\nimport { kebabItemEditBusinessRisk, kebabItemEditStatus } from '../../PresentationalComponents/DownloadReportKebab/KebabItems';\nimport BusinessRiskModal from '../Modals/BusinessRiskModal';\nimport CveStatusModal from '../Modals/CveStatusModal';\nimport SystemsExposedTable from '../SystemsExposedTable/SystemsExposedTable';\nimport Header from '../../PresentationalComponents/Header/Header';\nimport CSAwLabel from '../../PresentationalComponents/Snippets/CSAwLabel';\n\nexport const CVEPageContext = React.createContext({ isLoading: true });\n\nconst CVEDetailsPage = (props) => {\n    const dispatch = useDispatch();\n    const [cveName] = useState(props.match.params.cve);\n    const [BusinessModal, setBusinessRisk] = useState(() => () => null);\n    const [StatusModal, setStatusModal] = useState(() => () => null);\n\n    const details = useSelector(\n        ({ CVEDetailsPageStore }) => CVEDetailsPageStore.cveDetails\n    );\n    const cveDetails = useMemo(() => createCveDetailsPage(details), [details]);\n\n    const exposedSystems = useSelector(\n        ({ CVEDetailsPageStore }) => CVEDetailsPageStore.affectedSystemsByCVE\n    );\n\n    useEffect(() => {\n        dispatch(fetchCveDetails(cveName));\n    }, []);\n\n    const showBusinessRiskModal = cves => {\n        setBusinessRisk(\n            () => () =>\n                <BusinessRiskModal open cves={cves} updateRef={() => dispatch(fetchCveDetails(cveName))} />\n        );\n    };\n\n    const showStatusModal = cves => {\n        setStatusModal(\n            () => () =>\n                <CveStatusModal\n                    cves={cves}\n                    updateRef={() => {\n                        dispatch(fetchCveDetails(cveName));\n                        dispatch(fetchAffectedSystemsByCVE(cveName));\n                    }}\n                />\n        );\n    };\n\n    const { error, data } = cveDetails;\n\n    const cveStatusDetails = {\n        id: cveName,\n        status_id: cveDetails.data.status_id,\n        justification: cveDetails.data.status_justification,\n        exposed_systems_count: exposedSystems?.payload?.meta?.total_items || 0\n    };\n    const kebabItems = [\n        kebabItemEditBusinessRisk(showBusinessRiskModal, [\n            {\n                business_risk_id: cveDetails.data.business_risk_id,\n                id: cveName,\n                justification: cveDetails.data.business_risk_justification\n            }\n        ]),\n        kebabItemEditStatus(showStatusModal, [cveStatusDetails])\n    ];\n    const { rules } = data;\n    const filterRuleValues = rules && rules.map(\n        ({ rule_id: ruleId, description }) => ({ value: ruleId, label: description })\n    );\n\n    if (!error) {\n        return (\n            <React.Fragment>\n                <CVEPageContext.Provider value={cveDetails && { isLoading: cveDetails.isLoading }}>\n                    <Header\n                        title={cveName}\n                        actions={kebabItems}\n                        actionsOuiaId={'cve-actions'}\n                        breadcrumbs={[\n                            {\n                                title: PATHS.cvesPage.title,\n                                to: PATHS.cvesPage.to,\n                                loaded: true\n                            },\n                            {\n                                title: cveName,\n                                isActive: true,\n                                loaded: true\n                            }\n                        ]}\n                        // you can pass an array here, when implementing exploit label\n                        labels={details.payload.data?.attributes.rules.length > 0 && <CSAwLabel />}\n                    >\n                        <CVEPageDetails changeExposedSystemsParameters={changeExposedSystemsParameters} data={cveDetails} />\n                        <StatusModal />\n                        <BusinessModal />\n                    </Header>\n                    <Main>\n                        <SystemsExposedTable\n                            cve={cveName}\n                            filterRuleValues={filterRuleValues}\n                            cveStatusDetails={cveStatusDetails}\n                            methods={{ showStatusModal }}\n                        />\n                    </Main>\n                </CVEPageContext.Provider>\n            </React.Fragment>\n        );\n    } else {\n        return (\n            <React.Fragment>\n                <Header title={cveName}/>\n                <InvalidObject />\n            </React.Fragment>\n        );\n    }\n};\n\nCVEDetailsPage.propTypes = {\n    match: propTypes.object,\n    cveDetails: propTypes.object,\n    fetchCveDetails: propTypes.func,\n    handleCveDetailsError: propTypes.func\n};\nexport default withRouter(CVEDetailsPage);\n","import api from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./CSAwRuleBox.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./CSAwRuleBox.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};","import api from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./CVEInfoBox.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./CVEInfoBox.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};","import api from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./CVEPageDetailsDescription.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./CVEPageDetailsDescription.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};","import api from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./CvssVector.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./CvssVector.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};"],"sourceRoot":""}