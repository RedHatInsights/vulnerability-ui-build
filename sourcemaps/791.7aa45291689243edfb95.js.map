{"version":3,"sources":["webpack:///./src/Components/PresentationalComponents/ErrorHandler/ErrorHandler.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/SearchFilter.js","webpack:///./src/Helpers/TableToolbarHelper.js","webpack:///./src/Helpers/selectAllCheckboxHelper.js"],"names":["ErrorHandler","code","icon","LockIcon","title","intl","messages","description","prevPageButtonText","toLandingPageText","propTypes","urlParam","label","placeholder","search","apply","React","searchValue","setSearchValue","debounce","newValue","undefined","handleSearch","type","conditionalFilterType","filterValues","id","onChange","event","value","handleChangePage","_event","page","handleSetPageSize","perPage","page_size","exportConfig","methods","onSelect","fileType","downloadReport","buildActiveFilters","currentFilters","filterRuleValues","nameFilter","filter","advisoryFilter","advisory","buildChip","key","parameter","FILTERS","items","reduce","object","item","name","filteredRule","find","includes","e","buildChips","paramValues","values","push","hasValue","filters","Object","keys","filterChips","array","multiValue","concat","rule_presence","split","rule_key","category","chips","cvssFrom","cvss_from","parseFloat","toFixed","cvssTo","cvss_to","filteredValues","length","removeFilters","reset","defaultFilters","emptyFilter","obj","remainingValues","some","chip","join","cvss_filter","isFilterInDefaultState","currentParams","defaultParams","filterParams","acc","param","isEqual","selectedItems","selectorHandler","fetchResource","multiRow","selectedItemsArray","Array","from","selectedItemsCount","meta","data","selectPageNumber","isArray","handleUnselectAll","handleSelectAll","payload","total_items","then","map","handleOnCheckboxChange","onClick","count","collectedItems","union"],"mappings":"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","file":"js/791.3a693a4f2dae12f3f2da.js","sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport { InvalidObject } from '@redhat-cloud-services/frontend-components/InvalidObject';\nimport { Unavailable } from '@redhat-cloud-services/frontend-components/Unavailable';\nimport { ErrorState } from '@redhat-cloud-services/frontend-components/ErrorState';\nimport { NotAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport { LockIcon } from '@patternfly/react-icons';\nimport { intl } from '../../../Utilities/IntlProvider';\nimport messages from '../../../Messages';\n\nconst ErrorHandler = ({ code }) => {\n    switch (code) {\n        case 403:\n            return <NotAuthorized\n                icon={LockIcon}\n                title={intl.formatMessage(messages.notAuthorizedTitle)}\n                description={intl.formatMessage(messages.notAuthorizedDescription)}\n                prevPageButtonText={intl.formatMessage(messages.returnToPreviousPage)}\n                toLandingPageText={intl.formatMessage(messages.returnToLandingPage)}\n            />;\n\n        case 404:\n            return <InvalidObject />;\n\n        case 500:\n        case 502:\n        case 503:\n            return <Unavailable />;\n\n        default:\n            return <ErrorState />;\n    }\n};\n\nErrorHandler.propTypes = {\n    code: propTypes.number\n};\n\nexport default ErrorHandler;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { intl } from '../../../../Utilities/IntlProvider';\n\nimport debounce from 'lodash/debounce';\nimport React from 'react';\n\nconst useSearchFilter = (urlParam, label, placeholder, search, apply) => {\n    const [searchValue, setSearchValue] = React.useState();\n    const [handleSearch] = React.useState(() =>\n        debounce(newValue =>  {\n            if (newValue !== undefined) {\n                apply({ [urlParam]: newValue, page: 1 });\n            }},\n        400)\n    );\n\n    React.useEffect(() => setSearchValue(search), [search]);\n\n    return {\n        type: conditionalFilterType.text,\n        label: intl.formatMessage(label),\n        filterValues: {\n            'aria-label': 'search-field',\n            id: `search-${label.id}`,\n            onChange: (event, value) => {\n                setSearchValue(value);\n                handleSearch(value);\n            },\n            placeholder: intl.formatMessage(placeholder),\n            value: searchValue\n        }\n    };\n};\n\nexport default useSearchFilter;\n","import messages from '../Messages';\nimport { FILTERS } from './constants';\nimport { intl } from '../Utilities/IntlProvider';\nimport isEqual from 'lodash/isEqual';\n\nexport const handleChangePage = (_event, page, apply) => apply({ page });\n\nexport const handleSetPageSize = (_event, perPage, apply) => apply({ page_size: perPage, page: 1 });\n\nexport const exportConfig = (methods) => (\n    { onSelect: (_event, fileType) => methods.downloadReport(fileType) }\n);\n\nexport const buildActiveFilters = (currentFilters, filterRuleValues = []) => {\n    const { filter: nameFilter, advisory: advisoryFilter } = currentFilters;\n\n    const buildChip = (key, parameter) => (\n        FILTERS[key].items.reduce((object, item) => {\n            if (parameter === item.value) {\n                object.name = item.label;\n                object.value = item.value;\n            }\n            else if (key === 'security_rule') {\n                const filteredRule = filterRuleValues.find(({ value }) => value === parameter);\n\n                ['true', 'false'].includes(parameter)\n                    ? object.name = FILTERS.security_rule.items.find(e => e.value === parameter).label\n                    : object.name = filteredRule && filteredRule.label || parameter;\n\n                object.value = parameter;\n            }\n\n            return object;\n        }, {})\n    );\n\n    const buildChips = (paramValues, key) => {\n        return paramValues.reduce((values, parameter) => {\n            values.push(buildChip(key, parameter));\n            return values;\n        }, []);\n    };\n\n    const hasValue = (filters, key) => Object.keys(filters).includes(key) && !['', undefined].includes(filters[key]);\n\n    // FIXME please!!!\n    const filterChips = Object.keys(FILTERS).reduce((array, key) => {\n        if (key === 'security_rule' && (hasValue(currentFilters, 'rule_presence') || hasValue(currentFilters, 'rule_key'))) {\n            const multiValue = [].concat(\n                currentFilters.rule_presence ? currentFilters.rule_presence.split(',') : [],\n                currentFilters.rule_key ? currentFilters.rule_key.split(',') : []);\n            array.push({ key, multiValue, category: FILTERS[key].title, chips: buildChips(multiValue, key) });\n        }\n        else if (key === 'cvss_filter' && (hasValue(currentFilters, 'cvss_from') || hasValue(currentFilters, 'cvss_to'))) {\n            const cvssFrom = (currentFilters.cvss_from && parseFloat(currentFilters.cvss_from).toFixed(1)) || '0.0';\n            const cvssTo = (currentFilters.cvss_to && parseFloat(currentFilters.cvss_to).toFixed(1)) || '10.0';\n\n            if (cvssFrom !== '0.0' || cvssTo !== '10.0') {\n                array.push({ key, category: FILTERS[key].title, chips: [{ name: `${cvssFrom} - ${cvssTo}` }] });\n            }\n        }\n        else if (hasValue(currentFilters, key)) {\n            const multiValue = typeof currentFilters[key] === 'string' && currentFilters[key].split(',');\n            const filteredValues = (multiValue && multiValue.length > 1)\n                && buildChips(multiValue, key)\n                || [buildChip(key, currentFilters[key])];\n\n            array.push({ key, multiValue, category: FILTERS[key].title, chips: filteredValues });\n        }\n\n        return array;\n    }, []);\n\n    nameFilter && filterChips.push(\n        {\n            key: 'filter',\n            category: intl.formatMessage(messages.searchLabel),\n            chips: [{ name: nameFilter }]\n        }\n    );\n\n    advisoryFilter && filterChips.push(\n        {\n            key: 'advisory',\n            category: intl.formatMessage(messages.advisory),\n            chips: [{ name: advisoryFilter }]\n        }\n    );\n\n    return filterChips;\n};\n\nexport const removeFilters = (chips, apply, reset = false, defaultFilters = {}) => {\n    if (reset) {\n        removeFilters(chips, apply);\n        apply({ ...defaultFilters, page: 1 });\n        return;\n    }\n\n    const emptyFilter = chips.reduce((obj, item) => {\n        if (item.key === 'security_rule') {\n            const remainingValues = item.multiValue.filter(value => !item.chips.some(chip => chip.value === value));\n            obj.rule_presence = remainingValues.filter(value => ['true', 'false'].includes(value)).join(',') || '';\n            obj.rule_key = remainingValues.filter(value => !['true', 'false'].includes(value)).join(',') || '';\n        }\n        else if (item.key === 'filter' || item.key === 'advisory' || (item.multiValue && item.multiValue.length === 1)) {\n            obj[item.key] = '';\n        }\n        else if (item.key === 'cvss_filter') {\n            obj.cvss_filter = undefined;\n            obj.cvss_from = undefined;\n            obj.cvss_to = undefined;\n        }\n        else {\n            obj[item.key] = item.multiValue.filter(value => !item.chips.some(chip => chip.value === value)).join(',');\n        }\n\n        return obj;\n    }, {});\n\n    apply({ ...emptyFilter, page: 1 });\n};\n\nexport const isFilterInDefaultState = (currentParams, defaultParams, filterParams) => {\n    // filter out params which have nothing to do with filter chips, like page, sort, etc.\n    currentParams = filterParams.reduce((acc, param) => (\n        {\n            ...acc,\n            ...currentParams[param] && { [param]: currentParams[param] }\n        }\n    ), {});\n\n    return isEqual(currentParams, defaultParams);\n};\n","import union from 'lodash/union';\nimport messages from '../Messages';\nimport { intl } from '../Utilities/IntlProvider';\n\nconst selectAllCheckbox = ({ selectedItems, selectorHandler, items, fetchResource, multiRow = false }) => {\n\n    const selectedItemsArray = Array.from(selectedItems); // we might get array or set and there's no common method for size\n    const selectedItemsCount = selectedItemsArray && selectedItemsArray.length;\n    const { meta, data } = items;\n    const selectPageNumber = data && (((Array.isArray(data) && data.length) && multiRow) ? data.length / 2 : data.length);\n\n    const handleSelectPage = () => {\n        const { data } = items;\n        const collectedItems = union(data.filter(item => item.id).map(item => item.id), selectedItemsArray);\n        selectorHandler(true, collectedItems);\n    };\n\n    const handleUnselectAll = () => {\n        selectorHandler(false, []);\n    };\n\n    const handleSelectAll = () => {\n\n        let { payload } = fetchResource && fetchResource({ page_size: meta.total_items, page: 1 });\n        payload &&\n            payload.then(({ data: response }) => {\n                //TODO: current only one new endpoint is introduced. Once, we have all new endpoints,  get rid of this map\n                const items = response.map(item => item.id && item.id || item);\n                selectorHandler(true, items);\n            });\n    };\n\n    const handleOnCheckboxChange = () => {\n        if (selectedItemsCount === 0) {\n            handleSelectAll();\n        } else {\n            handleUnselectAll();\n        }\n    };\n\n    return ({\n        handleOnCheckboxChange,\n        items: [\n            {\n                title: intl.formatMessage(messages.selectNone),\n                onClick: handleUnselectAll\n            },\n            {\n                title: `${intl.formatMessage(messages.selectPage, { count: selectPageNumber })}`,\n                onClick: handleSelectPage\n            },\n            {\n                title: `${intl.formatMessage(messages.selectAll, { count: meta.total_items ? meta.total_items : 0 })}`,\n                onClick: handleSelectAll\n            }\n        ]\n    }\n\n    );\n};\n\nexport default selectAllCheckbox;\n"],"sourceRoot":""}