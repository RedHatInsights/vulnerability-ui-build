{"version":3,"file":"js/SystemDetailsPage.1683565761934.bfee4d97732341cb7138.js","mappings":"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","sources":["webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/InventoryLoadError.js","webpack:///./src/Components/SmartComponents/SystemDetailsPage/SystemDetails.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/DetailWrapper.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/InventoryDetailHead.js","webpack:///./src/Store/Reducers/SystemDetailsPageStore.js","webpack:///./src/Components/SmartComponents/SystemDetailsPage/SystemDetailsPage.js"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useEffect } from 'react';\nvar InventoryLoadError = function (_a) {\n    var component = _a.component, props = __rest(_a, [\"component\"]);\n    useEffect(function () {\n        console.error(\"Unable to load inventory component. Failed to load \".concat(component, \".\"), props);\n    }, []);\n    return (_jsxs(\"div\", { children: [_jsx(\"h1\", { children: \"Unable to load inventory component\" }), _jsxs(\"h2\", { children: [\"Failed to load \", component] }), _jsx(\"code\", { children: \"More info can be found in browser console output.\" })] }));\n};\nexport default InventoryLoadError;\n//# sourceMappingURL=InventoryLoadError.js.map","import React from 'react';\nimport propTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { ConnectedSystemCves } from '../SystemCves/SystemCves';\nimport {\n    EmptyStateExcludedSystem,\n    NotAuthorized\n} from '../../PresentationalComponents/EmptyStates/EmptyStates';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\nimport { intl } from '../../../Utilities/IntlProvider';\nimport messages from '../../../Messages';\nimport { PERMISSIONS, SERVICE_NAME } from '../../../Helpers/constants';\nimport { useRbac } from '../../../Helpers/Hooks';\n\nconst SystemDetails = ({ optOutSystemHandler }) => {\n    const { entity, loaded, opt_out: isOptOut } = useSelector(state => state.entityDetails) ?? {};\n\n    const [[\n        canExport,\n        canReadVulnerabilityResults,\n        canEditPairStatus,\n        canReadExcluded\n    ], isRbacLoading] = useRbac([\n        PERMISSIONS.basicReporting,\n        PERMISSIONS.readVulnerabilityResults,\n        PERMISSIONS.setPairStatus,\n        PERMISSIONS.readExcluded]\n    );\n\n    if (isRbacLoading) {\n        return <Spinner centered />;\n    } else if (canReadVulnerabilityResults) {\n        if (entity && loaded && isOptOut) {\n            if (canReadExcluded) {\n                return <EmptyStateExcludedSystem buttonAction={() => optOutSystemHandler(entity.display_name, false)} />;\n            } else {\n                return <NotAuthorized title={intl.formatMessage(messages.notAuthorizedNoAccessForSystem)} />;\n            }\n        } else if (entity) {\n            return <ConnectedSystemCves\n                entity={{ id: entity?.id, display_name: entity?.display_name }}\n                showHeaderLabel\n                setPageTitle\n                canExport={canExport}\n                canEditPairStatus={canEditPairStatus}\n            />;\n        } else {\n            return loaded ? null : <Spinner centered />;\n        }\n    } else {\n        return <NotAuthorized serviceName={SERVICE_NAME} />;\n    }\n};\n\nSystemDetails.propTypes = {\n    optOutSystemHandler: propTypes.func\n};\n\nexport default SystemDetails;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { ScalprumComponent } from '@scalprum/react-core';\nimport { useHistory } from 'react-router-dom';\nimport { useStore } from 'react-redux';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport InventoryLoadError from './InventoryLoadError';\nimport classNames from 'classnames';\nvar BaseDetailWrapper = function (props) {\n    var history = useHistory();\n    var store = useStore();\n    var Cmp = props.component;\n    return (_jsx(Cmp, __assign({ className: classNames(props.className, 'inventory') }, { children: _jsx(Suspense, __assign({ fallback: props.fallback }, { children: _jsx(ScalprumComponent, __assign({ history: history, store: store, appName: \"inventory\", module: \"./DetailWrapper\", scope: \"inventory\", ErrorComponent: _jsx(InventoryLoadError, __assign({ component: \"InventoryDetailHead\", history: history, store: store }, props)), ref: props.innerRef }, props)) })) })));\n};\nBaseDetailWrapper.propTypes = {\n    fallback: PropTypes.node,\n    innerRef: PropTypes.object,\n    component: PropTypes.string,\n    className: PropTypes.string,\n};\nvar DetailWrapper = React.forwardRef(function (props, ref) { return _jsx(BaseDetailWrapper, __assign({ innerRef: ref }, props)); });\nDetailWrapper.propTypes = {\n    fallback: PropTypes.node,\n    component: PropTypes.string,\n    className: PropTypes.string,\n};\nDetailWrapper.defaultProps = {\n    fallback: (_jsx(Bullseye, __assign({ className: \"pf-u-p-lg\" }, { children: _jsx(Spinner, { size: \"xl\" }) }))),\n    component: 'section',\n};\nexport default DetailWrapper;\n//# sourceMappingURL=DetailWrapper.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { ScalprumComponent } from '@scalprum/react-core';\nimport { useHistory } from 'react-router-dom';\nimport { useStore } from 'react-redux';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport InventoryLoadError from './InventoryLoadError';\nimport classNames from 'classnames';\nvar BaseInventoryDetailHead = function (props) {\n    var history = useHistory();\n    var store = useStore();\n    var Cmp = props.component;\n    return (_jsx(Cmp, __assign({ className: classNames(props.className, 'inventory') }, { children: _jsx(Suspense, __assign({ fallback: props.fallback }, { children: _jsx(ScalprumComponent, __assign({ history: history, store: store, appName: \"inventory\", module: \"./InventoryDetailHead\", scope: \"inventory\", ErrorComponent: _jsx(InventoryLoadError, __assign({ component: \"InventoryDetailHead\", history: history, store: store }, props)), ref: props.innerRef }, props)) })) })));\n};\nBaseInventoryDetailHead.propTypes = {\n    fallback: PropTypes.node,\n    innerRef: PropTypes.object,\n    component: PropTypes.string,\n    className: PropTypes.string,\n};\nvar InventoryDetailHead = React.forwardRef(function (props, ref) { return _jsx(BaseInventoryDetailHead, __assign({ innerProps: ref }, props)); });\nInventoryDetailHead.propTypes = {\n    fallback: PropTypes.node,\n    component: PropTypes.string,\n    className: PropTypes.string,\n};\nInventoryDetailHead.defaultProps = {\n    fallback: (_jsx(Bullseye, __assign({ className: \"pf-u-p-lg\" }, { children: _jsx(Spinner, { size: \"xl\" }) }))),\n    component: 'section',\n};\nexport default InventoryDetailHead;\n//# sourceMappingURL=InventoryDetailHead.js.map","import { FETCH_SYSTEM_DETAILS } from '../ActionTypes';\n\nexport const initialState = {\n    loaded: false\n};\n\nexport const systemDetailsPageStore = (\n    INVENTORY_ACTION_TYPES\n) => (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_SYSTEM_DETAILS + '_FULFILLED':\n            return {\n                ...state,\n                ...action.payload.data\n            };\n        case INVENTORY_ACTION_TYPES.LOAD_ENTITY_FULFILLED:\n            return {\n                ...state,\n                loaded: true\n            };\n        case INVENTORY_ACTION_TYPES.LOAD_ENTITY_REJECTED:\n            return {\n                ...state,\n                loaded: true\n            };\n        default:\n            return state;\n    }\n};\n","import { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { addNotification, clearNotifications } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouteMatch } from 'react-router-dom';\nimport { fetchSystemDetails, optOutSystemsAction } from '../../../Store/Actions/Actions';\nimport SystemDetails from './SystemDetails';\nimport ReducerRegistry from '../../../Utilities/ReducerRegistry';\nimport Header from '../../PresentationalComponents/Header/Header';\nimport { useIntl } from 'react-intl';\nimport {\n    NotAuthorizedNotification,\n    PATHS,\n    PERMISSIONS,\n    ReadOnlyNotification\n} from '../../../Helpers/constants';\nimport messages from '../../../Messages';\n\nimport { DetailWrapper, InventoryDetailHead } from '@redhat-cloud-services/frontend-components/Inventory';\nimport { useRbac } from '../../../Helpers/Hooks';\nimport { systemDetailsPageStore } from '../../../Store/Reducers/SystemDetailsPageStore';\n\nconst InventoryDetail = () => {\n    const dispatch = useDispatch();\n    const match = useRouteMatch();\n    const intl = useIntl();\n\n    const { entity, loaded, opt_out: isOptOut } = useSelector(state => state.entityDetails) ?? {};\n    const errors = useSelector(({ SystemCvesStore }) => SystemCvesStore.cveList.payload.errors);\n\n    const [[canSetExcludedIncluded]] = useRbac([PERMISSIONS.setExcludedIncluded]);\n\n    const inventoryId = match.params.inventoryId;\n\n    useEffect(() => {\n        dispatch(fetchSystemDetails(inventoryId));\n    }, [dispatch, inventoryId]);\n\n    useEffect(() => {\n        return () => {\n            dispatch(clearNotifications());\n        };\n    }, [dispatch]);\n\n    const notifications = systemName => ({\n        exclude: {\n            success: {\n                variant: 'success',\n                title: intl.formatMessage(messages.notificationExcludeSuccess, { count: 1, systemName })\n            },\n            failure: {\n                variant: 'danger',\n                autoDismiss: false,\n                title: intl.formatMessage(messages.notificationExcludeFailureTitle, { count: 1, systemName }),\n                description: intl.formatMessage(messages.notificationDetailExcludeFailureBody, { count: 1 })\n            }\n        },\n        include: {\n            success: {\n                variant: 'success',\n                title: intl.formatMessage(messages.notificationIncludeSuccessTitle, { count: 1, systemName }),\n                description: intl.formatMessage(messages.notificationIncludeSuccessBody, { count: 1 })\n            },\n            failure: {\n                variant: 'danger',\n                autoDismiss: false,\n                title: intl.formatMessage(messages.notificationIncludeFailureTitle, { count: 1, systemName }),\n                description: intl.formatMessage(messages.notificationDetailIncludeFailureBody, { count: 1 })\n            }\n        }\n    });\n\n    const handleOptOutSystem = (systemName, toExclude) => {\n        dispatch(optOutSystemsAction([inventoryId], toExclude)).then(() => {\n            dispatch(fetchSystemDetails(inventoryId));\n            dispatch(addNotification(toExclude\n                ? notifications(systemName).exclude.success\n                : notifications(systemName).include.success));\n        }).catch(error => {\n            dispatch(addNotification(\n                error.status === '503' ? ReadOnlyNotification :\n                    error.status === '403' ? NotAuthorizedNotification :\n                        toExclude\n                            ? notifications(systemName).exclude.failure\n                            : notifications(systemName).include.failure));\n        });\n    };\n\n    return (\n        <DetailWrapper\n            inventoryId={inventoryId}\n            onLoad={({ mergeWithEntities, mergeWithDetail, INVENTORY_ACTION_TYPES }) => {\n                ReducerRegistry.register({\n                    ...mergeWithEntities(),\n                    ...mergeWithDetail(systemDetailsPageStore(\n                        INVENTORY_ACTION_TYPES\n                    ))\n                });\n            }}\n        >\n            <section className=\"inventory\">\n                <Header\n                    title=\"\"\n                    breadcrumbs={[\n                        {\n                            title: PATHS.systemsPage.title,\n                            to: PATHS.systemsPage.to,\n                            loaded: true\n                        },\n                        {\n                            title: entity?.display_name || intl.formatMessage(messages.invalidSystem),\n                            isActive: true,\n                            loaded\n                        }\n                    ]}\n                >\n                    {!errors && (\n                        <InventoryDetailHead\n                            hideBack\n                            actions={\n                                entity && canSetExcludedIncluded && [\n                                    isOptOut\n                                        ? {\n                                            title: intl.formatMessage(messages.inventoryKebabOptionsResume),\n                                            onClick: () => handleOptOutSystem(entity?.display_name, false)\n                                        }\n                                        : {\n                                            title: intl.formatMessage(messages.inventoryKebabOptionsExclude),\n                                            onClick: () => handleOptOutSystem(entity?.display_name, true)\n                                        }\n                                ]\n                            }\n                        />\n                    )}\n                </Header>\n            </section>\n            <Main>\n                <SystemDetails optOutSystemHandler={handleOptOutSystem} />\n            </Main>\n        </DetailWrapper>\n    );\n};\n\nexport default InventoryDetail;\n"],"names":["_a","component","props","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","__rest","useEffect","console","error","concat","children","SystemDetails","optOutSystemHandler","useSelector","state","entityDetails","entity","loaded","isOptOut","opt_out","useRbac","PERMISSIONS","canExport","canReadVulnerabilityResults","canEditPairStatus","canReadExcluded","Spinner","centered","buttonAction","display_name","title","intl","messages","id","showHeaderLabel","setPageTitle","serviceName","SERVICE_NAME","propTypes","__assign","assign","n","arguments","apply","this","BaseDetailWrapper","history","store","Cmp","className","Suspense","fallback","ScalprumComponent","appName","module","scope","ErrorComponent","InventoryLoadError","ref","innerRef","DetailWrapper","defaultProps","Bullseye","size","BaseInventoryDetailHead","InventoryDetailHead","innerProps","initialState","dispatch","useDispatch","match","useRouteMatch","useIntl","errors","SystemCvesStore","cveList","payload","canSetExcludedIncluded","inventoryId","params","fetchSystemDetails","clearNotifications","notifications","systemName","exclude","success","variant","formatMessage","count","failure","autoDismiss","description","include","handleOptOutSystem","toExclude","optOutSystemsAction","then","addNotification","status","ReadOnlyNotification","NotAuthorizedNotification","onLoad","mergeWithEntities","mergeWithDetail","INVENTORY_ACTION_TYPES","ReducerRegistry","action","type","FETCH_SYSTEM_DETAILS","data","LOAD_ENTITY_FULFILLED","LOAD_ENTITY_REJECTED","systemDetailsPageStore","Header","breadcrumbs","PATHS","to","isActive","hideBack","actions","onClick","Main"],"sourceRoot":""}