{"version":3,"file":"js/Systems.1649853682805.5ad11331fbf94b7741bc.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-table/dist/esm/components/Table/TableTypes.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/ErrorState/DefaultErrorMessage.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/ErrorState/ErrorState.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/InvalidObject/icon-404.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/InvalidObject/InvalidObject.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/InventoryLoadError.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/InventoryTable.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Unavailable/Unavailable.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/OsVersionFilter.js","webpack:///./src/Components/PresentationalComponents/Kebab/KebabItems.js","webpack:///./src/Components/SmartComponents/Reports/Common/CVElabels.js","webpack:///./src/Components/SmartComponents/Reports/Common/firstPagePDF.js","webpack:///./src/Components/SmartComponents/Reports/Common/tablePage.js","webpack:///./src/Components/SmartComponents/Reports/DownloadSystemsReport.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/ExcludedFilter.js","webpack:///./src/Components/SmartComponents/SystemsPage/SystemsTableToolbar.js","webpack:///./src/Components/SmartComponents/SystemsPage/SystemsPage.js","webpack:///./src/Store/Reducers/InventoryEntitiesReducer.js"],"sourcesContent":["export var TableGridBreakpoint;\n(function (TableGridBreakpoint) {\n    TableGridBreakpoint[\"none\"] = \"\";\n    TableGridBreakpoint[\"grid\"] = \"grid\";\n    TableGridBreakpoint[\"gridMd\"] = \"grid-md\";\n    TableGridBreakpoint[\"gridLg\"] = \"grid-lg\";\n    TableGridBreakpoint[\"gridXl\"] = \"grid-xl\";\n    TableGridBreakpoint[\"grid2xl\"] = \"grid-2xl\";\n})(TableGridBreakpoint || (TableGridBreakpoint = {}));\nexport var TableVariant;\n(function (TableVariant) {\n    TableVariant[\"compact\"] = \"compact\";\n})(TableVariant || (TableVariant = {}));\n//# sourceMappingURL=TableTypes.js.map","import React from 'react';\n\nvar DefaultErrorMessage = function DefaultErrorMessage() {\n  var redirectLink = 'https://access.redhat.com/support';\n  var statusLink = 'https://status.redhat.com';\n  return /*#__PURE__*/React.createElement(React.Fragment, null, \"If the problem persists, contact \", /*#__PURE__*/React.createElement(\"a\", {\n    href: redirectLink\n  }, \"Red Hat Support\"), \" or check our \", /*#__PURE__*/React.createElement(\"a\", {\n    href: statusLink\n  }, \" status page\"), \" for known outages.\");\n};\n\nexport default DefaultErrorMessage;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport { Stack } from \"@patternfly/react-core/dist/esm/layouts/Stack/Stack.js\";\nimport { StackItem } from \"@patternfly/react-core/dist/esm/layouts/Stack/StackItem.js\";\nimport { ExclamationCircleIcon } from '@patternfly/react-icons/';\nimport DefaultErrorMessage from './DefaultErrorMessage';\nimport propTypes from 'prop-types';\nimport { Title } from \"@patternfly/react-core/dist/esm/components/Title/Title.js\";\nimport { EmptyState } from \"@patternfly/react-core/dist/esm/components/EmptyState/EmptyState.js\";\nimport { EmptyStateVariant } from \"@patternfly/react-core/dist/esm/components/EmptyState/EmptyState.js\";\nimport { EmptyStateIcon } from \"@patternfly/react-core/dist/esm/components/EmptyState/EmptyStateIcon.js\";\nimport { EmptyStateBody } from \"@patternfly/react-core/dist/esm/components/EmptyState/EmptyStateBody.js\";\nimport { Button } from \"@patternfly/react-core/dist/esm/components/Button/Button.js\";\nimport \"../../ErrorState/./error-state.css\";\n\nvar ErrorState = function ErrorState(_ref) {\n  var errorTitle = _ref.errorTitle,\n      errorDescription = _ref.errorDescription,\n      props = _objectWithoutProperties(_ref, [\"errorTitle\", \"errorDescription\"]);\n\n  return /*#__PURE__*/React.createElement(EmptyState, _extends({\n    variant: EmptyStateVariant.large\n  }, props, {\n    className: \"ins-c-error-state\"\n  }), /*#__PURE__*/React.createElement(EmptyStateIcon, {\n    icon: ExclamationCircleIcon\n  }), /*#__PURE__*/React.createElement(Title, {\n    headingLevel: \"h4\",\n    size: \"lg\"\n  }, errorTitle), /*#__PURE__*/React.createElement(EmptyStateBody, null, /*#__PURE__*/React.createElement(Stack, null, !errorDescription && /*#__PURE__*/React.createElement(StackItem, null, \"There was a problem processing the request. Please try again.\"), /*#__PURE__*/React.createElement(StackItem, null, errorDescription || /*#__PURE__*/React.createElement(DefaultErrorMessage, null)))), document.referrer ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: function onClick() {\n      return history.back();\n    }\n  }, \"Return to last page\") : /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    component: \"a\",\n    href: \".\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, \"Go to home page\"));\n};\n\nErrorState.propTypes = {\n  errorTitle: propTypes.string,\n  errorDescription: propTypes.string\n};\nErrorState.defaultProps = {\n  errorTitle: 'Something went wrong'\n};\nexport default ErrorState;","import React from 'react';\nimport \"../../InvalidObject/./icon-404.css\";\n\nvar Icon404 = function Icon404() {\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line max-len\n    React.createElement(\"svg\", {\n      className: \"Icon404\",\n      id: \"Icon404\",\n      \"data-name\": \"Layer 1\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n      viewBox: \"0 0 131 131\"\n    }, /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"mask\", {\n      id: \"mask\",\n      x: \"0\",\n      y: \"0\",\n      width: \"131\",\n      height: \"131\",\n      maskUnits: \"userSpaceOnUse\"\n    }, /*#__PURE__*/React.createElement(\"g\", {\n      transform: \"translate(-2.89 -3.07)\"\n    }, /*#__PURE__*/React.createElement(\"g\", {\n      id: \"mask-2\"\n    }, /*#__PURE__*/React.createElement(\"polygon\", {\n      id: \"path-1\",\n      className: \"cls-1\",\n      points: \"2.89 134.07 133.89 134.07 133.89 3.07 2.89 3.07 2.89 134.07\"\n    }))))), /*#__PURE__*/React.createElement(\"title\", null, \"404path-not-found\"), /*#__PURE__*/React.createElement(\"g\", {\n      className: \"cls-2\"\n    }, /*#__PURE__*/React.createElement(\"g\", {\n      id: \"Group\"\n    }, /*#__PURE__*/React.createElement(\"g\", {\n      id: \"Page-1\"\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      id: \"Fill-1\",\n      className: \"cls-3\",\n      d: \"M8,95.56a1.83,1.83,0,0,0-2,1.68c-.21,1.86-.23,3.05-.23,3.1a1.88,1.88,0,0,0,1.79,2h0a1.89,1.89,0,0,0,1.82-1.91s0-1,.2-2.67A1.91,1.91,0,0,0,8,95.56\",\n      transform: \"translate(-2.89 -3.07)\"\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      id: \"Fill-3\",\n      className: \"cls-3\",\n      d: \"M104.29,104.42a26.42,26.42,0,0,1-4.72,1.89,1.89,1.89,0,0,0-1.25,2.32,1.82,1.82,0,0,0,1.74,1.36,1.73,1.73,0,0,0,.5-.07,29.3,29.3,0,0,0,5.36-2.16,1.89,1.89,0,0,0,.8-2.52,1.78,1.78,0,0,0-2.43-.82\",\n      transform: \"translate(-2.89 -3.07)\"\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      id: \"Fill-5\",\n      className: \"cls-3\",\n      d: \"M74.84,57.4A1.88,1.88,0,0,0,76.2,58a1.9,1.9,0,0,0,1.21-.44,1.68,1.68,0,0,0,.15-2.45,19.81,19.81,0,0,1-2.85-3.9,1.88,1.88,0,0,0-2.47-.71,1.7,1.7,0,0,0-.75,2.34,23.82,23.82,0,0,0,3.35,4.58\",\n      transform: \"translate(-2.89 -3.07)\"\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      id: \"Fill-7\",\n      className: \"cls-3\",\n      d: \"M75.44,105.24a1.76,1.76,0,0,0-2.17,1.29,1.84,1.84,0,0,0,1.23,2.26A45.56,45.56,0,0,0,79.84,110a1.23,1.23,0,0,0,.27,0,1.78,1.78,0,0,0,1.74-1.56,1.82,1.82,0,0,0-1.47-2.1,40.81,40.81,0,0,1-4.94-1.09\",\n      transform: \"translate(-2.89 -3.07)\"\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      id: \"Fill-9\",\n      className: \"cls-3\",\n      d: \"M92.56,107.11a49.67,49.67,0,0,1-5,0h-.07a1.8,1.8,0,0,0-1.73,1.82,1.82,1.82,0,0,0,1.67,2c1,0,2,.07,3.07.07.78,0,1.54,0,2.29-.08a1.83,1.83,0,0,0,1.63-2,1.77,1.77,0,0,0-1.83-1.77\",\n      transform: \"translate(-2.89 -3.07)\"\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      id: \"Fill-11\",\n      className: \"cls-3\",\n      d: \"M65.38,100.76a1.62,1.62,0,0,0-2.41.32,2,2,0,0,0,.3,2.62,28.62,28.62,0,0,0,4.55,3.19,1.6,1.6,0,0,0,.78.21,1.69,1.69,0,0,0,1.52-1,2,2,0,0,0-.73-2.52,26,26,0,0,1-4-2.81\",\n      transform: \"translate(-2.89 -3.07)\"\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      id: \"Fill-13\",\n      className: \"cls-3\",\n      d: \"M109.71,70.18a2,2,0,0,0,1.1.32,2,2,0,0,0,1.53-.69,1.57,1.57,0,0,0-.42-2.35,26.14,26.14,0,0,0-5.3-2.61,2,2,0,0,0-2.45.91,1.63,1.63,0,0,0,1,2.19,23.39,23.39,0,0,1,4.51,2.23\",\n      transform: \"translate(-2.89 -3.07)\"\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      id: \"Fill-15\",\n      className: \"cls-3\",\n      d: \"M70.28,38.72a1.74,1.74,0,0,0-1.85,1.63c0,.46,0,.93,0,1.39A23,23,0,0,0,68.78,46a1.74,1.74,0,1,0,3.43-.63,18.84,18.84,0,0,1-.32-3.58c0-.39,0-.79,0-1.18a1.73,1.73,0,0,0-1.64-1.84\",\n      transform: \"translate(-2.89 -3.07)\"\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      id: \"Fill-17\",\n      className: \"cls-3\",\n      d: \"M76.35,27.53a2.08,2.08,0,0,0-2.68.25,20.42,20.42,0,0,0-3.2,4.71,1.64,1.64,0,0,0,1,2.23,2,2,0,0,0,.75.14,1.93,1.93,0,0,0,1.75-1,16.54,16.54,0,0,1,2.67-3.93,1.57,1.57,0,0,0-.29-2.38\",\n      transform: \"translate(-2.89 -3.07)\"\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      id: \"Fill-19\",\n      className: \"cls-3\",\n      d: \"M98.18,66.63l.26,0a1.74,1.74,0,0,0,.24-3.47,40.77,40.77,0,0,0-5.42-.39h0a1.74,1.74,0,0,0,0,3.48,37,37,0,0,1,4.94.36\",\n      transform: \"translate(-2.89 -3.07)\"\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      id: \"Fill-21\",\n      className: \"cls-3\",\n      d: \"M79.88,26.19a1.92,1.92,0,0,0,1-.26,25.06,25.06,0,0,1,4.62-2.13,1.71,1.71,0,0,0,1.09-2.24,1.87,1.87,0,0,0-2.37-1A30.71,30.71,0,0,0,78.89,23a1.7,1.7,0,0,0-.59,2.41,1.9,1.9,0,0,0,1.58.82\",\n      transform: \"translate(-2.89 -3.07)\"\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      id: \"Fill-23\",\n      className: \"cls-3\",\n      d: \"M86.28,65.61a1.79,1.79,0,0,0,.51.07,1.84,1.84,0,0,0,1.76-1.32,1.83,1.83,0,0,0-1.26-2.26,21.06,21.06,0,0,1-4.6-2,1.83,1.83,0,1,0-1.82,3.17,24.64,24.64,0,0,0,5.41,2.29\",\n      transform: \"translate(-2.89 -3.07)\"\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      id: \"Fill-25\",\n      className: \"cls-3\",\n      d: \"M47.85,80.53A1.7,1.7,0,0,0,47.61,83a41.72,41.72,0,0,1,3,4.06,1.84,1.84,0,0,0,2.49.52,1.71,1.71,0,0,0,.55-2.4,44.19,44.19,0,0,0-3.27-4.4,1.85,1.85,0,0,0-2.54-.23\",\n      transform: \"translate(-2.89 -3.07)\"\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      id: \"Fill-27\",\n      className: \"cls-3\",\n      d: \"M12.51,84.2A1.84,1.84,0,0,0,10,85a33.19,33.19,0,0,0-2.24,5.32A1.83,1.83,0,0,0,9,92.57a1.77,1.77,0,0,0,.56.08,1.83,1.83,0,0,0,1.74-1.26,29.21,29.21,0,0,1,2-4.72,1.81,1.81,0,0,0-.76-2.47\",\n      transform: \"translate(-2.89 -3.07)\"\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      id: \"Fill-29\",\n      className: \"cls-3\",\n      d: \"M54.77,91a1.7,1.7,0,0,0-.54,2.4,50.54,50.54,0,0,0,3.24,4.38,1.85,1.85,0,0,0,1.41.64A1.81,1.81,0,0,0,60,98.05a1.69,1.69,0,0,0,.27-2.45,47.21,47.21,0,0,1-3-4.08A1.84,1.84,0,0,0,54.77,91\",\n      transform: \"translate(-2.89 -3.07)\"\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      id: \"Fill-31\",\n      className: \"cls-3\",\n      d: \"M112.48,97.29a22.47,22.47,0,0,1-3.09,3.78,1.89,1.89,0,0,0-.09,2.56,1.64,1.64,0,0,0,1.25.58,1.67,1.67,0,0,0,1.16-.48,25.42,25.42,0,0,0,3.57-4.38,1.87,1.87,0,0,0-.43-2.52,1.64,1.64,0,0,0-2.37.46\",\n      transform: \"translate(-2.89 -3.07)\"\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      id: \"Fill-33\",\n      className: \"cls-3\",\n      d: \"M118.61,84a1.84,1.84,0,0,0-2,1.65,18.6,18.6,0,0,1-.93,4.74,1.74,1.74,0,0,0,1.26,2.2,2.15,2.15,0,0,0,.56.07,1.88,1.88,0,0,0,1.82-1.24,21.56,21.56,0,0,0,1.09-5.57A1.81,1.81,0,0,0,118.61,84\",\n      transform: \"translate(-2.89 -3.07)\"\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      id: \"Fill-35\",\n      className: \"cls-3\",\n      d: \"M117.66,81.1a1.88,1.88,0,0,0,.52-.08,1.85,1.85,0,0,0,1.18-2.3,21.55,21.55,0,0,0-2.43-5.45,1.73,1.73,0,0,0-2.46-.54,1.88,1.88,0,0,0-.52,2.55,17.79,17.79,0,0,1,2,4.51,1.8,1.8,0,0,0,1.7,1.31\",\n      transform: \"translate(-2.89 -3.07)\"\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      id: \"Fill-37\",\n      className: \"cls-3\",\n      d: \"M39,73.46a1.84,1.84,0,0,0-2.27,1.24A1.81,1.81,0,0,0,37.93,77a18,18,0,0,1,4.54,2,1.89,1.89,0,0,0,1,.27A1.85,1.85,0,0,0,45,78.3a1.8,1.8,0,0,0-.61-2.5A22.68,22.68,0,0,0,39,73.46\",\n      transform: \"translate(-2.89 -3.07)\"\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      id: \"Fill-39\",\n      className: \"cls-3\",\n      d: \"M18.61,75.53A20.68,20.68,0,0,0,14,79a1.81,1.81,0,0,0,0,2.53,1.7,1.7,0,0,0,1.26.55,1.72,1.72,0,0,0,1.22-.51,17,17,0,0,1,3.81-2.86A1.82,1.82,0,0,0,21,76.26a1.73,1.73,0,0,0-2.37-.73\",\n      transform: \"translate(-2.89 -3.07)\"\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      id: \"Fill-41\",\n      className: \"cls-3\",\n      d: \"M26.51,72.76a1.77,1.77,0,0,0,.27,3.52l.28,0A26,26,0,0,1,31.92,76a1.84,1.84,0,0,0,1.79-1.72A1.76,1.76,0,0,0,32,72.44a30.51,30.51,0,0,0-5.51.32\",\n      transform: \"translate(-2.89 -3.07)\"\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      id: \"Fill-43\",\n      className: \"cls-3\",\n      d: \"M92.47,22.34l.27,0q1.33-.16,2.76-.27a1.83,1.83,0,0,0,1.78-1.92,1.87,1.87,0,0,0-2.07-1.64c-1,.07-2,.17-3,.29a1.83,1.83,0,0,0-1.65,2,1.89,1.89,0,0,0,1.91,1.54\",\n      transform: \"translate(-2.89 -3.07)\"\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      id: \"Fill-45\",\n      className: \"cls-3\",\n      d: \"M133,66.72H118.94V44.44h9.27a.89.89,0,1,0,0-1.78h-9.27V36.71a.9.9,0,0,0-1.8,0v5.95H94.41V37.38a.9.9,0,0,0-1.79,0v5.28H77a.89.89,0,0,0,0,1.78H92.62v13a.9.9,0,1,0,1.79,0v-13h22.73V67.68a.89.89,0,0,0,.9.89.86.86,0,0,0,.36-.07H133a.89.89,0,1,0,0-1.78\",\n      transform: \"translate(-2.89 -3.07)\"\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      id: \"Fill-47\",\n      className: \"cls-3\",\n      d: \"M128.16,92.65h-4.92a1,1,0,0,0,0,1.93h4.92a1,1,0,0,0,0-1.93\",\n      transform: \"translate(-2.89 -3.07)\"\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      id: \"Fill-49\",\n      className: \"cls-3\",\n      d: \"M109.87,116.68H93.2v-1.27a.9.9,0,1,0-1.8,0v1.27H69.05v-5.55a.9.9,0,1,0-1.8,0v5.55H44.82V93.89h4.27a.9.9,0,0,0,0-1.8H44.82V83.92a.9.9,0,1,0-1.79,0v8.17H20.3V84.37a.9.9,0,1,0-1.8,0v7.72H13.42a.9.9,0,1,0,0,1.8H18.5v17.39a.9.9,0,0,0,1.8,0V93.89H43v22.79H26.28a.9.9,0,1,0,0,1.8H43v9.9a.9.9,0,1,0,1.79,0v-9.9H67.25v14.69a.9.9,0,1,0,1.8,0V118.48H91.4v10.2a.9.9,0,1,0,1.8,0v-10.2h16.67a.9.9,0,0,0,0-1.8\",\n      transform: \"translate(-2.89 -3.07)\"\n    }), /*#__PURE__*/React.createElement(\"g\", {\n      className: \"cls-4\"\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      id: \"Fill-51\",\n      className: \"cls-3\",\n      d: \"M20.55,67.5H43.31V45H20.55Zm-1.79,3a.9.9,0,1,0,1.79,0V69.3H43.31v2.1a.9.9,0,0,0,1.8,0V69.3H67.56V92.38H63.3a.9.9,0,1,0,0,1.79h4.26v3.3a.9.9,0,1,0,1.8,0v-3.3h23v9.14a.9.9,0,0,0,1.8,0V94.17H111.8a.9.9,0,1,0,0-1.79H94.21V71a.9.9,0,0,0-1.8,0V92.38h-23V69.3h12.8a.9.9,0,0,0,0-1.8H69.36v-10a.9.9,0,0,0-1.8,0v10H45.11V45h18a.9.9,0,1,0,0-1.8h-18V20.46H67.56V26a.9.9,0,1,0,1.8,0V20.46h6.06a.9.9,0,1,0,0-1.8H69.36V4a.9.9,0,0,0-1.8,0V18.66H45.11v-10a.9.9,0,1,0-1.8,0v10H26.24a.9.9,0,0,0,0,1.8H43.31V43.23H20.55V26.6a.9.9,0,1,0-1.79,0V43.23H8.88a.9.9,0,0,0,0,1.8h9.88V67.5h-15a.9.9,0,1,0,0,1.8h15Z\",\n      transform: \"translate(-2.89 -3.07)\"\n    })), /*#__PURE__*/React.createElement(\"g\", {\n      className: \"cls-4\"\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      id: \"Fill-53\",\n      className: \"cls-3\",\n      d: \"M117.51,104.21a.94.94,0,0,0-1,.92V111a1,1,0,0,0,1.93,0v-5.87a1,1,0,0,0-1-.92\",\n      transform: \"translate(-2.89 -3.07)\"\n    })), /*#__PURE__*/React.createElement(\"g\", {\n      className: \"cls-4\"\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      id: \"Fill-54\",\n      className: \"cls-3\",\n      d: \"M106.16,7.75a13.31,13.31,0,0,1,3.35-.41,6.07,6.07,0,0,1,4.09,1.23A4.42,4.42,0,0,1,115,12.09a5.92,5.92,0,0,1-.77,3.12,20.1,20.1,0,0,1-3.72,3.86,11.51,11.51,0,0,0-2.92,3.55,10.22,10.22,0,0,0-.78,4.29v1.21h2.8v-.74a7,7,0,0,1,.71-3.39,13.86,13.86,0,0,1,2.9-3.19,30,30,0,0,0,3.56-3.55,8.29,8.29,0,0,0,1.25-2.34,8.66,8.66,0,0,0,.43-2.87,7.61,7.61,0,0,0-2.3-5.91A9.3,9.3,0,0,0,109.72,4a17.8,17.8,0,0,0-8.58,2.21l1.28,3a17.6,17.6,0,0,1,3.74-1.51\",\n      transform: \"translate(-2.89 -3.07)\"\n    })), /*#__PURE__*/React.createElement(\"g\", {\n      className: \"cls-4\"\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      id: \"Fill-55\",\n      className: \"cls-3\",\n      d: \"M108.35,31c-1.59,0-2.39,1-2.39,2.9a3,3,0,0,0,.67,2.2,2.36,2.36,0,0,0,1.72.68,2.21,2.21,0,0,0,1.78-.76,3.16,3.16,0,0,0,.64-2.12,3.27,3.27,0,0,0-.63-2.16,2.22,2.22,0,0,0-1.79-.74\",\n      transform: \"translate(-2.89 -3.07)\"\n    }))))))\n  );\n};\n\nexport default Icon404;","import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport Icon404 from './icon-404';\nimport { Title } from \"@patternfly/react-core/dist/esm/components/Title/Title.js\";\nimport { Button } from \"@patternfly/react-core/dist/esm/components/Button/Button.js\";\nimport \"../../InvalidObject/./invalidObject.css\"; // Don't use chrome here because the 404 page on landing does not use chrome\n\nvar isBeta = function isBeta() {\n  return window.location.pathname.split('/')[1] === 'beta' ? '/beta' : '';\n};\n\nvar InvalidObject = function InvalidObject(_ref) {\n  var props = _extends({}, _ref);\n\n  return /*#__PURE__*/React.createElement(\"section\", _extends({}, props, {\n    className: \"pf-l-page__main-section pf-c-page__main-section ins-c-component_invalid-componet\"\n  }), /*#__PURE__*/React.createElement(Title, {\n    headingLevel: \"h1\",\n    size: \"3xl\"\n  }, \"We lost that page\"), /*#__PURE__*/React.createElement(Icon404, null), /*#__PURE__*/React.createElement(Title, {\n    headingLevel: \"h1\",\n    size: \"xl\",\n    className: \"ins-c-text__sorry\"\n  }, \"Let's find you a new one. Try a new search or return home.\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"link\",\n    component: \"a\",\n    href: \"\".concat(window.location.origin).concat(isBeta())\n  }, \"Return to homepage\"));\n};\n\nexport default InvalidObject;","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nvar InventoryLoadError = function InventoryLoadError(_ref) {\n  var component = _ref.component,\n      props = _objectWithoutProperties(_ref, [\"component\"]);\n\n  useEffect(function () {\n    console.error(\"Unable to load iventory component. Failed to load \".concat(component, \".\"), props);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"h1\", null, \"Unable to load inventory component\"), /*#__PURE__*/React.createElement(\"h2\", null, \"Failed to load \", component), /*#__PURE__*/React.createElement(\"code\", null, \"More info can be found in browser console output.\"));\n};\n\nInventoryLoadError.propTypes = {\n  component: PropTypes.string\n};\nexport default InventoryLoadError;","import _extends from \"@babel/runtime/helpers/extends\";\nimport React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { ScalprumComponent } from '@scalprum/react-core';\nimport { useHistory } from 'react-router-dom';\nimport { useStore } from 'react-redux';\nimport { Bullseye } from \"@patternfly/react-core/dist/esm/layouts/Bullseye/Bullseye.js\";\nimport { Spinner } from \"@patternfly/react-core/dist/esm/components/Spinner/Spinner.js\";\nimport InventoryLoadError from './InventoryLoadError';\n\nvar BaseInvTable = function BaseInvTable(props) {\n  var history = useHistory();\n  var store = useStore();\n  return /*#__PURE__*/React.createElement(Suspense, {\n    fallback: props.fallback\n  }, /*#__PURE__*/React.createElement(ScalprumComponent, _extends({\n    history: history,\n    store: store,\n    appName: \"inventory\",\n    module: \"./InventoryTable\",\n    scope: \"inventory\",\n    ErrorComponent: /*#__PURE__*/React.createElement(InventoryLoadError, _extends({\n      component: \"InventoryDetailHead\",\n      history: history,\n      store: store\n    }, props)),\n    ref: props.innerRef\n  }, props)));\n};\n\nBaseInvTable.propTypes = {\n  fallback: PropTypes.node,\n  innerRef: PropTypes.object\n};\n/**\n * Inventory sub component.\n *\n * This component shows systems table connected to redux.\n */\n\nvar InvTable = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(BaseInvTable, _extends({\n    innerRef: ref\n  }, props));\n});\nInvTable.propTypes = {\n  /** React Suspense fallback component. <a href=\"https://reactjs.org/docs/code-splitting.html#reactlazy\" target=\"_blank\">Learn more</a>. */\n  fallback: PropTypes.node\n};\nInvTable.defaultProps = {\n  fallback: /*#__PURE__*/React.createElement(Bullseye, {\n    className: \"pf-u-p-lg\"\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    size: \"xl\"\n  }))\n};\nexport default InvTable;","import React from 'react';\nimport { EmptyState } from \"@patternfly/react-core/dist/esm/components/EmptyState/EmptyState.js\";\nimport { EmptyStateIcon } from \"@patternfly/react-core/dist/esm/components/EmptyState/EmptyStateIcon.js\";\nimport { EmptyStateVariant } from \"@patternfly/react-core/dist/esm/components/EmptyState/EmptyState.js\";\nimport { EmptyStateBody } from \"@patternfly/react-core/dist/esm/components/EmptyState/EmptyStateBody.js\";\nimport { Title } from \"@patternfly/react-core/dist/esm/components/Title/Title.js\";\nimport ExclamationCircleIcon from \"@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon\";\nimport \"../../Unavailable/./Unavailable.css\";\n\nvar Unavailable = function Unavailable() {\n  return /*#__PURE__*/React.createElement(EmptyState, {\n    variant: EmptyStateVariant.large,\n    className: \"ins-c-empty-state__unavailable pf-m-redhat-font\"\n  }, /*#__PURE__*/React.createElement(EmptyStateIcon, {\n    icon: ExclamationCircleIcon\n  }), /*#__PURE__*/React.createElement(Title, {\n    headingLevel: \"h5\",\n    size: \"lg\"\n  }, \"This page is temporarily unavailable\"), /*#__PURE__*/React.createElement(EmptyStateBody, null, \"Try refreshing the page. If the problem persists, contact your organization administrator or visit our\", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://status.redhat.com/\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, \" status page\"), \" for known outages.\"));\n};\n\nexport default Unavailable;","import React from 'react';\nimport { RHEL_VERSIONS } from '../../../../Helpers/constants';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { Select, SelectOption } from '@patternfly/react-core';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\n\nconst useOsVersionFilter = (filterValue, apply) => {\n    const [isOpen, setOpen] = React.useState(false);\n    const [numOptions, setNumOptions] = React.useState(10);\n    const versionFromNewestToOldest = RHEL_VERSIONS.slice().reverse();\n\n    let selectedVersionsArray = filterValue ? filterValue.split(',') : [];\n\n    const onOptionSelect = (_, changedLabel) => {\n        const changedValue = RHEL_VERSIONS.find(version => version.label === changedLabel).value;\n        let newValue;\n\n        if (selectedVersionsArray.includes(changedValue)) {\n            newValue = selectedVersionsArray;\n            newValue.splice(newValue.indexOf(changedValue), 1);\n        }\n        else {\n            newValue = [...selectedVersionsArray, changedValue];\n        }\n\n        apply({ rhel_version: newValue.join(','), page: 1 });\n    };\n\n    const onToggle = (isOpen) => {\n        setOpen(isOpen);\n    };\n\n    const onViewMoreClick = () => {\n        setNumOptions(versionFromNewestToOldest.length);\n    };\n\n    return {\n        type: conditionalFilterType.custom,\n        label: intl.formatMessage(messages.osFilterLabel),\n        filterValues: {\n            children: (\n                <Select\n                    variant=\"checkbox\"\n                    onToggle={onToggle}\n                    onSelect={onOptionSelect}\n                    selections={selectedVersionsArray.map(item => RHEL_VERSIONS.find(version => version.value === item).label)}\n                    isOpen={isOpen}\n                    aria-label=\"os-version-filter\"\n                    placeholderText={intl.formatMessage(messages.osFilterPlaceholder)}\n                    {...(numOptions < versionFromNewestToOldest.length\n                        && { loadingVariant: { text: intl.formatMessage(messages.viewMore), onClick: onViewMoreClick } })}\n                    style={{ maxHeight: '420px', overflow: 'auto' }}\n                >\n                    {versionFromNewestToOldest.slice(0, numOptions).map((option, index) => (\n                        <SelectOption\n                            isDisabled={option.disabled}\n                            key={index}\n                            value={option.label}\n                            description={option?.description}\n                        />\n                    ))}\n                </Select>\n            )\n        }\n    };\n};\n\nexport default useOsVersionFilter;\n","import { DropdownItem } from '@patternfly/react-core';\nimport React from 'react';\nimport messages from '../../../Messages';\nimport { FormattedMessage } from 'react-intl';\n\nexport const kebabItemDownloadJSON = (downloadReport, { ...props }) => (\n    <DropdownItem key=\"json\" component=\"button\" onClick={() => downloadReport('json')} {...props}>\n        <FormattedMessage {...messages.kebabExportAsJson} />\n    </DropdownItem>\n);\n\nexport const kebabItemDownloadCSV = (downloadReport, { ...props }) => (\n    <DropdownItem key=\"csv\" component=\"button\" onClick={() => downloadReport('csv')} {...props}>\n        <FormattedMessage {...messages.kebabExportAsCsv} />\n    </DropdownItem>\n);\n\nexport const kebabItemDownloadPDF = (loading, downloadReport, { ...props }) => (\n    <DropdownItem key=\"pdf\" component=\"button\" onClick={() => downloadReport(true)} {...props}>\n        {loading ? <FormattedMessage {...messages.loading} /> : <FormattedMessage {...messages.kebabExportAsPDF} />}\n    </DropdownItem>\n);\n\nexport const kebabItemEditBusinessRisk = (showBusinessRiskModal, cves, { ...props }) => (\n    <DropdownItem key=\"editBusinessRisk\" component=\"button\" onClick={() => showBusinessRiskModal(cves)} {...props}>\n        <FormattedMessage {...messages.kebabEditBusinessRisk} />\n    </DropdownItem>\n);\n\nexport const kebabItemEditStatus = (showStatusModal, cves, inventoryIds,  { ...props }) => (\n    <DropdownItem key=\"editStatus\" component=\"button\" onClick={() => showStatusModal(cves, inventoryIds)} {...props}>\n        <FormattedMessage {...messages.kebabEditStatus} />\n    </DropdownItem>\n);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { View } from '@react-pdf/renderer';\nimport { InsightsLabel } from '@redhat-cloud-services/frontend-components-pdf-generator';\n\nimport styles from './styles';\nimport messages from '../../../../Messages';\n\nconst CVElabels = ({ intl, hasRule, hasExploit, isSmall = false }) => (\n    <View style={styles.labelsWrapper}>\n        {hasExploit &&\n            <View style={{ ...styles.label, width: isSmall ? 62 : 70 }}>\n                <InsightsLabel\n                    icon={false}\n                    width={isSmall ? 62 : 75}\n                    variant={4}\n                    label={intl.formatMessage(messages.knownExploit)}\n                    textStyle={isSmall ? { ...styles.smallText, left: -56 } : undefined}\n                    labelStyle={{\n                        border: 'solid',\n                        borderWidth: 1,\n                        borderColor: '#c9190b',\n                        height: isSmall ? 12 : 20\n                    }}\n                />\n            </View>\n        }\n        {hasRule &&\n            <View style={styles.label}>\n                <InsightsLabel\n                    icon={false}\n                    width={isSmall ? 59 : 63}\n                    label={intl.formatMessage(messages.securityRuleLabel)}\n                    textStyle={isSmall ? styles.smallText : undefined}\n                    labelStyle={{\n                        border: 'solid',\n                        borderWidth: 1,\n                        borderColor: '#bee1f4',\n                        height: isSmall ? 12 : 20\n                    }}\n                />\n            </View>\n        }\n    </View>\n);\n\nCVElabels.propTypes = {\n    hasRule: propTypes.bool,\n    hasExploit: propTypes.bool,\n    intl: propTypes.any,\n    isSmall: propTypes.bool\n};\n\nexport default CVElabels;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Paragraph } from '@redhat-cloud-services/frontend-components-pdf-generator';\nimport { Text, View } from '@react-pdf/renderer';\nimport messages from '../../../../Messages';\nimport tablePage from './tablePage';\nimport {\n    PUBLIC_DATE_OPTIONS,\n    DEFAULT_FILTER_DATA,\n    FILTERS, CVE_REPORT_FILTERS,\n    SYSTEM_REPORT_FILTERS\n} from '../../../../Helpers/constants';\nimport { intlFormatWithBold } from '../../../../Helpers/ReportsHelper';\nimport styles from './styles';\nimport CheckboxCustomFilter\n    from '../../../PresentationalComponents/Filters/CustomFilters/CheckboxCustomFilter';\n\nconst firstPagePDF = ({ data, meta, filters, intl, isReportDynamic, reportData, user, type }) => {\n    // if data isn't converted to object convert it\n    const filtersBuilder = (isReportDynamic) ? filters : filters.reduce((obj, item) => {\n        obj[item.key] = {\n            filter: item.category,\n            values: item.key === 'publish_date'\n                ? PUBLIC_DATE_OPTIONS.find(val => val.value === item.chips[0].value).timespan_label\n                : item.chips.map(({ name }) => name).join(', '),\n            isAllChosen: (type === 'cves' ? CVE_REPORT_FILTERS : SYSTEM_REPORT_FILTERS)[item.key]?.component\n                === CheckboxCustomFilter\n                ? item.chips.length === FILTERS[item.key]?.items.length\n                : null\n        };\n        return obj;\n    }, {});\n\n    let cvefilterStringSegments = [\n        { name: 'impact', msg: messages.CVEsPDFreportFiltersSeverity, lowercase: true },\n        { name: 'business_risk_id', msg: messages.CVEsPDFreportFiltersBusinessRisk, lowercase: true },\n        { name: 'status_id', msg: messages.CVEsPDFreportFiltersStatus, lowercase: true },\n        { name: 'rule_presence', msg: messages.CVEsPDFreportFiltersDefinedValue, lowercase: true },\n        { name: 'known_exploit', msg: messages.CVEsPDFreportFiltersDefinedValue, lowercase: true },\n        { name: 'rhel_version', msg: messages.CVEsPDFreportFiltersOsVersion }\n    ];\n\n    let systemsFilterStringSegments = [\n        { name: 'filter', msg: messages.systemsPDFreportFiltersSearchTerm, lowercase: true },\n        { name: 'rhel_version', msg: messages.systemsPDFreportFiltersOsVersion }\n    ];\n\n    let filterStringSegments = type === 'cves' ? cvefilterStringSegments : systemsFilterStringSegments;\n\n    // find and tag first present filter segment\n    for (let i = 0; i < filterStringSegments.length; i++) {\n        if (filtersBuilder.hasOwnProperty(filterStringSegments[i].name)) {\n            filterStringSegments[i].isFirst = true;\n            break;\n        }\n    }\n\n    // find and tag last present filter segment\n    for (let i = filterStringSegments.length - 1; i >= 0; i--) {\n        if (filtersBuilder.hasOwnProperty(filterStringSegments[i].name)) {\n            filterStringSegments[i].isLast = true;\n            break;\n        }\n    }\n\n    const generateCvesFiltersParagraph = () =>\n        <Paragraph>\n            {\n                intlFormatWithBold(messages.customReportSearchTermCvssAndPublishDate,\n                    {\n                        hasSearchTerm: filtersBuilder.hasOwnProperty('filter') ? 'yes' : 'no',\n                        searchTerm: filtersBuilder.filter && filtersBuilder.filter.values,\n                        score: (\n                            filtersBuilder.cvss_filter && filtersBuilder.cvss_filter.values\n                        ) || DEFAULT_FILTER_DATA.cvss_filter.from.toFixed(1) + ' - ' +\n                            DEFAULT_FILTER_DATA.cvss_filter.to.toFixed(1),\n                        published: (\n                            filtersBuilder.publish_date && filtersBuilder.publish_date.values\n                        ) || intlFormatWithBold(messages.customReportTimespanAnytime)\n                    }\n                )\n            }\n            {\n                filterStringSegments.map(filter => (\n                    filtersBuilder.hasOwnProperty(filter.name) && !filtersBuilder[filter.name]?.isAllChosen\n                ) && intlFormatWithBold(filter.msg,\n                    {\n                        values: filter.lowercase ?\n                            filtersBuilder[filter.name].values.toLowerCase() :\n                            filtersBuilder[filter.name].values,\n                        prefix: filter.isLast ? intl.formatMessage(messages.customReportAnd) : ';'\n                    }\n                ))\n            }\n            {filtersBuilder.tags ? '.\\n\\n' : ''}\n            {\n                filtersBuilder.tags ? intl.formatMessage(messages.tagFilterParagraph) + ' ' +\n                filtersBuilder.tags.values.map(tag => `${tag.namespace}:${tag.key}=${tag.value}`).slice(0, 10).join(', ') : ''\n            }\n            {\n                filtersBuilder.tags?.values.length > 10 && ' '\n                + intl.formatMessage(messages.tagFilterParagraphAndMore, { count: filtersBuilder.tags.values.length - 10 })\n            }\n            {'.\\n\\n'}\n        </Paragraph>;\n\n    const generateSystemsFiltersParagraph = () => {\n        const includedValues = filters.find(filter => filter.key === 'excluded')?.multiValue;\n\n        return (Object.values(filtersBuilder)?.filter(filter => filter.isAllChosen !== true)?.length > 0 ? (\n            <Paragraph>\n                {\n                    intl.formatMessage(messages.systemsPDFreportSubHeader)\n                }\n                {\n                    includedValues?.length === 1 && (includedValues[0] === 'true'\n                        ? ' ' + intl.formatMessage(messages.systemsPDFreportFiltersExcluded)\n                        : ' ' + intl.formatMessage(messages.systemsPDFreportFiltersIncluded))\n                }\n                {\n                    filterStringSegments.map(filter => (\n                        filtersBuilder.hasOwnProperty(filter.name) && !filtersBuilder[filter.name]?.isAllChosen\n                    ) && intlFormatWithBold(filter.msg,\n                        {\n                            values: filter.lowercase ?\n                                filtersBuilder[filter.name].values.toLowerCase() :\n                                filtersBuilder[filter.name].values,\n                            prefix: filter.isFirst ? '' : (filter.isLast ? intl.formatMessage(messages.customReportAnd) : ';')\n                        }\n                    ))\n                }\n                {'.\\n\\n'}\n            </Paragraph>\n        ) : null\n        );\n    };\n\n    return (\n        <Fragment key=\"first-section\">\n            {\n                isReportDynamic && (\n                    <Paragraph>\n                        {intlFormatWithBold(messages.customReportIntroductionText)}\n                    </Paragraph>\n                )\n            }\n\n            {type === 'cves' ? generateCvesFiltersParagraph() : generateSystemsFiltersParagraph()}\n\n            {type === 'cves' && (\n                <Paragraph>\n                    <Text>\n                        {intlFormatWithBold(messages.CVEsPDFreportSubHeader, {\n                            cve_count: meta.total_items.toString(),\n                            system_count: meta.system_count.toString()\n                        })}\n\n                        {(isReportDynamic && reportData.header?.includes('known_exploit') || !isReportDynamic) &&\n                            intlFormatWithBold(messages.CVEsPDFreportSubHeaderExploit, {\n                                knownExploitCount: meta.knownExploitCount.toString()\n                            })\n                        }\n                    </Text>\n                </Paragraph>\n            )}\n\n            {\n                reportData && reportData.userNotes ?\n                    (\n                        <View style={styles.userNotes}>\n                            <Paragraph style={styles.userNotesTitle}>\n                                <Text style={styles.bold}>\n                                    {intl.formatMessage(messages.customReportUserNoteLabel)}\n                                </Text>\n                            </Paragraph>\n                            <Paragraph>\n                                <Text>{reportData.userNotes}</Text>\n                            </Paragraph>\n                            <Paragraph>\n                                {user && user.identity &&\n                                    <Text style={styles.italic}>\n                                        {intl.formatMessage(messages.customReportUserNotesGenerated, {\n                                            name: `${user.identity.user.first_name} ${user.identity.user.last_name}`\n                                        })}\n                                    </Text>\n                                }\n                            </Paragraph>\n                        </View>\n                    ) : null\n            }\n\n            <View style={styles.mt16}>\n                {tablePage({ data, intl, header: reportData && reportData.header, type, isReportDynamic })}\n            </View>\n        </Fragment>\n    );\n};\n\nfirstPagePDF.defaultProps = {\n    user: undefined\n};\n\nfirstPagePDF.propTypes = {\n    intl: PropTypes.any,\n    filters: PropTypes.array,\n    data: PropTypes.object,\n    meta: PropTypes.object,\n    reportData: PropTypes.object,\n    isReportDynamic: PropTypes.bool,\n    user: PropTypes.object,\n    type: PropTypes.string\n};\n\nexport default firstPagePDF;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { View, Text, Link } from '@react-pdf/renderer';\nimport { Table } from '@redhat-cloud-services/frontend-components-pdf-generator';\nimport { processDate } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { CVES_PATH } from '../../../../Helpers/constants';\nimport messages from '../../../../Messages';\nimport styles from './styles';\nimport { formatDate } from '../../../../Helpers/MiscHelper';\nimport CVElabels from '../Common/CVElabels';\n\nconst tablePage = ({ data, page, intl, header, type, isReportDynamic = false }) => {\n    const POSSIBLE_HEADERS = [\n        {\n            name: 'publish_date',\n            header: { value: intl.formatMessage(messages.publishDate) }\n        },\n        {\n            name: 'cvss_filter',\n            header: { value: intl.formatMessage(messages.cvssBaseScore) },\n            hit: 'cvss_score'\n        },\n        {\n            name: 'impact',\n            header: { value: intl.formatMessage(messages.impact) },\n            hit: 'impact'\n        },\n        {\n            name: 'affecting',\n            header: { value: intl.formatMessage(messages.systemsExposed) },\n            hit: 'systems_affected'\n        },\n        {\n            name: 'business_risk_id',\n            header: { value: intl.formatMessage(messages.businessRisk) },\n            hit: 'business_risk'\n        },\n        {\n            name: 'status_id',\n            header: { value: intl.formatMessage(messages.status) },\n            hit: 'status'\n        }\n    ];\n    // eslint-disable-next-line react/prop-types\n    const columnBuilder = ({ value, style }) => <Text key={value} style={style}>{value}</Text>;\n    let hitColumns = ['cvss_score', 'impact', 'systems_affected', 'business_risk', 'status'];\n\n    let headerContent = [];\n\n    // if the header is undefined we use default header (all params)\n    if (header) {\n        headerContent.push({ value: intl.formatMessage(messages.cveId) });\n        hitColumns = [];\n\n        POSSIBLE_HEADERS.forEach(item => {\n            if (header.includes(item.name)) {\n                headerContent.push(item.header);\n                item.hit && hitColumns.push(item.hit);\n            }\n        });\n    }\n    else if (type === 'cves') {\n        headerContent = [\n            { value: intl.formatMessage(messages.cveId) }\n        ].concat(POSSIBLE_HEADERS.map(item => item.header));\n    }\n    else {\n        hitColumns = ['display_name', 'os', 'cve_count', 'updated'];\n\n        headerContent = [\n            { value: intl.formatMessage(messages.systemsColumnHeaderName), id: 'name' },\n            { value: intl.formatMessage(messages.systemsColumnHeaderOSFull) },\n            { value: intl.formatMessage(messages.systemsColumnHeaderCveCount) },\n            { value: intl.formatMessage(messages.systemsColumnHeaderUpdated) }\n        ];\n    }\n\n    const hasRules = (cve) => {\n        const hasRule = cve.rules && cve.rules.length > 0;\n        return isReportDynamic ? hasRule && header.includes('rule_presence') : hasRule;\n    };\n\n    const hasExploit = ({ known_exploit: knownExploit }) => (\n        isReportDynamic ? knownExploit && header.includes('known_exploit') : knownExploit\n    );\n\n    const cveRows = [\n        ...data.map(({ attributes: cve }) => {\n            const synopsisCell = (\n                <View style={[styles.bodyCell, styles.cveCell]}>\n                    <View>\n                        <Text>\n                            <Link\n                                style={styles.link}\n                                src={`${CVES_PATH}/${cve.synopsis}`}\n                            >\n                                {cve.synopsis}\n                            </Link>\n                        </Text>\n                    </View>\n                    <CVElabels hasExploit={hasExploit(cve)} hasRule={hasRules(cve)} intl={intl} isSmall />\n                </View>\n            );\n\n            const publishDateCell = (\n                (!header || header.includes('publish_date')) &&\n                <Text key={cve.public_date} style={[styles.bodyCell, styles.cveCell]}>\n                    {processDate(cve.public_date)}\n                </Text>\n            );\n\n            return [\n                synopsisCell,\n                publishDateCell,\n                ...hitColumns.map(item => columnBuilder({ value: cve[item], style: [styles.bodyCell, styles.cveCell] }))\n            ];\n        })\n    ];\n\n    const systemRows = [\n        ...data.map(({ attributes: system }) => {\n            return [\n                columnBuilder({ value: system.display_name, style: [styles.bodyCell, styles.systemNameCell] }),\n                columnBuilder({ value: system.os, style: [styles.bodyCell, styles.systemCell] }),\n                columnBuilder({\n                    value: system.opt_out\n                        ? intl.formatMessage(messages.systemsTableExcluded)\n                        : system.cve_count, style: [styles.bodyCell, styles.systemCell]\n                }),\n                columnBuilder({ value: formatDate(system.updated, true), style: [styles.bodyCell, styles.systemCell] })\n            ];\n        })\n    ];\n\n    return <Fragment key={page}>\n        <Table\n            withHeader\n            rows={[\n                headerContent.map(item => columnBuilder({\n                    ...item,\n                    style: [styles.headerCell, type === 'cves'\n                        ? styles.cveCell\n                        : item.id === 'name'\n                            ? styles.systemNameCell\n                            : styles.systemCell]\n                })),\n                ... (type === 'cves') ? cveRows : systemRows\n            ]}\n        />\n        {data.length === 0 && <Text>{intl.formatMessage(messages.customReportNoItems)}</Text>}\n    </Fragment>;\n};\n\ntablePage.propTypes = {\n    data: PropTypes.object,\n    intl: PropTypes.any,\n    page: PropTypes.number,\n    header: PropTypes.array,\n    type: PropTypes.string,\n    isReportDynamic: PropTypes.bool\n};\n\nexport default tablePage;\n","\nimport React, { useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { DownloadButton } from '@redhat-cloud-services/frontend-components-pdf-generator';\nimport { getSystems } from '../../../Helpers/APIHelper';\nimport { chunkArray } from '../../../Helpers/MiscHelper';\nimport messages from '../../../Messages';\nimport firstPagePDF from './Common/firstPagePDF';\nimport tablePage from './Common/tablePage';\nimport DownloadReport from '../../../Helpers/DownloadReport';\nimport { NotAuthorizedNotification, PDF_REPORT_PER_PAGE } from '../../../Helpers/constants';\nimport { useNotification } from '../../../Helpers/Hooks';\n\nconst DownloadSystemsReport = ({\n    filters,\n    params,\n    reportData = {},\n    buttonProps,\n    label,\n    ...props\n}) => {\n    const intl = useIntl();\n    const [loading, setLoading] = useState(false);\n    const [addNotification, clearNotifications] = useNotification();\n    const { systemsReportRestPages, systemsReportFirstPage } = PDF_REPORT_PER_PAGE;\n\n    useEffect(() => {\n        setLoading(true);\n        addNotification({ msg: intl.formatMessage(messages.notificationReportDownloadStart) });\n    }, []);\n\n    const otherPagesPDF = data => chunkArray(data, systemsReportRestPages);\n\n    const systemsFetch = async () => {\n        let data;\n        let meta;\n\n        try {\n            ({ data, meta } = await getSystems({\n                ...params,\n                ...DownloadReport.defaultParams,\n                report: 'true'\n            }));\n        }\n        catch (error) {\n            clearNotifications();\n            addNotification(error.status === '403' ? NotAuthorizedNotification : {\n                variant: 'danger',\n                autoDismiss: false,\n                msg: intl.formatMessage(messages.notificationReportDownloadFailureTitle),\n                description: intl.formatMessage(messages.notificationReportDownloadFailureBody)\n            });\n\n            setLoading(false);\n\n            return [];\n        }\n\n        const firstPage = firstPagePDF({\n            data: data.splice(0, systemsReportFirstPage),\n            meta,\n            filters,\n            intl\n        });\n\n        const otherPages = otherPagesPDF(data);\n\n        setLoading(false);\n\n        clearNotifications();\n        addNotification({ variant: 'success', msg: intl.formatMessage(messages.notificationReportDownloadSuccess) });\n\n        return [\n            firstPage,\n            ...otherPages.map((systemPage, index) =>\n                tablePage({ data: systemPage, page: index, intl, header: reportData && reportData.header })\n            )\n        ];\n    };\n\n    return (\n        <div>\n            <DownloadButton\n                {...props}\n                fallback={null}\n                label={loading ? intl.formatMessage(messages.loading) : intl.formatMessage(label)}\n                asyncFunction={systemsFetch}\n                buttonProps={{ component: 'button', ...buttonProps }}\n                reportName={intl.formatMessage(messages.systemPDFReportName)}\n                type=\"\"\n                fileName={`${DownloadReport.filename('system-list')}.pdf`}\n                allPagesHaveTitle={false}\n                size=\"A4\"\n                orientation=\"landscape\"\n            />\n        </div>\n    );\n};\n\nDownloadSystemsReport.defaultProps = {\n    label: messages.kebabExportAsPDF\n};\n\nDownloadSystemsReport.propTypes = {\n    filters: propTypes.oneOfType([\n        propTypes.array,\n        propTypes.object\n    ]),\n    params: propTypes.object,\n    reportData: propTypes.object,\n    buttonProps: propTypes.object,\n    label: propTypes.oneOfType([\n        propTypes.array,\n        propTypes.object\n    ])\n};\n\nexport default DownloadSystemsReport;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\nimport { EXCLUDED_FILTER_OPTIONS } from '../../../../Helpers/constants';\n\nconst excludedFilter = (apply, currentFilter = {}) => {\n    let { excluded: currentValue } = currentFilter;\n\n    const filterByExcluded = (values) => {\n        apply({\n            excluded: values.length > 0 ? values?.join(',') : undefined,\n            page: 1\n        });\n    };\n\n    return {\n        label: intl.formatMessage(messages.filterSystemsIncludedInAnalysis),\n        type: conditionalFilterType.checkbox,\n        urlParam: 'excluded',\n        filterValues: {\n            onChange: (event, value) => {\n                filterByExcluded(value);\n            },\n            items: EXCLUDED_FILTER_OPTIONS.map(({ label, value }) => ({ label, value })),\n            value: currentValue?.length > 0 ? currentValue?.split(',') : undefined\n        }\n    };\n};\n\nexport default excludedFilter;\n","import React, { Fragment, useState, useMemo } from 'react';\nimport propTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport { useDispatch } from 'react-redux';\nimport { dataShape } from '../../../Helpers/MiscHelper';\nimport { fetchSystems, fetchSystemsIds } from '../../../Store/Actions/Actions';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport useSearchFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/SearchFilter';\nimport { exportConfig, buildActiveFilters, removeFilters, isFilterInDefaultState } from '../../../Helpers/TableToolbarHelper';\nimport DownloadReport from '../../../Helpers/DownloadReport';\nimport DownloadSystemsReport from '../Reports/DownloadSystemsReport';\nimport { kebabItemDownloadPDF } from '../../PresentationalComponents/Kebab/KebabItems';\nimport excludedFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/ExcludedFilter';\nimport { SYSTEMS_DEFAULT_FILTERS, SYSTEMS_FILTER_PARAMS } from '../../../Helpers/constants';\nimport { useBulkSelect } from '../../../Helpers/Hooks';\nimport {\n    addNotification,\n    clearNotifications\n} from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport useOsVersionFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/OsVersionFilter';\n\nconst SystemsTableToolbar = ({\n    selectedRows,\n    selectedRowsCount,\n    selectedRowsRawData,\n    intl,\n    canExport,\n    canSetExcludedIncluded,\n    canReadExcluded,\n    parameters,\n    rawData,\n    methods\n}) => {\n    const [exportPDF, setExportPDF] = useState(false);\n    const { apply, handleSelect, doOptOut, setColumnModalOpen } = methods;\n    const dispatch = useDispatch();\n\n    const downloadReport = format => {\n        let params = { ...parameters };\n        DownloadReport.exec(\n            fetchSystems,\n            params,\n            format,\n            'system-list',\n            notification => dispatch(\n                addNotification(notification)\n            ),\n            () => dispatch(clearNotifications())\n        );\n    };\n\n    const kebabProps = useMemo(() => {\n        return {\n            selectedExcluded: selectedRowsRawData.some(({ opt_out: optOut }) => optOut === true),\n            selectedIncluded: selectedRowsRawData.some(({ opt_out: optOut }) => optOut === false)\n        };\n    }, [selectedRowsRawData]);\n\n    const kebabOptions = [\n        '',\n        ...canSetExcludedIncluded ? [{\n            label: intl.formatMessage(messages.systemKebabExcludeAnalysis, { count: selectedRowsCount }),\n            onClick: () => doOptOut(selectedRows, selectedRowsRawData?.[0].display_name, true),\n            props: { isDisabled: !selectedRowsCount || !kebabProps.selectedIncluded }\n        },\n        {\n            label: intl.formatMessage(messages.systemKebabIncludeAnalysis, { count: selectedRowsCount }),\n            onClick: () => doOptOut(selectedRows, selectedRowsRawData?.[0].display_name, false, selectedRows),\n            props: { isDisabled: !selectedRowsCount || !kebabProps.selectedExcluded }\n        }] : [],\n        {\n            label: intl.formatMessage(messages.columnManagementModalTitle),\n            onClick: () => setColumnModalOpen(true)\n        }\n    ];\n\n    const bulkSelectProps = useBulkSelect({\n        rawData,\n        selectedRows,\n        selectedRowsCount,\n        handleSelect,\n        fetchResource: ops => fetchSystemsIds({ ...parameters, ...ops })\n    });\n\n    let filterConfigItems = [\n        useSearchFilter(\n            'filter',\n            messages.systemsSearchName,\n            messages.searchFilterByName,\n            parameters.filter,\n            apply\n        ),\n        ...canReadExcluded ? [excludedFilter(apply, parameters)] : [],\n        useOsVersionFilter(\n            parameters.rhel_version,\n            apply\n        )\n    ];\n\n    return <Fragment>\n        <PrimaryToolbar\n            className=\"vuln-systems-primary-toolbar\"\n            bulkSelect={bulkSelectProps}\n            actionsConfig={{\n                actions: kebabOptions,\n                dropdownProps: { ouiaId: 'toolbar-actions' }\n            }}\n            filterConfig={{\n                items: filterConfigItems\n            }}\n            activeFiltersConfig={{\n                filters: buildActiveFilters(parameters),\n                onDelete: (_, chips, reset) => removeFilters(chips, methods.apply, reset, SYSTEMS_DEFAULT_FILTERS),\n                deleteTitle: intl.formatMessage(messages.resetFilters),\n                showDeleteButton: !isFilterInDefaultState(\n                    parameters,\n                    canReadExcluded ? SYSTEMS_DEFAULT_FILTERS : {},\n                    SYSTEMS_FILTER_PARAMS)\n            }}\n            exportConfig={canExport ? {\n                isDisabled: rawData.meta.totalItems === 0,\n                extraItems: [kebabItemDownloadPDF(exportPDF, setExportPDF)],\n                ouiaId: 'export',\n                ...exportConfig({ downloadReport })\n            } : null}\n        />\n\n        {exportPDF &&\n            <DownloadSystemsReport\n                showButton={false}\n                params={parameters}\n                filters={buildActiveFilters(parameters)}\n                onSuccess={() => setExportPDF(false)}\n            />\n        }\n\n    </Fragment>;\n\n};\n\nSystemsTableToolbar.propTypes = {\n    rawData: dataShape,\n    canExport: propTypes.bool,\n    canSetExcludedIncluded: propTypes.bool,\n    canReadExcluded: propTypes.bool,\n    parameters: propTypes.object,\n    selectedRows: propTypes.array,\n    selectedRowsCount: propTypes.number,\n    selectedRowsRawData: propTypes.array,\n    methods: propTypes.shape({\n        doOptOut: propTypes.func,\n        apply: propTypes.func,\n        handleSelect: propTypes.func,\n        setColumnModalOpen: propTypes.func\n    }),\n    intl: propTypes.any\n};\n\nexport default injectIntl(SystemsTableToolbar);\n","import React, { useEffect, useState, Fragment } from 'react';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport SystemsTableToolbar from './SystemsTableToolbar';\nimport { PERMISSIONS, SYSTEMS_ALLOWED_PARAMS } from '../../../Helpers/constants';\nimport ReducerRegistry from '../../../Utilities/ReducerRegistry';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { systemTableRowActions } from '../../../Helpers/CVEHelper';\nimport Header from '../../PresentationalComponents/Header/Header';\nimport { inventoryEntitiesReducer } from '../../../Store/Reducers/InventoryEntitiesReducer';\nimport {\n    changeSystemsParams,\n    clearSystemStore,\n    clearInventoryStore,\n    selectRows,\n    changeColumnsSystemList\n} from '../../../Store/Actions/Actions';\nimport { useUrlParams } from '../../../Helpers/MiscHelper';\nimport { InventoryTable } from '@redhat-cloud-services/frontend-components/Inventory';\nimport ErrorHandler from '../../PresentationalComponents/ErrorHandler/ErrorHandler';\nimport { TableVariant } from '@patternfly/react-table';\nimport { useGetEntities, useOptOutSystems, useRbac } from '../../../Helpers/Hooks';\nimport * as APIHelper from '../../../Helpers/APIHelper';\nimport { EmptyStateNoSystems } from '../../PresentationalComponents/EmptyStates/EmptyStates';\nimport ColumnManagementModal from '../Modals/ColumnManagementModal';\nimport { clearNotifications } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport NoAccessPage from '../../PresentationalComponents/StaticPages/NoAccessPage';\nimport Spinner from '@redhat-cloud-services/frontend-components/Spinner';\n\nconst SystemsPage = () => {\n    const [[canReadVulnerabilityResults,\n        canSetExcludedIncluded,\n        canExport,\n        canReadExcluded],\n    isLoading] = useRbac([\n        PERMISSIONS.readVulnerabilityResults,\n        PERMISSIONS.setExcludedIncluded,\n        PERMISSIONS.basicReporting,\n        PERMISSIONS.readExcluded\n    ]);\n\n    const [[\n        canReadHostsInventory],\n    isLoadingInventory] = useRbac([\n        PERMISSIONS.readHosts\n    ], 'inventory');\n\n    const inventoryRef = React.createRef();\n    const dispatch = useDispatch();\n    const intl = useIntl();\n    const [urlParameters, setUrlParams] = useUrlParams(SYSTEMS_ALLOWED_PARAMS);\n\n    const items = useSelector(({ entities }) => entities?.rows || [], shallowEqual);\n    const totalItems = useSelector(({ entities }) => entities?.total);\n    const meta = useSelector(({ entities }) => entities?.meta);\n    const selectedRows = useSelector(({ entities }) => entities?.selectedRows || {});\n    const selectedRowsCount = useSelector(({ entities }) => entities?.selectedRowsCount ?? 0);\n    const selectedRowsRawData = useSelector(({ entities }) => entities?.selectedRowsRawData || []);\n    const isLoaded = useSelector(({ entities }) => entities?.loaded || false);\n\n    let parameters = useSelector(({ SystemsPageStore }) => SystemsPageStore.params, shallowEqual);\n    if (!canReadExcluded) {\n        parameters.excluded = '';\n    }\n\n    const { hasError, errorCode } = useSelector(({ SystemsPageStore }) => SystemsPageStore.error);\n    const columns = useSelector(({ SystemsPageStore }) => SystemsPageStore.columns);\n\n    const [isColumnModalOpen, setColumnModalOpen] = useState(false);\n\n    const mergeColumns = inventoryColumns => {\n        return columns\n            .filter(column => column.isShown ?? column.isShownByDefault)\n            .map(column => ({ ...inventoryColumns.find(({ key }) => column.key === key), ...column }));\n    };\n\n    useEffect(() => {\n        return () => {\n            dispatch(clearSystemStore());\n            dispatch(clearInventoryStore());\n            dispatch(clearNotifications());\n        };\n    }, [dispatch]);\n\n    const apply = (params) => dispatch(changeSystemsParams(params));\n\n    useEffect(() => apply(urlParameters), []);\n\n    useEffect(() => setUrlParams({ ...parameters, ...meta }), [setUrlParams, parameters, meta]);\n\n    const handleSelect = (payload) => dispatch(selectRows(payload));\n\n    const onRefreshInventory = () => (\n        dispatch(clearInventoryStore()),\n        inventoryRef.current.onRefreshData(({ page: 1 }))\n    );\n\n    const doOptOut = useOptOutSystems(onRefreshInventory);\n    const getEntities = useGetEntities(APIHelper.getSystems, {});\n\n    const [columnCounter, setColumnCount] = useState(0);\n    useEffect(() => setColumnCount(columnCounter + 1), [columns]);\n\n    return (\n        isLoading ? <Spinner centered/> :\n            canReadVulnerabilityResults ? <Fragment>\n                <ColumnManagementModal\n                    appliedColumns={columns}\n                    applyColumns={newColumns => dispatch(changeColumnsSystemList(newColumns))}\n                    isModalOpen={isColumnModalOpen}\n                    setModalOpen={setColumnModalOpen}\n                />\n                <Header title={intl.formatMessage(messages.vulnerabilitySystemsHeader)} showBreadcrumb={false}/>\n                <Main>\n                    {isLoadingInventory ? <Spinner centered/> :\n                        hasError && !canReadHostsInventory\n                            ? <ErrorHandler code={errorCode}/>\n                            : (\n                                <InventoryTable\n                                    disableDefaultColumns\n                                    onLoad={({ mergeWithEntities }) => {\n                                        ReducerRegistry.register({\n                                            ...mergeWithEntities(\n                                                inventoryEntitiesReducer(columns),\n                                                {\n                                                    page: Number(parameters.page || 1),\n                                                    perPage: Number(parameters.page_size || 20),\n                                                    ...(parameters.sort && {\n                                                        sortBy: {\n                                                            key: parameters.sort.replace(/^-/, ''),\n                                                            direction: parameters.sort.match(/^-/) ? 'desc' : 'asc'\n                                                        }\n                                                    })\n                                                }\n                                            )\n                                        });\n                                    }}\n                                    tableProps={{\n                                        isStickyHeader: true,\n                                        canSelectAll: false,\n                                        actionResolver: totalItems > 0 && canSetExcludedIncluded\n                                            && ((rowData) => systemTableRowActions(rowData, doOptOut)),\n                                        variant: TableVariant.compact\n                                    }}\n                                    paginationProps={{\n                                        isDisabled: !totalItems\n                                    }}\n                                    showTagModal\n                                    isFullView\n                                    ref={inventoryRef}\n                                    autoRefresh\n                                    customFilters={{\n                                        vulnerabilityParams: {\n                                            ...parameters\n                                        }\n                                    }}\n                                    columnsCounter={columnCounter}\n                                    columns={defaultColumns => mergeColumns(defaultColumns)}\n                                    getEntities={getEntities}\n                                    hideFilters={{ all: true }}\n                                    noSystemsTable={<EmptyStateNoSystems/>}\n                                >\n                                    <SystemsTableToolbar\n                                        canExport={canExport}\n                                        canSetExcludedIncluded={canSetExcludedIncluded}\n                                        canReadExcluded={canReadExcluded}\n                                        parameters={parameters}\n                                        rawData={{ data: items, meta: { totalItems }, isLoaded }}\n                                        selectedRows={selectedRows}\n                                        selectedRowsCount={selectedRowsCount}\n                                        selectedRowsRawData={selectedRowsRawData}\n                                        methods={{\n                                            doOptOut,\n                                            apply,\n                                            handleSelect,\n                                            setColumnModalOpen\n                                        }}\n                                        actions\n                                    />\n                                </InventoryTable>\n                            )}\n                </Main>\n            </Fragment> : <NoAccessPage/>\n    );\n};\n\nexport default SystemsPage;\n","import { selectRows } from './reducersHelper';\nimport * as ActionTypes from '../ActionTypes';\nimport unionBy from 'lodash/unionBy';\n\nexport const initialState = {\n    columns: [],\n    rows: [],\n    entities: [],\n    loaded: false,\n    tagsLoaded: false,\n    allTagsLoaded: false,\n    invConfig: {},\n    sortBy: {\n        key: 'updated',\n        direction: 'desc'\n    },\n    page: 1,\n    perPage: 20,\n    selectedRows: {},\n    prevLoadedRows: [],\n    selectedRowsRawData: [],\n    selectedRowsCount: 0\n};\n\nfunction modifyInventory(columns, state, action) {\n    let advisory = columns.find(({ key }) => key === 'advisory');\n\n    if (!state.selectedRows) {\n        state.selectedRows = {};\n    }\n\n    if (!state.sortBy) {\n        state.sortBy = {\n            key: 'updated',\n            direction: 'desc'\n        };\n    }\n\n    if (state.loaded) {\n        let hasPatchAccess = state.rows.some(({ patchAccess }) => patchAccess);\n\n        if (!hasPatchAccess && advisory) {\n            advisory.isShown = false;\n        }\n\n        return {\n            ...state,\n            columns,\n            rows: state.rows.map(row => ({\n                ...row,\n                selected: state.selectedRows[row.id] || false\n            })),\n            prevLoadedRows: unionBy(action.payload.results, state.prevLoadedRows, 'id'),\n            meta: action.payload.meta\n        };\n    }\n\n    return state;\n}\n\nexport const inventoryEntitiesReducer = (columns) => (state = initialState, action) => {\n    let newState = { ...state };\n\n    switch (action.type) {\n        case ActionTypes.LOAD_ENTITIES + '_FULFILLED':\n            return modifyInventory(columns, newState, action);\n        case ActionTypes.SELECT_ENTITY:\n            return selectRows(newState, action);\n        case ActionTypes.EXPAND_ROW:\n            return {\n                ...newState,\n                rows: newState.rows.map(row => ({\n                    ...row,\n                    isOpen: row.id === action.payload.id ? action.payload.isOpen : row.isOpen\n                }))\n            };\n        case ActionTypes.CLEAR_INVENTORY_STORE:\n            return initialState;\n        default:\n            return newState;\n    }\n};\n"],"names":["TableGridBreakpoint","TableVariant","href","ErrorState","_ref","errorTitle","errorDescription","props","EmptyState","variant","className","EmptyStateIcon","icon","Title","headingLevel","size","EmptyStateBody","Stack","StackItem","document","referrer","Button","onClick","history","back","component","target","rel","propTypes","defaultProps","id","xmlns","xmlnsXlink","viewBox","x","y","width","height","maskUnits","transform","points","d","concat","window","location","origin","pathname","split","InventoryLoadError","useEffect","console","error","BaseInvTable","store","Suspense","fallback","ScalprumComponent","appName","module","scope","ErrorComponent","ref","innerRef","InvTable","filterValue","apply","React","isOpen","setOpen","numOptions","setNumOptions","versionFromNewestToOldest","RHEL_VERSIONS","reverse","selectedVersionsArray","type","conditionalFilterType","label","intl","messages","filterValues","children","onToggle","onSelect","_","changedLabel","newValue","changedValue","version","value","includes","splice","indexOf","rhel_version","join","page","selections","map","item","placeholderText","length","loadingVariant","text","style","maxHeight","overflow","slice","option","index","isDisabled","disabled","key","description","kebabItemDownloadPDF","loading","downloadReport","kebabItemEditBusinessRisk","showBusinessRiskModal","cves","kebabItemEditStatus","showStatusModal","inventoryIds","CVElabels","hasRule","hasExploit","isSmall","styles","formatMessage","textStyle","left","undefined","labelStyle","border","borderWidth","borderColor","firstPagePDF","data","meta","filters","isReportDynamic","reportData","user","filtersBuilder","reduce","obj","filter","category","values","PUBLIC_DATE_OPTIONS","val","chips","timespan_label","name","isAllChosen","CVE_REPORT_FILTERS","SYSTEM_REPORT_FILTERS","CheckboxCustomFilter","FILTERS","items","cvefilterStringSegments","msg","lowercase","systemsFilterStringSegments","filterStringSegments","i","hasOwnProperty","isFirst","isLast","includedValues","Fragment","intlFormatWithBold","hasSearchTerm","searchTerm","score","cvss_filter","DEFAULT_FILTER_DATA","published","publish_date","toLowerCase","prefix","tags","tag","namespace","count","find","multiValue","Object","cve_count","total_items","toString","system_count","header","knownExploitCount","userNotes","identity","first_name","last_name","tablePage","PropTypes","POSSIBLE_HEADERS","hit","columnBuilder","hitColumns","headerContent","push","forEach","hasRules","cve","rules","cveRows","knownExploit","attributes","src","CVES_PATH","synopsis","known_exploit","public_date","processDate","systemRows","system","display_name","os","opt_out","formatDate","updated","withHeader","rows","DownloadSystemsReport","params","buttonProps","useIntl","useState","setLoading","useNotification","addNotification","clearNotifications","systemsReportRestPages","PDF_REPORT_PER_PAGE","systemsReportFirstPage","otherPagesPDF","chunkArray","systemsFetch","getSystems","DownloadReport","report","status","NotAuthorizedNotification","autoDismiss","firstPage","otherPages","systemPage","asyncFunction","reportName","fileName","allPagesHaveTitle","orientation","currentFilter","currentValue","excluded","filterByExcluded","urlParam","onChange","event","EXCLUDED_FILTER_OPTIONS","SystemsTableToolbar","selectedRows","selectedRowsCount","selectedRowsRawData","canExport","canSetExcludedIncluded","canReadExcluded","parameters","rawData","methods","exportPDF","setExportPDF","handleSelect","doOptOut","setColumnModalOpen","dispatch","useDispatch","kebabProps","useMemo","selectedExcluded","some","selectedIncluded","kebabOptions","bulkSelectProps","useBulkSelect","fetchResource","ops","fetchSystemsIds","filterConfigItems","useSearchFilter","excludedFilter","useOsVersionFilter","PrimaryToolbar","bulkSelect","actionsConfig","actions","dropdownProps","ouiaId","filterConfig","activeFiltersConfig","buildActiveFilters","onDelete","reset","removeFilters","SYSTEMS_DEFAULT_FILTERS","deleteTitle","showDeleteButton","isFilterInDefaultState","SYSTEMS_FILTER_PARAMS","exportConfig","totalItems","extraItems","format","fetchSystems","notification","showButton","onSuccess","dataShape","injectIntl","useRbac","PERMISSIONS","canReadVulnerabilityResults","isLoading","canReadHostsInventory","isLoadingInventory","inventoryRef","useUrlParams","SYSTEMS_ALLOWED_PARAMS","urlParameters","setUrlParams","useSelector","entities","shallowEqual","total","isLoaded","loaded","SystemsPageStore","hasError","errorCode","columns","isColumnModalOpen","clearSystemStore","clearInventoryStore","changeSystemsParams","useOptOutSystems","current","onRefreshData","getEntities","useGetEntities","APIHelper","columnCounter","setColumnCount","Spinner","centered","ColumnManagementModal","appliedColumns","applyColumns","newColumns","changeColumnsSystemList","isModalOpen","setModalOpen","Header","title","showBreadcrumb","Main","ErrorHandler","code","InventoryTable","disableDefaultColumns","onLoad","mergeWithEntities","ReducerRegistry","inventoryEntitiesReducer","Number","perPage","page_size","sort","sortBy","replace","direction","match","tableProps","isStickyHeader","canSelectAll","actionResolver","rowData","systemTableRowActions","paginationProps","showTagModal","isFullView","autoRefresh","customFilters","vulnerabilityParams","columnsCounter","defaultColumns","inventoryColumns","column","isShown","isShownByDefault","hideFilters","all","noSystemsTable","payload","selectRows","NoAccessPage","initialState","tagsLoaded","allTagsLoaded","invConfig","prevLoadedRows","modifyInventory","state","action","advisory","patchAccess","row","selected","unionBy","results","newState","ActionTypes"],"sourceRoot":""}