{"version":3,"file":"js/SystemDetailsPage.1639669211789.ee85b262760a7436e9d4.js","mappings":"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","sources":["webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/InventoryLoadError.js","webpack:///./src/Components/SmartComponents/SystemDetailsPage/SystemDetails.js","webpack:///./src/Store/Reducers/SystemDetailsPageStore.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/DetailWrapper.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/InventoryDetailHead.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/AppInfo.js","webpack:///./src/Components/SmartComponents/SystemDetailsPage/SystemDetailsPage.js"],"sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nvar InventoryLoadError = function InventoryLoadError(_ref) {\n  var component = _ref.component,\n      props = _objectWithoutProperties(_ref, [\"component\"]);\n\n  useEffect(function () {\n    console.error(\"Unable to load iventory component. Failed to load \".concat(component, \".\"), props);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"h1\", null, \"Unable to load inventory component\"), /*#__PURE__*/React.createElement(\"h2\", null, \"Failed to load \", component), /*#__PURE__*/React.createElement(\"code\", null, \"More info can be found in browser console output.\"));\n};\n\nInventoryLoadError.propTypes = {\n  component: PropTypes.string\n};\nexport default InventoryLoadError;","import React from 'react';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { ConnectedSystemCves } from '../SystemCves/SystemCves';\nimport {\n    EmptyStateExcludedSystem,\n    NotAuthorized\n} from '../../PresentationalComponents/EmptyStates/EmptyStates';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\nimport { intl } from '../../../Utilities/IntlProvider';\nimport messages from '../../../Messages';\n\nconst SystemDetails = ({ entity, isOptOut, optOutSystemHandler, loaded, rbacPermissions, isRbacLoading }) => {\n    const {\n        canExport,\n        canReadVulnerabilityResults,\n        canEditPairStatus,\n        canReadExcluded\n    } = rbacPermissions;\n\n    let allowedCveActions = ['REMEDIATE', ...canEditPairStatus ? ['EDIT_STATUS'] : []];\n\n    if (isRbacLoading) {\n        return <Spinner centered />;\n    } else if (canReadVulnerabilityResults) {\n        if (entity && loaded && isOptOut) {\n            if (canReadExcluded) {\n                return <EmptyStateExcludedSystem buttonAction={() => optOutSystemHandler(entity.display_name, false)} />;\n            } else {\n                return <NotAuthorized title={intl.formatMessage(messages.notAuthorizedNoAccessForSystem)} />;\n            }\n        } else {\n            return <ConnectedSystemCves\n                entity={{ id: entity?.id, display_name: entity?.display_name }}\n                allowedCveActions={allowedCveActions}\n                showHeaderLabel\n                setPageTitle\n                canExport={canExport}\n            />;\n        }\n    } else {\n        return <NotAuthorized />;\n    }\n};\n\nSystemDetails.propTypes = {\n    entity: propTypes.object,\n    isOptOut: propTypes.bool,\n    loaded: propTypes.bool,\n    optOutSystemHandler: propTypes.func,\n    rbacPermissions: propTypes.object,\n    isRbacLoading: propTypes.bool\n};\n\nfunction mapStateToProps({ entityDetails: { entity, opt_out: isOptOut, loaded } }) {\n    return {\n        entity,\n        isOptOut,\n        loaded\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    null\n)(SystemDetails);\n","import React from 'react';\nimport SystemDetails from '../../Components/SmartComponents/SystemDetailsPage/SystemDetails';\nimport { FETCH_SYSTEM_DETAILS } from '../ActionTypes';\n\nexport const initialState = {\n    loaded: false\n};\n\nexport const systemDetailsPageStore = (\n    INVENTORY_ACTION_TYPES, optOutSystemHandler, rbacPermissions, isRbacLoading\n) => (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_SYSTEM_DETAILS + '_FULFILLED':\n            return {\n                ...state,\n                ...action.payload.data\n            };\n        case INVENTORY_ACTION_TYPES.LOAD_ENTITY_FULFILLED:\n            return {\n                ...state,\n                loaded: true,\n                activeApps: [\n                    {\n                        title: 'Vulnerabilities',\n                        name: 'vulnerabilities',\n                        component: () => <SystemDetails\n                            rbacPermissions={rbacPermissions}\n                            optOutSystemHandler={optOutSystemHandler}\n                            isRbacLoading={isRbacLoading}\n                        />\n                    }\n                ]\n            };\n        case INVENTORY_ACTION_TYPES.LOAD_ENTITY_REJECTED:\n            return {\n                ...state,\n                loaded: true,\n                activeApps: [\n                    {\n                        title: 'Vulnerabilities',\n                        name: 'vulnerabilities',\n                        component: () => <SystemDetails />\n                    }\n                ]\n            };\n        default:\n            return state;\n    }\n};\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { ScalprumComponent } from '@scalprum/react-core';\nimport { useHistory } from 'react-router-dom';\nimport { useStore } from 'react-redux';\nimport { Bullseye } from \"@patternfly/react-core/dist/esm/layouts/Bullseye/Bullseye.js\";\nimport { Spinner } from \"@patternfly/react-core/dist/esm/components/Spinner/Spinner.js\";\nimport InventoryLoadError from './InventoryLoadError';\n\nvar BaseDetailWrapper = function BaseDetailWrapper(props) {\n  var history = useHistory();\n  var store = useStore();\n  return /*#__PURE__*/React.createElement(Suspense, {\n    fallback: props.fallback\n  }, /*#__PURE__*/React.createElement(ScalprumComponent, _extends({\n    history: history,\n    store: store,\n    appName: \"inventory\",\n    module: \"./DetailWrapper\",\n    scope: \"inventory\",\n    ErrorComponent: /*#__PURE__*/React.createElement(InventoryLoadError, _extends({\n      component: \"InventoryDetailHead\",\n      history: history,\n      store: store\n    }, props)),\n    ref: props.innerRef\n  }, props)));\n};\n\nBaseDetailWrapper.propTypes = {\n  fallback: PropTypes.node,\n  innerRef: PropTypes.object\n};\n/**\n * Inventory sub component.\n *\n * This component wraps entire system detail in order to show loading state and drawer (if enabled).\n */\n\nvar DetailWrapper = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(BaseDetailWrapper, _extends({\n    innerRef: ref\n  }, props));\n});\nDetailWrapper.propTypes = {\n  /** React Suspense fallback component. <a href=\"https://reactjs.org/docs/code-splitting.html#reactlazy\" target=\"_blank\">Learn more</a>. */\n  fallback: PropTypes.node\n};\nDetailWrapper.defaultProps = {\n  fallback: /*#__PURE__*/React.createElement(Bullseye, {\n    className: \"pf-u-p-lg\"\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    size: \"xl\"\n  }))\n};\nexport default DetailWrapper;","import _extends from \"@babel/runtime/helpers/extends\";\nimport React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { ScalprumComponent } from '@scalprum/react-core';\nimport { useHistory } from 'react-router-dom';\nimport { useStore } from 'react-redux';\nimport { Bullseye } from \"@patternfly/react-core/dist/esm/layouts/Bullseye/Bullseye.js\";\nimport { Spinner } from \"@patternfly/react-core/dist/esm/components/Spinner/Spinner.js\";\nimport InventoryLoadError from './InventoryLoadError';\n\nvar BaseInventoryDetailHead = function BaseInventoryDetailHead(props) {\n  var history = useHistory();\n  var store = useStore();\n  return /*#__PURE__*/React.createElement(Suspense, {\n    fallback: props.fallback\n  }, /*#__PURE__*/React.createElement(ScalprumComponent, _extends({\n    history: history,\n    store: store,\n    appName: \"inventory\",\n    module: \"./InventoryDetailHead\",\n    scope: \"inventory\",\n    ErrorComponent: /*#__PURE__*/React.createElement(InventoryLoadError, _extends({\n      component: \"InventoryDetailHead\",\n      history: history,\n      store: store\n    }, props)),\n    ref: props.innerRef\n  }, props)));\n};\n\nBaseInventoryDetailHead.propTypes = {\n  fallback: PropTypes.node,\n  innerRef: PropTypes.object\n};\n/**\n * Inventory sub component.\n *\n * This component shows system information (tags, facts and basic operations).\n */\n\nvar InventoryDetailHead = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(BaseInventoryDetailHead, _extends({\n    innerProps: ref\n  }, props));\n});\nInventoryDetailHead.propTypes = {\n  /** React Suspense fallback component. <a href=\"https://reactjs.org/docs/code-splitting.html#reactlazy\" target=\"_blank\">Learn more</a>. */\n  fallback: PropTypes.node\n};\nInventoryDetailHead.defaultProps = {\n  fallback: /*#__PURE__*/React.createElement(Bullseye, {\n    className: \"pf-u-p-lg\"\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    size: \"xl\"\n  }))\n};\nexport default InventoryDetailHead;","import _extends from \"@babel/runtime/helpers/extends\";\nimport React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { ScalprumComponent } from '@scalprum/react-core';\nimport { useHistory } from 'react-router-dom';\nimport { useStore } from 'react-redux';\nimport { Bullseye } from \"@patternfly/react-core/dist/esm/layouts/Bullseye/Bullseye.js\";\nimport { Spinner } from \"@patternfly/react-core/dist/esm/components/Spinner/Spinner.js\";\nimport InventoryLoadError from './InventoryLoadError';\n\nvar BaseAppInfo = function BaseAppInfo(props) {\n  var history = useHistory();\n  var store = useStore();\n  return /*#__PURE__*/React.createElement(Suspense, {\n    fallback: props.fallback\n  }, /*#__PURE__*/React.createElement(ScalprumComponent, _extends({\n    history: history,\n    store: store,\n    appName: \"inventory\",\n    module: \"./AppInfo\",\n    scope: \"inventory\",\n    ErrorComponent: /*#__PURE__*/React.createElement(InventoryLoadError, _extends({\n      component: \"InventoryDetailHead\",\n      history: history,\n      store: store\n    }, props)),\n    ref: props.innerRef\n  }, props)));\n};\n\nBaseAppInfo.propTypes = {\n  fallback: PropTypes.node,\n  innerRef: PropTypes.object\n};\n/**\n * Inventory sub component.\n *\n * This component shows tab(s) with detail information about selected system.\n */\n\nvar AppInfo = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(BaseAppInfo, _extends({\n    innerRef: ref\n  }, props));\n});\nAppInfo.propTypes = {\n  /** React Suspense fallback component. <a href=\"https://reactjs.org/docs/code-splitting.html#reactlazy\" target=\"_blank\">Learn more</a>. */\n  fallback: PropTypes.node\n};\nAppInfo.defaultProps = {\n  fallback: /*#__PURE__*/React.createElement(Bullseye, {\n    className: \"pf-u-p-lg\"\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    size: \"xl\"\n  }))\n};\nexport default AppInfo;","import { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { addNotification, clearNotifications } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport propTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { useRouteMatch } from 'react-router-dom';\nimport { fetchSystemDetails, optOutSystemsAction } from '../../../Store/Actions/Actions';\nimport { systemDetailsPageStore } from '../../../Store/Reducers/SystemDetailsPageStore';\nimport ReducerRegistry from '../../../Utilities/ReducerRegistry';\nimport Header from '../../PresentationalComponents/Header/Header';\nimport { injectIntl } from 'react-intl';\nimport {\n    PATHS,\n    PERMISSIONS,\n    ReadOnlyNotification\n} from '../../../Helpers/constants';\nimport messages from '../../../Messages';\n\nimport { AppInfo, DetailWrapper, InventoryDetailHead } from '@redhat-cloud-services/frontend-components/Inventory';\nimport { useRbac } from '../../../Helpers/Hooks';\n\nconst InventoryDetail = ({ systemDetails = {}, intl, errors }) => {\n    const dispatch = useDispatch();\n    const match = useRouteMatch();\n    const [[\n        canSetExcludedIncluded,\n        canExport,\n        canReadVulnerabilityResults,\n        canEditPairStatus,\n        canReadExcluded\n    ], isRbacLoading] = useRbac([\n        PERMISSIONS.setExcludedIncluded,\n        PERMISSIONS.basicReporting,\n        PERMISSIONS.readVulnerabilityResults,\n        PERMISSIONS.setPairStatus,\n        PERMISSIONS.readExcluded]\n    );\n\n    const rbacPermissions = {\n        canExport,\n        canReadVulnerabilityResults,\n        canEditPairStatus,\n        canReadExcluded\n    };\n    const inventoryId = match.params.inventoryId;\n\n    useEffect(() => {\n        dispatch(fetchSystemDetails(inventoryId));\n    }, [dispatch, inventoryId]);\n\n    useEffect(() => {\n        return () => {\n            dispatch(clearNotifications());\n        };\n    }, [dispatch]);\n\n    const notifications = systemName => ({\n        exclude: {\n            success: {\n                variant: 'success',\n                title: intl.formatMessage(messages.notificationExcludeSuccess, { count: 1, systemName })\n            },\n            failure: {\n                variant: 'danger',\n                autoDismiss: false,\n                title: intl.formatMessage(messages.notificationExcludeFailureTitle, { count: 1, systemName }),\n                description: intl.formatMessage(messages.notificationDetailExcludeFailureBody, { count: 1 })\n            }\n        },\n        include: {\n            success: {\n                variant: 'success',\n                title: intl.formatMessage(messages.notificationIncludeSuccessTitle, { count: 1, systemName }),\n                description: intl.formatMessage(messages.notificationIncludeSuccessBody, { count: 1 })\n            },\n            failure: {\n                variant: 'danger',\n                autoDismiss: false,\n                title: intl.formatMessage(messages.notificationIncludeFailureTitle, { count: 1, systemName }),\n                description: intl.formatMessage(messages.notificationDetailIncludeFailureBody, { count: 1 })\n            }\n        }\n    });\n\n    const handleOptOutSystem = (systemName, toExclude) => {\n        dispatch(optOutSystemsAction([inventoryId], toExclude)).then(() => {\n            dispatch(fetchSystemDetails(inventoryId));\n            dispatch(addNotification(toExclude\n                ? notifications(systemName).exclude.success\n                : notifications(systemName).include.success));\n        }).catch(error => {\n            dispatch(addNotification(error.status === '503' ? ReadOnlyNotification : toExclude\n                ? notifications(systemName).exclude.failure\n                : notifications(systemName).include.failure));\n        });\n    };\n\n    const { opt_out: isOptOut = false, entity, loaded } = systemDetails;\n\n    return (\n        <DetailWrapper>\n            <Header\n                title=\"\"\n                breadcrumbs={[\n                    {\n                        title: PATHS.systemsPage.title,\n                        to: PATHS.systemsPage.to,\n                        loaded: true\n                    },\n                    {\n                        title: entity?.display_name || intl.formatMessage(messages.invalidSystem),\n                        isActive: true,\n                        loaded\n                    }\n                ]}\n            >\n                {!errors && (\n                    <InventoryDetailHead\n                        onLoad={({ mergeWithEntities, mergeWithDetail, INVENTORY_ACTION_TYPES }) => {\n                            ReducerRegistry.register({\n                                ...mergeWithEntities(),\n                                ...mergeWithDetail(systemDetailsPageStore(\n                                    INVENTORY_ACTION_TYPES, handleOptOutSystem, rbacPermissions, isRbacLoading\n                                ))\n                            });\n                        }}\n                        hideBack\n                        actions={\n                            entity && canSetExcludedIncluded && [\n                                isOptOut\n                                    ? {\n                                        title: intl.formatMessage(messages.inventoryKebabOptionsResume),\n                                        onClick: () => handleOptOutSystem(systemDetails.entity.display_name, false)\n                                    }\n                                    : {\n                                        title: intl.formatMessage(messages.inventoryKebabOptionsExclude),\n                                        onClick: () => handleOptOutSystem(systemDetails.entity.display_name, true)\n                                    }\n                            ]\n                        }\n                    />\n                )}\n            </Header>\n            <Main>\n                <AppInfo\n                    optOutSystemHandler={handleOptOutSystem}\n                    rbacPermissions={rbacPermissions}\n                    isRbacLoading={isRbacLoading}/>\n            </Main>\n        </DetailWrapper>\n    );\n};\n\nInventoryDetail.propTypes = {\n    systemDetails: propTypes.object,\n    intl: propTypes.any,\n    errors: propTypes.object\n};\n\nfunction mapStateToProps(state) {\n    return {\n        errors: state.SystemCvesStore.cveList.payload.errors,\n        systemDetails: state.entityDetails\n    };\n}\n\nexport default injectIntl(\n    connect(\n        mapStateToProps,\n        null\n    )(InventoryDetail)\n);\n"],"names":["InventoryLoadError","_ref","component","props","useEffect","console","error","concat","propTypes","SystemDetails","entity","isOptOut","optOutSystemHandler","loaded","rbacPermissions","isRbacLoading","canExport","canReadVulnerabilityResults","canEditPairStatus","canReadExcluded","allowedCveActions","Spinner","centered","buttonAction","display_name","title","intl","messages","id","showHeaderLabel","setPageTitle","connect","entityDetails","opt_out","initialState","BaseDetailWrapper","history","store","Suspense","fallback","ScalprumComponent","appName","module","scope","ErrorComponent","ref","innerRef","DetailWrapper","defaultProps","Bullseye","className","size","BaseInventoryDetailHead","InventoryDetailHead","innerProps","BaseAppInfo","AppInfo","InventoryDetail","systemDetails","errors","dispatch","useDispatch","match","useRouteMatch","useRbac","PERMISSIONS","canSetExcludedIncluded","inventoryId","params","fetchSystemDetails","clearNotifications","notifications","systemName","exclude","success","variant","formatMessage","count","failure","autoDismiss","description","include","handleOptOutSystem","toExclude","optOutSystemsAction","then","addNotification","status","ReadOnlyNotification","Header","breadcrumbs","PATHS","to","isActive","onLoad","mergeWithEntities","mergeWithDetail","INVENTORY_ACTION_TYPES","ReducerRegistry","state","action","type","FETCH_SYSTEM_DETAILS","payload","data","LOAD_ENTITY_FULFILLED","activeApps","name","LOAD_ENTITY_REJECTED","systemDetailsPageStore","hideBack","actions","onClick","Main","injectIntl","SystemCvesStore","cveList"],"sourceRoot":""}