{"version":3,"file":"js/Reports.5b75131e7e7bb559a996.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Card/CardFooter.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Card/CardTitle.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Form/Form.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Form/FormGroup.js","webpack:///./node_modules/@patternfly/react-tokens/dist/esm/c_form_control_textarea_Height.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/TextArea/TextArea.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/ToggleGroup/ToggleGroup.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/ToggleGroup/ToggleGroupItemElement.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/ToggleGroup/ToggleGroupItem.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/file-alt-icon.js","webpack:///./node_modules/@patternfly/react-styles/css/components/ToggleGroup/toggle-group.mjs","webpack:///./src/Components/PresentationalComponents/StaticPages/NoAccessPage.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/DateFormat/helper.js","webpack:///./src/Components/SmartComponents/Reports/Common/CounterItem.js","webpack:///./src/Components/SmartComponents/Reports/Executive/FirstPage.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/DateFormat/DateFormat.js","webpack:///./src/Components/SmartComponents/Reports/Executive/SecondPage.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toArray.js","webpack:///./src/Components/SmartComponents/Reports/Executive/ThirdPage.js","webpack:///./src/Components/SmartComponents/Reports/BuildExecReport.js","webpack:///./src/Components/SmartComponents/Reports/DownloadExecutive.js","webpack:///./src/Components/PresentationalComponents/Sorters/CustomSorters/SelectCustomSorter.js","webpack:///./src/Components/SmartComponents/Modals/ReportConfigModal.js","webpack:///./src/Components/SmartComponents/Reports/Common/buildOSGroups.js","webpack:///./src/Components/PresentationalComponents/CustomIcons/CustomIcons.js","webpack:///./src/Components/SmartComponents/Reports/ReportsPage.js","webpack:///./src/Helpers/DownloadReport.js","webpack:///./node_modules/lodash/_asciiSize.js","webpack:///./node_modules/lodash/_asciiToArray.js","webpack:///./node_modules/lodash/_castSlice.js","webpack:///./node_modules/lodash/_hasUnicode.js","webpack:///./node_modules/lodash/_stringSize.js","webpack:///./node_modules/lodash/_stringToArray.js","webpack:///./node_modules/lodash/_unicodeSize.js","webpack:///./node_modules/lodash/_unicodeToArray.js","webpack:///./node_modules/lodash/isEqual.js","webpack:///./node_modules/lodash/truncate.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nimport { css } from '@patternfly/react-styles';\nexport const CardFooter = (_a) => {\n    var { children = null, className = '', component = 'div' } = _a, props = __rest(_a, [\"children\", \"className\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ className: css(styles.cardFooter, className) }, props), children));\n};\nCardFooter.displayName = 'CardFooter';\n//# sourceMappingURL=CardFooter.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nimport { CardContext } from './Card';\nexport const CardTitle = (_a) => {\n    var { children = null, className = '', component = 'div' } = _a, props = __rest(_a, [\"children\", \"className\", \"component\"]);\n    const { cardId, registerTitleId } = React.useContext(CardContext);\n    const Component = component;\n    const titleId = cardId ? `${cardId}-title` : '';\n    React.useEffect(() => {\n        registerTitleId(titleId);\n        return () => registerTitleId('');\n    }, [registerTitleId, titleId]);\n    return (React.createElement(Component, Object.assign({ className: css(styles.cardTitle, className), id: titleId || undefined }, props), children));\n};\nCardTitle.displayName = 'CardTitle';\n//# sourceMappingURL=CardTitle.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Form/form';\nimport { css } from '@patternfly/react-styles';\nconst FormBase = (_a) => {\n    var { children = null, className = '', isHorizontal = false, isWidthLimited = false, maxWidth = '', innerRef } = _a, props = __rest(_a, [\"children\", \"className\", \"isHorizontal\", \"isWidthLimited\", \"maxWidth\", \"innerRef\"]);\n    return (React.createElement(\"form\", Object.assign({ noValidate: true }, (maxWidth && {\n        style: Object.assign({ '--pf-c-form--m-limit-width--MaxWidth': maxWidth }, props.style)\n    }), props, { className: css(styles.form, isHorizontal && styles.modifiers.horizontal, (isWidthLimited || maxWidth) && styles.modifiers.limitWidth, className), ref: innerRef }), children));\n};\nexport const Form = React.forwardRef((props, ref) => React.createElement(FormBase, Object.assign({ innerRef: ref }, props)));\nForm.displayName = 'Form';\n//# sourceMappingURL=Form.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Form/form';\nimport { ASTERISK } from '../../helpers/htmlConstants';\nimport { css } from '@patternfly/react-styles';\nimport { ValidatedOptions } from '../../helpers/constants';\nimport { GenerateId } from '../../helpers/GenerateId/GenerateId';\nexport const FormGroup = (_a) => {\n    var { children = null, className = '', label, labelInfo, labelIcon, isRequired = false, validated = 'default', isInline = false, hasNoPaddingTop = false, isStack = false, helperText, isHelperTextBeforeField = false, helperTextInvalid, helperTextIcon, helperTextInvalidIcon, fieldId, role } = _a, props = __rest(_a, [\"children\", \"className\", \"label\", \"labelInfo\", \"labelIcon\", \"isRequired\", \"validated\", \"isInline\", \"hasNoPaddingTop\", \"isStack\", \"helperText\", \"isHelperTextBeforeField\", \"helperTextInvalid\", \"helperTextIcon\", \"helperTextInvalidIcon\", \"fieldId\", \"role\"]);\n    const validHelperText = typeof helperText !== 'string' ? (helperText) : (React.createElement(\"div\", { className: css(styles.formHelperText, validated === ValidatedOptions.success && styles.modifiers.success, validated === ValidatedOptions.warning && styles.modifiers.warning), id: `${fieldId}-helper`, \"aria-live\": \"polite\" },\n        helperTextIcon && React.createElement(\"span\", { className: css(styles.formHelperTextIcon) }, helperTextIcon),\n        helperText));\n    const inValidHelperText = typeof helperTextInvalid !== 'string' ? (helperTextInvalid) : (React.createElement(\"div\", { className: css(styles.formHelperText, styles.modifiers.error), id: `${fieldId}-helper`, \"aria-live\": \"polite\" },\n        helperTextInvalidIcon && React.createElement(\"span\", { className: css(styles.formHelperTextIcon) }, helperTextInvalidIcon),\n        helperTextInvalid));\n    const showValidHelperTxt = (validationType) => validationType !== ValidatedOptions.error && helperText ? validHelperText : '';\n    const helperTextToDisplay = validated === ValidatedOptions.error && helperTextInvalid ? inValidHelperText : showValidHelperTxt(validated);\n    const isGroupOrRadioGroup = role === 'group' || role === 'radiogroup';\n    const LabelComponent = isGroupOrRadioGroup ? 'span' : 'label';\n    const labelContent = (React.createElement(React.Fragment, null,\n        React.createElement(LabelComponent, Object.assign({ className: css(styles.formLabel) }, (!isGroupOrRadioGroup && { htmlFor: fieldId })),\n            React.createElement(\"span\", { className: css(styles.formLabelText) }, label),\n            isRequired && (React.createElement(\"span\", { className: css(styles.formLabelRequired), \"aria-hidden\": \"true\" },\n                ' ',\n                ASTERISK))),\n        ' ',\n        React.isValidElement(labelIcon) && labelIcon));\n    return (React.createElement(GenerateId, null, randomId => (React.createElement(\"div\", Object.assign({ className: css(styles.formGroup, className) }, (role && { role }), (isGroupOrRadioGroup && { 'aria-labelledby': `${fieldId || randomId}-legend` }), props),\n        label && (React.createElement(\"div\", Object.assign({ className: css(styles.formGroupLabel, labelInfo && styles.modifiers.info, hasNoPaddingTop && styles.modifiers.noPaddingTop) }, (isGroupOrRadioGroup && { id: `${fieldId || randomId}-legend` })),\n            labelInfo && (React.createElement(React.Fragment, null,\n                React.createElement(\"div\", { className: css(styles.formGroupLabelMain) }, labelContent),\n                React.createElement(\"div\", { className: css(styles.formGroupLabelInfo) }, labelInfo))),\n            !labelInfo && labelContent)),\n        React.createElement(\"div\", { className: css(styles.formGroupControl, isInline && styles.modifiers.inline, isStack && styles.modifiers.stack) },\n            isHelperTextBeforeField && helperTextToDisplay,\n            children,\n            !isHelperTextBeforeField && helperTextToDisplay)))));\n};\nFormGroup.displayName = 'FormGroup';\n//# sourceMappingURL=FormGroup.js.map","export const c_form_control_textarea_Height = {\n  \"name\": \"--pf-c-form-control--textarea--Height\",\n  \"value\": \"auto\",\n  \"var\": \"var(--pf-c-form-control--textarea--Height)\"\n};\nexport default c_form_control_textarea_Height;","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/FormControl/form-control';\nimport heightToken from '@patternfly/react-tokens/dist/esm/c_form_control_textarea_Height';\nimport { css } from '@patternfly/react-styles';\nimport { capitalize, ValidatedOptions, canUseDOM } from '../../helpers';\nexport var TextAreResizeOrientation;\n(function (TextAreResizeOrientation) {\n    TextAreResizeOrientation[\"horizontal\"] = \"horizontal\";\n    TextAreResizeOrientation[\"vertical\"] = \"vertical\";\n    TextAreResizeOrientation[\"both\"] = \"both\";\n})(TextAreResizeOrientation || (TextAreResizeOrientation = {}));\nexport var TextAreaReadOnlyVariant;\n(function (TextAreaReadOnlyVariant) {\n    TextAreaReadOnlyVariant[\"default\"] = \"default\";\n    TextAreaReadOnlyVariant[\"plain\"] = \"plain\";\n})(TextAreaReadOnlyVariant || (TextAreaReadOnlyVariant = {}));\nexport class TextAreaBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.inputRef = React.createRef();\n        this.setAutoHeight = (field) => {\n            field.style.setProperty(heightToken.name, 'inherit');\n            const computed = window.getComputedStyle(field);\n            // Calculate the height\n            const height = parseInt(computed.getPropertyValue('border-top-width')) +\n                parseInt(computed.getPropertyValue('padding-top')) +\n                field.scrollHeight +\n                parseInt(computed.getPropertyValue('padding-bottom')) +\n                parseInt(computed.getPropertyValue('border-bottom-width'));\n            field.style.setProperty(heightToken.name, `${height}px`);\n        };\n        this.handleChange = (event) => {\n            // https://gomakethings.com/automatically-expand-a-textarea-as-the-user-types-using-vanilla-javascript/\n            const field = event.currentTarget;\n            if (this.props.autoResize && canUseDOM) {\n                this.setAutoHeight(field);\n            }\n            if (this.props.onChange) {\n                this.props.onChange(field.value, event);\n            }\n        };\n        if (!props.id && !props['aria-label']) {\n            // eslint-disable-next-line no-console\n            console.error('TextArea: TextArea requires either an id or aria-label to be specified');\n        }\n    }\n    componentDidMount() {\n        const inputRef = this.props.innerRef || this.inputRef;\n        if (this.props.autoResize && canUseDOM) {\n            const field = inputRef.current;\n            this.setAutoHeight(field);\n        }\n    }\n    render() {\n        const _a = this.props, { className, value, validated, isRequired, isDisabled, isIconSprite, isReadOnly, readOnlyVariant, resizeOrientation, innerRef, disabled, \n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        autoResize, onChange } = _a, \n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        props = __rest(_a, [\"className\", \"value\", \"validated\", \"isRequired\", \"isDisabled\", \"isIconSprite\", \"isReadOnly\", \"readOnlyVariant\", \"resizeOrientation\", \"innerRef\", \"disabled\", \"autoResize\", \"onChange\"]);\n        const orientation = `resize${capitalize(resizeOrientation)}`;\n        return (React.createElement(\"textarea\", Object.assign({ className: css(styles.formControl, isIconSprite && styles.modifiers.iconSprite, readOnlyVariant === 'plain' && styles.modifiers.plain, className, resizeOrientation !== TextAreResizeOrientation.both && styles.modifiers[orientation], validated === ValidatedOptions.success && styles.modifiers.success, validated === ValidatedOptions.warning && styles.modifiers.warning), onChange: this.handleChange }, (typeof this.props.defaultValue !== 'string' && { value }), { \"aria-invalid\": validated === ValidatedOptions.error, required: isRequired, disabled: isDisabled || disabled, readOnly: !!readOnlyVariant || isReadOnly, ref: innerRef || this.inputRef }, props)));\n    }\n}\nTextAreaBase.displayName = 'TextArea';\nTextAreaBase.defaultProps = {\n    innerRef: React.createRef(),\n    className: '',\n    isRequired: false,\n    isDisabled: false,\n    isIconSprite: false,\n    validated: 'default',\n    resizeOrientation: 'both',\n    'aria-label': null\n};\nexport const TextArea = React.forwardRef((props, ref) => (React.createElement(TextAreaBase, Object.assign({}, props, { innerRef: ref }))));\nTextArea.displayName = 'TextArea';\n//# sourceMappingURL=TextArea.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/ToggleGroup/toggle-group';\nimport { ToggleGroupItem } from './ToggleGroupItem';\nexport const ToggleGroup = (_a) => {\n    var { className, children, isCompact = false, areAllGroupsDisabled = false, 'aria-label': ariaLabel } = _a, props = __rest(_a, [\"className\", \"children\", \"isCompact\", \"areAllGroupsDisabled\", 'aria-label']);\n    const toggleGroupItemList = React.Children.map(children, child => {\n        const childCompName = child.type.name;\n        return childCompName !== ToggleGroupItem.name\n            ? child\n            : React.cloneElement(child, areAllGroupsDisabled ? { isDisabled: true } : {});\n    });\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.toggleGroup, isCompact && styles.modifiers.compact, className), role: \"group\", \"aria-label\": ariaLabel }, props), toggleGroupItemList));\n};\nToggleGroup.displayName = 'ToggleGroup';\n//# sourceMappingURL=ToggleGroup.js.map","import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/ToggleGroup/toggle-group';\nexport var ToggleGroupItemVariant;\n(function (ToggleGroupItemVariant) {\n    ToggleGroupItemVariant[\"icon\"] = \"icon\";\n    ToggleGroupItemVariant[\"text\"] = \"text\";\n})(ToggleGroupItemVariant || (ToggleGroupItemVariant = {}));\nexport const ToggleGroupItemElement = ({ variant, children }) => (React.createElement(\"span\", { className: css(variant === 'icon' && styles.toggleGroupIcon, variant === 'text' && styles.toggleGroupText) }, children));\nToggleGroupItemElement.displayName = 'ToggleGroupItemElement';\n//# sourceMappingURL=ToggleGroupItemElement.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/ToggleGroup/toggle-group';\nimport { ToggleGroupItemVariant, ToggleGroupItemElement } from './ToggleGroupItemElement';\nexport const ToggleGroupItem = (_a) => {\n    var { text, icon, className, isDisabled = false, isSelected = false, 'aria-label': ariaLabel = '', onChange = () => { }, buttonId = '' } = _a, props = __rest(_a, [\"text\", \"icon\", \"className\", \"isDisabled\", \"isSelected\", 'aria-label', \"onChange\", \"buttonId\"]);\n    const handleChange = (event) => {\n        onChange(!isSelected, event);\n    };\n    if (!ariaLabel && icon && !text) {\n        /* eslint-disable no-console */\n        console.warn('An accessible aria-label is required when using the toggle group item icon variant.');\n    }\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.toggleGroupItem, className) }, props),\n        React.createElement(\"button\", Object.assign({ type: \"button\", className: css(styles.toggleGroupButton, isSelected && styles.modifiers.selected), \"aria-pressed\": isSelected, onClick: handleChange }, (ariaLabel && { 'aria-label': ariaLabel }), (isDisabled && { disabled: true }), (buttonId && { id: buttonId })),\n            icon ? React.createElement(ToggleGroupItemElement, { variant: ToggleGroupItemVariant.icon }, icon) : null,\n            text ? React.createElement(ToggleGroupItemElement, { variant: ToggleGroupItemVariant.text }, text) : null)));\n};\nToggleGroupItem.displayName = 'ToggleGroupItem';\n//# sourceMappingURL=ToggleGroupItem.js.map","import { createIcon } from '../createIcon';\n\nexport const FileAltIconConfig = {\n  name: 'FileAltIcon',\n  height: 512,\n  width: 384,\n  svgPath: 'M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm64 236c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12v8zm0-64c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12v8zm0-72v8c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12zm96-114.1v6.1H256V0h6.1c6.4 0 12.5 2.5 17 7l97.9 98c4.5 4.5 7 10.6 7 16.9z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const FileAltIcon = createIcon(FileAltIconConfig);\n\nexport default FileAltIcon;","import './toggle-group.css';\nexport default {\n  \"modifiers\": {\n    \"compact\": \"pf-m-compact\",\n    \"selected\": \"pf-m-selected\",\n    \"disabled\": \"pf-m-disabled\"\n  },\n  \"themeDark\": \"pf-theme-dark\",\n  \"toggleGroup\": \"pf-c-toggle-group\",\n  \"toggleGroupButton\": \"pf-c-toggle-group__button\",\n  \"toggleGroupIcon\": \"pf-c-toggle-group__icon\",\n  \"toggleGroupItem\": \"pf-c-toggle-group__item\",\n  \"toggleGroupText\": \"pf-c-toggle-group__text\"\n};","import React from 'react';\nimport propTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport messages from '../../../Messages';\nimport Header from '../../PresentationalComponents/Header/Header';\nimport { NotAuthorized } from '../EmptyStates/EmptyStates';\n\nconst NoAccessPage = ({ intl, title = intl.formatMessage(messages.vulnerabilitiesHeader), emptyStateTitle }) => {\n    return (\n        <React.Fragment>\n            <Header\n                title={title}\n                showBreadcrumb={false}\n            />\n            <Main>\n                <NotAuthorized\n                    title={emptyStateTitle}\n                />\n            </Main>\n        </React.Fragment>\n    );\n};\n\nNoAccessPage.propTypes = {\n    intl: propTypes.any,\n    title: propTypes.string,\n    emptyStateTitle: propTypes.string\n};\n\nexport default injectIntl(NoAccessPage);\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\nimport { Tooltip } from '@patternfly/react-core';\nvar second = 1000;\nvar minute = second * 60;\nvar hour = minute * 60;\nvar day = hour * 24;\nvar month = day * 30;\nvar year = day * 365;\nvar formatTime = function (number, unit) { return \"\".concat(number, \" \").concat(number > 1 ? \"\".concat(unit, \"s\") : unit, \" ago\"); };\nvar relativeTimeTable = [\n    { rightBound: Infinity, description: function (date) { return formatTime(Math.round(date / year), 'year'); } },\n    { rightBound: year, description: function (date) { return formatTime(Math.round(date / month), 'month'); } },\n    { rightBound: month, description: function (date) { return formatTime(Math.round(date / day), 'day'); } },\n    { rightBound: day, description: function (date) { return formatTime(Math.round(date / hour), 'hour'); } },\n    { rightBound: hour, description: function (date) { return formatTime(Math.round(date / minute), 'minute'); } },\n    { rightBound: minute, description: function () { return 'Just now'; } },\n];\nvar exact = function (value) { return value.toUTCString().split(',')[1].slice(0, -7).trim(); };\nexport var addTooltip = function (date, element, tooltipProps, extraTitle) {\n    if (extraTitle === void 0) { extraTitle = ''; }\n    return (_jsx(Tooltip, __assign({}, tooltipProps, { content: _jsxs(\"div\", { children: [extraTitle, date] }) }, { children: element })));\n};\nexport var dateStringByType = function (type) {\n    return ({\n        exact: function (date) { return exact(date) + ' UTC'; },\n        onlyDate: function (date) { return exact(date).slice(0, -6); },\n        relative: function (date) {\n            return relativeTimeTable.reduce(function (acc, i) { return (i.rightBound > Date.now() - date.getTime() ? i.description(Date.now() - date.getTime()) : acc); }, exact(date));\n        },\n        invalid: function () { return 'Invalid date'; },\n    }[type]);\n};\nexport var dateByType = function (type, tooltipProps, extraTitle) {\n    return ({\n        exact: function (date) { return dateStringByType(type)(date); },\n        onlyDate: function (date) { return dateStringByType(type)(date); },\n        relative: function (date) { return addTooltip(dateStringByType('exact')(date), _jsx(\"span\", { children: dateStringByType(type)(date) }), tooltipProps, extraTitle); },\n        invalid: function () { return 'Invalid date'; },\n    }[type]);\n};\n//# sourceMappingURL=helper.js.map","import React from 'react';\nimport { Text, View } from '@react-pdf/renderer';\nimport PropTypes from 'prop-types';\n\nimport styles from './styles';\n\nconst CounterItem = ({ counter, label }) => {\n    return (\n        <View>\n            <Text style={styles.counter}>\n                {counter}\n            </Text >\n            <Text style={styles.counterLabel}>\n                {label}\n            </Text>\n        </View>\n    );\n};\n\nCounterItem.propTypes = {\n    counter: PropTypes.number,\n    label: PropTypes.string\n};\n\nexport default CounterItem;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Section, Panel, PanelItem } from '@redhat-cloud-services/frontend-components-pdf-generator';\nimport { DateFormat as dateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { Text } from '@react-pdf/renderer';\n\nimport CounterItem from '../Common/CounterItem';\nimport messages from '../../../../Messages';\n\nimport styles from '../Common/styles';\n\nconst FirstPage = ({ data,  intl }) => {\n    const { totalSystems, totalCves, totalRules } = data;\n    return (\n        <Fragment key=\"exec-first-page\">\n            <Text style={[styles.generated, styles.mb24]}>\n                {intl.formatMessage(messages.executiveReportGenerated,\n                    {\n                        date: dateFormat({ date: new Date(), type: 'exact' }).props.children\n                    }\n                )}\n            </Text>\n            <Text style={styles.mb16}>\n                {intl.formatMessage(messages.executiveReportHeader)}\n            </Text>\n            <Text style={styles.mb8}>\n                {intl.formatMessage(messages.executiveReportSubHeader, {\n                    systems: (\n                        <Text style={styles.bold}>\n                            {intl.formatMessage(messages.executiveReportHeaderSystems, { systems: totalSystems })}\n                        </Text>\n                    ),\n                    cves: (\n                        <Text style={styles.bold}>\n                            {intl.formatMessage(messages.executiveReportHeaderCVEs, { cves: totalCves })}\n                        </Text>\n                    ),\n                    rules: (\n                        <Text style={styles.bold}>\n                            {intl.formatMessage(messages.executiveReportHeaderRules, { rules: totalRules })}\n                        </Text>\n                    )\n                })}\n            </Text>\n\n            <Section withColumn={false}>\n                <Panel>\n                    <PanelItem style={styles.counterPanel}>\n                        <CounterItem\n                            counter={totalSystems}\n                            label={intl.formatMessage(messages.executiveReportAnalyzedSystems, { systems: totalSystems })}\n                        />\n                    </PanelItem>\n                    <PanelItem style={styles.counterPanel}>\n                        <CounterItem\n                            counter={totalCves}\n                            label={intl.formatMessage(messages.executiveReportAnalyzedCVEs, { cves: totalCves })}\n                        />\n                    </PanelItem>\n                    <PanelItem style={styles.counterPanel}>\n                        <CounterItem\n                            counter={totalRules}\n                            label={intl.formatMessage(messages.executiveReportAnalyzedRules, { rules: totalRules })}\n                        />\n                    </PanelItem>\n                </Panel>\n\n            </Section>\n        </Fragment>\n    );\n};\n\nFirstPage.propTypes = {\n    data: PropTypes.exact({\n        totalSystems: PropTypes.number,\n        totalCves: PropTypes.number,\n        totalRules: PropTypes.number\n    }),\n    intl: PropTypes.any\n};\nexport default FirstPage;\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { dateByType } from './helper';\nvar DateFormat = function (_a) {\n    var date = _a.date, _b = _a.type, type = _b === void 0 ? 'relative' : _b, extraTitle = _a.extraTitle, tooltipProps = _a.tooltipProps;\n    var dateObj = date instanceof Date ? date : new Date(date);\n    var invalid = date === undefined || date === null || dateObj.toString() === 'Invalid Date';\n    var dateType = invalid ? 'invalid' : type;\n    return _jsx(React.Fragment, { children: dateByType(dateType, tooltipProps, extraTitle)(dateObj) });\n};\nexport default DateFormat;\n//# sourceMappingURL=DateFormat.js.map","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n    Section,\n    Column,\n    Chart,\n    Table,\n    Panel,\n    PanelItem\n} from '@redhat-cloud-services/frontend-components-pdf-generator';\nimport { Text  } from '@react-pdf/renderer';\nimport { truncate } from 'lodash';\n\nimport styles from '../Common/styles';\nimport CVElabels from '../Common/CVElabels';\nimport messages from '../../../../Messages';\n\nconst SecondPage = ({ data, intl }) => {\n    const cveDesc = (description) => <Text style={styles.mb8}> {truncate(description, { length: 400 })}</Text>;\n\n    const {\n        recentCvesData,\n        CVSSChart,\n        CVSSData,\n        CVSSHeader,\n        topCves\n    } = data;\n\n    const [legendHeader, ...restCVSSHeader] = CVSSHeader;\n\n    return (\n        <Fragment key=\"first-section\">\n            <Text style={styles.header}>{intl.formatMessage(messages.cvesHeader)}</Text>\n            <Section\n                titleProps={{ style: styles.sectionTitle }}\n                title={intl.formatMessage(messages.executiveReportCvesByCVSS)}\n            >\n                <Column>\n                    <Chart\n                        chartType=\"pie\"\n                        subTitle=\"Cves\"\n                        title=\"100\"\n                        data={CVSSChart}\n                        colorSchema=\"orange\"\n                        legendHeader={legendHeader}\n                    />\n                </Column>\n                <Column>\n                    <Table\n                        withHeader\n                        rows={[restCVSSHeader, ...CVSSData]}\n                    />\n                </Column>\n            </Section>\n            <Section\n                titleProps={{ style: styles.sectionTitle }}\n                title={intl.formatMessage(messages.executiveReportRecentlyPublishedCves)}\n            >\n                <Panel style={{ flex: 1 }}>\n                    {\n                        recentCvesData.map(([label, value])=> (\n                            <Fragment key={label}>\n                                <PanelItem style={{ flex: 1 }} title={label}>\n                                    {value}\n                                </PanelItem>\n                            </Fragment>\n                        ))\n                    }\n                </Panel>\n            </Section>\n            <Section\n                titleProps={{ style: styles.sectionTitle }}\n                title={intl.formatMessage(messages.executiveReportTop3)}\n                withColumn={false}\n            >\n                {\n                    topCves.map(({\n                        synopsis,\n                        known_exploit: hasExploit,\n                        rule_presence: hasRule,\n                        description,\n                        cvss3_score: cvss3,\n                        systems_affected: systemsAffected\n                    }) => (\n                        <Panel\n                            key={synopsis}\n                            title={synopsis}\n                            description={cveDesc(description)}\n                            labels={<CVElabels hasExploit={hasExploit} hasRule={hasRule} intl={intl} />}\n                        >\n                            <PanelItem title={intl.formatMessage(messages.executiveReportPanelTitle)}>\n                                {Number.parseFloat(cvss3).toFixed(1)}\n                            </PanelItem>\n                            <PanelItem title={intl.formatMessage(messages.systemsExposed)}>\n                                {systemsAffected.toString()}\n                            </PanelItem>\n                        </Panel>\n                    ))\n\n                }\n            </Section>\n        </Fragment>\n    );\n};\n\nSecondPage.propTypes = {\n    data: PropTypes.exact({\n        recentCvesData: PropTypes.array,\n        CVSSChart: PropTypes.array,\n        CVSSData: PropTypes.array,\n        CVSSHeader: PropTypes.array,\n        topCves: PropTypes.array\n    }),\n    intl: PropTypes.any\n};\n\nexport default SecondPage;\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Section,\n    Column,\n    Chart,\n    Table,\n    Panel,\n    PanelItem,\n    InsightsLabel\n} from '@redhat-cloud-services/frontend-components-pdf-generator';\n\nimport { Text } from '@react-pdf/renderer';\nimport truncate from 'lodash/truncate';\n\nimport styles from '../Common/styles';\nimport messages from '../../../../Messages';\n\nconst ThirdPage = ({ data, intl }) => {\n\n    const rulesDesc = (rule, associatedCves) => (\n        <Fragment>\n            <Text style={styles.mb8}>{`${truncate(rule, { length: 320 })}\\n\\n`}</Text>\n            {intl.formatMessage(messages.associatedCves)} {associatedCves.map(cves => cves).join(', ')}\n        </Fragment>\n    );\n\n    const { topRules, rulesHeader, rulesBySeverityMap, rulesChart } = data;\n\n    return (\n        <Fragment key=\"first-section\">\n            <Text style={styles.header}>{intl.formatMessage(messages.rules)}</Text>\n            <Section\n                titleProps={{ style: styles.sectionTitle }}\n                title={intl.formatMessage(messages.executiveReportRulesSection)}\n            >\n                <Column>\n                    <Table\n                        withHeader\n                        rows={[\n                            rulesHeader,\n                            ...rulesBySeverityMap\n                        ]}\n                    />\n                </Column>\n                <Column>\n                    <Chart\n                        chartType=\"bar\"\n                        subTitle=\"rules\"\n                        title=\"Rules\"\n                        data={rulesChart}\n                        colorSchema=\"orange\"\n                        legend={false}\n                    />\n                </Column>\n            </Section>\n            <Section\n                titleProps={{ style: styles.sectionTitle }}\n                title={intl.formatMessage(messages.executiveReportTop3Rules)} withColumn={false}\n            >\n                {\n                    topRules.map((rule, key) => (\n                        <Panel\n                            key={key}\n                            title={rule.name}\n                            description={rulesDesc(rule.description, rule.associated_cves)}\n                        >\n                            <PanelItem title={intl.formatMessage(messages.executiveReportRulePanelTitle)}>\n                                <InsightsLabel variant={rule.severity}/>\n                            </PanelItem>\n                            <PanelItem title={intl.formatMessage(messages.systemsExposed)}>\n                                {rule.systems_affected.toString()}\n                            </PanelItem>\n                        </Panel>\n                    ))\n\n                }\n            </Section>\n        </Fragment>\n    );\n};\n\nThirdPage.propTypes = {\n    data: PropTypes.exact({\n        topRules: PropTypes.array,\n        rulesHeader: PropTypes.array,\n        rulesBySeverityMap: PropTypes.array,\n        rulesChart: PropTypes.array\n    }),\n    intl: PropTypes.any\n};\n\nexport default ThirdPage;\n","\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { CVSSHeader, rulesHeader, CVSSMapping, EXEC_RULES_SEVERITY_MAP, recentCvesMapping } from '../../../Helpers/constants';\n\nimport messages from '../../../Messages';\n\nimport FirstPage from './Executive/FirstPage';\nimport SecondPage  from './Executive/SecondPage';\nimport ThirdPage  from './Executive/ThirdPage';\n\nconst BuildExecReport = ({ data, intl }) => {\n\n    const {\n        cves_by_severity: cvesBySeverity,\n        recent_cves: recentCves,\n        top_cves: topCves,\n        cves_total: totalCves,\n        system_count: totalSystems,\n        top_rules: topRules,\n        rules_total: totalRules,\n        rules_by_severity: rulesBySeverity\n    } = data;\n\n    const rulesBySeverityMap = Object.keys(rulesBySeverity).reverse().map(severity =>{\n        return [\n            EXEC_RULES_SEVERITY_MAP[severity],\n            ...Object.values(rulesBySeverity[severity]).map(value => value.toString())\n        ];\n    });\n\n    const CVSSData = Object.values(cvesBySeverity).reverse().map((\n        { count, percentage, known_exploit_count: knownExploitsCount }) =>\n        [intl.formatMessage(messages.executiveReportOfTotal,\n            {\n                count,\n                percentage\n            }\n        ), knownExploitsCount.toString()]\n    );\n\n    const mapFields = (fields, data, percentageInfo = false) => {\n        let arr = [];\n\n        for (const field in fields) {\n            let { [field]: label } = fields;\n            let { [field]: fieldData } = data;\n\n            let value = fieldData.count !== undefined ? fieldData.count : fieldData;\n\n            if (percentageInfo && fieldData.percentage) {\n                value = fieldData.percentage;\n            }\n\n            arr.push([label, value.toString()]);\n        }\n\n        return arr;\n    };\n\n    const recentCvesData = mapFields(recentCvesMapping, { ...recentCves });\n\n    const cvssDataMap = mapFields(CVSSMapping, { ...cvesBySeverity }, true);\n\n    const CVSSChart = cvssDataMap.map(([x, y]) => ({ x, y: Number(y) }));\n\n    const rulesChart = rulesBySeverityMap.map(([name, , y]) => ({ name, x: name, y: Number(y) }));\n\n    const coverPageData = { totalSystems, totalCves, totalRules };\n\n    const cvesData = { recentCvesData, CVSSChart, CVSSData, CVSSHeader, topCves };\n\n    const rulesData = { topRules, rulesHeader, rulesBySeverityMap, rulesChart };\n\n    return [\n        <FirstPage key=\"first-page\" intl={intl} data={coverPageData} />,\n        <SecondPage key=\"second-page-cves\" intl={intl} data={cvesData} />,\n        <ThirdPage key=\"third-page-rules\" intl={intl} data={rulesData} />\n    ];\n};\n\nBuildExecReport.propTypes = {\n    data: PropTypes.exact({\n        cves_by_severity: PropTypes.object,\n        recent_cves: PropTypes.object,\n        top_cves: PropTypes.array,\n        cves_total: PropTypes.number,\n        system_count: PropTypes.number,\n        rules_by_severity: PropTypes.object,\n        rules_total: PropTypes.number,\n        top_rules: PropTypes.array\n    }),\n    intl: PropTypes.any\n};\n\nexport default BuildExecReport;\n","\nimport React, { useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { DownloadButton } from '@redhat-cloud-services/frontend-components-pdf-generator';\nimport { getExecutiveReport } from '../../../Helpers/APIHelper';\nimport messages from '../../../Messages';\nimport buildExecReport from './BuildExecReport';\nimport { Fragment } from 'react';\nimport { useNotification } from '../../../Helpers/Hooks';\nimport FooterPDF from './Common/FooterPDF';\nimport { NotAuthorizedNotification } from '../../../Helpers/constants';\n\nconst DownloadExecutive = () => {\n    const intl = useIntl();\n    const [isLoading, setLoading] = useState(false);\n    const [renderPDF, setRenderPDF] = useState(false);\n    const [hasRule, setSecurityRulesPresent] = useState(false);\n    const [hasExploit, setExploit] = useState(false);\n    const [addNotification, clearNotifications] = useNotification();\n\n    const dataFetch = async () => {\n        let data;\n\n        try {\n            data = await getExecutiveReport();\n        }\n        catch (error) {\n            clearNotifications();\n            addNotification(error.status === '403' ? NotAuthorizedNotification : {\n                variant: 'danger',\n                autoDismiss: false,\n                msg: intl.formatMessage(messages.notificationReportDownloadFailureTitle),\n                description: intl.formatMessage(messages.notificationReportDownloadFailureBody)\n            });\n\n            setLoading(false);\n\n            return [];\n        }\n\n        const report = buildExecReport({ data, intl });\n        setSecurityRulesPresent(() => data.top_cves.some(cve => cve.rule_presence === true));\n        setExploit(() => data.top_cves.some(cve => cve.known_exploit === true));\n\n        setLoading(false);\n\n        clearNotifications();\n        addNotification({ variant: 'success', msg: intl.formatMessage(messages.notificationReportDownloadSuccess) });\n\n        return [...report];\n    };\n\n    const [date] = new Date().toISOString().split('T');\n\n    const onDownloadButtonClick = () => {\n        setRenderPDF(true);\n        setLoading(true);\n\n        addNotification({ msg: intl.formatMessage(messages.notificationReportDownloadStart) });\n    };\n\n    return (\n        <Fragment>\n            {isLoading\n                ? intl.formatMessage(messages.loading)\n                : <a onClick={() => onDownloadButtonClick()}>\n                    {intl.formatMessage(messages.executiveReportCardButton)}\n                </a>\n            }\n            {\n                renderPDF && <DownloadButton\n                    fallback={<div />}\n                    type={intl.formatMessage(messages.executiveReportTitle)}\n                    fileName={`vulnerability_executive-report--${date}.pdf`}\n                    buttonProps={{ variant: 'link', isInline: true }}\n                    groupName=\"Red Hat Insights\"\n                    asyncFunction={dataFetch}\n                    allPagesHaveTitle={false}\n                    showButton={false}\n                    footer={<FooterPDF intl={intl} hasRule={hasRule} hasExploit={hasExploit} />}\n                    onSuccess={() => {\n                        setRenderPDF(false);\n                    }}\n\n                />\n            }\n        </Fragment>\n    );\n\n};\n\nexport default DownloadExecutive;\n","import React, { useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Select, SelectOption } from '@patternfly/react-core';\n\nconst SelectCustomSorter = ({ sorterData, setSorterData, selectProps, options }) => {\n    const [isOpen, setOpen] = useState(false);\n\n    const handleOnSelectChange = (optionName) => {\n        const optionValue = options.find(item => item.label === optionName).value;\n        setSorterData(optionValue);\n        setOpen(false);\n    };\n\n    return (\n        <Select\n            variant=\"single\"\n            direction=\"up\"\n            aria-label=\"Select Input\"\n            onToggle={() => setOpen(!isOpen)}\n            isOpen={isOpen}\n            placeholderText={options.find(item => item.value === sorterData).label}\n            key=\"custom-sorter\"\n            onSelect={(event, optionName) => { handleOnSelectChange(optionName); }}\n            width=\"auto\"\n            {... selectProps}\n        >\n            {options.map(item =>\n                <SelectOption width=\"100%\" key={item.label} value={item.label}/>\n            )}\n        </Select>\n    );\n};\n\nSelectCustomSorter.propTypes = {\n    sorterData: propTypes.string,\n    setSorterData: propTypes.func,\n    selectProps: propTypes.object,\n    options: propTypes.array\n};\n\nexport default SelectCustomSorter;\n","import React, { useState, useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport {\n    Modal,\n    Button,\n    Form,\n    FormGroup,\n    TextInput,\n    Checkbox,\n    TextArea,\n    ToggleGroup,\n    ToggleGroupItem\n} from '@patternfly/react-core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    getCveReportFilters,\n    PDF_REPORT_USER_NOTE_MAX_LENGTH,\n    CUSTOM_REPORT_SORT_OPTIONS\n} from '../../../Helpers/constants';\nimport messages from '../../../Messages';\nimport { intl } from '../../../Utilities/IntlProvider';\nimport styles from '../Reports/Common/styles';\nimport { isCvssRangeValid } from '../../PresentationalComponents/Filters/CustomFilters/CvssCustomFilter';\nimport SelectCustomSorter from '../../PresentationalComponents/Sorters/CustomSorters/SelectCustomSorter';\nimport TagFilter from '../../PresentationalComponents/Filters/CustomFilters/TagFilter';\nimport { fetchOperatingSystems } from '../../../Store/Actions/Actions';\nimport buildOSGroups from '../Reports/Common/buildOSGroups';\nimport { useHybridSystemFilterFlag } from '../../../Helpers/Hooks';\n\nconst ReportConfigModal = ({\n    isOpen: isModalOpen,\n    handleModalClose,\n    filterData,\n    sorterData,\n    setFilterData,\n    setSorterData,\n    handleDownloadButton,\n    columnsToInclude,\n    setColumnsToInclude,\n    userNotes,\n    setUserNotes,\n    reportTitle,\n    setReportTitle,\n    inheritGlobalTags,\n    setInheritGlobalTags,\n    globalFilterTags,\n    cvesWithoutErrata\n}) => {\n    const dispatch = useDispatch();\n    const [includeAllColumns, setIncludeAllColumns] = useState(true);\n    const operatingSystems = useSelector(({ ReportsPageStore }) => ReportsPageStore?.operatingSystems?.data);\n    const osGroups = buildOSGroups(operatingSystems || []);\n    const shouldUseHybridSystemFilter = useHybridSystemFilterFlag();\n    const CVE_REPORT_FILTERS = getCveReportFilters(shouldUseHybridSystemFilter);\n    const ACTIVE_FILTERS = [\n        'rule_presence',\n        'known_exploit',\n        'impact',\n        'cvss_filter',\n        'business_risk_id',\n        'status_id',\n        'publish_date',\n        'rhel_version',\n        'advisory_available'\n    ];\n\n    const handleCheckboxChange = (parameter, value) => {\n        if (value) {\n            setColumnsToInclude([...columnsToInclude, parameter]);\n        } else {\n            setColumnsToInclude(\n                columnsToInclude.filter((item) => item !== parameter)\n            );\n        }\n    };\n\n    useEffect(() => {\n        if (includeAllColumns) {\n            setColumnsToInclude(Object.keys(CVE_REPORT_FILTERS));\n        }\n\n    }, [includeAllColumns, setColumnsToInclude]);\n\n    useEffect(() => {\n        dispatch(fetchOperatingSystems());\n    }, [dispatch]);\n\n    return (\n        <Modal\n            width=\"50rem\"\n            title={intl.formatMessage(messages.configModalTitle)}\n            ouiaId=\"custom-report-modal\"\n            isOpen={isModalOpen}\n            onClose={() => {\n                handleModalClose();\n                setInheritGlobalTags(true);\n            }}\n            actions={[\n                <Button\n                    key=\"export\"\n                    variant=\"primary\"\n                    aria-label=\"Handle download button\"\n                    onClick={handleDownloadButton}\n                    isDisabled={\n                        !isCvssRangeValid(filterData.cvss_filter.from, filterData.cvss_filter.to) ||\n                        userNotes.length > PDF_REPORT_USER_NOTE_MAX_LENGTH\n                    }\n                >\n                    {intl.formatMessage(messages.configModalExportReport)}\n                </Button>,\n                <Button\n                    key=\"cancel\"\n                    variant=\"secondary\"\n                    onClick={() => {\n                        handleModalClose();\n                        setInheritGlobalTags(true);\n                    }}\n                >\n                    {intl.formatMessage(messages.cancel)}\n                </Button>\n            ]}\n        >\n            <Form>\n                <FormGroup label={intl.formatMessage(messages.customReportTitleLabel)} fieldId=\"horizontal-form-name\">\n                    <TextInput\n                        value={reportTitle}\n                        onChange={(value) => setReportTitle(value)}\n                        type=\"text\"\n                        className=\"report-text-input\"\n                        id=\"horizontal-form-name\"\n                    />\n                </FormGroup>\n                <FormGroup\n                    label={intl.formatMessage(messages.customReportFilterDataByLabel)}\n                >\n                    <div className=\"custom-report-select-wrapper\">\n                        {ACTIVE_FILTERS.map((filterId) =>\n                            CVE_REPORT_FILTERS[filterId]?.component({\n                                ...CVE_REPORT_FILTERS[filterId],\n                                filterData,\n                                setFilterData,\n                                selectProps: {\n                                    className: 'pf-u-mr-sm pf-u-mb-sm',\n                                    ...CVE_REPORT_FILTERS[filterId].selectProps\n                                },\n                                isHidden: !cvesWithoutErrata && filterId === 'advisory_available',\n                                options: CVE_REPORT_FILTERS[filterId].items,\n                                filterId,\n                                filterName: CVE_REPORT_FILTERS[filterId].title,\n                                ...(filterId === 'rhel_version' ? {\n                                    // overriding parameters specific to the OS filter\n                                    options: Object.values(osGroups).flat(),\n                                    groups: osGroups\n                                } : {})\n                            })\n                        )}\n                    </div>\n                </FormGroup>\n                <FormGroup\n                    label={intl.formatMessage(messages.tagFilterTitle)}\n                >\n                    <TagFilter\n                        onEdit={() => setInheritGlobalTags(false)}\n                        selectedTags={filterData.tags}\n                        setSelectedTags={tags => setFilterData({ ...filterData, tags })}\n                        globalTags={globalFilterTags}\n                        inheritGlobalTags={inheritGlobalTags}\n                    />\n                    {globalFilterTags?.length > 0 && inheritGlobalTags &&\n                        <div className=\"pf-u-font-size-sm pf-u-mt-sm\">\n                            {intl.formatMessage(messages.tagFilterGlobal)}\n                            <a className=\"pf-u-ml-md\" onClick={() => {\n                                setInheritGlobalTags(false);\n                                filterData.tags = [];\n                            }}>\n                                {intl.formatMessage(messages.tagFilterClear)}\n                            </a>\n                        </div>\n                    }\n                </FormGroup>\n\n                <FormGroup\n                    label={intl.formatMessage(messages.customReportDataToIncludeLabel)}\n                >\n                    <ToggleGroup aria-label=\"Default with single selectable\">\n                        <ToggleGroupItem\n                            text={intl.formatMessage(messages.customReportDataToggleAll)}\n                            isSelected={includeAllColumns}\n                            onChange={() => setIncludeAllColumns(true)} />\n                        <ToggleGroupItem\n                            text={intl.formatMessage(messages.customReportDataToggleCustom)}\n                            isSelected={!includeAllColumns}\n                            onChange={() => setIncludeAllColumns(false)} />\n                    </ToggleGroup>\n\n                    {includeAllColumns ||\n                        <div style={styles.columns}>\n                            <Checkbox\n                                id=\"cve_id\"\n                                label=\"CVE ID\"\n                                isChecked\n                                isDisabled\n                                className=\"pf-u-mb-md\"\n                            />\n                            {\n                                Object.entries(CVE_REPORT_FILTERS)\n                                    .filter(([key]) => cvesWithoutErrata || key !== 'advisory_available')\n                                    .filter(([, value]) => value.hasColumn !== false)\n                                    .map(([key, value]) =>\n                                        <Checkbox\n                                            id={key}\n                                            key={key}\n                                            label={value.title}\n                                            isChecked={columnsToInclude.includes(key)}\n                                            onChange={(newValue) =>\n                                                handleCheckboxChange(key, newValue)\n                                            }\n                                            className=\"pf-u-mb-md\"\n                                        />\n                                    )\n                            }\n                        </div>\n                    }\n                </FormGroup>\n\n                <FormGroup\n                    label={intl.formatMessage(messages.customReportSortDataByLabel)}\n                >\n                    <div className=\"custom-report-select-wrapper\">\n                        <SelectCustomSorter sorterData={sorterData} setSorterData={setSorterData}\n                            selectProps={{ className: 'pf-u-mr-sm pf-u-mb-sm' }}\n                            options={CUSTOM_REPORT_SORT_OPTIONS} />\n                    </div>\n                </FormGroup>\n\n                <FormGroup\n                    label={intl.formatMessage(messages.customReportUserNotesLabel)}\n                    fieldId=\"user-notes-box\"\n                    helperTextInvalid={intl.formatMessage(messages.customReportUserNoteTooLong)}\n                    validated={userNotes.length > PDF_REPORT_USER_NOTE_MAX_LENGTH && 'error'}\n                >\n                    <TextArea\n                        value={userNotes}\n                        onChange={(value) => setUserNotes(value)}\n                        type=\"text\"\n                        id=\"user-notes-box\"\n                        className=\"report-text-input\"\n                        resizeOrientation=\"vertical\"\n                        style={{ minHeight: '4em' }}\n                        validated={userNotes.length > PDF_REPORT_USER_NOTE_MAX_LENGTH && 'error'}\n                    />\n                </FormGroup>\n            </Form>\n        </Modal>\n    );\n};\n\nReportConfigModal.propTypes = {\n    isOpen: propTypes.bool,\n    filterData: propTypes.object,\n    sorterData: propTypes.string,\n    setFilterData: propTypes.func,\n    setSorterData: propTypes.func,\n    handleModalClose: propTypes.func,\n    handleDownloadButton: propTypes.func,\n    columnsToInclude: propTypes.array,\n    setColumnsToInclude: propTypes.func,\n    userNotes: propTypes.string,\n    setUserNotes: propTypes.func,\n    reportTitle: propTypes.string,\n    setReportTitle: propTypes.func,\n    inheritGlobalTags: propTypes.bool,\n    setInheritGlobalTags: propTypes.func,\n    globalFilterTags: propTypes.array,\n    cvesWithoutErrata: propTypes.bool\n};\n\nexport default ReportConfigModal;\n","import { compareVersions } from '../../../../Helpers/MiscHelper';\n\nconst buildOSGroups = (osVersions = []) => {\n    let groups = osVersions.reduce((acc, version) => {\n        const { major, minor } = version;\n        const groupName = `RHEL ${major}`;\n\n        acc[groupName] = [\n            ...(acc[groupName] || []),\n            {\n                label: `RHEL ${major}.${minor}`,\n                value: `${major}.${minor}`\n            }\n        ];\n\n        return acc;\n    }, {});\n\n    // sort by group, desc\n    groups = Object.entries(groups);\n    groups.sort((a, b) => compareVersions(a[0], b[0], false));\n\n    // sort versions, desc\n    groups = groups.map(([groupName, versions]) => [\n        groupName,\n        Array.from(versions).sort((a, b) =>\n            compareVersions(a.value, b.value, false)\n        )\n    ]);\n\n    return Object.fromEntries(groups);\n};\n\nexport default buildOSGroups;\n","import React from 'react';\nimport chartPieSolid from '../../../../static/images/chart-pie-solid.svg';\nimport PropTypes from 'prop-types';\n\nexport const ChartPieSolid = ({ style }) => (\n    <img style={style} src={chartPieSolid} alt=\"Static pie solid\" />\n);\n\nChartPieSolid.propTypes = {\n    style: PropTypes.object\n};\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Grid, GridItem, Card, CardTitle, CardBody, CardFooter } from '@patternfly/react-core';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { FileAltIcon } from '@patternfly/react-icons';\nimport DownloadExecutive from './DownloadExecutive';\nimport ReportConfigModal from '../Modals/ReportConfigModal';\nimport messages from '../../../Messages';\nimport { intl } from '../../../Utilities/IntlProvider';\nimport { ChartPieSolid } from '../../PresentationalComponents/CustomIcons/CustomIcons';\nimport Header from '../../PresentationalComponents/Header/Header';\nimport DownloadCVEsReport from '../Reports/DownloadCVEsReport';\nimport { buildFilters, constructReportParameters } from '../../../Helpers/ReportsHelper';\nimport { getCveReportFilters, DEFAULT_FILTER_DATA, CUSTOM_REPORT_DEFAULT_SORT, PERMISSIONS } from '../../../Helpers/constants';\nimport styles from './Common/styles';\nimport { clearNotifications } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { useHybridSystemFilterFlag, useRbac } from '../../../Helpers/Hooks';\nimport NoAccessPage from '../../PresentationalComponents/StaticPages/NoAccessPage';\nimport Spinner from '@redhat-cloud-services/frontend-components/Spinner';\nimport { getCveListByAccount } from '../../../Helpers/APIHelper';\n\nconst ReportsPage = () => {\n    const [[canDoAdvancedReporting, canReadVulnerabilities, canReadInventory], isLoading]\n        = useRbac([PERMISSIONS.advancedReporting, PERMISSIONS.readVulnerabilityResults, PERMISSIONS.readHosts], '');\n\n    const shouldUseHybridSystemFilter = useHybridSystemFilterFlag();\n    const CVE_REPORT_FILTERS = getCveReportFilters(shouldUseHybridSystemFilter);\n    const [isModalOpen, setModalOpen] = useState(false);\n    const [downloadCVEReport, setDownloadCVEReport] = useState(false);\n    const [reportTitle, setReportTitle] = useState(intl.formatMessage(messages.customReportDefaultTitle));\n    const [userNotes, setUserNotes] = useState('');\n    const [columnsToInclude, setColumnsToInclude] = useState(Object.keys(CVE_REPORT_FILTERS));\n    const [filterData, setFilterData] = useState(DEFAULT_FILTER_DATA);\n    const [sorterData, setSorterData] = useState(CUSTOM_REPORT_DEFAULT_SORT);\n    const [inheritGlobalTags, setInheritGlobalTags] = useState(true);\n    const [cvesWithoutErrata, setCvesWithoutErrata] = useState(false);\n\n    const globalFilterTags = useSelector(({ ReportsPageStore }) => ReportsPageStore.parameters.tags) ?? [];\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        // this dummy request is to get the value of cves_without_errata feature flag\n        // we only care about meta section of this response so the limit is 1\n        getCveListByAccount({ limit: 1 }).then(response => {\n            response?.meta?.cves_without_errata && setCvesWithoutErrata(true);\n        });\n\n        return () => {\n            dispatch(clearNotifications());\n        };\n    }, [dispatch]);\n\n    const handleModalClose = () => {\n        setReportTitle(intl.formatMessage(messages.customReportDefaultTitle));\n        setUserNotes('');\n        setColumnsToInclude(Object.keys(CVE_REPORT_FILTERS));\n        setFilterData(DEFAULT_FILTER_DATA);\n        setSorterData(CUSTOM_REPORT_DEFAULT_SORT);\n        setDownloadCVEReport(false);\n        setModalOpen(false);\n    };\n\n    const handleDownloadButton = () => {\n        setDownloadCVEReport(true);\n        setModalOpen(false);\n    };\n\n    const dissectTag = tag => {\n        const [namespace, keyValue] = tag.split('/');\n        const [key, value] = keyValue.split('=');\n        return { string: tag, namespace, key, value };\n    };\n\n    return (\n        isLoading ? <Spinner centered /> :\n            (canDoAdvancedReporting && canReadInventory) ? (\n                <React.Fragment>\n                    <Header title={intl.formatMessage(messages.reportsPageTitle)} showBreadcrumb={false} />\n                    <Main>\n                        <Grid hasGutter lg={3} md={4} sm={12}>\n                            <GridItem>\n                                <Card className=\"report-card\">\n                                    <CardTitle>\n                                        <ChartPieSolid style={styles.pieChartIcon} />\n                                        <span className=\"pf-u-ml-sm\" style={styles.cardTitle}>\n                                            {intl.formatMessage(messages.executiveReportCardTitle)}\n                                        </span>\n                                    </CardTitle>\n                                    <CardBody>\n                                        {intl.formatMessage(messages.executiveReportCardDescription)}\n                                    </CardBody>\n                                    <CardFooter>\n                                        <DownloadExecutive />\n                                    </CardFooter>\n                                </Card>\n                            </GridItem>\n                            {canReadVulnerabilities &&\n                                <GridItem>\n                                    <Card className=\"report-card\">\n                                        <CardTitle>\n                                            <FileAltIcon size=\"lg\" color=\"var(--pf-global--link--Color)\" />\n                                            <span className=\"pf-u-ml-sm\" style={styles.cardTitle}>\n                                                {intl.formatMessage(messages.customReportCardTitle)}\n                                            </span>\n                                        </CardTitle>\n                                        <CardBody>\n                                            {intl.formatMessage(messages.customReportCardDescription)}\n                                        </CardBody>\n                                        <CardFooter>\n                                            <a\n                                                className=\"create-report\"\n                                                aria-label=\"Custom report button\"\n                                                onClick={() => setModalOpen(true)}\n                                            >\n                                                {intl.formatMessage(messages.customReportCardButton)}\n                                            </a>\n                                        </CardFooter>\n                                    </Card>\n                                </GridItem>\n                            }\n                        </Grid>\n                    </Main>\n                    <ReportConfigModal\n                        aria-label=\"Report Config Modal\"\n                        isOpen={isModalOpen}\n                        columnsToInclude={columnsToInclude}\n                        setColumnsToInclude={setColumnsToInclude}\n                        filterData={filterData}\n                        sorterData={sorterData}\n                        userNotes={userNotes}\n                        reportTitle={reportTitle}\n                        setReportTitle={setReportTitle}\n                        setUserNotes={setUserNotes}\n                        setFilterData={setFilterData}\n                        setSorterData={setSorterData}\n                        handleModalClose={(handleModalClose)}\n                        handleDownloadButton={handleDownloadButton}\n                        inheritGlobalTags={inheritGlobalTags}\n                        setInheritGlobalTags={setInheritGlobalTags}\n                        globalFilterTags={globalFilterTags}\n                        cvesWithoutErrata={cvesWithoutErrata}\n                    />\n\n                    {downloadCVEReport && <DownloadCVEsReport\n                        aria-label=\"Download CVEs Report\"\n                        key=\"download\"\n                        reportData={{\n                            header: columnsToInclude,\n                            reportTitle,\n                            userNotes\n                        }}\n                        showButton={false}\n                        onSuccess={handleModalClose}\n                        params={constructReportParameters({ ...filterData, tags: inheritGlobalTags\n                            ? globalFilterTags?.map(dissectTag) : filterData.tags }, sorterData)}\n                        filters={buildFilters({ ...filterData, tags: inheritGlobalTags\n                            ? globalFilterTags?.map(dissectTag) : filterData.tags }, shouldUseHybridSystemFilter)}\n                        isReportDynamic\n                        label={messages.configModalExportReport}\n                    />}\n                </React.Fragment>\n            ) : (\n                <NoAccessPage\n                    title={intl.formatMessage(messages.reportsPageTitle)}\n                    emptyStateTitle={intl.formatMessage(messages.emptyStateNoAccessReportsPage)}\n                />\n            )\n    );\n};\n\nexport default ReportsPage;\n","import { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { intl } from '../Utilities/IntlProvider';\nimport messages from '../Messages';\nimport { NotAuthorizedNotification } from './constants';\n\nclass DownloadReport {\n    constructor() {\n        this.defaultParams = {\n            page: 1,\n            page_size: Math.min(Number.MAX_SAFE_INTEGER, 9007199254740991)\n        };\n\n        this.params = {\n            cve: null\n        };\n\n        this.pages = ['systems-exposed', 'system-cves', 'cves', 'system-list'];\n        this.formats = ['csv', 'json'];\n\n        this.notifications = {\n            start: {\n                variant: 'info',\n                title: intl.formatMessage(messages.notificationReportDownloadStart)\n            },\n            success: {\n                variant: 'success',\n                title: intl.formatMessage(messages.notificationReportDownloadSuccess)\n            },\n            failure: {\n                variant: 'danger',\n                autoDismiss: false,\n                title: intl.formatMessage(messages.notificationReportDownloadFailureTitle),\n                description: intl.formatMessage(messages.notificationReportDownloadFailureBody)\n            }\n        };\n    }\n\n    filename = (page) => {\n        const date = new Date().toISOString().replace(/[T:]/g, '-').split('.')[0] + '-utc';\n\n        switch (page) {\n            case 'reports':\n                return `vulnerability_cves-report--${new Date().toISOString().split('T')[0]}`;\n            case 'systems-exposed':\n                return `vulnerability_systems-exposed-${this.params.cve}--${date}`;\n            case 'system-list':\n                return `vulnerability_systems--${date}`;\n            default:\n                return `vulnerability_cves--${date}`;\n\n        }\n    };\n\n    checkTypes = (fetchData, page, format) => {\n        if (typeof fetchData !== 'function') {\n            throw `exec expects the 1st param to be funtion. Received ${typeof fetchData}`;\n        }\n\n        if (!this.pages.includes(page)) {\n            throw `Page ${page} does not exist`;\n        }\n\n        if (!this.formats.includes(format)) {\n            throw `Format ${format} is not supported`;\n        }\n    };\n\n    /**\n     * Execute and download the report\n     *\n     * @param {Function} fetchData - Function to be called in order to fetch data.\n     * @param {Object || Array} params - Object to be sent as request params. If you need to pass extra argument, pass an array.\n     * @param {String} format - Supported formats to download are CSV and JSON.\n     * @param {String} page - Name of the page based on which the filename will be determined.\n     * @returns {void}\n     */\n    exec = async (fetchData, params, format, page, showNotification, clearNotification, shouldUseHybridSystemFilter = false) => {\n        showNotification(this.notifications.start);\n\n        this.checkTypes(fetchData, page, format);\n        this.params.cve = params?.id || null;\n\n        try {\n            let { payload } = await fetchData(\n                {\n                    ...params.id && { id: params.id },\n                    ...params,\n                    ...this.defaultParams,\n                    data_format: format,\n                    report: 'true'\n                },\n                shouldUseHybridSystemFilter\n            );\n\n            let { data: response } = await payload;\n            let data = format === 'json' ? JSON.stringify(response) : response;\n\n            downloadFile(data, this.filename(page), format);\n\n            clearNotification();\n            showNotification(this.notifications.success);\n        } catch (error) {\n            clearNotification();\n            showNotification(error.status === '403' ? NotAuthorizedNotification : this.notifications.failure);\n\n            throw `${error}`;\n        }\n    };\n}\n\nexport default new DownloadReport();\n","var baseProperty = require('./_baseProperty');\n\n/**\n * Gets the size of an ASCII `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\nvar asciiSize = baseProperty('length');\n\nmodule.exports = asciiSize;\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n","var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n","var asciiSize = require('./_asciiSize'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeSize = require('./_unicodeSize');\n\n/**\n * Gets the number of symbols in `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the string size.\n */\nfunction stringSize(string) {\n  return hasUnicode(string)\n    ? unicodeSize(string)\n    : asciiSize(string);\n}\n\nmodule.exports = stringSize;\n","var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Gets the size of a Unicode `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\nfunction unicodeSize(string) {\n  var result = reUnicode.lastIndex = 0;\n  while (reUnicode.test(string)) {\n    ++result;\n  }\n  return result;\n}\n\nmodule.exports = unicodeSize;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n","var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n","var baseToString = require('./_baseToString'),\n    castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    isObject = require('./isObject'),\n    isRegExp = require('./isRegExp'),\n    stringSize = require('./_stringSize'),\n    stringToArray = require('./_stringToArray'),\n    toInteger = require('./toInteger'),\n    toString = require('./toString');\n\n/** Used as default options for `_.truncate`. */\nvar DEFAULT_TRUNC_LENGTH = 30,\n    DEFAULT_TRUNC_OMISSION = '...';\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Truncates `string` if it's longer than the given maximum string length.\n * The last characters of the truncated string are replaced with the omission\n * string which defaults to \"...\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to truncate.\n * @param {Object} [options={}] The options object.\n * @param {number} [options.length=30] The maximum string length.\n * @param {string} [options.omission='...'] The string to indicate text is omitted.\n * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n * @returns {string} Returns the truncated string.\n * @example\n *\n * _.truncate('hi-diddly-ho there, neighborino');\n * // => 'hi-diddly-ho there, neighbo...'\n *\n * _.truncate('hi-diddly-ho there, neighborino', {\n *   'length': 24,\n *   'separator': ' '\n * });\n * // => 'hi-diddly-ho there,...'\n *\n * _.truncate('hi-diddly-ho there, neighborino', {\n *   'length': 24,\n *   'separator': /,? +/\n * });\n * // => 'hi-diddly-ho there...'\n *\n * _.truncate('hi-diddly-ho there, neighborino', {\n *   'omission': ' [...]'\n * });\n * // => 'hi-diddly-ho there, neig [...]'\n */\nfunction truncate(string, options) {\n  var length = DEFAULT_TRUNC_LENGTH,\n      omission = DEFAULT_TRUNC_OMISSION;\n\n  if (isObject(options)) {\n    var separator = 'separator' in options ? options.separator : separator;\n    length = 'length' in options ? toInteger(options.length) : length;\n    omission = 'omission' in options ? baseToString(options.omission) : omission;\n  }\n  string = toString(string);\n\n  var strLength = string.length;\n  if (hasUnicode(string)) {\n    var strSymbols = stringToArray(string);\n    strLength = strSymbols.length;\n  }\n  if (length >= strLength) {\n    return string;\n  }\n  var end = length - stringSize(omission);\n  if (end < 1) {\n    return omission;\n  }\n  var result = strSymbols\n    ? castSlice(strSymbols, 0, end).join('')\n    : string.slice(0, end);\n\n  if (separator === undefined) {\n    return result + omission;\n  }\n  if (strSymbols) {\n    end += (result.length - end);\n  }\n  if (isRegExp(separator)) {\n    if (string.slice(end).search(separator)) {\n      var match,\n          substring = result;\n\n      if (!separator.global) {\n        separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n      }\n      separator.lastIndex = 0;\n      while ((match = separator.exec(substring))) {\n        var newEnd = match.index;\n      }\n      result = result.slice(0, newEnd === undefined ? end : newEnd);\n    }\n  } else if (string.indexOf(baseToString(separator), end) != end) {\n    var index = result.lastIndexOf(separator);\n    if (index > -1) {\n      result = result.slice(0, index);\n    }\n  }\n  return result + omission;\n}\n\nmodule.exports = truncate;\n"],"names":["CardFooter","_a","children","className","component","props","__rest","Component","Object","assign","css","cardFooter","displayName","CardTitle","cardId","registerTitleId","titleId","cardTitle","id","undefined","FormBase","isHorizontal","isWidthLimited","maxWidth","innerRef","noValidate","style","form","modifiers","horizontal","limitWidth","ref","Form","FormGroup","label","labelInfo","labelIcon","isRequired","validated","isInline","hasNoPaddingTop","isStack","helperText","isHelperTextBeforeField","helperTextInvalid","helperTextIcon","helperTextInvalidIcon","fieldId","role","validHelperText","formHelperText","success","warning","formHelperTextIcon","inValidHelperText","error","helperTextToDisplay","isGroupOrRadioGroup","LabelComponent","labelContent","formLabel","htmlFor","formLabelText","formLabelRequired","randomId","formGroup","formGroupLabel","info","noPaddingTop","formGroupLabelMain","formGroupLabelInfo","formGroupControl","inline","stack","TextAreResizeOrientation","TextAreaReadOnlyVariant","TextAreaBase","constructor","super","this","inputRef","setAutoHeight","field","setProperty","computed","window","getComputedStyle","height","parseInt","getPropertyValue","scrollHeight","handleChange","event","currentTarget","autoResize","onChange","value","console","componentDidMount","current","render","isDisabled","isIconSprite","isReadOnly","readOnlyVariant","resizeOrientation","disabled","orientation","formControl","iconSprite","plain","both","defaultValue","required","readOnly","defaultProps","TextArea","ToggleGroup","isCompact","areAllGroupsDisabled","ariaLabel","toggleGroupItemList","map","child","type","name","toggleGroup","compact","ToggleGroupItemVariant","ToggleGroupItemElement","variant","toggleGroupIcon","toggleGroupText","ToggleGroupItem","text","icon","isSelected","buttonId","warn","toggleGroupItem","toggleGroupButton","selected","onClick","FileAltIconConfig","width","svgPath","yOffset","xOffset","FileAltIcon","NoAccessPage","_ref","intl","_ref$title","title","formatMessage","messages","vulnerabilitiesHeader","emptyStateTitle","React","Header","showBreadcrumb","Main","NotAuthorized","propTypes","injectIntl","__assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","hour","minute","day","month","year","formatTime","number","unit","concat","relativeTimeTable","rightBound","Infinity","description","date","Math","round","second","exact","toUTCString","split","slice","trim","dateStringByType","onlyDate","relative","reduce","acc","Date","now","getTime","invalid","dateByType","tooltipProps","extraTitle","element","Tooltip","content","addTooltip","CounterItem","counter","View","Text","styles","counterLabel","PropTypes","FirstPage","_b","dateObj","dateType","data","totalSystems","totalCves","totalRules","Fragment","key","generated","mb24","executiveReportGenerated","toString","mb16","executiveReportHeader","mb8","executiveReportSubHeader","systems","bold","executiveReportHeaderSystems","cves","executiveReportHeaderCVEs","rules","executiveReportHeaderRules","Section","withColumn","Panel","PanelItem","counterPanel","executiveReportAnalyzedSystems","executiveReportAnalyzedCVEs","executiveReportAnalyzedRules","SecondPage","arr","cveDesc","_truncate","recentCvesData","CVSSChart","CVSSData","CVSSHeader","topCves","_CVSSHeader","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","legendHeader","restCVSSHeader","header","cvesHeader","titleProps","sectionTitle","executiveReportCvesByCVSS","Column","Chart","chartType","subTitle","colorSchema","Table","withHeader","rows","_toConsumableArray","executiveReportRecentlyPublishedCves","flex","_ref2","_ref3","_slicedToArray","executiveReportTop3","_ref4","synopsis","hasExploit","known_exploit","hasRule","rule_presence","cvss3","cvss3_score","systemsAffected","systems_affected","labels","CVElabels","executiveReportPanelTitle","Number","parseFloat","toFixed","systemsExposed","ThirdPage","rulesDesc","rule","associatedCves","truncate","join","topRules","rulesHeader","rulesBySeverityMap","rulesChart","executiveReportRulesSection","legend","executiveReportTop3Rules","associated_cves","executiveReportRulePanelTitle","InsightsLabel","severity","BuildExecReport","cvesBySeverity","cves_by_severity","recentCves","recent_cves","top_cves","cves_total","system_count","top_rules","rules_total","rulesBySeverity","rules_by_severity","keys","reverse","EXEC_RULES_SEVERITY_MAP","values","count","percentage","knownExploitsCount","known_exploit_count","executiveReportOfTotal","mapFields","fields","percentageInfo","fieldData","push","recentCvesMapping","_objectSpread","CVSSMapping","x","y","_ref5","_ref6","coverPageData","cvesData","rulesData","useIntl","_useState","useState","_useState2","isLoading","setLoading","_useState3","_useState4","renderPDF","setRenderPDF","_useState5","_useState6","setSecurityRulesPresent","_useState7","_useState8","setExploit","_useNotification","useNotification","_useNotification2","addNotification","clearNotifications","dataFetch","_asyncToGenerator","_regeneratorRuntime","_callee","report","_context","prev","next","getExecutiveReport","sent","t0","status","NotAuthorizedNotification","autoDismiss","msg","notificationReportDownloadFailureTitle","notificationReportDownloadFailureBody","abrupt","buildExecReport","some","cve","notificationReportDownloadSuccess","stop","_Date$toISOString$spl","toISOString","loading","notificationReportDownloadStart","executiveReportCardButton","DownloadButton","fallback","executiveReportTitle","fileName","buttonProps","groupName","asyncFunction","allPagesHaveTitle","showButton","footer","FooterPDF","onSuccess","SelectCustomSorter","sorterData","setSorterData","selectProps","options","isOpen","setOpen","Select","_extends","direction","onToggle","placeholderText","find","item","onSelect","optionName","optionValue","handleOnSelectChange","SelectOption","ReportConfigModal","isModalOpen","handleModalClose","filterData","setFilterData","handleDownloadButton","columnsToInclude","setColumnsToInclude","userNotes","setUserNotes","reportTitle","setReportTitle","inheritGlobalTags","setInheritGlobalTags","globalFilterTags","cvesWithoutErrata","dispatch","useDispatch","includeAllColumns","setIncludeAllColumns","osGroups","groups","version","major","minor","entries","sort","a","b","compareVersions","versions","Array","from","fromEntries","buildOSGroups","useSelector","_ReportsPageStore$ope","ReportsPageStore","operatingSystems","shouldUseHybridSystemFilter","useHybridSystemFilterFlag","CVE_REPORT_FILTERS","getCveReportFilters","useEffect","fetchOperatingSystems","Modal","configModalTitle","ouiaId","onClose","actions","Button","isCvssRangeValid","cvss_filter","to","PDF_REPORT_USER_NOTE_MAX_LENGTH","configModalExportReport","cancel","customReportTitleLabel","TextInput","customReportFilterDataByLabel","filterId","_CVE_REPORT_FILTERS$f","isHidden","items","filterName","flat","tagFilterTitle","TagFilter","onEdit","selectedTags","tags","setSelectedTags","globalTags","tagFilterGlobal","tagFilterClear","customReportDataToIncludeLabel","customReportDataToggleAll","customReportDataToggleCustom","columns","Checkbox","isChecked","filter","hasColumn","_ref7","_ref8","includes","newValue","parameter","handleCheckboxChange","customReportSortDataByLabel","CUSTOM_REPORT_SORT_OPTIONS","customReportUserNotesLabel","customReportUserNoteTooLong","minHeight","ChartPieSolid","src","chartPieSolid","alt","_useSelector","_useRbac","useRbac","PERMISSIONS","advancedReporting","readVulnerabilityResults","readHosts","_useRbac2","_useRbac2$","canDoAdvancedReporting","canReadVulnerabilities","canReadInventory","setModalOpen","downloadCVEReport","setDownloadCVEReport","customReportDefaultTitle","_useState9","_useState10","_useState11","DEFAULT_FILTER_DATA","_useState12","_useState13","CUSTOM_REPORT_DEFAULT_SORT","_useState14","_useState15","_useState16","_useState17","_useState18","setCvesWithoutErrata","parameters","getCveListByAccount","limit","then","response","_response$meta","meta","cves_without_errata","dissectTag","tag","_tag$split","_tag$split2","namespace","_keyValue$split","_keyValue$split2","string","Spinner","centered","reportsPageTitle","Grid","hasGutter","lg","md","sm","GridItem","Card","pieChartIcon","executiveReportCardTitle","CardBody","executiveReportCardDescription","DownloadExecutive","size","color","customReportCardTitle","customReportCardDescription","customReportCardButton","DownloadCVEsReport","reportData","params","constructReportParameters","filters","buildFilters","isReportDynamic","emptyStateNoAccessReportsPage","_createClass","DownloadReport","_this","_classCallCheck","filename","page","replace","checkTypes","fetchData","format","_typeof","pages","formats","exec","showNotification","clearNotification","_yield$fetchData","payload","_yield$payload","_args","notifications","start","defaultParams","data_format","JSON","stringify","downloadFile","failure","_x","_x2","_x3","_x4","_x5","_x6","page_size","min","MAX_SAFE_INTEGER","asciiSize","baseProperty","module","exports","baseSlice","array","end","reHasUnicode","RegExp","test","hasUnicode","unicodeSize","asciiToArray","unicodeToArray","rsAstralRange","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsModifier","rsOptVar","rsSeq","rsSymbol","reUnicode","result","lastIndex","match","baseIsEqual","other","baseToString","castSlice","isObject","isRegExp","stringSize","stringToArray","toInteger","reFlags","omission","separator","strLength","strSymbols","search","substring","global","source","newEnd","index","indexOf","lastIndexOf"],"sourceRoot":""}