{"version":3,"file":"js/SystemDetailsPage.1653404128690.036381b32b668cf80cc5.js","mappings":"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","sources":["webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/InventoryLoadError.js","webpack:///./src/Components/SmartComponents/SystemDetailsPage/SystemDetails.js","webpack:///./src/Store/Reducers/SystemDetailsPageStore.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/DetailWrapper.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/InventoryDetailHead.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/AppInfo.js","webpack:///./src/Components/SmartComponents/SystemDetailsPage/SystemDetailsPage.js"],"sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nvar InventoryLoadError = function InventoryLoadError(_ref) {\n  var component = _ref.component,\n      props = _objectWithoutProperties(_ref, [\"component\"]);\n\n  useEffect(function () {\n    console.error(\"Unable to load iventory component. Failed to load \".concat(component, \".\"), props);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"h1\", null, \"Unable to load inventory component\"), /*#__PURE__*/React.createElement(\"h2\", null, \"Failed to load \", component), /*#__PURE__*/React.createElement(\"code\", null, \"More info can be found in browser console output.\"));\n};\n\nInventoryLoadError.propTypes = {\n  component: PropTypes.string\n};\nexport default InventoryLoadError;","import React from 'react';\nimport propTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { ConnectedSystemCves } from '../SystemCves/SystemCves';\nimport {\n    EmptyStateExcludedSystem,\n    NotAuthorized\n} from '../../PresentationalComponents/EmptyStates/EmptyStates';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\nimport { intl } from '../../../Utilities/IntlProvider';\nimport messages from '../../../Messages';\nimport { PERMISSIONS } from '../../../Helpers/constants';\nimport { useRbac } from '../../../Helpers/Hooks';\n\nconst SystemDetails = ({ optOutSystemHandler }) => {\n    const { entity, loaded, opt_out: isOptOut } = useSelector(state => state.entityDetails) ?? {};\n\n    const [[\n        canExport,\n        canReadVulnerabilityResults,\n        canEditPairStatus,\n        canReadExcluded\n    ], isRbacLoading] = useRbac([\n        PERMISSIONS.basicReporting,\n        PERMISSIONS.readVulnerabilityResults,\n        PERMISSIONS.setPairStatus,\n        PERMISSIONS.readExcluded]\n    );\n\n    if (isRbacLoading) {\n        return <Spinner centered />;\n    } else if (canReadVulnerabilityResults) {\n        if (entity && loaded && isOptOut) {\n            if (canReadExcluded) {\n                return <EmptyStateExcludedSystem buttonAction={() => optOutSystemHandler(entity.display_name, false)} />;\n            } else {\n                return <NotAuthorized title={intl.formatMessage(messages.notAuthorizedNoAccessForSystem)} />;\n            }\n        } else {\n            return <ConnectedSystemCves\n                entity={{ id: entity?.id, display_name: entity?.display_name }}\n                showHeaderLabel\n                setPageTitle\n                canExport={canExport}\n                canEditPairStatus={canEditPairStatus}\n            />;\n        }\n    } else {\n        return <NotAuthorized />;\n    }\n};\n\nSystemDetails.propTypes = {\n    optOutSystemHandler: propTypes.func\n};\n\nexport default SystemDetails;\n","import React from 'react';\nimport SystemDetails from '../../Components/SmartComponents/SystemDetailsPage/SystemDetails';\nimport { FETCH_SYSTEM_DETAILS } from '../ActionTypes';\n\nexport const initialState = {\n    loaded: false\n};\n\nexport const systemDetailsPageStore = (\n    INVENTORY_ACTION_TYPES, optOutSystemHandler\n) => (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_SYSTEM_DETAILS + '_FULFILLED':\n            return {\n                ...state,\n                ...action.payload.data\n            };\n        case INVENTORY_ACTION_TYPES.LOAD_ENTITY_FULFILLED:\n            return {\n                ...state,\n                loaded: true,\n                activeApps: [\n                    {\n                        title: 'Vulnerabilities',\n                        name: 'vulnerabilities',\n                        component: () => <SystemDetails\n                            optOutSystemHandler={optOutSystemHandler}\n                        />\n                    }\n                ]\n            };\n        case INVENTORY_ACTION_TYPES.LOAD_ENTITY_REJECTED:\n            return {\n                ...state,\n                loaded: true,\n                activeApps: [\n                    {\n                        title: 'Vulnerabilities',\n                        name: 'vulnerabilities',\n                        component: () => <SystemDetails />\n                    }\n                ]\n            };\n        default:\n            return state;\n    }\n};\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { ScalprumComponent } from '@scalprum/react-core';\nimport { useHistory } from 'react-router-dom';\nimport { useStore } from 'react-redux';\nimport { Bullseye } from \"@patternfly/react-core/dist/esm/layouts/Bullseye/Bullseye.js\";\nimport { Spinner } from \"@patternfly/react-core/dist/esm/components/Spinner/Spinner.js\";\nimport InventoryLoadError from './InventoryLoadError';\n\nvar BaseDetailWrapper = function BaseDetailWrapper(props) {\n  var history = useHistory();\n  var store = useStore();\n  return /*#__PURE__*/React.createElement(Suspense, {\n    fallback: props.fallback\n  }, /*#__PURE__*/React.createElement(ScalprumComponent, _extends({\n    history: history,\n    store: store,\n    appName: \"inventory\",\n    module: \"./DetailWrapper\",\n    scope: \"inventory\",\n    ErrorComponent: /*#__PURE__*/React.createElement(InventoryLoadError, _extends({\n      component: \"InventoryDetailHead\",\n      history: history,\n      store: store\n    }, props)),\n    ref: props.innerRef\n  }, props)));\n};\n\nBaseDetailWrapper.propTypes = {\n  fallback: PropTypes.node,\n  innerRef: PropTypes.object\n};\n/**\n * Inventory sub component.\n *\n * This component wraps entire system detail in order to show loading state and drawer (if enabled).\n */\n\nvar DetailWrapper = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(BaseDetailWrapper, _extends({\n    innerRef: ref\n  }, props));\n});\nDetailWrapper.propTypes = {\n  /** React Suspense fallback component. <a href=\"https://reactjs.org/docs/code-splitting.html#reactlazy\" target=\"_blank\">Learn more</a>. */\n  fallback: PropTypes.node\n};\nDetailWrapper.defaultProps = {\n  fallback: /*#__PURE__*/React.createElement(Bullseye, {\n    className: \"pf-u-p-lg\"\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    size: \"xl\"\n  }))\n};\nexport default DetailWrapper;","import _extends from \"@babel/runtime/helpers/extends\";\nimport React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { ScalprumComponent } from '@scalprum/react-core';\nimport { useHistory } from 'react-router-dom';\nimport { useStore } from 'react-redux';\nimport { Bullseye } from \"@patternfly/react-core/dist/esm/layouts/Bullseye/Bullseye.js\";\nimport { Spinner } from \"@patternfly/react-core/dist/esm/components/Spinner/Spinner.js\";\nimport InventoryLoadError from './InventoryLoadError';\n\nvar BaseInventoryDetailHead = function BaseInventoryDetailHead(props) {\n  var history = useHistory();\n  var store = useStore();\n  return /*#__PURE__*/React.createElement(Suspense, {\n    fallback: props.fallback\n  }, /*#__PURE__*/React.createElement(ScalprumComponent, _extends({\n    history: history,\n    store: store,\n    appName: \"inventory\",\n    module: \"./InventoryDetailHead\",\n    scope: \"inventory\",\n    ErrorComponent: /*#__PURE__*/React.createElement(InventoryLoadError, _extends({\n      component: \"InventoryDetailHead\",\n      history: history,\n      store: store\n    }, props)),\n    ref: props.innerRef\n  }, props)));\n};\n\nBaseInventoryDetailHead.propTypes = {\n  fallback: PropTypes.node,\n  innerRef: PropTypes.object\n};\n/**\n * Inventory sub component.\n *\n * This component shows system information (tags, facts and basic operations).\n */\n\nvar InventoryDetailHead = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(BaseInventoryDetailHead, _extends({\n    innerProps: ref\n  }, props));\n});\nInventoryDetailHead.propTypes = {\n  /** React Suspense fallback component. <a href=\"https://reactjs.org/docs/code-splitting.html#reactlazy\" target=\"_blank\">Learn more</a>. */\n  fallback: PropTypes.node\n};\nInventoryDetailHead.defaultProps = {\n  fallback: /*#__PURE__*/React.createElement(Bullseye, {\n    className: \"pf-u-p-lg\"\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    size: \"xl\"\n  }))\n};\nexport default InventoryDetailHead;","import _extends from \"@babel/runtime/helpers/extends\";\nimport React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { ScalprumComponent } from '@scalprum/react-core';\nimport { useHistory } from 'react-router-dom';\nimport { useStore } from 'react-redux';\nimport { Bullseye } from \"@patternfly/react-core/dist/esm/layouts/Bullseye/Bullseye.js\";\nimport { Spinner } from \"@patternfly/react-core/dist/esm/components/Spinner/Spinner.js\";\nimport InventoryLoadError from './InventoryLoadError';\n\nvar BaseAppInfo = function BaseAppInfo(props) {\n  var history = useHistory();\n  var store = useStore();\n  return /*#__PURE__*/React.createElement(Suspense, {\n    fallback: props.fallback\n  }, /*#__PURE__*/React.createElement(ScalprumComponent, _extends({\n    history: history,\n    store: store,\n    appName: \"inventory\",\n    module: \"./AppInfo\",\n    scope: \"inventory\",\n    ErrorComponent: /*#__PURE__*/React.createElement(InventoryLoadError, _extends({\n      component: \"InventoryDetailHead\",\n      history: history,\n      store: store\n    }, props)),\n    ref: props.innerRef\n  }, props)));\n};\n\nBaseAppInfo.propTypes = {\n  fallback: PropTypes.node,\n  innerRef: PropTypes.object\n};\n/**\n * Inventory sub component.\n *\n * This component shows tab(s) with detail information about selected system.\n */\n\nvar AppInfo = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(BaseAppInfo, _extends({\n    innerRef: ref\n  }, props));\n});\nAppInfo.propTypes = {\n  /** React Suspense fallback component. <a href=\"https://reactjs.org/docs/code-splitting.html#reactlazy\" target=\"_blank\">Learn more</a>. */\n  fallback: PropTypes.node\n};\nAppInfo.defaultProps = {\n  fallback: /*#__PURE__*/React.createElement(Bullseye, {\n    className: \"pf-u-p-lg\"\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    size: \"xl\"\n  }))\n};\nexport default AppInfo;","import { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { addNotification, clearNotifications } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouteMatch } from 'react-router-dom';\nimport { fetchSystemDetails, optOutSystemsAction } from '../../../Store/Actions/Actions';\nimport { systemDetailsPageStore } from '../../../Store/Reducers/SystemDetailsPageStore';\nimport ReducerRegistry from '../../../Utilities/ReducerRegistry';\nimport Header from '../../PresentationalComponents/Header/Header';\nimport { useIntl } from 'react-intl';\nimport {\n    NotAuthorizedNotification,\n    PATHS,\n    PERMISSIONS,\n    ReadOnlyNotification\n} from '../../../Helpers/constants';\nimport messages from '../../../Messages';\n\nimport { AppInfo, DetailWrapper, InventoryDetailHead } from '@redhat-cloud-services/frontend-components/Inventory';\nimport { useRbac } from '../../../Helpers/Hooks';\n\nconst InventoryDetail = () => {\n    const dispatch = useDispatch();\n    const match = useRouteMatch();\n    const intl = useIntl();\n\n    const { entity, loaded, opt_out: isOptOut } = useSelector(state => state.entityDetails) ?? {};\n    const errors = useSelector(({ SystemCvesStore }) => SystemCvesStore.cveList.payload.errors);\n\n    const [[canSetExcludedIncluded]] = useRbac([PERMISSIONS.setExcludedIncluded]);\n\n    const inventoryId = match.params.inventoryId;\n\n    useEffect(() => {\n        dispatch(fetchSystemDetails(inventoryId));\n    }, [dispatch, inventoryId]);\n\n    useEffect(() => {\n        return () => {\n            dispatch(clearNotifications());\n        };\n    }, [dispatch]);\n\n    const notifications = systemName => ({\n        exclude: {\n            success: {\n                variant: 'success',\n                title: intl.formatMessage(messages.notificationExcludeSuccess, { count: 1, systemName })\n            },\n            failure: {\n                variant: 'danger',\n                autoDismiss: false,\n                title: intl.formatMessage(messages.notificationExcludeFailureTitle, { count: 1, systemName }),\n                description: intl.formatMessage(messages.notificationDetailExcludeFailureBody, { count: 1 })\n            }\n        },\n        include: {\n            success: {\n                variant: 'success',\n                title: intl.formatMessage(messages.notificationIncludeSuccessTitle, { count: 1, systemName }),\n                description: intl.formatMessage(messages.notificationIncludeSuccessBody, { count: 1 })\n            },\n            failure: {\n                variant: 'danger',\n                autoDismiss: false,\n                title: intl.formatMessage(messages.notificationIncludeFailureTitle, { count: 1, systemName }),\n                description: intl.formatMessage(messages.notificationDetailIncludeFailureBody, { count: 1 })\n            }\n        }\n    });\n\n    const handleOptOutSystem = (systemName, toExclude) => {\n        dispatch(optOutSystemsAction([inventoryId], toExclude)).then(() => {\n            dispatch(fetchSystemDetails(inventoryId));\n            dispatch(addNotification(toExclude\n                ? notifications(systemName).exclude.success\n                : notifications(systemName).include.success));\n        }).catch(error => {\n            dispatch(addNotification(\n                error.status === '503' ? ReadOnlyNotification :\n                    error.status === '403' ? NotAuthorizedNotification :\n                        toExclude\n                            ? notifications(systemName).exclude.failure\n                            : notifications(systemName).include.failure));\n        });\n    };\n\n    return (\n        <DetailWrapper>\n            <section className=\"inventory\">\n                <Header\n                    title=\"\"\n                    breadcrumbs={[\n                        {\n                            title: PATHS.systemsPage.title,\n                            to: PATHS.systemsPage.to,\n                            loaded: true\n                        },\n                        {\n                            title: entity?.display_name || intl.formatMessage(messages.invalidSystem),\n                            isActive: true,\n                            loaded\n                        }\n                    ]}\n                >\n                    {!errors && (\n                        <InventoryDetailHead\n                            onLoad={({ mergeWithEntities, mergeWithDetail, INVENTORY_ACTION_TYPES }) => {\n                                ReducerRegistry.register({\n                                    ...mergeWithEntities(),\n                                    ...mergeWithDetail(systemDetailsPageStore(\n                                        INVENTORY_ACTION_TYPES, handleOptOutSystem\n                                    ))\n                                });\n                            }}\n                            hideBack\n                            actions={\n                                entity && canSetExcludedIncluded && [\n                                    isOptOut\n                                        ? {\n                                            title: intl.formatMessage(messages.inventoryKebabOptionsResume),\n                                            onClick: () => handleOptOutSystem(entity?.display_name, false)\n                                        }\n                                        : {\n                                            title: intl.formatMessage(messages.inventoryKebabOptionsExclude),\n                                            onClick: () => handleOptOutSystem(entity?.display_name, true)\n                                        }\n                                ]\n                            }\n                        />\n                    )}\n                </Header>\n            </section>\n            <Main>\n                <AppInfo optOutSystemHandler={handleOptOutSystem} />\n            </Main>\n        </DetailWrapper>\n    );\n};\n\nexport default InventoryDetail;\n"],"names":["InventoryLoadError","_ref","component","props","useEffect","console","error","concat","propTypes","SystemDetails","optOutSystemHandler","useSelector","state","entityDetails","entity","loaded","isOptOut","opt_out","useRbac","PERMISSIONS","canExport","canReadVulnerabilityResults","canEditPairStatus","canReadExcluded","Spinner","centered","buttonAction","display_name","title","intl","messages","id","showHeaderLabel","setPageTitle","initialState","BaseDetailWrapper","history","store","Suspense","fallback","ScalprumComponent","appName","module","scope","ErrorComponent","ref","innerRef","DetailWrapper","defaultProps","Bullseye","className","size","BaseInventoryDetailHead","InventoryDetailHead","innerProps","BaseAppInfo","AppInfo","dispatch","useDispatch","match","useRouteMatch","useIntl","errors","SystemCvesStore","cveList","payload","canSetExcludedIncluded","inventoryId","params","fetchSystemDetails","clearNotifications","notifications","systemName","exclude","success","variant","formatMessage","count","failure","autoDismiss","description","include","handleOptOutSystem","toExclude","optOutSystemsAction","then","addNotification","status","ReadOnlyNotification","NotAuthorizedNotification","Header","breadcrumbs","PATHS","to","isActive","onLoad","mergeWithEntities","mergeWithDetail","INVENTORY_ACTION_TYPES","ReducerRegistry","action","type","FETCH_SYSTEM_DETAILS","data","LOAD_ENTITY_FULFILLED","activeApps","name","LOAD_ENTITY_REJECTED","systemDetailsPageStore","hideBack","actions","onClick","Main"],"sourceRoot":""}