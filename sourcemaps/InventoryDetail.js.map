{"version":3,"sources":["webpack:///./src/Components/SmartComponents/SystemDetail/SystemDetail.js","webpack:///./src/Store/Reducers/SystemDetailStore.js","webpack:///./src/Components/SmartComponents/InventoryDetail/InventoryDetail.js"],"names":["SystemDetail","props","classCallCheck_default","this","possibleConstructorReturn_default","getPrototypeOf_default","call","react_default","a","createElement","Fragment","CVEs","entity","affectedSystemId","React","Component","propTypes","string","withRouter","connect","state","entityDetails","id","initialState","loaded","systemDetailStore","INVENTORY_ACTION_TYPES","arguments","length","undefined","type","LOAD_ENTITY_FULFILLED","objectSpread_default","activeApps","title","name","component","InventoryDetail","_this","checkItem","bind","assertThisInitialized_default","InventoryCmp","removeListener","_this2","setState","middlewareListener","addNew","on","callback","fetchData","cve","fetchInventory","insights","loadInventory","react","reactRouterDom","reactCore","reactIcons","inventoryConnector","mergeWithEntities","mergeWithDetail","ReducerRegistry","register","key","value","newList","systemList","selected","data","affectedSystems","Card","CardBody","items","map","item","inventory_id","func","dataShape","sExposedSystemsTable","dispatchAction","fetchAffectedSystemsByCVE"],"mappings":"mYAMMA,cACF,SAAAA,EAAYC,GAAO,OAAAC,IAAAC,KAAAH,GAAAI,IAAAD,KAAAE,IAAAL,GAAAM,KAAAH,KACTF,0DAIN,OACIM,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAACE,EAAA,QAAD,CAAMC,OAAQT,KAAKF,MAAMY,2BARdC,IAAMC,WAcjCf,EAAagB,UAAY,CACrBH,iBAAkBG,IAAUC,QASjBC,kBACXC,kBAPJ,SAAyBC,GACrB,MAAO,CACHP,iBAAkBO,EAAMC,cAAcT,OAAOU,KAO7C,KAFJH,CAGEnB,IChCFuB,EAAe,CACfC,QAAQ,GAICC,EAAoB,SAAAC,GAAsB,OAAI,WAAkC,IAAjCN,EAAiCO,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBJ,EAChE,QADyFI,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAC1EC,MACX,KAAKJ,EAAuBK,sBACxB,OAAAC,IAAA,GACOZ,EADP,CAEII,QAAQ,EACRS,WAAY,CAAC,CAAEC,MAAO,kBAAmBC,KAAM,kBAAmBC,UAAWpC,MAErF,QACI,OAAOoB,uBCDbiB,cACF,SAAAA,EAAYpC,GAAO,IAAAqC,EAAA,OAAApC,IAAAC,KAAAkC,IACfC,EAAAlC,IAAAD,KAAAE,IAAAgC,GAAA/B,KAAAH,KAAMF,KACDsC,UAAYD,EAAKC,UAAUC,KAAfC,QAAAH,KACjBA,EAAKlB,MAAQ,CACTsB,aAAc,kBAAMnC,EAAAC,EAAAC,cAAA,0BACpBkC,eAAgB,cALLL,mEASC,IAAAM,EAAAzC,KAChBA,KAAK0C,SAAS,CACVF,eAAgBG,IAAmBC,OAAO,CACtCC,GAAI,0BACJC,SAAU,kBAAML,EAAK3C,MAAMiD,UAAUN,EAAK3C,MAAMkD,UAGxDhD,KAAKiD,wLAI4FC,SAASC,cAAc,CACpHC,MAAOzC,IACP0C,iBACAC,YACAC,+BAJIC,uBAAoBC,sBAAmBC,oBAAiBnC,2BAOhEoC,IAAgBC,SAAhB/B,IAAA,GACO4B,IACAC,EAAgBpC,EAAkBC,MAGzCvB,KAAK0C,SAAS,CACVH,aAAciB,IAAqBtB,kBAEvClC,KAAKiB,MAAMuB,sJAGLqB,EAAKC,GACX,IAAIC,EAAU/D,KAAKiB,MAAM+C,WACzBD,EAAQF,GAAKI,SAAWH,EACxB9D,KAAK0C,SAAS,CAAEsB,WAAYD,qCAGvB,IACGxB,EAAiBvC,KAAKiB,MAAtBsB,aACA2B,EAASlE,KAAKF,MAAMqE,gBAApBD,KACR,OACI9D,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,KACIhE,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,KACIjE,EAAAC,EAAAC,cAACiC,EAAD,CAAc+B,MAAOJ,EAAKK,IAAI,SAAAC,GAAI,OAAIA,EAAKC,0BAnDjC9D,IAAMC,WA0DpCsB,EAAgBrB,UAAY,CACxBmC,IAAKnC,IAAUC,OACfiC,UAAWlC,IAAU6D,KACrBP,gBAAiBQ,KAeN5D,sBACXC,kBAbJ,SAAyBC,GACrB,MAAO,CACHkD,gBAAiBS,YAAqB3D,KAInB,WACvB,MAAO,CACH8B,UAAW,SAAAC,GAAG,OAAI6B,YAAeC,YAA0B9B,OAK/DhC,CAGEkB","file":"js/InventoryDetail.js","sourcesContent":["import { withRouter } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport CVEs from '../CVEs/CVEs';\n\nclass SystemDetail extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <CVEs entity={this.props.affectedSystemId} />\n            </React.Fragment>\n        );\n    }\n}\n\nSystemDetail.propTypes = {\n    affectedSystemId: propTypes.string\n};\n\nfunction mapStateToProps(state) {\n    return {\n        affectedSystemId: state.entityDetails.entity.id\n    };\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        null\n    )(SystemDetail)\n);\n","import SystemDetail from '../../Components/SmartComponents/SystemDetail/SystemDetail';\n\nlet initialState = {\n    loaded: false\n};\n\n// Reducer\nexport const systemDetailStore = INVENTORY_ACTION_TYPES => (state = initialState, action) => {\n    switch (action.type) {\n        case INVENTORY_ACTION_TYPES.LOAD_ENTITY_FULFILLED:\n            return {\n                ...state,\n                loaded: true,\n                activeApps: [{ title: 'Vulnerabilities', name: 'vulnerabilities', component: SystemDetail }]\n            };\n        default:\n            return state;\n    }\n};\n","import * as reactCore from '@patternfly/react-core';\nimport { Card, CardBody } from '@patternfly/react-core';\nimport * as reactIcons from '@patternfly/react-icons';\nimport { withRouter } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as reactRouterDom from 'react-router-dom';\nimport { dispatchAction } from '../../../Helpers/Dispatcher';\nimport { dataShape } from '../../../Helpers/MiscHelper';\nimport { fetchAffectedSystemsByCVE } from '../../../Store/Actions/Actions';\nimport { systemDetailStore } from '../../../Store/Reducers/SystemDetailStore';\nimport { sExposedSystemsTable } from '../../../Store/Selectors/CVESelectors';\nimport ReducerRegistry, { middlewareListener } from '../../../Utilities/ReducerRegistry';\n\nclass InventoryDetail extends React.Component {\n    constructor(props) {\n        super(props);\n        this.checkItem = this.checkItem.bind(this);\n        this.state = {\n            InventoryCmp: () => <div>Loading...</div>,\n            removeListener: () => {}\n        };\n    }\n\n    componentDidMount() {\n        this.setState({\n            removeListener: middlewareListener.addNew({\n                on: 'LOAD_ENTITIES_FULFILLED',\n                callback: () => this.props.fetchData(this.props.cve)\n            })\n        });\n        this.fetchInventory();\n    }\n\n    async fetchInventory() {\n        const { inventoryConnector, mergeWithEntities, mergeWithDetail, INVENTORY_ACTION_TYPES } = await insights.loadInventory({\n            react: React,\n            reactRouterDom,\n            reactCore,\n            reactIcons\n        });\n\n        ReducerRegistry.register({\n            ...mergeWithEntities(),\n            ...mergeWithDetail(systemDetailStore(INVENTORY_ACTION_TYPES))\n        });\n\n        this.setState({\n            InventoryCmp: inventoryConnector().InventoryDetail\n        });\n        this.state.removeListener();\n    }\n\n    checkItem(key, value) {\n        let newList = this.state.systemList;\n        newList[key].selected = value;\n        this.setState({ systemList: newList });\n    }\n\n    render() {\n        const { InventoryCmp } = this.state;\n        const { data } = this.props.affectedSystems;\n        return (\n            <Card>\n                <CardBody>\n                    <InventoryCmp items={data.map(item => item.inventory_id)} />\n                </CardBody>\n            </Card>\n        );\n    }\n}\n\nInventoryDetail.propTypes = {\n    cve: propTypes.string,\n    fetchData: propTypes.func,\n    affectedSystems: dataShape\n};\n\nfunction mapStateToProps(state) {\n    return {\n        affectedSystems: sExposedSystemsTable(state)\n    };\n}\n\nconst mapDispatchToProps = () => {\n    return {\n        fetchData: cve => dispatchAction(fetchAffectedSystemsByCVE(cve))\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(InventoryDetail)\n);\n"],"sourceRoot":""}