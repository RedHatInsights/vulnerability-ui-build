{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/objectSpread.js","webpack:///./src/Helpers/CVEHelper.js","webpack:///./src/Store/Selectors/CVESelectors.js","webpack:///./node_modules/reselect/lib/index.js","webpack:///./src/Components/SmartComponents/SystemDetail/SystemDetail.js","webpack:///./src/Store/Reducers/SystemDetailStore.js","webpack:///./src/Components/SmartComponents/InventoryDetail/InventoryDetail.js"],"names":["defineProperty","__webpack_require__","module","exports","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","createExposedSystemsTable","affectedSystems","isLoading","payload","asMutable","data","meta","createMitreLink","item","react_default","a","createElement","href","d","__webpack_exports__","sCveDetailsPage","sExposedSystemsTable","sAllSystems","createSelector","state","CVEStore","cveDetails","cves","impact","MiscHelper","attributes","public_date","description","synopsis","package_list","map","rh_link","mitre_link","cvss3_score","affectedSystemsByCVE","SystemsStore","defaultEqualityCheck","b","defaultMemoize","func","equalityCheck","undefined","lastArgs","lastResult","prev","next","areArgumentsShallowlyEqual","apply","createSelectorCreator","memoize","_len","memoizeOptions","Array","_key","_len2","funcs","_key2","recomputations","resultFunc","pop","dependencies","isArray","every","dep","dependencyTypes","join","Error","getDependencies","memoizedResultFunc","selector","params","push","resetRecomputations","__esModule","createStructuredSelector","selectors","selectorCreator","objectKeys","_len3","values","_key3","reduce","composition","value","index","SystemDetail","props","classCallCheck_default","this","possibleConstructorReturn_default","getPrototypeOf_default","call","Fragment","CVEs","entity","affectedSystemId","React","Component","propTypes","string","withRouter","connect","entityDetails","id","initialState","loaded","systemDetailStore","INVENTORY_ACTION_TYPES","type","LOAD_ENTITY_FULFILLED","objectSpread_default","activeApps","title","name","component","InventoryDetail","_this","checkItem","bind","assertThisInitialized_default","InventoryCmp","removeListener","_this2","setState","middlewareListener","addNew","on","callback","fetchData","cve","fetchInventory","insights","loadInventory","react","reactRouterDom","reactCore","reactIcons","inventoryConnector","mergeWithEntities","mergeWithDetail","ReducerRegistry","register","newList","systemList","selected","Card","CardBody","items","inventory_id","dataShape","dispatchAction","fetchAffectedSystemsByCVE"],"mappings":"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","file":"js/InventoryDetail.js","sourcesContent":["var defineProperty = require(\"./defineProperty\");\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread;","import React from 'react';\nimport { createApiCall } from './APIHelper';\nimport * as MiscHelper from './MiscHelper';\n\nexport function getCveDetails(synopsis) {\n    let endpoint = '/cves/' + synopsis + '/details/';\n    let result = createApiCall(endpoint, 'get');\n    return result;\n}\n\nexport function getAffectedSystemsByCVE(synopsis) {\n    let endpoint = '/cves/' + synopsis + '/affectedsystems/';\n    let result = createApiCall(endpoint, 'get');\n    return result;\n}\n\nexport function createExposedSystemsTable(affectedSystems) {\n    // TODO: Use correct API format instead this one\n    let isLoading = affectedSystems.isLoading;\n    if (!isLoading) {\n        let payload = affectedSystems.payload.asMutable();\n        let { data, meta } = payload;\n        return { data, meta, isLoading };\n    }\n\n    return { data: [], meta: {}, isLoading };\n}\n\nexport function createCveDetailsPage(cves) {\n    let isLoading = cves.isLoading;\n    if (!isLoading) {\n        let payload = cves.payload.asMutable();\n        let { data, meta } = payload;\n        data = {\n            impact: MiscHelper.processImpactForTable(data.attributes.impact),\n            public_date: MiscHelper.processDate(data.attributes.public_date),\n            description: data.attributes.description,\n            synopsis: data.attributes.synopsis,\n            package_list: data.attributes.package_list.map(item => <li key={item}>{item}</li>),\n            rh_link: createRHDBLink(data.attributes.synopsis),\n            mitre_link: createMitreLink(data.attributes.synopsis),\n            cvss3_score: data.attributes.cvss3_score\n        };\n        return { data, meta, isLoading };\n    }\n\n    return { data: [], meta: {}, isLoading };\n}\n\nfunction createRHDBLink(item) {\n    return <a href={'https://access.redhat.com/security/cve/' + item}>Red Hat CVE Database</a>;\n}\n\nfunction createMitreLink(item) {\n    return <a href={'https://cve.mitre.org/cgi-bin/cvename.cgi?name=' + item}>MITRE Database</a>;\n}\n","import { createSelector } from 'reselect';\nimport { createCveDetailsPage, createExposedSystemsTable } from '../../Helpers/CVEHelper';\n\nconst cveListWithSystemsSelector = state => state.CVEStore.affectedSystemsByCVE;\nconst systemsListAllSelector = state => state.SystemsStore;\nconst cveDetailsPageSelector = state => state.CVEStore.cveDetails;\n\nexport const sCveDetailsPage = createSelector(\n    [cveDetailsPageSelector],\n    createCveDetailsPage\n);\nexport const sExposedSystemsTable = createSelector(\n    [cveListWithSystemsSelector],\n    createExposedSystemsTable\n);\n\nexport const sAllSystems = createSelector(\n    [systemsListAllSelector],\n    createExposedSystemsTable\n);\n","'use strict';\n\nexports.__esModule = true;\nexports.defaultMemoize = defaultMemoize;\nexports.createSelectorCreator = createSelectorCreator;\nexports.createStructuredSelector = createStructuredSelector;\nfunction defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nfunction createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = defaultMemoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nvar createSelector = exports.createSelector = createSelectorCreator(defaultMemoize);\n\nfunction createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import { withRouter } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport CVEs from '../CVEs/CVEs';\n\nclass SystemDetail extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <CVEs entity={this.props.affectedSystemId} />\n            </React.Fragment>\n        );\n    }\n}\n\nSystemDetail.propTypes = {\n    affectedSystemId: propTypes.string\n};\n\nfunction mapStateToProps(state) {\n    return {\n        affectedSystemId: state.entityDetails.entity.id\n    };\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        null\n    )(SystemDetail)\n);\n","import SystemDetail from '../../Components/SmartComponents/SystemDetail/SystemDetail';\n\nlet initialState = {\n    loaded: false\n};\n\n// Reducer\nexport const systemDetailStore = INVENTORY_ACTION_TYPES => (state = initialState, action) => {\n    switch (action.type) {\n        case INVENTORY_ACTION_TYPES.LOAD_ENTITY_FULFILLED:\n            return {\n                ...state,\n                loaded: true,\n                activeApps: [{ title: 'Vulnerabilities', name: 'vulnerabilities', component: SystemDetail }]\n            };\n        default:\n            return state;\n    }\n};\n","import * as reactCore from '@patternfly/react-core';\nimport { Card, CardBody } from '@patternfly/react-core';\nimport * as reactIcons from '@patternfly/react-icons';\nimport { withRouter } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as reactRouterDom from 'react-router-dom';\nimport { dispatchAction } from '../../../Helpers/Dispatcher';\nimport { dataShape } from '../../../Helpers/MiscHelper';\nimport { fetchAffectedSystemsByCVE } from '../../../Store/Actions/Actions';\nimport { systemDetailStore } from '../../../Store/Reducers/SystemDetailStore';\nimport { sExposedSystemsTable } from '../../../Store/Selectors/CVESelectors';\nimport ReducerRegistry, { middlewareListener } from '../../../Utilities/ReducerRegistry';\n\nclass InventoryDetail extends React.Component {\n    constructor(props) {\n        super(props);\n        this.checkItem = this.checkItem.bind(this);\n        this.state = {\n            InventoryCmp: () => <div>Loading...</div>,\n            removeListener: () => {}\n        };\n    }\n\n    componentDidMount() {\n        this.setState({\n            removeListener: middlewareListener.addNew({\n                on: 'LOAD_ENTITIES_FULFILLED',\n                callback: () => this.props.fetchData(this.props.cve)\n            })\n        });\n        this.fetchInventory();\n    }\n\n    async fetchInventory() {\n        const { inventoryConnector, mergeWithEntities, mergeWithDetail, INVENTORY_ACTION_TYPES } = await insights.loadInventory({\n            react: React,\n            reactRouterDom,\n            reactCore,\n            reactIcons\n        });\n\n        ReducerRegistry.register({\n            ...mergeWithEntities(),\n            ...mergeWithDetail(systemDetailStore(INVENTORY_ACTION_TYPES))\n        });\n\n        this.setState({\n            InventoryCmp: inventoryConnector().InventoryDetail\n        });\n        this.state.removeListener();\n    }\n\n    checkItem(key, value) {\n        let newList = this.state.systemList;\n        newList[key].selected = value;\n        this.setState({ systemList: newList });\n    }\n\n    render() {\n        const { InventoryCmp } = this.state;\n        const { data } = this.props.affectedSystems;\n        return (\n            <Card>\n                <CardBody>\n                    <InventoryCmp items={data.map(item => item.inventory_id)} />\n                </CardBody>\n            </Card>\n        );\n    }\n}\n\nInventoryDetail.propTypes = {\n    cve: propTypes.string,\n    fetchData: propTypes.func,\n    affectedSystems: dataShape\n};\n\nfunction mapStateToProps(state) {\n    return {\n        affectedSystems: sExposedSystemsTable(state)\n    };\n}\n\nconst mapDispatchToProps = () => {\n    return {\n        fetchData: cve => dispatchAction(fetchAffectedSystemsByCVE(cve))\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(InventoryDetail)\n);\n"],"sourceRoot":""}