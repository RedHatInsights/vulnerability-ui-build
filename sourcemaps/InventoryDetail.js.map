{"version":3,"sources":["webpack:///./src/Helpers/CVEHelper.js","webpack:///./src/Store/Selectors/CVESelectors.js","webpack:///./src/Components/SmartComponents/CVEs/CVEs.scss?5736","webpack:///./src/Components/SmartComponents/CVEs/CVEs.scss","webpack:///./node_modules/reselect/lib/index.js","webpack:///./src/Components/SmartComponents/CVEs/CVEs.js","webpack:///./src/Helpers/VulnerabilitiesHelper.js","webpack:///./src/Components/SmartComponents/SystemDetail/SystemDetail.js","webpack:///./src/Store/Reducers/SystemDetailStore.js","webpack:///./src/Components/SmartComponents/InventoryDetail/InventoryDetail.js"],"names":["createExposedSystemsTable","affectedSystems","isLoading","payload","asMutable","data","meta","map","item","objectSpread_default","attributes","status","react_default","a","createElement","frontend_components_inventory_vulnerabilities","currentStatusName","status_name","currentStatusId","status_id","systemId","id","cveName","cve","hasNotification","createMitreLink","target","rel","href","external_link_alt_icon","sCveDetailsPage","createSelector","state","CVEStore","cveDetails","cves","impact","public_date","processDate","description","synopsis","package_list","key","rh_link","mitre_link","cvss3_score","cvss2_score","cvss2_metrics","cvss3_metrics","sExposedSystemsTable","affectedSystemsByCVE","sAllSystems","SystemsStore","content","__webpack_require__","module","i","options","hmr","transform","insertInto","undefined","locals","exports","push","defaultEqualityCheck","b","defaultMemoize","func","equalityCheck","arguments","length","lastArgs","lastResult","prev","next","areArgumentsShallowlyEqual","apply","createSelectorCreator","memoize","_len","memoizeOptions","Array","_key","_len2","funcs","_key2","recomputations","resultFunc","pop","dependencies","isArray","every","dep","dependencyTypes","join","Error","getDependencies","memoizedResultFunc","concat","selector","params","resetRecomputations","__esModule","createStructuredSelector","selectors","selectorCreator","objectKeys","Object","keys","_len3","values","_key3","reduce","composition","value","index","CVEs","props","classCallCheck_default","this","possibleConstructorReturn_default","getPrototypeOf_default","call","emptyStore","entity","setHeader","title","breadcrumbs","dispatchSetHeader","Component","Vulnerabilities","VulnerabilitiesCves","React","defaultProps","header","transforms","sortable","cellWidth","fetchResource","fetchCveListByAccount","dataMapper","cveList","errors","row","cells","Link","to","frontend_components","maxLength","entryDelay","parseCvssScore","hasLabel","systems_affected","toString","showAllCheckbox","defaultSort","propTypes","array","bool","string","any","withRouter","connect","dispatchAction","emptyCveList","SystemDetail","paths","vulnerabilities","hostname","isActive","Fragment","affectedSystemId","entityDetails","display_name","initialState","loaded","systemDetailStore","INVENTORY_ACTION_TYPES","type","LOAD_ENTITY_FULFILLED","activeApps","name","component","InventoryDetail","_this","checkItem","bind","assertThisInitialized_default","InventoryCmp","removeListener","_this2","setState","middlewareListener","addNew","on","callback","fetchData","fetchInventory","insights","loadInventory","react","reactRouterDom","reactCore","reactIcons","inventoryConnector","mergeWithEntities","mergeWithDetail","ReducerRegistry","register","InventoryHeader","InventoryDetailHead","InventoryBody","AppInfo","newList","systemList","selected","_this$state","Page","VulnerabilityHeader","showTabs","hideBack","items","inventory_id","dataShape","fetchAffectedSystemsByCVE"],"mappings":"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","file":"js/InventoryDetail.js","sourcesContent":["import { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { StatusDropdown } from '@redhat-cloud-services/frontend-components-inventory-vulnerabilities';\nimport { processDate } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport React from 'react';\n\nexport function createExposedSystemsTable(affectedSystems) {\n    let isLoading = affectedSystems.isLoading;\n    if (!isLoading) {\n        let payload = affectedSystems.payload.asMutable();\n        let { data, meta } = payload;\n        const dataWithStatus = data.map(item => ({\n            ...item,\n            attributes: {\n                ...item.attributes,\n                status: (\n                    <span>\n                        <StatusDropdown\n                            currentStatusName={item.attributes.status_name}\n                            currentStatusId={item.attributes.status_id}\n                            systemId={item.id}\n                            cveName={affectedSystems.cve}\n                            hasNotification={true}\n                        />\n                    </span>\n                )\n            }\n        }));\n        return { data: dataWithStatus, meta, isLoading };\n    }\n\n    return { data: (affectedSystems.payload && affectedSystems.payload.data) || [], meta: {}, isLoading };\n}\n\nexport function createCveDetailsPage(cves) {\n    let isLoading = cves.isLoading;\n    if (!isLoading) {\n        let payload = cves.payload.asMutable();\n        let { data, meta } = payload;\n\n        data = {\n            impact: data.attributes.impact,\n            public_date: processDate(data.attributes.public_date),\n            description: data.attributes.description,\n            synopsis: data.attributes.synopsis,\n            package_list: data.attributes.package_list.map(item => <li key={item}>{item}</li>),\n            rh_link: createRHDBLink(data.attributes.synopsis),\n            mitre_link: createMitreLink(data.attributes.synopsis),\n            cvss3_score: data.attributes.cvss3_score,\n            cvss2_score: data.attributes.cvss2_score,\n            cvss2_metrics: data.attributes.cvss2_metrics,\n            cvss3_metrics: data.attributes.cvss3_metrics\n        };\n        return { data, meta, isLoading };\n    }\n\n    return { data: [], meta: {}, isLoading };\n}\n\nexport function createRHDBLink(item) {\n    return (\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href={'https://access.redhat.com/security/cve/' + item}>\n            View in Red Hat CVE database <ExternalLinkAltIcon />\n        </a>\n    );\n}\n\nexport function createMitreLink(item) {\n    return (\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href={'https://cve.mitre.org/cgi-bin/cvename.cgi?name=' + item}>\n            MITRE Database <ExternalLinkAltIcon />\n        </a>\n    );\n}\n","import { createSelector } from 'reselect';\nimport { createCveDetailsPage, createExposedSystemsTable } from '../../Helpers/CVEHelper';\n\nconst cveListWithSystemsSelector = (state, cve) => ({ ...state.CVEStore.affectedSystemsByCVE, cve });\nconst systemsListAllSelector = state => state.SystemsStore;\nconst cveDetailsPageSelector = state => state.CVEStore.cveDetails;\n\nexport const sCveDetailsPage = createSelector(\n    [cveDetailsPageSelector],\n    createCveDetailsPage\n);\nexport const sExposedSystemsTable = createSelector(\n    [cveListWithSystemsSelector],\n    createExposedSystemsTable\n);\n\nexport const sAllSystems = createSelector(\n    [systemsListAllSelector],\n    createExposedSystemsTable\n);\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEs.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEs.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEs.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".table-header-icon svg {\\n  margin-right: 5px; }\\n\\n.pf-c-table tr td:first-of-type {\\n  white-space: nowrap; }\\n\", \"\"]);\n\n// exports\n","'use strict';\n\nexports.__esModule = true;\nexports.defaultMemoize = defaultMemoize;\nexports.createSelectorCreator = createSelectorCreator;\nexports.createStructuredSelector = createStructuredSelector;\nfunction defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nfunction createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = defaultMemoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nvar createSelector = exports.createSelector = createSelectorCreator(defaultMemoize);\n\nfunction createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import { cellWidth, sortable } from '@patternfly/react-table';\nimport Vulnerabilities, {\n    VulnerabilitiesCves\n} from '@redhat-cloud-services/frontend-components-inventory-vulnerabilities';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { dispatchAction } from '../../../Helpers/Dispatcher';\nimport { createCveListByAccount } from '../../../Helpers/VulnerabilitiesHelper';\nimport { emptyCveList, fetchCveListByAccount, setHeader } from '../../../Store/Actions/Actions';\nimport './CVEs.scss';\n\nclass CVEs extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentWillUnmount() {\n        this.props.emptyStore();\n    }\n\n    dispatchSetHeader(entity) {\n        if (!entity) {\n            this.props.setHeader({\n                title: 'Vulnerability',\n                breadcrumbs: []\n            });\n        }\n    }\n\n    render() {\n        const { entity } = this.props;\n        this.dispatchSetHeader(entity);\n        const Component = (entity && Vulnerabilities) || VulnerabilitiesCves;\n        const params = (entity && { entity }) || this.props;\n        return <Component {...params} />;\n    }\n}\n\nconst mapDispatchToProps = () => {\n    return {\n        emptyStore: () => dispatchAction(emptyCveList()),\n        setHeader: header => dispatchAction(setHeader(header))\n    };\n};\n\nCVEs.defaultProps = {\n    header: [\n        { title: 'Name', key: 'synopsis', transforms: [sortable, cellWidth(10)] },\n        { title: 'Description', key: 'description', transforms: [cellWidth(50)] },\n        { title: 'Publish date', key: 'public_date', transforms: [sortable, cellWidth(10)] },\n        {\n            title: 'CVSS base score',\n            key: 'cvss_score',\n            transforms: [sortable, cellWidth(10)]\n        },\n        { title: 'Severity', key: 'impact', transforms: [sortable, cellWidth(10)] },\n        { title: 'Systems exposed', key: 'systems_affected', transforms: [sortable, cellWidth(10)] }\n    ],\n    fetchResource: fetchCveListByAccount,\n    dataMapper: createCveListByAccount,\n    showAllCheckbox: true,\n    defaultSort: '-public_date'\n};\n\nCVEs.propTypes = {\n    dataMapper: propTypes.func,\n    fetchResource: propTypes.func,\n    setHeader: propTypes.func,\n    header: propTypes.array,\n    showAllCheckbox: propTypes.bool,\n    entity: propTypes.string,\n    emptyStore: propTypes.func,\n    defaultSort: propTypes.any\n};\n\nexport default withRouter(\n    connect(\n        null,\n        mapDispatchToProps\n    )(CVEs)\n);\n","import { LongTextTooltip, Shield } from '@redhat-cloud-services/frontend-components';\nimport { parseCvssScore, processDate } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport function createCveListByAccount(cveList) {\n    let isLoading = cveList.isLoading;\n    if (!isLoading) {\n        let payload = cveList.payload.asMutable();\n\n        let { data, meta, errors } = payload;\n\n        data =\n            data &&\n            data.map(row => ({\n                id: row.id,\n                cells: [\n                    <span key={row.id}>\n                        <Link to={'/cves/' + row.attributes.synopsis}>{row.attributes.synopsis}</Link>\n                    </span>,\n                    <span key={row.id}>\n                        <LongTextTooltip content={row.attributes.description} maxLength={180} entryDelay={1200} />\n                    </span>,\n                    <span key={row.id}>{processDate(row.attributes.public_date)}</span>,\n                    <span key={row.id}>{parseCvssScore(row.attributes.cvss2_score, row.attributes.cvss3_score, true)}</span>,\n\n                    <span key={row.id}>\n                        <Shield impact={row.attributes.impact} hasLabel={true} />\n                    </span>,\n\n                    <span key={row.id}>{row.attributes.systems_affected.toString()}</span>\n                ]\n            }));\n        return { data: data && data.asMutable(), meta, isLoading, errors };\n    }\n\n    return { data: [], meta: (cveList.payload && cveList.payload.meta) || {}, isLoading };\n}\n","import propTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { dispatchAction } from '../../../Helpers/Dispatcher';\nimport { setHeader } from '../../../Store/Actions/Actions';\nimport { paths } from '../../../Utilities/Routes';\nimport CVEs from '../CVEs/CVEs';\n\nclass SystemDetail extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        this.props.setHeader({\n            breadcrumbs: [{ title: 'Vulnerability', to: paths.vulnerabilities }, { title: this.props.hostname, isActive: true }]\n        });\n        return (\n            <React.Fragment>\n                <CVEs entity={this.props.affectedSystemId} />\n            </React.Fragment>\n        );\n    }\n}\n\nSystemDetail.propTypes = {\n    setHeader: propTypes.func,\n    hostname: propTypes.string,\n    affectedSystemId: propTypes.string\n};\n\nconst mapDispatchToProps = () => {\n    return {\n        setHeader: header => dispatchAction(setHeader(header))\n    };\n};\n\nfunction mapStateToProps(state) {\n    return {\n        affectedSystemId: state.entityDetails.entity.id,\n        hostname: state.entityDetails.entity.display_name\n    };\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(SystemDetail)\n);\n","import SystemDetail from '../../Components/SmartComponents/SystemDetail/SystemDetail';\n\nlet initialState = {\n    loaded: false\n};\n\n// Reducer\nexport const systemDetailStore = INVENTORY_ACTION_TYPES => (state = initialState, action) => {\n    switch (action.type) {\n        case INVENTORY_ACTION_TYPES.LOAD_ENTITY_FULFILLED:\n            return {\n                ...state,\n                loaded: true,\n                activeApps: [{ title: 'Vulnerabilities', name: 'vulnerabilities', component: SystemDetail }]\n            };\n        default:\n            return state;\n    }\n};\n","import * as reactCore from '@patternfly/react-core';\nimport { Page } from '@patternfly/react-core';\nimport * as reactIcons from '@patternfly/react-icons';\nimport { Main } from '@redhat-cloud-services/frontend-components';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as reactRouterDom from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport { dispatchAction } from '../../../Helpers/Dispatcher';\nimport { dataShape } from '../../../Helpers/MiscHelper';\nimport { fetchAffectedSystemsByCVE } from '../../../Store/Actions/Actions';\nimport { systemDetailStore } from '../../../Store/Reducers/SystemDetailStore';\nimport { sExposedSystemsTable } from '../../../Store/Selectors/CVESelectors';\nimport ReducerRegistry, { middlewareListener } from '../../../Utilities/ReducerRegistry';\nimport VulnerabilityHeader from '../VulnerabilityHeader/VulnerabilityHeader';\n\nclass InventoryDetail extends React.Component {\n    constructor(props) {\n        super(props);\n        this.checkItem = this.checkItem.bind(this);\n        this.state = {\n            InventoryCmp: () => <div>Loading...</div>,\n            removeListener: () => {}\n        };\n    }\n\n    componentDidMount() {\n        this.setState({\n            removeListener: middlewareListener.addNew({\n                on: 'LOAD_ENTITIES_FULFILLED',\n                callback: () => this.props.fetchData(this.props.cve)\n            })\n        });\n        this.fetchInventory();\n    }\n\n    async fetchInventory() {\n        const { inventoryConnector, mergeWithEntities, mergeWithDetail, INVENTORY_ACTION_TYPES } = await insights.loadInventory({\n            react: React,\n            reactRouterDom,\n            reactCore,\n            reactIcons\n        });\n\n        ReducerRegistry.register({\n            ...mergeWithEntities(),\n            ...mergeWithDetail(systemDetailStore(INVENTORY_ACTION_TYPES))\n        });\n\n        this.setState({\n            InventoryHeader: inventoryConnector().InventoryDetailHead,\n            InventoryBody: inventoryConnector().AppInfo\n        });\n        this.state.removeListener();\n    }\n\n    checkItem(key, value) {\n        let newList = this.state.systemList;\n        newList[key].selected = value;\n        this.setState({ systemList: newList });\n    }\n\n    render() {\n        const { InventoryHeader, InventoryBody } = this.state;\n        const { data } = this.props.affectedSystems;\n        return (\n            <Page>\n                <VulnerabilityHeader title=\"\" showTabs={false}>\n                    {InventoryHeader && <InventoryHeader hideBack={true} />}\n                </VulnerabilityHeader>\n                <Main>{InventoryBody && <InventoryBody items={data.map(item => item.inventory_id)} />}</Main>\n            </Page>\n        );\n    }\n}\n\nInventoryDetail.propTypes = {\n    cve: propTypes.string,\n    fetchData: propTypes.func,\n    affectedSystems: dataShape\n};\n\nfunction mapStateToProps(state) {\n    return {\n        affectedSystems: sExposedSystemsTable(state)\n    };\n}\n\nconst mapDispatchToProps = () => {\n    return {\n        fetchData: cve => dispatchAction(fetchAffectedSystemsByCVE(cve))\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(InventoryDetail)\n);\n"],"sourceRoot":""}