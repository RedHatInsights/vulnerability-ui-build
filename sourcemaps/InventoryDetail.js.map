{"version":3,"sources":["webpack:///./src/Components/SmartComponents/SystemCves/vulnerabilities.scss?636c","webpack:///./src/Components/SmartComponents/SystemCves/vulnerabilities.scss","webpack:///./src/Components/SmartComponents/SystemCves/SystemCveTable.js","webpack:///./src/Components/SmartComponents/SystemCves/SystemCveTableToolbar.js","webpack:///./src/Components/SmartComponents/SystemCves/SystemCves.js","webpack:///./src/Components/SmartComponents/SystemDetail/SystemDetail.js","webpack:///./src/Store/Reducers/SystemDetailStore.js","webpack:///./src/Components/SmartComponents/InventoryDetail/InventoryDetail.js"],"names":["content","module","i","options","transform","undefined","locals","exports","push","SystemCvesTableWithContext","createPagination","meta","props","context","cves","Pagination","page","itemCount","total_items","perPage","page_size","onSetPage","handleChangePage","onPerPageSelect","handleSetPageSize","variant","PaginationVariant","bottom","noCves","entity","filter","item","hasOwnProperty","length","FilterNotFoundForCVE","EmptyCVEListForSystem","data","EmptyCVEList","_event","pageNumber","methods","apply","handleSortColumn","event","key","direction","columnName","isSelectable","header","currentSort","sort","useDefault","substr","SortByDirection","desc","handleOnSelect","isSelected","rowId","cveName","id","selectCves","this","params","selectedCves","rows","map","cve","has","selected","loader","Array","cells","title","colSpan","Table","aria-label","onSelect","isLoading","sortBy","createSortBy","onSort","gridBreakPoint","Component","propTypes","any","array","bool","object","SystemCvesTable","CVETableContext","Consumer","SystemCveToolbarWithContext","showAllCheckbox","showRemediationButton","selectedCvesCount","size","className","ToolbarGroup","SelectAllCheckbox","selectedItems","selectorHandler","fetchResource","ops","Filters","showStatusList","Boolean","filterValues","Remediation","systemId","DownloadReportKebab","downloadReport","PaginationWrapper","defaultProps","totalNumber","SystemCveToolbar","React","createContext","transforms","sortable","classNames","columnTransforms","SystemCves","processError","error","status","parseInt","NoVulnerabilityData","GenericError","config","cvssEntry","CVSSOptions","find","value","cvss_filter","values","split","parseFloat","from","to","cvss_from","cvss_to","publicEntry","PublicDateOptions","publish_date","public_from","format","public_to","setState","state","sendRequest","cveNames","concat","forEach","add","Set","fetchData","showAllParam","show_all","system","payload","fetchCveListBySystem","Number","MAX_SAFE_INTEGER","data_format","then","response","JSON","stringify","downloadFile","Date","toISOString","StatusDropdown","setCallback","cveList","createCveListBySystem","errors","Provider","Stack","StackItem","SystemCveTableToolbar","SystemCveTable","func","connect","SystemCvesStore","entityDetails","dispatch","SystemDetail","isOptOut","optOutSystemHandler","setHeader","breadcrumbs","paths","vulnerabilities","display_name","isActive","Fragment","buttonAction","withRouter","opt_out","dispatchAction","initialState","loaded","systemDetailStore","INVENTORY_ACTION_TYPES","action","type","FETCH_SYSTEM_DETAILS","LOAD_ENTITY_FULFILLED","activeApps","name","component","InventoryDetail","checkItem","newList","systemList","toggleLinkHover","linkHovered","optOutSystem","inventoryId","fetchSystemDetails","addNotification","description","match","removeListener","fetchInventory","insights","loadInventory","react","reactRouterDom","reactCore","reactIcons","inventoryConnector","mergeWithEntities","mergeWithDetail","ReducerRegistry","register","InventoryHeader","InventoryDetailHead","InventoryBody","AppInfo","systemDetails","Page","VulnerabilityHeader","showTabs","hideBack","actions","onClick","optOutSystemAction","notification"],"mappings":"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","file":"js/InventoryDetail.js","sourcesContent":["\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./vulnerabilities.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./vulnerabilities.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./vulnerabilities.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".ins-active-app-vulnerabilities .cvetable-toolbar,\\n.page__Vulnerabilities .cvetable-toolbar {\\n  justify-content: space-between; }\\n  .ins-active-app-vulnerabilities .cvetable-toolbar > div,\\n  .page__Vulnerabilities .cvetable-toolbar > div {\\n    align-self: flex-end; }\\n\\n.ins-active-app-vulnerabilities .space-between-toolbar-items,\\n.page__Vulnerabilities .space-between-toolbar-items {\\n  justify-content: space-between;\\n  flex-wrap: nowrap; }\\n  .ins-active-app-vulnerabilities .space-between-toolbar-items > div,\\n  .page__Vulnerabilities .space-between-toolbar-items > div {\\n    flex-wrap: nowrap; }\\n\\n.ins-active-app-vulnerabilities .vulnerability-toolbar-spacing,\\n.page__Vulnerabilities .vulnerability-toolbar-spacing {\\n  justify-content: flex-start; }\\n  .ins-active-app-vulnerabilities .vulnerability-toolbar-spacing > div:not(:last-child),\\n  .page__Vulnerabilities .vulnerability-toolbar-spacing > div:not(:last-child) {\\n    margin-right: var(--pf-global--spacer--sm); }\\n\\n@media screen and (max-width: 1100px) {\\n  .ins-active-app-vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-options-menu,\\n  .ins-active-app-vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-pagination__nav,\\n  .page__Vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-options-menu,\\n  .page__Vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-pagination__nav {\\n    display: none;\\n    visibility: hidden; }\\n  .ins-active-app-vulnerabilities .pf-c-pagination__total-items,\\n  .page__Vulnerabilities .pf-c-pagination__total-items {\\n    display: flex;\\n    visibility: visible; } }\\n\\n.ins-active-app-vulnerabilities .pf-c-pagination.pf-m-footer.ins-c-pagination-next,\\n.page__Vulnerabilities .pf-c-pagination.pf-m-footer.ins-c-pagination-next {\\n  margin-left: auto; }\\n\\n.ins-active-app-vulnerabilities #download-report,\\n.page__Vulnerabilities #download-report {\\n  cursor: pointer; }\\n\\n.ins-active-app-vulnerabilities .number-of-results,\\n.page__Vulnerabilities .number-of-results {\\n  display: inline-block;\\n  min-width: 55px;\\n  text-align: right;\\n  margin-right: 5px; }\\n\\n.ins-active-app-vulnerabilities .table-header-icon,\\n.page__Vulnerabilities .table-header-icon {\\n  margin-right: 5px;\\n  margin-right: 0.3125rem; }\\n\\n.ins-active-app-vulnerabilities .status-dropdown-column > svg,\\n.page__Vulnerabilities .status-dropdown-column > svg {\\n  color: var(--pf-global--primary-color--100); }\\n\\n.ins-active-app-vulnerabilities .status-dropdown-column:hover,\\n.page__Vulnerabilities .status-dropdown-column:hover {\\n  cursor: pointer; }\\n  .ins-active-app-vulnerabilities .status-dropdown-column:hover > svg,\\n  .page__Vulnerabilities .status-dropdown-column:hover > svg {\\n    visibility: visible; }\\n\\n.ins-active-app-vulnerabilities .status-dropdown-column > svg,\\n.page__Vulnerabilities .status-dropdown-column > svg {\\n  visibility: hidden; }\\n\\n.ins-active-app-vulnerabilities tbody > tr > td.pf-c-table__check,\\n.page__Vulnerabilities tbody > tr > td.pf-c-table__check {\\n  vertical-align: middle;\\n  padding-top: 0px !important;\\n  padding-bottom: 0px !important; }\\n\\n.ins-active-app-vulnerabilities thead > tr > td.pf-c-table__check,\\n.page__Vulnerabilities thead > tr > td.pf-c-table__check {\\n  visibility: hidden; }\\n\\n.ins-active-app-vulnerabilities .pf-c-table tr > *,\\n.page__Vulnerabilities .pf-c-table tr > * {\\n  vertical-align: middle !important; }\\n\\n.ins-active-app-vulnerabilities p.pf-c-empty-state__body ul,\\n.page__Vulnerabilities p.pf-c-empty-state__body ul {\\n  margin-top: 0px;\\n  margin-bottom: var(--pf-global--spacer--sm); }\\n  .ins-active-app-vulnerabilities p.pf-c-empty-state__body ul li,\\n  .page__Vulnerabilities p.pf-c-empty-state__body ul li {\\n    margin-top: 0px; }\\n\\n@media (max-width: 1400px) and (min-width: 992px) {\\n  .ins-active-app-vulnerabilities .hide-description,\\n  .page__Vulnerabilities .hide-description {\\n    --pf-hidden-visible--Display: var(--pf-hidden-visible--hidden--Display);\\n    --pf-hidden-visible--Visibility: var(\\n        --pf-hidden-visible--hidden--Visibility\\n      ); } }\\n\\n@media (min-width: 1400px) {\\n  .ins-active-app-vulnerabilities .remediation-btn-sml,\\n  .page__Vulnerabilities .remediation-btn-sml {\\n    display: none;\\n    visibility: hidden; } }\\n\\n@media (max-width: 1400px) {\\n  .ins-active-app-vulnerabilities .remediation-btn-lg,\\n  .page__Vulnerabilities .remediation-btn-lg {\\n    display: none;\\n    visibility: none; } }\\n\\n.ins-active-app-vulnerabilities .col-width-10,\\n.page__Vulnerabilities .col-width-10 {\\n  min-width: 10%; }\\n\\n.ins-active-app-vulnerabilities .col-width-15,\\n.page__Vulnerabilities .col-width-15 {\\n  min-width: 15%; }\\n\\n.ins-active-app-vulnerabilities .col-width-description,\\n.page__Vulnerabilities .col-width-description {\\n  min-width: 35%; }\\n\", \"\"]);\n\n// exports\n","import { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { SortByDirection, Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components';\nimport { RowLoader } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport propTypes from 'prop-types';\nimport React, { Component, Fragment } from 'react';\nimport { EmptyCVEList, EmptyCVEListForSystem, FilterNotFoundForCVE } from '../../../Helpers/constants';\nimport { createSortBy } from '../../../Helpers/MiscHelper';\nimport { CVETableContext } from './SystemCves';\n\nclass SystemCvesTableWithContext extends Component {\n    static propTypes = {\n        context: propTypes.any,\n        header: propTypes.array,\n        isSelectable: propTypes.bool,\n        entity: propTypes.object\n    };\n\n    createPagination = () => {\n        const {\n            cves: { meta }\n        } = this.props.context;\n        return (\n            <Pagination\n                page={meta.page || 1}\n                itemCount={meta.total_items || 0}\n                perPage={meta.page_size || 50}\n                onSetPage={this.handleChangePage}\n                onPerPageSelect={this.handleSetPageSize}\n                variant={PaginationVariant.bottom}\n            />\n        );\n    };\n\n    noCves = () => {\n        const { entity, context } = this.props;\n        const { cves } = context;\n        const filterFields = ['filter', 'cvss_from', 'cvss_to', 'public_from', 'public_to', 'impact', 'status_id'].filter(\n            item => cves.meta.hasOwnProperty(item) && cves.meta[item]\n        );\n        if (filterFields.length !== 0) {\n            return FilterNotFoundForCVE;\n        } else if (entity) {\n            return EmptyCVEListForSystem;\n        } else if (cves.data.length === 0) {\n            return EmptyCVEList;\n        }\n    };\n\n    handleChangePage = (_event, pageNumber) => {\n        const { methods } = this.props.context;\n        methods.apply({ page: pageNumber });\n    };\n\n    handleSetPageSize = (_event, perPage) => {\n        const { methods } = this.props.context;\n        // eslint-disable-next-line camelcase\n        methods.apply({ page_size: perPage, page: 1 });\n    };\n\n    handleSortColumn = (event, key, direction) => {\n        let columnMapping = this.props.isSelectable ? [{ key: 'checkbox' }, ...this.props.header] : this.props.header;\n        let columnName = columnMapping[key].key;\n        const { cves, methods } = this.props.context;\n        const currentSort = cves.meta.sort;\n        const useDefault = currentSort && currentSort.substr(1) !== columnName;\n        if (direction === SortByDirection.desc || useDefault) {\n            columnName = '-' + columnName;\n        }\n\n        methods.apply({ sort: columnName });\n    };\n\n    handleOnSelect = (event, isSelected, rowId) => {\n        const { context } = this.props;\n        const { cves, methods } = context;\n        const cveName = cves.data[rowId] && cves.data[rowId].id;\n        methods.selectCves(isSelected, cveName);\n    };\n\n    render() {\n        const { context, header } = this.props;\n        const { params, cves } = context;\n        const { selectedCves } = params;\n        const rows = cves.data.map(cve => (selectedCves.has(cve.id) && { ...cve, selected: true }) || cve);\n        const loader = [...Array(3)].map(() => ({\n            cells: [\n                {\n                    title: <RowLoader />,\n                    props: {\n                        colSpan: header.length\n                    }\n                }\n            ]\n        }));\n        return (\n            <Fragment>\n                <Table\n                    aria-label={'Vulnerability CVE table'}\n                    onSelect={(this.props.isSelectable && this.handleOnSelect) || undefined}\n                    cells={header}\n                    rows={cves.isLoading ? loader : rows}\n                    sortBy={createSortBy([{ key: 'checkbox' }, ...header], cves.meta.sort)}\n                    onSort={this.handleSortColumn}\n                    gridBreakPoint={'grid-lg'}\n                >\n                    {(!cves.isLoading && cves.data.length === 0 && this.noCves()) || (\n                        <Fragment>\n                            <TableHeader />\n                            <TableBody />\n                        </Fragment>\n                    )}\n                </Table>\n                <TableToolbar>{this.createPagination()}</TableToolbar>\n            </Fragment>\n        );\n    }\n}\n\nconst SystemCvesTable = props => (\n    <CVETableContext.Consumer>{context => <SystemCvesTableWithContext context={context} {...props} />}</CVETableContext.Consumer>\n);\nexport default SystemCvesTable;\n","/* eslint-disable camelcase */\nimport { ToolbarGroup } from '@patternfly/react-core';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components';\nimport propTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport DownloadReportKebab from '../../PresentationalComponents/DownloadReportKebab/DownloadReportKebab';\nimport PaginationWrapper from '../../PresentationalComponents/PaginationWrapper/PaginationWrapper';\nimport Filters from '../Filters/Filters';\nimport Remediation from '../Remediation/Remediation';\nimport SelectAllCheckbox from '../SelectAllCheckbox/SelectAllCheckbox';\nimport { CVETableContext } from './SystemCves';\n\nclass SystemCveToolbarWithContext extends Component {\n    static propTypes = {\n        showAllCheckbox: propTypes.bool,\n        showRemediationButton: propTypes.bool,\n        entity: propTypes.object,\n        context: propTypes.object\n    };\n\n    static defaultProps = {\n        showAllCheckbox: false,\n        showRemediationButton: false,\n        totalNumber: 0,\n        apply: () => undefined,\n        downloadReport: () => undefined\n    };\n\n    render() {\n        const { showAllCheckbox, showRemediationButton, entity, context } = this.props;\n        const { cves, params, methods } = context;\n        const { selectedCves } = params;\n        const selectedCvesCount =\n            this.props.showRemediationButton === true ? (selectedCves && selectedCves.size) || 0 : undefined;\n        return (\n            <TableToolbar className=\"space-between-toolbar-items\">\n                <ToolbarGroup className=\"vulnerability-toolbar-spacing\">\n                    {showRemediationButton && (\n                        <SelectAllCheckbox\n                            selectedItems={selectedCvesCount}\n                            selectorHandler={methods.selectCves}\n                            cves={cves}\n                            fetchResource={ops => methods.fetchResource({ ...params, ...ops })}\n                        />\n                    )}\n                    <Filters\n                        apply={methods.apply}\n                        showStatusList={Boolean(entity)}\n                        showAllCheckbox={showAllCheckbox}\n                        filterValues={params}\n                    />\n                    {showRemediationButton && <Remediation systemId={entity.id} selectedCves={selectedCves} />}\n                    <DownloadReportKebab downloadReport={methods.downloadReport} />\n                </ToolbarGroup>\n\n                <ToolbarGroup>\n                    <PaginationWrapper apply={methods.apply} meta={cves.meta} />\n                </ToolbarGroup>\n            </TableToolbar>\n        );\n    }\n}\n\nconst SystemCveToolbar = props => (\n    <CVETableContext.Consumer>{context => <SystemCveToolbarWithContext context={context} {...props} />}</CVETableContext.Consumer>\n);\nexport default SystemCveToolbar;\n","/* eslint-disable camelcase */\nimport { Stack, StackItem } from '@patternfly/react-core';\nimport { classNames, sortable } from '@patternfly/react-table';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport propTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { CVSSOptions, GenericError, NoVulnerabilityData, PublicDateOptions } from '../../../Helpers/constants';\nimport { createCveListBySystem } from '../../../Helpers/VulnerabilitiesHelper';\nimport { fetchCveListBySystem } from '../../../Store/Actions/Actions';\nimport StatusDropdown from '../StatusDropdown/StatusDropdown';\nimport SystemCveTable from './SystemCveTable';\nimport SystemCveTableToolbar from './SystemCveTableToolbar';\nimport './vulnerabilities.scss';\n\nexport const CVETableContext = React.createContext({});\n\nconst header = [\n    { title: 'Name', key: 'synopsis', transforms: [sortable, classNames('col-width-10')] },\n    {\n        title: 'Description',\n        key: 'description',\n        transforms: [classNames('col-width-description')],\n        columnTransforms: [classNames('hide-description')]\n    },\n    {\n        title: 'Publish date',\n        key: 'public_date',\n        transforms: [sortable, classNames('col-width-10')]\n    },\n    {\n        title: 'CVSS base ',\n        key: 'cvss_score',\n        transforms: [sortable, classNames('col-width-10')]\n    },\n    { title: 'Impact', key: 'impact', transforms: [sortable, classNames('col-width-10')] },\n    { title: 'Status', key: 'status', transforms: [sortable, classNames('col-width-15')] }\n];\n\nclass SystemCves extends Component {\n    static propTypes = {\n        entity: propTypes.object,\n        cveList: propTypes.any,\n        fetchData: propTypes.func\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = { selectedCves: new Set() };\n    }\n\n    componentDidMount() {\n        StatusDropdown.setCallback(this.sendRequest);\n        this.apply({ show_all: 'true', sort: '-public_date' });\n    }\n\n    processError = error => {\n        const { status } = error;\n        const statusCode = parseInt(status);\n        if (statusCode === 404 && this.props.entity) {\n            return NoVulnerabilityData;\n        } else {\n            return GenericError;\n        }\n    };\n\n    apply = (config = {}) => {\n        if (config.hasOwnProperty('cvss_filter')) {\n            let cvssEntry = CVSSOptions.find(item => item.value === config.cvss_filter);\n            if (!cvssEntry) {\n                let values = config.cvss_filter.split(/[^0-9]+/).filter(item => parseFloat(item));\n                cvssEntry = { value: config.cvss_filter, from: values[0], to: values[1] };\n            }\n\n            config.cvss_from = cvssEntry.from;\n            config.cvss_to = cvssEntry.to;\n        }\n\n        if (config.hasOwnProperty('publish_date')) {\n            let publicEntry = PublicDateOptions.find(item => item.value === config.publish_date);\n            config.public_from = publicEntry.from && publicEntry.from.format('YYYY-MM-DD');\n            config.public_to = publicEntry.to && publicEntry.to.format('YYYY-MM-DD');\n        }\n\n        this.setState({ ...this.state, ...config }, this.sendRequest);\n    };\n\n    selectCves = (isSelected, cveNames) => {\n        let { selectedCves } = this.state;\n        if (cveNames) {\n            [].concat(cveNames).forEach(cveName => {\n                isSelected ? selectedCves.add(cveName) : selectedCves.delete(cveName);\n            });\n        } else {\n            selectedCves = new Set();\n        }\n\n        this.setState({ ...this.state, selectedCves: new Set(selectedCves) });\n    };\n\n    sendRequest = () => {\n        const { fetchData, entity } = this.props;\n        //TODO: need a better way of doing this\n        const showAllParam = this.state.hasOwnProperty('show_all') && !this.state.show_all;\n        // eslint-disable-next-line camelcase\n        fetchData && fetchData({ ...this.state, show_all: showAllParam, system: entity.id });\n    };\n\n    downloadReport = format => {\n        const params = { ...this.state, show_all: !this.state.show_all };\n        let { payload } = fetchCveListBySystem({ ...params, page_size: Number.MAX_SAFE_INTEGER, data_format: format, page: 1 });\n        payload &&\n            payload.then(({ data: response }) => {\n                const data = format === 'json' ? JSON.stringify(response) : response;\n                return downloadFile(data, `vulnerability_cves-${new Date().toISOString()}`, format);\n            });\n    };\n\n    render() {\n        const { cveList, entity } = this.props;\n        const { apply, downloadReport, selectCves } = this;\n        const cves = createCveListBySystem(entity.id, cveList);\n        const { errors } = cves;\n        if (!errors) {\n            return (\n                <CVETableContext.Provider\n                    value={{\n                        cves,\n                        params: this.state,\n                        methods: {\n                            apply,\n                            downloadReport,\n                            selectCves,\n                            fetchResource: params => fetchCveListBySystem({ ...params, system: entity.id })\n                        }\n                    }}\n                >\n                    <Stack>\n                        <StackItem>\n                            <SystemCveTableToolbar showRemediationButton entity={entity} />\n                        </StackItem>\n                        <StackItem>\n                            <SystemCveTable header={header} isSelectable entity={entity} />\n                        </StackItem>\n                    </Stack>\n                </CVETableContext.Provider>\n            );\n        } else {\n            return this.processError(errors);\n        }\n    }\n}\n\nfunction mapStateToProps({ SystemCvesStore, entityDetails: { entity } }) {\n    return {\n        cveList: SystemCvesStore && SystemCvesStore.cveList,\n        entity\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchData: params => dispatch(fetchCveListBySystem(params))\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SystemCves);\n","import propTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { SystemExludedFromAnalysis, SystemNotFound } from '../../../Helpers/constants';\nimport { dispatchAction } from '../../../Helpers/Dispatcher';\nimport { setHeader } from '../../../Store/Actions/Actions';\nimport { paths } from '../../../Utilities/Routes';\nimport Vulnerabilities from '../SystemCves/SystemCves';\n\nclass SystemDetail extends React.Component {\n    static propTypes = {\n        setHeader: propTypes.func,\n        entity: propTypes.object,\n        isOptOut: propTypes.bool,\n        optOutSystemHandler: propTypes.func\n    };\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { entity, isOptOut, optOutSystemHandler } = this.props;\n        this.props.setHeader({\n            breadcrumbs: [\n                { title: 'Vulnerability', to: paths.vulnerabilities },\n                { title: (entity && entity.display_name) || 'Invalid System', isActive: true }\n            ]\n        });\n\n        if (!entity) {\n            return (\n                <SystemNotFound />\n            );\n        }\n\n        if (!isOptOut) {\n            return (\n                <React.Fragment>\n                    <Vulnerabilities entity={entity.id} />\n                </React.Fragment>\n            );\n        } else {\n            return (\n                <React.Fragment>\n                    <SystemExludedFromAnalysis buttonAction={() => optOutSystemHandler(false)} />\n                </React.Fragment>\n            );\n        }\n    }\n}\n\nconst mapDispatchToProps = () => {\n    return {\n        setHeader: header => dispatchAction(setHeader(header))\n    };\n};\n\nfunction mapStateToProps({ entityDetails: { entity, opt_out: isOptOut } }) {\n    return {\n        entity,\n        isOptOut\n    };\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(SystemDetail)\n);\n","import React from 'react';\nimport SystemDetail from '../../Components/SmartComponents/SystemDetail/SystemDetail';\nimport { FETCH_SYSTEM_DETAILS } from '../ActionTypes';\n\nlet initialState = {\n    loaded: false\n};\n\n// Reducer\nexport const systemDetailStore = (INVENTORY_ACTION_TYPES, optOutSystemHandler) => (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_SYSTEM_DETAILS + '_FULFILLED':\n            return {\n                ...state,\n                ...action.payload.data\n            };\n        case INVENTORY_ACTION_TYPES.LOAD_ENTITY_FULFILLED:\n            return {\n                ...state,\n                loaded: true,\n                activeApps: [\n                    {\n                        title: 'Vulnerabilities',\n                        name: 'vulnerabilities',\n                        component: () => <SystemDetail optOutSystemHandler={optOutSystemHandler} />\n                    }\n                ]\n            };\n        default:\n            return state;\n    }\n};\n","import * as reactCore from '@patternfly/react-core';\nimport { Page } from '@patternfly/react-core';\nimport * as reactIcons from '@patternfly/react-icons';\nimport { Main } from '@redhat-cloud-services/frontend-components';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as reactRouterDom from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport { dispatchAction } from '../../../Helpers/Dispatcher';\nimport { fetchSystemDetails, optOutSystemAction } from '../../../Store/Actions/Actions';\nimport { systemDetailStore } from '../../../Store/Reducers/SystemDetailStore';\nimport ReducerRegistry from '../../../Utilities/ReducerRegistry';\nimport VulnerabilityHeader from '../VulnerabilityHeader/VulnerabilityHeader';\n\nclass InventoryDetail extends React.Component {\n    static propTypes = {\n        fetchSystemDetails: propTypes.func,\n        systemDetails: propTypes.object,\n        optOutSystem: propTypes.func,\n        match: propTypes.object,\n        addNotification: propTypes.func\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inventoryId: this.props.match.params.inventoryId,\n            removeListener: () => {},\n            linkHovered: false\n        };\n    }\n\n    componentDidMount() {\n        this.props.fetchSystemDetails(this.state.inventoryId);\n        this.fetchInventory();\n    }\n\n    async fetchInventory() {\n        const { inventoryConnector, mergeWithEntities, mergeWithDetail, INVENTORY_ACTION_TYPES } = await insights.loadInventory({\n            react: React,\n            reactRouterDom,\n            reactCore,\n            reactIcons\n        });\n\n        ReducerRegistry.register({\n            ...mergeWithEntities(),\n            ...mergeWithDetail(systemDetailStore(INVENTORY_ACTION_TYPES, this.optOutSystem))\n        });\n\n        this.setState({\n            InventoryHeader: inventoryConnector().InventoryDetailHead,\n            InventoryBody: inventoryConnector().AppInfo\n        });\n        this.state.removeListener();\n    }\n\n    checkItem = (key, value) => {\n        let newList = this.state.systemList;\n        newList[key].selected = value;\n        this.setState({ systemList: newList });\n    };\n\n    toggleLinkHover = value => {\n        this.setState({ ...this.state, linkHovered: value });\n    };\n\n    optOutSystem = value => {\n        this.props.optOutSystem(this.state.inventoryId, value).then(() => {\n            this.props.fetchSystemDetails(this.state.inventoryId);\n            value === true\n                ? this.props.addNotification({\n                    variant: 'success',\n                    title: 'System successfully excluded from vulnerability analysis'\n                })\n                : this.props.addNotification({\n                    variant: 'success',\n                    title: 'System successfully resumed vulnerability analysis',\n                    description: 'There may be 24 hours before data is available'\n                });\n        });\n    };\n\n    render() {\n        const { InventoryHeader, InventoryBody } = this.state;\n        const { systemDetails = {} } = this.props;\n        const { opt_out: isOptOut = false, entity } = systemDetails;\n\n        return (\n            <Page>\n                <VulnerabilityHeader title=\"\" showTabs={false}>\n                    {InventoryHeader && (\n                        <InventoryHeader\n                            hideBack\n                            actions={\n                                entity && [\n                                    isOptOut\n                                        ? {\n                                            title: 'Resume vulnerability analysis',\n                                            onClick: () => this.optOutSystem(false)\n                                        }\n                                        : {\n                                            title: 'Exclude from vulnerability analysis',\n                                            onClick: () => this.optOutSystem(true)\n                                        }\n                                ]\n                            }\n                        />\n                    )}\n                </VulnerabilityHeader>\n\n                {InventoryBody && (\n                    <Main>\n                        <React.Fragment>\n                            <InventoryBody optOutSystemHandler={this.optOutSystem} />\n                        </React.Fragment>\n                    </Main>\n                )}\n            </Page>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        systemDetails: state.entityDetails\n    };\n}\n\nconst mapDispatchToProps = () => {\n    return {\n        optOutSystem: (system, status) => dispatchAction(optOutSystemAction(system, status)),\n        fetchSystemDetails: system => dispatchAction(fetchSystemDetails(system)),\n        addNotification: notification => dispatchAction(addNotification(notification))\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(InventoryDetail)\n);\n"],"sourceRoot":""}