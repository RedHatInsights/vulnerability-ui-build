{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/objectSpread.js","webpack:///./node_modules/@babel/runtime/helpers/defineProperty.js","webpack:///./src/Components/SmartComponents/CVEs/CVEs.scss?5736","webpack:///./src/Components/SmartComponents/CVEs/CVEs.scss","webpack:///./src/Components/SmartComponents/CVEs/CVEs.js","webpack:///./src/Helpers/VulnerabilitiesHelper.js","webpack:///./src/Components/SmartComponents/SystemDetail/SystemDetail.js","webpack:///./src/Store/Reducers/SystemDetailStore.js","webpack:///./src/Components/SmartComponents/InventoryDetail/InventoryDetail.js"],"names":["defineProperty","__webpack_require__","module","exports","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","obj","value","configurable","writable","content","options","hmr","transform","insertInto","undefined","locals","push","CVEs","props","classCallCheck_default","this","possibleConstructorReturn_default","getPrototypeOf_default","call","emptyStore","entity","setHeader","title","breadcrumbs","dispatchSetHeader","Component","Vulnerabilities","VulnerabilitiesCves","params","react_default","a","createElement","React","propTypes","dataMapper","func","fetchResource","header","array","showAllCheckbox","bool","string","defaultSort","any","defaultProps","transforms","sortable","cellWidth","fetchCveListByAccount","cveList","isLoading","payload","asMutable","data","meta","errors","map","row","id","cells","Link","to","attributes","synopsis","frontend_components","description","maxLength","entryDelay","processDate","public_date","parseCvssScore","cvss2_score","cvss3_score","impact","hasLabel","systems_affected","toString","withRouter","connect","dispatchAction","emptyCveList","SystemDetail","paths","vulnerabilities","hostname","isActive","Fragment","affectedSystemId","state","entityDetails","display_name","initialState","loaded","systemDetailStore","INVENTORY_ACTION_TYPES","action","type","FETCH_SYSTEM_DETAILS","objectSpread_default","LOAD_ENTITY_FULFILLED","activeApps","name","component","InventoryDetail","_this","checkItem","newList","systemList","selected","setState","toggleLinkHover","linkHovered","optOutSystem","inventoryId","then","fetchSystemDetails","addNotification","variant","hiddenSystemLink","visible","eye_icon","hidden","eye_slash_icon","linkState","systemDetails","opt_out","onMouseEnter","onMouseLeave","onClick","match","removeListener","fetchInventory","insights","loadInventory","react","reactRouterDom","reactCore","reactIcons","inventoryConnector","mergeWithEntities","mergeWithDetail","ReducerRegistry","register","InventoryHeader","InventoryDetailHead","InventoryBody","AppInfo","_this2","_this$state","_this$props$systemDet","isOptOut","Page","VulnerabilityHeader","showTabs","hideBack","actions","object","system","status","optOutSystemAction","notification"],"mappings":"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","file":"js/InventoryDetail.js","sourcesContent":["var defineProperty = require(\"./defineProperty\");\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEs.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEs.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEs.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".table-header-icon svg {\\n  margin-right: 5px; }\\n\\n.pf-c-table tr td:first-of-type {\\n  white-space: nowrap; }\\n\", \"\"]);\n\n// exports\n","import { cellWidth, sortable } from '@patternfly/react-table';\nimport Vulnerabilities, { VulnerabilitiesCves } from '@redhat-cloud-services/frontend-components-inventory-vulnerabilities';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { dispatchAction } from '../../../Helpers/Dispatcher';\nimport { createCveListByAccount } from '../../../Helpers/VulnerabilitiesHelper';\nimport { emptyCveList, fetchCveListByAccount, setHeader } from '../../../Store/Actions/Actions';\nimport './CVEs.scss';\n\nclass CVEs extends React.Component {\n    static propTypes = {\n        dataMapper: propTypes.func,\n        fetchResource: propTypes.func,\n        setHeader: propTypes.func,\n        header: propTypes.array,\n        showAllCheckbox: propTypes.bool,\n        entity: propTypes.string,\n        emptyStore: propTypes.func,\n        defaultSort: propTypes.any\n    };\n\n    static defaultProps = {\n        header: [\n            { title: 'Name', key: 'synopsis', transforms: [sortable, cellWidth(10)] },\n            { title: 'Description', key: 'description', transforms: [cellWidth(50)] },\n            { title: 'Publish date', key: 'public_date', transforms: [sortable, cellWidth(10)] },\n            {\n                title: 'CVSS base score',\n                key: 'cvss_score',\n                transforms: [sortable, cellWidth(10)]\n            },\n            { title: 'Severity', key: 'impact', transforms: [sortable, cellWidth(10)] },\n            { title: 'Systems exposed', key: 'systems_affected', transforms: [sortable, cellWidth(10)] }\n        ],\n        fetchResource: fetchCveListByAccount,\n        dataMapper: createCveListByAccount,\n        showAllCheckbox: true,\n        defaultSort: '-public_date'\n    };\n\n    constructor(props) {\n        super(props);\n    }\n\n    componentWillUnmount() {\n        this.props.emptyStore();\n    }\n\n    dispatchSetHeader(entity) {\n        if (!entity) {\n            this.props.setHeader({\n                title: 'Vulnerability',\n                breadcrumbs: []\n            });\n        }\n    }\n\n    render() {\n        const { entity } = this.props;\n        this.dispatchSetHeader(entity);\n        const Component = (entity && Vulnerabilities) || VulnerabilitiesCves;\n        const params = (entity && { entity }) || this.props;\n        return <Component {...params} />;\n    }\n}\n\nconst mapDispatchToProps = () => {\n    return {\n        emptyStore: () => dispatchAction(emptyCveList()),\n        setHeader: header => dispatchAction(setHeader(header))\n    };\n};\n\nexport default withRouter(\n    connect(\n        null,\n        mapDispatchToProps\n    )(CVEs)\n);\n","import { LongTextTooltip, Shield } from '@redhat-cloud-services/frontend-components';\nimport { parseCvssScore, processDate } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport function createCveListByAccount(cveList) {\n    let isLoading = cveList.isLoading;\n    if (!isLoading) {\n        let payload = cveList.payload.asMutable();\n\n        let { data, meta, errors } = payload;\n\n        data =\n            data &&\n            data.map(row => ({\n                id: row.id,\n                cells: [\n                    <span key={row.id}>\n                        <Link to={'/cves/' + row.attributes.synopsis}>{row.attributes.synopsis}</Link>\n                    </span>,\n                    <span key={row.id}>\n                        <LongTextTooltip content={row.attributes.description} maxLength={180} entryDelay={1200} />\n                    </span>,\n                    <span key={row.id}>{processDate(row.attributes.public_date)}</span>,\n                    <span key={row.id}>{parseCvssScore(row.attributes.cvss2_score, row.attributes.cvss3_score, true)}</span>,\n\n                    <span key={row.id}>\n                        <Shield impact={row.attributes.impact} hasLabel />\n                    </span>,\n\n                    <span key={row.id}>{row.attributes.systems_affected.toString()}</span>\n                ]\n            }));\n        return { data: data && data.asMutable(), meta, isLoading, errors };\n    }\n\n    return { data: [], meta: (cveList.payload && cveList.payload.meta) || {}, isLoading };\n}\n","import propTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { dispatchAction } from '../../../Helpers/Dispatcher';\nimport { setHeader } from '../../../Store/Actions/Actions';\nimport { paths } from '../../../Utilities/Routes';\nimport CVEs from '../CVEs/CVEs';\n\nclass SystemDetail extends React.Component {\n    static propTypes = {\n        setHeader: propTypes.func,\n        hostname: propTypes.string,\n        affectedSystemId: propTypes.string\n    };\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        this.props.setHeader({\n            breadcrumbs: [{ title: 'Vulnerability', to: paths.vulnerabilities }, { title: this.props.hostname, isActive: true }]\n        });\n        return (\n            <React.Fragment>\n                <CVEs entity={this.props.affectedSystemId} />\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapDispatchToProps = () => {\n    return {\n        setHeader: header => dispatchAction(setHeader(header))\n    };\n};\n\nfunction mapStateToProps(state) {\n    return {\n        affectedSystemId: state.entityDetails.entity.id,\n        hostname: state.entityDetails.entity.display_name\n    };\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(SystemDetail)\n);\n","import SystemDetail from '../../Components/SmartComponents/SystemDetail/SystemDetail';\nimport { FETCH_SYSTEM_DETAILS } from '../ActionTypes';\n\nlet initialState = {\n    loaded: false\n};\n\n// Reducer\nexport const systemDetailStore = INVENTORY_ACTION_TYPES => (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_SYSTEM_DETAILS + '_FULFILLED':\n            return {\n                ...state,\n                ...action.payload.data\n            };\n        case INVENTORY_ACTION_TYPES.LOAD_ENTITY_FULFILLED:\n            return {\n                ...state,\n                loaded: true,\n                activeApps: [{ title: 'Vulnerabilities', name: 'vulnerabilities', component: SystemDetail }]\n            };\n        default:\n            return state;\n    }\n};\n","import * as reactCore from '@patternfly/react-core';\nimport { Page } from '@patternfly/react-core';\nimport * as reactIcons from '@patternfly/react-icons';\nimport { Main } from '@redhat-cloud-services/frontend-components';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as reactRouterDom from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport { dispatchAction } from '../../../Helpers/Dispatcher';\nimport { fetchSystemDetails, optOutSystemAction } from '../../../Store/Actions/Actions';\nimport { systemDetailStore } from '../../../Store/Reducers/SystemDetailStore';\nimport ReducerRegistry from '../../../Utilities/ReducerRegistry';\nimport VulnerabilityHeader from '../VulnerabilityHeader/VulnerabilityHeader';\n\nclass InventoryDetail extends React.Component {\n    static propTypes = {\n        fetchSystemDetails: propTypes.func,\n        systemDetails: propTypes.object,\n        optOutSystem: propTypes.func,\n        match: propTypes.object,\n        addNotification: propTypes.func\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inventoryId: this.props.match.params.inventoryId,\n            removeListener: () => {},\n            linkHovered: false\n        };\n    }\n\n    componentDidMount() {\n        this.props.fetchSystemDetails(this.state.inventoryId);\n        this.fetchInventory();\n    }\n\n    async fetchInventory() {\n        const { inventoryConnector, mergeWithEntities, mergeWithDetail, INVENTORY_ACTION_TYPES } = await insights.loadInventory({\n            react: React,\n            reactRouterDom,\n            reactCore,\n            reactIcons\n        });\n\n        ReducerRegistry.register({\n            ...mergeWithEntities(),\n            ...mergeWithDetail(systemDetailStore(INVENTORY_ACTION_TYPES))\n        });\n\n        this.setState({\n            InventoryHeader: inventoryConnector().InventoryDetailHead,\n            InventoryBody: inventoryConnector().AppInfo\n        });\n        this.state.removeListener();\n    }\n\n    checkItem = (key, value) => {\n        let newList = this.state.systemList;\n        newList[key].selected = value;\n        this.setState({ systemList: newList });\n    };\n\n    toggleLinkHover = value => {\n        this.setState({ ...this.state, linkHovered: value });\n    };\n\n    optOutSystem = value => {\n        this.props.optOutSystem(this.state.inventoryId, value).then(() => {\n            this.props.fetchSystemDetails(this.state.inventoryId);\n            value === true\n                ? this.props.addNotification({\n                    variant: 'info',\n                    title: 'System hidden from vulnerability reporting',\n                    description: 'This system does not show up in vulnerability reporting metrics or reports'\n                })\n                : this.props.addNotification({\n                    variant: 'info',\n                    title: 'System visible in vulnerability reporting',\n                    description: 'This system shows up in vulnerability reporting metrics and reports'\n                });\n        });\n    };\n\n    hiddenSystemLink = () => {\n        const visible = (\n            <React.Fragment>\n                <reactIcons.EyeIcon /> Show in reporting\n            </React.Fragment>\n        );\n        const hidden = (\n            <React.Fragment>\n                <reactIcons.EyeSlashIcon /> Hidden from reporting\n            </React.Fragment>\n        );\n        const linkState =\n            this.props.systemDetails && this.props.systemDetails.opt_out && (this.state.linkHovered ? visible : hidden);\n        return (\n            <a\n                onMouseEnter={() => this.toggleLinkHover(true)}\n                onMouseLeave={() => this.toggleLinkHover(false)}\n                onClick={() => this.optOutSystem(false)}\n            >\n                {linkState}\n            </a>\n        );\n    };\n\n    render() {\n        const { InventoryHeader, InventoryBody } = this.state;\n        const { systemDetails: { opt_out: isOptOut } = false } = this.props;\n        return (\n            <Page>\n                <VulnerabilityHeader title=\"\" showTabs={false}>\n                    {InventoryHeader && (\n                        <InventoryHeader\n                            hideBack\n                            actions={[\n                                isOptOut\n                                    ? {\n                                        title: 'Show in vulnerability reporting',\n                                        onClick: () => this.optOutSystem(false)\n                                    }\n                                    : {\n                                        title: 'Hide from vulnerability reporting',\n                                        onClick: () => this.optOutSystem(true)\n                                    }\n                            ]}\n                        />\n                    )}\n                    {this.hiddenSystemLink()}\n                </VulnerabilityHeader>\n                {InventoryBody && (\n                    <Main>\n                        <React.Fragment>\n                            <InventoryBody />\n                        </React.Fragment>\n                    </Main>\n                )}\n            </Page>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        systemDetails: state.entityDetails\n    };\n}\n\nconst mapDispatchToProps = () => {\n    return {\n        optOutSystem: (system, status) => dispatchAction(optOutSystemAction(system, status)),\n        fetchSystemDetails: system => dispatchAction(fetchSystemDetails(system)),\n        addNotification: notification => dispatchAction(addNotification(notification))\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(InventoryDetail)\n);\n"],"sourceRoot":""}