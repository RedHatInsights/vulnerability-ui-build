{"version":3,"file":"js/4353.1672930711861.05665fc11d94d29c9ab3.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-table/dist/esm/components/Table/EditableSelectInputCell.js","webpack:///./node_modules/@patternfly/react-table/dist/esm/components/Table/EditableTextCell.js","webpack:///./node_modules/@patternfly/react-table/dist/esm/components/Table/utils/decorators/textCenter.js","webpack:///./node_modules/@patternfly/react-table/dist/esm/components/Table/utils/decorators/headerCol.js","webpack:///./node_modules/@patternfly/react-table/dist/esm/components/TableComposable/Caption.js","webpack:///./node_modules/@patternfly/react-table/dist/esm/components/TableComposable/OuterScrollContainer.js","webpack:///./node_modules/@patternfly/react-table/dist/esm/components/TableComposable/InnerScrollContainer.js","webpack:///./node_modules/@patternfly/react-table/node_modules/@patternfly/react-core/dist/esm/components/TextInput/TextInput.js","webpack:///./node_modules/@patternfly/react-table/node_modules/@patternfly/react-core/dist/esm/helpers/resizeObserver.js","webpack:///./node_modules/lodash/isEqual.js"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport { Select } from '@patternfly/react-core';\nimport inlineStyles from '@patternfly/react-styles/css/components/InlineEdit/inline-edit';\nimport formStyles from '@patternfly/react-styles/css/components/Form/form';\nexport const EditableSelectInputCell = ({ value, rowIndex, cellIndex, onSelect = () => { }, clearSelection, isOpen = false, onToggle = () => { }, selections = [''], options = [], props }) => {\n    const onSelectHandler = (event, newValue, isPlaceholder) => {\n        onSelect(newValue, event, rowIndex, cellIndex, isPlaceholder);\n    };\n    const onClear = (event) => {\n        clearSelection(rowIndex, cellIndex, event);\n    };\n    const select = (React.createElement(Select, Object.assign({}, props.editableSelectProps, { onSelect: onSelectHandler }, (clearSelection && { onClear }), { isOpen: isOpen, onToggle: onToggle, selections: selections }), options));\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: inlineStyles.inlineEditValue }, Array.isArray(value) ? value.join(', ') : value),\n        React.createElement(\"div\", { className: inlineStyles.inlineEditInput },\n            select,\n            React.createElement(\"div\", { className: css(formStyles.formHelperText, formStyles.modifiers.error), \"aria-live\": \"polite\" }, props.errorText))));\n};\nEditableSelectInputCell.displayName = 'EditableSelectInputCell';\n//# sourceMappingURL=EditableSelectInputCell.js.map","import * as React from 'react';\nimport { TextInput } from '@patternfly/react-core/dist/esm/components/TextInput';\nimport inlineStyles from '@patternfly/react-styles/css/components/InlineEdit/inline-edit';\nimport formStyles from '@patternfly/react-styles/css/components/Form/form';\nimport { css } from '@patternfly/react-styles';\nexport const EditableTextCell = ({ value, rowIndex, cellIndex, props, handleTextInputChange, inputAriaLabel, isDisabled = false }) => (React.createElement(React.Fragment, null,\n    React.createElement(\"div\", { className: inlineStyles.inlineEditValue }, value),\n    React.createElement(\"div\", { className: inlineStyles.inlineEditInput },\n        React.createElement(TextInput, { isDisabled: isDisabled, value: props.editableValue !== undefined ? props.editableValue : value, validated: props.isValid !== false ? 'default' : 'error', type: \"text\", onChange: (newValue, event) => {\n                handleTextInputChange(newValue, event, rowIndex, cellIndex);\n            }, \"aria-label\": inputAriaLabel }),\n        React.createElement(\"div\", { className: css(formStyles.formHelperText, formStyles.modifiers.error), \"aria-live\": \"polite\" }, props.errorText))));\nEditableTextCell.displayName = 'EditableTextCell';\n//# sourceMappingURL=EditableTextCell.js.map","export const textCenter = () => ({ textCenter: true });\n//# sourceMappingURL=textCenter.js.map","import * as React from 'react';\nexport const headerCol = (id = 'simple-node') => {\n    const headerColObj = (value, { rowIndex } = {}) => {\n        const result = typeof value === 'object' ? value.title : value;\n        return {\n            component: 'th',\n            children: React.createElement(\"div\", { id: `${id}${rowIndex}` }, result)\n        };\n    };\n    return headerColObj;\n};\n//# sourceMappingURL=headerCol.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nexport const Caption = (_a) => {\n    var { children, className } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"caption\", Object.assign({ className: className }, props), children));\n};\nCaption.displayName = 'Caption';\n//# sourceMappingURL=Caption.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table-scrollable';\nexport const OuterScrollContainer = (_a) => {\n    var { children, className } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(className, styles.scrollOuterWrapper) }, props), children));\n};\nOuterScrollContainer.displayName = 'OuterScrollContainer';\n//# sourceMappingURL=OuterScrollContainer.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table-scrollable';\nexport const InnerScrollContainer = (_a) => {\n    var { children, className } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(className, styles.scrollInnerWrapper) }, props), children));\n};\nInnerScrollContainer.displayName = 'InnerScrollContainer';\n//# sourceMappingURL=InnerScrollContainer.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/FormControl/form-control';\nimport { css } from '@patternfly/react-styles';\nimport { ValidatedOptions } from '../../helpers/constants';\nimport { trimLeft } from '../../helpers/util';\nimport { getDefaultOUIAId, getOUIAProps } from '../../helpers';\nimport { getResizeObserver } from '../../helpers/resizeObserver';\nexport var TextInputTypes;\n(function (TextInputTypes) {\n    TextInputTypes[\"text\"] = \"text\";\n    TextInputTypes[\"date\"] = \"date\";\n    TextInputTypes[\"datetimeLocal\"] = \"datetime-local\";\n    TextInputTypes[\"email\"] = \"email\";\n    TextInputTypes[\"month\"] = \"month\";\n    TextInputTypes[\"number\"] = \"number\";\n    TextInputTypes[\"password\"] = \"password\";\n    TextInputTypes[\"search\"] = \"search\";\n    TextInputTypes[\"tel\"] = \"tel\";\n    TextInputTypes[\"time\"] = \"time\";\n    TextInputTypes[\"url\"] = \"url\";\n})(TextInputTypes || (TextInputTypes = {}));\nexport var TextInputReadOnlyVariant;\n(function (TextInputReadOnlyVariant) {\n    TextInputReadOnlyVariant[\"default\"] = \"default\";\n    TextInputReadOnlyVariant[\"plain\"] = \"plain\";\n})(TextInputReadOnlyVariant || (TextInputReadOnlyVariant = {}));\nexport class TextInputBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.inputRef = React.createRef();\n        this.observer = () => { };\n        this.handleChange = (event) => {\n            if (this.props.onChange) {\n                this.props.onChange(event.currentTarget.value, event);\n            }\n        };\n        this.handleResize = () => {\n            const inputRef = this.props.innerRef || this.inputRef;\n            if (inputRef && inputRef.current) {\n                trimLeft(inputRef.current, String(this.props.value));\n            }\n        };\n        this.restoreText = () => {\n            const inputRef = this.props.innerRef || this.inputRef;\n            // restore the value\n            inputRef.current.value = String(this.props.value);\n            // make sure we still see the rightmost value to preserve cursor click position\n            inputRef.current.scrollLeft = inputRef.current.scrollWidth;\n        };\n        this.onFocus = (event) => {\n            const { isLeftTruncated, onFocus } = this.props;\n            if (isLeftTruncated) {\n                this.restoreText();\n            }\n            onFocus && onFocus(event);\n        };\n        this.onBlur = (event) => {\n            const { isLeftTruncated, onBlur } = this.props;\n            if (isLeftTruncated) {\n                this.handleResize();\n            }\n            onBlur && onBlur(event);\n        };\n        this.sanitizeInputValue = (value) => typeof value === 'string' ? value.replace(/\\n/g, ' ') : value;\n        if (!props.id && !props['aria-label'] && !props['aria-labelledby']) {\n            // eslint-disable-next-line no-console\n            console.error('Text input:', 'Text input requires either an id or aria-label to be specified');\n        }\n        this.state = {\n            ouiaStateId: getDefaultOUIAId(TextInputBase.displayName)\n        };\n    }\n    componentDidMount() {\n        if (this.props.isLeftTruncated) {\n            const inputRef = this.props.innerRef || this.inputRef;\n            this.observer = getResizeObserver(inputRef.current, this.handleResize);\n            this.handleResize();\n        }\n    }\n    componentWillUnmount() {\n        if (this.props.isLeftTruncated) {\n            this.observer();\n        }\n    }\n    render() {\n        const _a = this.props, { innerRef, className, type, value, validated, \n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        onChange, onFocus, onBlur, isLeftTruncated, isReadOnly, readOnly, readOnlyVariant, isRequired, isDisabled, isIconSprite, iconVariant, customIconUrl, customIconDimensions, ouiaId, ouiaSafe } = _a, props = __rest(_a, [\"innerRef\", \"className\", \"type\", \"value\", \"validated\", \"onChange\", \"onFocus\", \"onBlur\", \"isLeftTruncated\", \"isReadOnly\", \"readOnly\", \"readOnlyVariant\", \"isRequired\", \"isDisabled\", \"isIconSprite\", \"iconVariant\", \"customIconUrl\", \"customIconDimensions\", \"ouiaId\", \"ouiaSafe\"]);\n        const customIconStyle = {};\n        if (customIconUrl) {\n            customIconStyle.backgroundImage = `url('${customIconUrl}')`;\n        }\n        if (customIconDimensions) {\n            customIconStyle.backgroundSize = customIconDimensions;\n        }\n        return (React.createElement(\"input\", Object.assign({}, props, { onFocus: this.onFocus, onBlur: this.onBlur, className: css(styles.formControl, isIconSprite && styles.modifiers.iconSprite, readOnlyVariant === 'plain' && styles.modifiers.plain, validated === ValidatedOptions.success && styles.modifiers.success, validated === ValidatedOptions.warning && styles.modifiers.warning, ((iconVariant && iconVariant !== 'search') || customIconUrl) && styles.modifiers.icon, iconVariant && styles.modifiers[iconVariant], className), onChange: this.handleChange, type: type, value: this.sanitizeInputValue(value), \"aria-invalid\": props['aria-invalid'] ? props['aria-invalid'] : validated === ValidatedOptions.error, required: isRequired, disabled: isDisabled, readOnly: !!readOnlyVariant || isReadOnly || readOnly, ref: innerRef || this.inputRef }, ((customIconUrl || customIconDimensions) && { style: customIconStyle }), getOUIAProps(TextInput.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe))));\n    }\n}\nTextInputBase.displayName = 'TextInputBase';\nTextInputBase.defaultProps = {\n    'aria-label': null,\n    className: '',\n    isRequired: false,\n    validated: 'default',\n    isDisabled: false,\n    isReadOnly: false,\n    isIconSprite: false,\n    type: TextInputTypes.text,\n    isLeftTruncated: false,\n    onChange: () => undefined,\n    ouiaSafe: true\n};\nexport const TextInput = React.forwardRef((props, ref) => (React.createElement(TextInputBase, Object.assign({}, props, { innerRef: ref }))));\nTextInput.displayName = 'TextInput';\n//# sourceMappingURL=TextInput.js.map","import { canUseDOM } from './util';\n/**\n * This function creates a ResizeObserver used to handle resize events for the given containerRef. If ResizeObserver\n * or the given containerRef are not available, a window resize event listener is used by default.\n *\n * Example 1:\n *\n * private containerRef = React.createRef<HTMLDivElement>();\n * private observer: any = () => {};\n *\n * public componentDidMount() {\n *   this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n * }\n *\n * public componentWillUnmount() {\n *   this.observer();\n * }\n *\n * private handleResize = () => {\n *   if (this.containerRef.current && this.containerRef.current.clientWidth) {\n *     this.setState({ width: this.containerRef.current.clientWidth });\n *   }\n * };\n *\n * public render() {\n *   return (\n *     <div ref={this.containerRef} >\n *       <Chart width={this.state.width} ... />\n *     </div>\n *   );\n * }\n *\n * Example 2:\n *\n * private inputRef = React.createRef<HTMLInputElement>();\n * private observer: any = () => {};\n *\n * public componentDidMount() {\n *   this.observer = getResizeObserver(this.inputRef.current, this.handleResize);\n * }\n *\n * public componentWillUnmount() {\n *   this.observer();\n * }\n *\n * private handleResize = () => {\n *   if (this.inputRef.current) {\n *     trimLeft(inputRef.current, String(this.props.value));\n *   }\n * };\n *\n * public render() {\n *   return (\n *     <input ref={this.inputRef} ... />\n *   );\n * }\n *\n * Example 3 - With debounced method passed in:\n *\n * public componentDidMount() {\n *   this.observer = getResizeObserver(this.inputRef.current, debounce(this.handleResize, 250), false);\n * }\n *\n * @param {Element} containerRefElement The container reference to observe\n * @param {Function} handleResize The function to call for resize events\n * @param {boolean} useRequestAnimationFrame Whether to pass the handleResize function as a callback to requestAnimationFrame. Pass in false when the function passed in is debounced. Defaults to true.\n * @return {Function} The function used to unobserve resize events\n */\nexport const getResizeObserver = (containerRefElement, handleResize, useRequestAnimationFrame = true) => {\n    let unobserve;\n    if (canUseDOM) {\n        const { ResizeObserver } = window;\n        if (containerRefElement && ResizeObserver) {\n            const resizeObserver = new ResizeObserver((entries) => {\n                // Wrap resize function in requestAnimationFrame to avoid \"ResizeObserver loop limit exceeded\" errors\n                if (useRequestAnimationFrame) {\n                    window.requestAnimationFrame(() => {\n                        if (Array.isArray(entries) && entries.length > 0) {\n                            handleResize();\n                        }\n                    });\n                    // Avoid wrapping function in requestAnimationFrame if the function is debounced\n                }\n                else {\n                    if (Array.isArray(entries) && entries.length > 0) {\n                        handleResize();\n                    }\n                }\n            });\n            resizeObserver.observe(containerRefElement);\n            unobserve = () => resizeObserver.unobserve(containerRefElement);\n        }\n        else {\n            window.addEventListener('resize', handleResize);\n            unobserve = () => window.removeEventListener('resize', handleResize);\n        }\n    }\n    return () => {\n        if (unobserve) {\n            unobserve();\n        }\n    };\n};\n//# sourceMappingURL=resizeObserver.js.map","var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n"],"names":["EditableSelectInputCell","value","rowIndex","cellIndex","onSelect","clearSelection","isOpen","onToggle","selections","options","props","select","Select","Object","assign","editableSelectProps","event","newValue","isPlaceholder","onClear","className","Array","isArray","join","css","errorText","displayName","EditableTextCell","handleTextInputChange","inputAriaLabel","isDisabled","TextInput","undefined","editableValue","validated","isValid","type","onChange","textCenter","headerCol","id","result","title","component","children","Caption","_a","__rest","OuterScrollContainer","InnerScrollContainer","TextInputTypes","TextInputReadOnlyVariant","TextInputBase","constructor","super","this","inputRef","observer","handleChange","currentTarget","handleResize","innerRef","current","String","restoreText","scrollLeft","scrollWidth","onFocus","isLeftTruncated","onBlur","sanitizeInputValue","replace","console","error","state","ouiaStateId","componentDidMount","componentWillUnmount","render","isReadOnly","readOnly","readOnlyVariant","isRequired","isIconSprite","iconVariant","customIconUrl","customIconDimensions","ouiaId","ouiaSafe","customIconStyle","backgroundImage","backgroundSize","required","disabled","ref","style","defaultProps","text","getResizeObserver","containerRefElement","useRequestAnimationFrame","unobserve","ResizeObserver","window","resizeObserver","entries","requestAnimationFrame","length","observe","addEventListener","removeEventListener","baseIsEqual","module","exports","other"],"sourceRoot":""}