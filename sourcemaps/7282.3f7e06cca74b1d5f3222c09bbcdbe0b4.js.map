{"version":3,"file":"js/7282.876f2e7c677c09e6a06e.js","mappings":"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","sources":["webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/AdvisoryAvailabilityFilter.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/SearchFilter.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/SecurityRuleFilter.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/StatusFilter.js","webpack:///./src/Helpers/DownloadReport.js","webpack:///./src/Helpers/TableToolbarHelper.js","webpack:///./node_modules/lodash/unionWith.js"],"sourcesContent":["import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { ADVISORY_AVAILABILITY_FILTER_OPTIONS } from '../../../../Helpers/constants';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\n\nconst AdvisoryAvailabilityFilter = (apply, currentFilter = {}) => {\n    let { advisory_available: currentValue } = currentFilter;\n\n    const filterByAdvisoryAvailability = values => {\n        apply({\n            advisory_available: values.length > 0 ? values?.join(',') : undefined,\n            page: 1\n        });\n    };\n\n    return {\n        label: intl.formatMessage(messages.advisory),\n        type: conditionalFilterType.checkbox,\n        key: 'advisory_available',\n        filterValues: {\n            onChange: (event, value) => {\n                filterByAdvisoryAvailability(value);\n            },\n            items: ADVISORY_AVAILABILITY_FILTER_OPTIONS.map(({ label, value }) => ({ label, value })),\n            value: currentValue?.split(',')\n        }\n    };\n};\n\nexport default AdvisoryAvailabilityFilter;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { intl } from '../../../../Utilities/IntlProvider';\n\nimport debounce from 'lodash/debounce';\nimport React from 'react';\n\nconst useSearchFilter = (urlParam, label, placeholder, search, apply) => {\n    const [searchValue, setSearchValue] = React.useState();\n    const [handleSearch] = React.useState(() =>\n        debounce(newValue =>  {\n            if (newValue !== undefined) {\n                apply({ [urlParam]: newValue, page: 1 });\n            }},\n        400)\n    );\n\n    React.useEffect(() => setSearchValue(search), [search]);\n\n    return {\n        type: conditionalFilterType.text,\n        label: intl.formatMessage(label),\n        key: urlParam,\n        filterValues: {\n            'aria-label': 'search-field',\n            id: `search-${label.id}`,\n            onChange: (event, value) => {\n                setSearchValue(value);\n                handleSearch(value);\n            },\n            placeholder: intl.formatMessage(placeholder),\n            value: searchValue\n        }\n    };\n};\n\nexport default useSearchFilter;\n","\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { RULE_PRESENCE_OPTIONS } from '../../../../Helpers/constants';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\nimport unionWith from 'lodash/unionWith';\nimport isEqual from 'lodash/isEqual';\n\nconst securityRuleFilter = (apply, currentFilter = {}, dynamicFilters = [], config = {}) => {\n    let currentValue = [];\n\n    if (currentFilter.rule_presence) {\n        currentValue = currentValue.concat(currentFilter.rule_presence.split(','));\n    }\n\n    if (currentFilter.rule) {\n        currentValue = currentValue.concat(currentFilter.rule.split(','));\n    }\n\n    const filterBySecurityRule = values => {\n        apply({\n            ...config.isDynamic && { rule: values.join(',') || undefined },\n            ...!config.isDynamic && { rule_presence: values.join(',') || undefined },\n            page: 1\n        });\n    };\n\n    const dropdownItems\t= () => {\n        const items = config.dropdownItems ? config.dropdownItems : RULE_PRESENCE_OPTIONS;\n\n        return unionWith(items, dynamicFilters, isEqual).map(({ label, value }) => ({ label, value }));\n    };\n\n    return {\n        label: intl.formatMessage(messages.filterSecurityRules),\n        type: conditionalFilterType.checkbox,\n        key: 'security_rule',\n        filterValues: {\n            onChange: (event, value) => {\n                filterBySecurityRule(value);\n            },\n            items: dropdownItems(),\n            value: currentValue\n        }\n    };\n};\n\nexport default securityRuleFilter;\n","\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { STATUS_OPTIONS } from '../../../../Helpers/constants';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\n\nconst statusFilter = (apply, currentFilter = {}) => {\n\n    let { status_id: currentValue } = currentFilter;\n\n    const filterByStatus = values => {\n        apply({ status_id: (values.length > '0' && values.filter(value => value !== ',').join(',')) || '', page: 1 });\n    };\n\n    return {\n        label: intl.formatMessage(messages.filterStatus),\n        type: conditionalFilterType.checkbox,\n        key: 'status',\n        filterValues: {\n            onChange: (event, value) => {\n                filterByStatus(value);\n            },\n            items: STATUS_OPTIONS.map(item => ({ label: item.label, value: item.value })),\n            value: (currentValue ? currentValue.split(',') : [])\n        }\n    };\n};\n\nexport default statusFilter;\n","import { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { intl } from '../Utilities/IntlProvider';\nimport messages from '../Messages';\nimport { NotAuthorizedNotification } from './constants';\n\nclass DownloadReport {\n    constructor() {\n        this.defaultParams = {\n            page: 1,\n            page_size: Math.min(Number.MAX_SAFE_INTEGER, 9007199254740991)\n        };\n\n        this.params = {\n            cve: null\n        };\n\n        this.pages = ['systems-exposed', 'system-cves', 'cves', 'system-list'];\n        this.formats = ['csv', 'json'];\n\n        this.notifications = {\n            start: {\n                variant: 'info',\n                title: intl.formatMessage(messages.notificationReportDownloadStart)\n            },\n            success: {\n                variant: 'success',\n                title: intl.formatMessage(messages.notificationReportDownloadSuccess)\n            },\n            failure: {\n                variant: 'danger',\n                autoDismiss: false,\n                title: intl.formatMessage(messages.notificationReportDownloadFailureTitle),\n                description: intl.formatMessage(messages.notificationReportDownloadFailureBody)\n            }\n        };\n    }\n\n    filename = (page) => {\n        const date = new Date().toISOString().replace(/[T:]/g, '-').split('.')[0] + '-utc';\n\n        switch (page) {\n            case 'reports':\n                return `vulnerability_cves-report--${new Date().toISOString().split('T')[0]}`;\n            case 'systems-exposed':\n                return `vulnerability_systems-exposed-${this.params.cve}--${date}`;\n            case 'system-list':\n                return `vulnerability_systems--${date}`;\n            default:\n                return `vulnerability_cves--${date}`;\n\n        }\n    };\n\n    checkTypes = (fetchData, page, format) => {\n        if (typeof fetchData !== 'function') {\n            throw `exec expects the 1st param to be funtion. Received ${typeof fetchData}`;\n        }\n\n        if (!this.pages.includes(page)) {\n            throw `Page ${page} does not exist`;\n        }\n\n        if (!this.formats.includes(format)) {\n            throw `Format ${format} is not supported`;\n        }\n    };\n\n    /**\n     * Execute and download the report\n     *\n     * @param {Function} fetchData - Function to be called in order to fetch data.\n     * @param {Object || Array} params - Object to be sent as request params. If you need to pass extra argument, pass an array.\n     * @param {String} format - Supported formats to download are CSV and JSON.\n     * @param {String} page - Name of the page based on which the filename will be determined.\n     * @returns {void}\n     */\n    exec = async (fetchData, params, format, page, showNotification, clearNotification, shouldUseHybridSystemFilter = false) => {\n        showNotification(this.notifications.start);\n\n        this.checkTypes(fetchData, page, format);\n        this.params.cve = params?.id || null;\n\n        try {\n            let { payload } = await fetchData(\n                {\n                    ...params.id && { id: params.id },\n                    ...params,\n                    ...this.defaultParams,\n                    data_format: format,\n                    report: 'true'\n                },\n                shouldUseHybridSystemFilter\n            );\n\n            let { data: response } = await payload;\n            let data = format === 'json' ? JSON.stringify(response) : response;\n\n            downloadFile(data, this.filename(page), format);\n\n            clearNotification();\n            showNotification(this.notifications.success);\n        } catch (error) {\n            clearNotification();\n            showNotification(error.status === '403' ? NotAuthorizedNotification : this.notifications.failure);\n\n            throw `${error}`;\n        }\n    };\n}\n\nexport default new DownloadReport();\n","import messages from '../Messages';\nimport { getFilters, ONLY_NON_VULNERABLE_SYSTEMS } from './constants';\nimport { intl } from '../Utilities/IntlProvider';\nimport isEqual from 'lodash/isEqual';\n\nexport const handleChangePage = (_event, page, apply) => apply({ page });\n\nexport const handleSetPageSize = (_event, perPage, apply) => apply({ page_size: perPage, page: 1 });\n\nexport const exportConfig = (methods) => (\n    { onSelect: (_event, fileType) => methods.downloadReport(fileType) }\n);\n\nexport const buildActiveFilters = (currentFilters, filterRuleValues = [], shouldUseHybridSystemFilter = false) => {\n    const { filter: nameFilter, advisory: advisoryFilter } = currentFilters;\n    const FILTERS = getFilters(shouldUseHybridSystemFilter);\n\n    const buildChip = (key, parameter) => (\n        FILTERS[key].items.reduce((object, item) => {\n            if (parameter === item.value) {\n                object.name = item.label;\n                object.value = item.value;\n            }\n            else if (key === 'rule_presence') {\n                const filteredRule = filterRuleValues.find(({ value }) => value === parameter);\n\n                ['true', 'false', ONLY_NON_VULNERABLE_SYSTEMS].includes(parameter)\n                    ? object.name = FILTERS.rule_presence.items.find(e => e.value === parameter).label\n                    : object.name = filteredRule && filteredRule.label || parameter;\n\n                object.value = parameter;\n            }\n\n            return object;\n        }, {})\n    );\n\n    const buildChips = (paramValues, key) => {\n        return paramValues.reduce((values, parameter) => {\n            values.push(buildChip(key, parameter));\n            return values;\n        }, []);\n    };\n\n    const hasValue = (filters, key) => Object.keys(filters).includes(key) && !['', undefined].includes(filters[key]);\n\n    // FIXME please!!!\n    const filterChips = Object.keys(FILTERS).reduce((array, key) => {\n        if (key === 'rule_presence' && (hasValue(currentFilters, 'rule_presence') || hasValue(currentFilters, 'rule'))) {\n            const multiValue = [].concat(\n                currentFilters.rule_presence ? currentFilters.rule_presence.split(',') : [],\n                currentFilters.rule ? currentFilters.rule.split(',') : []);\n            array.push({ key, multiValue, category: FILTERS[key].title, chips: buildChips(multiValue, key) });\n        }\n        else if (key === 'cvss_filter' && (hasValue(currentFilters, 'cvss_from') || hasValue(currentFilters, 'cvss_to'))) {\n            const cvssFrom = (currentFilters.cvss_from && parseFloat(currentFilters.cvss_from).toFixed(1)) || '0.0';\n            const cvssTo = (currentFilters.cvss_to && parseFloat(currentFilters.cvss_to).toFixed(1)) || '10.0';\n\n            if (cvssFrom !== '0.0' || cvssTo !== '10.0') {\n                array.push({ key, category: FILTERS[key].title, chips: [{ name: `${cvssFrom} - ${cvssTo}` }] });\n            }\n        }\n        else if (key === 'rhel_version' && hasValue(currentFilters, 'rhel_version')) {\n            array.push({\n                key,\n                multiValue: currentFilters.rhel_version.split(','),\n                category: 'Operating system',\n                chips: currentFilters.rhel_version\n                    .split(',')\n                    .map((v) => ({ value: v, name: `RHEL ${v}` }))\n            });\n        }\n        else if (hasValue(currentFilters, key)) {\n            const multiValue = typeof currentFilters[key] === 'string' && currentFilters[key].split(',');\n            const filteredValues = (multiValue && multiValue.length > 1)\n                && buildChips(multiValue, key)\n                || [buildChip(key, currentFilters[key])];\n\n            array.push({ key, multiValue, category: FILTERS[key].title, chips: filteredValues });\n        }\n\n        return array;\n    }, []);\n\n    nameFilter && filterChips.push(\n        {\n            key: 'filter',\n            category: intl.formatMessage(messages.searchLabel),\n            chips: [{ name: nameFilter }]\n        }\n    );\n\n    advisoryFilter && filterChips.push(\n        {\n            key: 'advisory',\n            category: intl.formatMessage(messages.advisoryName),\n            chips: [{ name: advisoryFilter }]\n        }\n    );\n\n    return filterChips;\n};\n\nexport const removeFilters = (chips, apply, reset = false, defaultFilters = {}) => {\n    if (reset) {\n        apply({ ...defaultFilters, page: 1, reset });\n        return;\n    }\n\n    const emptyFilter = chips.reduce((obj, item) => {\n        if (item.key === 'rule_presence') {\n            const remainingValues = item.multiValue.filter(value => !item.chips.some(chip => chip.value === value));\n            obj.rule_presence = remainingValues.filter(value => ['true', 'false'].includes(value)).join(',') || '';\n            obj.rule = remainingValues.filter(value => !['true', 'false'].includes(value)).join(',') || '';\n        }\n        else if (item.key === 'filter' || item.key === 'advisory' || (item.multiValue && item.multiValue.length === 1)) {\n            obj[item.key] = '';\n        }\n        else if (item.key === 'cvss_filter') {\n            obj.cvss_filter = undefined;\n            obj.cvss_from = undefined;\n            obj.cvss_to = undefined;\n        }\n        else {\n            obj[item.key] = item.multiValue.filter(value => !item.chips.some(chip => chip.value === value)).join(',');\n        }\n\n        if (obj[item.key] === '') {\n            obj[item.key] = undefined;\n        }\n\n        return obj;\n    }, {});\n\n    apply({ ...emptyFilter, page: 1 });\n};\n\nexport const isFilterInDefaultState = (currentParams, defaultParams, filterParams) => {\n    // filter out params which have nothing to do with filter chips, like page, sort, etc.\n    currentParams = filterParams.reduce((acc, param) => (\n        {\n            ...acc,\n            ...currentParams[param] && { [param]: currentParams[param] }\n        }\n    ), {});\n\n    return isEqual(currentParams, defaultParams);\n};\n","var baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    baseUniq = require('./_baseUniq'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    last = require('./last');\n\n/**\n * This method is like `_.union` except that it accepts `comparator` which\n * is invoked to compare elements of `arrays`. Result values are chosen from\n * the first array in which the value occurs. The comparator is invoked\n * with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.unionWith(objects, others, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n */\nvar unionWith = baseRest(function(arrays) {\n  var comparator = last(arrays);\n  comparator = typeof comparator == 'function' ? comparator : undefined;\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n});\n\nmodule.exports = unionWith;\n"],"names":["apply","currentValue","arguments","length","undefined","advisory_available","label","intl","formatMessage","messages","advisory","type","conditionalFilterType","checkbox","key","filterValues","onChange","event","value","values","join","page","items","ADVISORY_AVAILABILITY_FILTER_OPTIONS","map","_ref","split","urlParam","placeholder","search","_React$useState","React","_React$useState2","_slicedToArray","searchValue","setSearchValue","_React$useState3","debounce","newValue","_apply","_defineProperty","handleSearch","text","id","concat","currentFilter","dynamicFilters","config","rule_presence","rule","filterSecurityRules","_objectSpread","isDynamic","dropdownItems","RULE_PRESENCE_OPTIONS","unionWith","isEqual","status_id","filterStatus","filter","STATUS_OPTIONS","item","_createClass","DownloadReport","_this","_classCallCheck","filename","date","Date","toISOString","replace","params","cve","checkTypes","fetchData","format","_typeof","pages","includes","formats","exec","_asyncToGenerator","_regeneratorRuntime","_callee","showNotification","clearNotification","shouldUseHybridSystemFilter","_yield$fetchData","payload","_yield$payload","response","data","_args","_context","prev","next","notifications","start","defaultParams","data_format","report","sent","JSON","stringify","downloadFile","success","t0","status","NotAuthorizedNotification","failure","stop","_x","_x2","_x3","_x4","_x5","_x6","this","page_size","Math","min","Number","MAX_SAFE_INTEGER","variant","title","notificationReportDownloadStart","notificationReportDownloadSuccess","autoDismiss","notificationReportDownloadFailureTitle","description","notificationReportDownloadFailureBody","handleChangePage","_event","handleSetPageSize","perPage","exportConfig","methods","onSelect","fileType","downloadReport","buildActiveFilters","currentFilters","filterRuleValues","nameFilter","advisoryFilter","FILTERS","getFilters","buildChip","parameter","reduce","object","name","filteredRule","find","ONLY_NON_VULNERABLE_SYSTEMS","e","buildChips","paramValues","push","hasValue","filters","Object","keys","filterChips","array","multiValue","category","chips","cvssFrom","cvss_from","parseFloat","toFixed","cvssTo","cvss_to","rhel_version","v","filteredValues","searchLabel","advisoryName","removeFilters","reset","obj","remainingValues","some","chip","cvss_filter","isFilterInDefaultState","currentParams","filterParams","acc","param","baseFlatten","baseRest","baseUniq","isArrayLikeObject","last","arrays","comparator","module","exports"],"sourceRoot":""}