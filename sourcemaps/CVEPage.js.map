{"version":3,"sources":["webpack:///./node_modules/reselect/lib/index.js","webpack:///./src/Components/PresentationalComponents/CVEInfoBox/CVEInfoBox.js","webpack:///./src/Components/PresentationalComponents/CVEInfoBox/CVEInfoBox.scss","webpack:///./src/Components/PresentationalComponents/CVEPageDetails/CVEPageDetails.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsDescription/CVEPageDetailsDescription.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsDescription/CVEPageDetailsDescription.scss","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsDescription/SnippetWithHeaderAndTooltip.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsSeverity/CVEPageDetailsSeverity.js","webpack:///./src/Components/PresentationalComponents/CvssVector/CvssVector.js","webpack:///./src/Components/PresentationalComponents/CvssVector/CvssVector.scss","webpack:///./src/Components/PresentationalComponents/WithLoader/WithLoader.js","webpack:///./src/Components/SmartComponents/CVEPage/CVEPage.js","webpack:///./src/Components/SmartComponents/Modals/BusinessRiskModal.js","webpack:///./src/Components/SmartComponents/Modals/CvePairStatusModal.js","webpack:///./src/Components/SmartComponents/Modals/CveStatusModal.js","webpack:///./src/Components/SmartComponents/SystemsExposedTable/SystemsExposedTable.js","webpack:///./src/Components/SmartComponents/SystemsExposedTable/SystemsExposedTable.scss","webpack:///./src/Store/Reducers/InventoryEntitiesReducer.js","webpack:///./src/Store/Selectors/CVESelectors.js"],"names":["CVEInfoBox","props","context","isLoading","titleColor","titleContent","TextVariants","h6","descriptionTitle","p","descriptionContent","propTypes","any","CVEPageDetails","data","impact","cvss2_score","cvss3_score","cvss2_metrics","cvss3_metrics","object","CVEPageDetailsDescription","cveAttributes","publishDate","public_date","description","link","rh_link","businessRisk","business_risk","businessRiskJustification","business_risk_justification","status","statusJustification","status_justification","systemsStatusDetail","systems_status_detail","systemsStatusDivergent","systems_status_divergent","detailRows","Object","keys","map","item","STATUS_OPTIONS","find","value","toString","label","brPopoverContent","StyledConstants","fontWeights","bold","fontSizes","sm","lineHeights","statusPopoverContent","marginTop","semi_bold","modifier","marginBottom","SnippetWithHeaderAndPopover","title","content","display","cursor","learnMorePopover","cveDetails","text","CVEPageDetailsSeverity","getImpactDetails","cvssVersion","color","h3","parseCvssScore","string","defaultProps","undefined","V3names","AV","name","values","N","A","L","P","AC","H","PR","UI","R","S","U","C","I","CVSS","V2names","M","Au","parseVector","vector","namesMapping","res","split","forEach","curr","key","val","CvssVector","CVSS2Vector","CVSS3Vector","cvssVer","cvssVector","parsedVector","notAvailable","TableVariant","compact","entries","WithLoader","loading","variant","SkeletonSize","lg","children","CVEPageOverviewItemLoader","TrendBoxLoader","CurrentVulnerabilitiesItemLoader","bool","CVEPageContext","React","createContext","CVEPage","showBusinessRiskModal","cves","setState","BusinessRiskModal","fetchCveDetails","state","cveName","showStatusModal","StatusModal","fetchAffectedSystems","match","params","cve","handleCveDetailsError","setHeader","breadcrumbs","paths","vulnerabilities","to","vulnerabilitiesCves","isActive","error","cveStatusDetails","id","status_id","justification","kebabItems","kebabItemEditBusinessRisk","business_risk_id","kebabItemEditStatus","justifyContent","DropdownPosition","right","Component","func","mapStateToProps","sCveDetailsPage","mapDispatchToProps","dispatch","header","options","fetchAffectedSystemsByCVE","withRouter","connect","updateRef","useState","cveList","businessRiskId","setBusinessRiskId","setLabel","useEffect","getDefaultBusinessRisk","getDefaultLabel","handleOnRadioChange","_","event","currentTarget","handleOnLabelChange","handleSave","setBusinessRisk","parseInt","business_risk_text","then","length","successNotification","businessRiskOptions","array","CvePairStatusModal","inventories","hasDifferentStatus","inventoryList","useJustificationInput","JustificationInput","setJustification","setJustificationProps","setProps","getDefaultCheckboxState","checkboxState","setCheckboxState","useStatusSelect","getDefaultStatus","StatusSelect","statusId","setStatusId","setSelectProps","inventoryIds","isDisabled","disabled","cve_status_id","cveIds","setStatusParams","status_text","inventory_id","setSystemCveStatus","getSystemsStatus","getCvestatus","getSystemsJustification","getCveJustification","inventory","some","handleCheckboxChange","checked","modalTitle","CveStatusModal","setCveStatus","marginRight","SystemsExposedTable","onSelect","payload","selected","Array","isArray","Set","add","selectMultiple","getSelected","dataProvider","issues","systems","from","createUrlParams","allParams","allowedParams","includes","queryString","qs","stringify","history","push","dataReload","affectedSystems","meta","lastPage","page","reloadPage","page_size","filter","system_id","apply","newFilter","sendRequest","fetchData","downloadReport","format","data_format","Number","MAX_SAFE_INTEGER","response","JSON","downloadFile","Date","toISOString","handleFilterChange","debounce","handleRemediationCreated","result","createNotification","getNotification","handleRefresh","perPage","per_page","config","InventoryCmp","removeListener","columns","composed","width","selectListener","middlewareListener","addNew","on","callback","selectAllListener","fetchInventory","nextProps","insights","loadInventory","react","reactRouterDom","reactCore","reactIcons","pfReactTable","inventoryConnector","mergeWithEntities","mergeWithDetail","ReducerRegistry","register","inventoryEntitiesReducer","InventoryTable","methods","selectedInventoryIds","kebabOptions","kebabItemDownloadJSON","kebabItemDownloadCSV","h2","systemExposedTableRowActions","total_items","attributes","selectRows","ops","filtersStatus","size","filterSystemName","dataShape","ownProps","sExposedSystemsTable","selectEntities","ids","addNotification","type","init","rows","entities","modifyInventory","getSelectedFunc","loaded","lastSeenColumn","insights_id","has","myRows","slice","retval","newValue","action","cveListWithSystemsSelector","CVEStore","affectedSystemsByCVE","systemsListAllSelector","SystemsStore","cveDetailsPageSelector","createSelector","createCveDetailsPage","createExposedSystemsTable","sAllSystems"],"mappings":"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","file":"js/CVEPage.js","sourcesContent":["'use strict';\n\nexports.__esModule = true;\nexports.defaultMemoize = defaultMemoize;\nexports.createSelectorCreator = createSelectorCreator;\nexports.createStructuredSelector = createStructuredSelector;\nfunction defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nfunction createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = defaultMemoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nvar createSelector = exports.createSelector = createSelectorCreator(defaultMemoize);\n\nfunction createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import { Bullseye, Split, SplitItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { CVEPageContext } from '../../SmartComponents/CVEPage/CVEPage';\nimport WithLoader from '../WithLoader/WithLoader';\nimport './CVEInfoBox.scss';\n\nconst CVEInfoBox = (props) => {\n    return (\n        <CVEPageContext.Consumer>\n            {context => (\n                <Split className=\"infobox-square\" gutter=\"md\">\n                    <WithLoader loading={context.isLoading}>\n                        <SplitItem className={props.titleColor}>\n                            <Bullseye>{props.titleContent}</Bullseye>\n                        </SplitItem>\n                        <SplitItem isFilled>\n                            <TextContent>\n                                <Text component={TextVariants.h6}>{props.descriptionTitle}</Text>\n                                <Text component={TextVariants.p}>{props.descriptionContent}</Text>\n                            </TextContent>\n                        </SplitItem>\n                    </WithLoader>\n                </Split>\n            )}\n        </CVEPageContext.Consumer>\n    );\n};\n\nCVEInfoBox.propTypes = {\n    titleContent: propTypes.any,\n    titleColor: propTypes.any,\n    descriptionContent: propTypes.any,\n    descriptionTitle: propTypes.any\n};\n\nexport default CVEInfoBox;\n","// extracted by mini-css-extract-plugin","import { Grid, GridItem } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { CVEPageContext } from '../../SmartComponents/CVEPage/CVEPage';\nimport CVEPageDetailsDescription from '../CVEPageDetailsDescription/CVEPageDetailsDescription';\nimport CVEPageDetailsSeverity from '../CVEPageDetailsSeverity/CVEPageDetailsSeverity';\nimport WithLoader from '../WithLoader/WithLoader';\n\nconst CVEPageDetails = props => {\n    return (\n        <CVEPageContext.Consumer>\n            {context => (\n                <Grid gutter=\"sm\">\n                    <GridItem md={8} sm={12}>\n                        <WithLoader loading={context.isLoading} variant=\"spinner\">\n                            <CVEPageDetailsDescription cveAttributes={props.data.data} />\n                        </WithLoader>\n                    </GridItem>\n\n                    <GridItem md={4} sm={12} className=\"severity-info-box\">\n                        <CVEPageDetailsSeverity\n                            impact={props.data.data.impact}\n                            cvss2_score={props.data.data.cvss2_score}\n                            cvss3_score={props.data.data.cvss3_score}\n                            cvss2_metrics={props.data.data.cvss2_metrics}\n                            cvss3_metrics={props.data.data.cvss3_metrics}\n                        />\n                    </GridItem>\n                </Grid>\n            )}\n        </CVEPageContext.Consumer>\n    );\n};\n\nCVEPageDetails.propTypes = {\n    data: propTypes.object\n};\n\nexport default CVEPageDetails;\n","import { Stack, StackItem, Text, TextContent, TextVariants, Flex, FlexItem } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { PatternFlyThemeProvider, StyledBox, StyledText, StyledConstants } from '@patternfly/react-styled-system';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { STATUS_OPTIONS } from '../../../Helpers/constants';\nimport './CVEPageDetailsDescription.scss';\nimport SnippetWithHeaderAndPopover from './SnippetWithHeaderAndTooltip';\n\nconst CVEPageDetailsDescription = ({ cveAttributes }) => {\n    const {\n        public_date: publishDate,\n        description,\n        rh_link: link,\n        business_risk: businessRisk,\n        business_risk_justification: businessRiskJustification,\n        status,\n        status_justification: statusJustification,\n        systems_status_detail: systemsStatusDetail,\n        systems_status_divergent: systemsStatusDivergent\n    } = cveAttributes;\n\n    const detailRows =\n        systemsStatusDetail &&\n        Object.keys(systemsStatusDetail).map(item => [\n            STATUS_OPTIONS.find(status => status.value === item.toString()).label,\n            systemsStatusDetail[item].toString()\n        ]);\n\n    const brPopoverContent = (\n        <TextContent>\n            <Stack>\n                <StackItem>\n                    <StyledText\n                        fontWeight={StyledConstants.fontWeights.bold}\n                        fontSize={StyledConstants.fontSizes.sm}\n                        lineHeight={StyledConstants.lineHeights.sm}\n                    >\n                        Justification note\n                    </StyledText>\n                </StackItem>\n                <StackItem>{businessRiskJustification || '--'}</StackItem>\n            </Stack>\n        </TextContent>\n    );\n\n    const statusPopoverContent = (\n        <Stack>\n            <StackItem>\n                <StyledText\n                    fontWeight={StyledConstants.fontWeights.bold}\n                    fontSize={StyledConstants.fontSizes.sm}\n                    lineHeight={StyledConstants.lineHeights.sm}\n                >\n                    CVE Status\n                </StyledText>\n                {status || '--'}\n\n                <StyledText\n                    fontWeight={StyledConstants.fontWeights.bold}\n                    fontSize={StyledConstants.fontSizes.sm}\n                    lineHeight={StyledConstants.lineHeights.sm}\n                    style={{ marginTop: 'var(--pf-global--spacer--sm)' }}\n                >\n                    Justification note\n                </StyledText>\n                {statusJustification || '--'}\n            </StackItem>\n            {systemsStatusDivergent > 0 && (\n                <StackItem>\n                    <TextContent>\n                        <hr className={'splitter'} />\n                    </TextContent>\n                    <StyledText fontWeight={StyledConstants.fontWeights.semi_bold} lineHeight={StyledConstants.lineHeights.sm}>\n                        Systems with this CVE\n                    </StyledText>\n                    <Table\n                        aria-label={'Status details'}\n                        borders={false}\n                        gridBreakPoint={null}\n                        cells={['Status', 'Count']}\n                        rows={detailRows}\n                        className={'status-breakdown-table'}\n                    >\n                        <TableHeader />\n                        <TableBody />\n                    </Table>\n                </StackItem>\n            )}\n        </Stack>\n    );\n    return (\n        <PatternFlyThemeProvider>\n            <Stack gutter=\"sm\">\n                <StackItem />\n                <StackItem>\n                    <Flex>\n                        <FlexItem breakpointMods={[{ modifier: 'spacer-xl' }]}>\n                            <SnippetWithHeaderAndPopover\n                                title={'Business risk'}\n                                value={businessRisk}\n                                content={brPopoverContent}\n                            />\n                        </FlexItem>\n                        <FlexItem breakpointMods={[{ modifier: 'spacer-xl' }]}>\n                            <SnippetWithHeaderAndPopover\n                                title={'Status'}\n                                content={statusPopoverContent}\n                                value={\n                                    <span>\n                                        {systemsStatusDivergent > 0 && (\n                                            <ExclamationTriangleIcon color={'var(--pf-global--warning-color--100)'} />\n                                        )}{' '}\n                                        {status}\n                                    </span>\n                                }\n                            />\n                        </FlexItem>\n                    </Flex>\n                </StackItem>\n                <StackItem>\n                    <TextContent>\n                        <Text component={TextVariants.p}>{description}</Text>\n                    </TextContent>\n                </StackItem>\n                <StackItem>\n                    <StyledBox style={{ marginBottom: 'var(--pf-global--spacer--xs)' }}>Publish date: {publishDate}</StyledBox>\n                    <StyledBox>{link}</StyledBox>\n                </StackItem>\n            </Stack>\n        </PatternFlyThemeProvider>\n    );\n};\n\nCVEPageDetailsDescription.propTypes = {\n    cveAttributes: propTypes.any\n};\n\nexport default CVEPageDetailsDescription;\n","// extracted by mini-css-extract-plugin","import { Popover, Stack, StackItem } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport Label from '../Snippets/Label';\nimport './CVEPageDetailsDescription.scss';\n\nconst SnippetWithHeaderAndPopover = props => {\n    const { title, value, content } = props;\n\n    return (\n        <Popover bodyContent={content} headerContent={''} aria-label={'Business risk popover'} position=\"right\">\n            <Stack style={{ display: 'inline-block', cursor: 'pointer' }}>\n                <StackItem>\n                    <Label>{title}</Label>\n                </StackItem>\n                <StackItem>{value}</StackItem>\n            </Stack>\n        </Popover>\n    );\n};\n\nSnippetWithHeaderAndPopover.propTypes = {\n    title: propTypes.any,\n    value: propTypes.any,\n    content: propTypes.any\n};\nexport default SnippetWithHeaderAndPopover;\n","import { Popover, Stack, StackItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { parseCvssScore } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { getImpactDetails } from '../../../Helpers/MiscHelper';\nimport CVEInfoBox from '../CVEInfoBox/CVEInfoBox';\nimport CvssVector from '../CvssVector/CvssVector';\n\nconst learnMorePopover = cveDetails => {\n    return (\n        <Popover\n            position=\"bottom\"\n            enableFlip\n            headerContent={<div>{cveDetails.title + ' impact'}</div>}\n            bodyContent={\n                <TextContent>\n                    <Text component={TextVariants.p}>{cveDetails.text}</Text>\n                </TextContent>\n            }\n            footerContent={\n                <a href=\"https://access.redhat.com/security/updates/classification/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    Learn more about security ratings <ExternalLinkAltIcon />\n                </a>\n            }\n        >\n            <a>Learn more</a>\n        </Popover>\n    );\n};\n\nconst CVEPageDetailsSeverity = props => {\n    const cveDetails = getImpactDetails(props.impact);\n    const cvssVersion = (props.cvss3_score && 'CVSS 3.0') || (props.cvss2_score && 'CVSS 2.0') || 'CVSS 3.0';\n    return (\n        <React.Fragment>\n            <Stack gutter=\"sm\">\n                <StackItem>\n                    <CVEInfoBox\n                        titleColor={cveDetails.color}\n                        titleContent={cveDetails.titleContent}\n                        descriptionTitle={cveDetails.title + ' impact'}\n                        descriptionContent={learnMorePopover(cveDetails)}\n                    />\n                </StackItem>\n                <StackItem>\n                    <CVEInfoBox\n                        titleContent={\n                            <TextContent>\n                                <Text component={TextVariants.h3}>{parseCvssScore(props.cvss2_score, props.cvss3_score)}</Text>\n                            </TextContent>\n                        }\n                        descriptionTitle={cvssVersion + ' base score'}\n                    />\n                </StackItem>\n\n                <StackItem>\n                    <CvssVector cvss2_metrics={props.cvss2_metrics} cvss3_metrics={props.cvss3_metrics} />\n                </StackItem>\n            </Stack>\n        </React.Fragment>\n    );\n};\n\nCVEPageDetailsSeverity.propTypes = {\n    impact: propTypes.string,\n    cvss2_score: propTypes.any,\n    cvss3_score: propTypes.any,\n    cvss2_metrics: propTypes.any,\n    cvss3_metrics: propTypes.any\n};\n\nCVEPageDetailsSeverity.defaultProps = {\n    impact: 'Unknown',\n    cvss2_score: undefined,\n    cvss3_score: undefined,\n    cvss2_metrics: undefined,\n    cvss3_metrics: undefined\n};\n\nexport default CVEPageDetailsSeverity;\n","import { Popover, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { QuestionCircleIcon } from '@patternfly/react-icons';\nimport { Table, TableBody, TableHeader, TableVariant } from '@patternfly/react-table';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { CVEPageContext } from '../../SmartComponents/CVEPage/CVEPage';\nimport WithLoader from '../WithLoader/WithLoader';\nimport './CvssVector.scss';\n\nexport const V3names = {\n    AV: { name: 'Attack vector', values: { N: 'Network', A: 'Adjacent', L: 'Local', P: 'Physical' } },\n    AC: { name: 'Attack complexity', values: { L: 'Low', H: 'High' } },\n    PR: { name: 'Privileges required', values: { N: 'None', L: 'Low', H: 'High' } },\n    UI: { name: 'User interaction', values: { N: 'None', R: 'Required' } },\n    S: { name: 'Scope', values: { U: 'Unchanged', C: 'Changed' } },\n    C: { name: 'Confidentiality', values: { H: 'High', L: 'Low', N: 'None' } },\n    I: { name: 'Integrity', values: { H: 'High', L: 'Low', N: 'None' } },\n    A: { name: 'Availability', values: { H: 'High', L: 'Low', N: 'None' } },\n    CVSS: { name: 'cvssVersion', values: { '3.0': 3.0 } }\n};\n\nexport const V2names = {\n    AV: { name: 'Access vector', values: { N: 'Network', A: 'Adjacent Network', L: 'Local' } },\n    AC: { name: 'Access complexity', values: { L: 'Low', H: 'High', M: 'Medium' } },\n    Au: { name: 'Authentication', values: { M: 'Multiple', S: 'Single', N: 'None' } },\n    C: { name: 'Confidentiality impact', values: { C: 'Complete', P: 'Partial', N: 'None' } },\n    I: { name: 'Integrity impact', values: { C: 'Complete', P: 'Partial', N: 'None' } },\n    A: { name: 'Availability impact', values: { C: 'Complete', P: 'Partial', N: 'None' } }\n};\n\nexport const parseVector = (vector, namesMapping) => {\n    let res = {};\n    vector &&\n        vector.split('/').forEach(curr => {\n            let [key, val] = curr.split(':');\n            const name = namesMapping[key] && namesMapping[key].name;\n            const value = (namesMapping[key] && namesMapping[key].values[val]) || 'N/A';\n            if (name) {\n                res[name] = value;\n            }\n        });\n    return res;\n};\n\nconst CvssVector = props => {\n    const { cvss2_metrics: CVSS2Vector, cvss3_metrics: CVSS3Vector } = props;\n    const cvssVer = (CVSS3Vector && 'CVSS 3.0') || (CVSS2Vector && 'CVSS 2.0') || 'CVSS 3.0';\n    const cvssVector = CVSS3Vector || CVSS2Vector;\n    const namesMapping = (CVSS3Vector && V3names) || (CVSS2Vector && V2names);\n    const parsedVector = parseVector(cvssVector, namesMapping);\n    const notAvailable = 'N/A';\n    // eslint-disable-next-line no-unused-vars\n    const { cvssVersion, ...values } = parsedVector;\n\n    return (\n        <CVEPageContext.Consumer>\n            {context => (\n                <TextContent>\n                    <WithLoader loading={context.isLoading}>\n                        <Popover\n                            position=\"bottom\"\n                            maxWidth={'100%'}\n                            enableFlip\n                            headerContent={`${cvssVer} vector breakdown`}\n                            bodyContent={\n                                cvssVector ?\n                                    (\n                                        <Table\n                                            aria-label={'Metric breakdown'}\n                                            variant={TableVariant.compact}\n                                            borders={false}\n                                            gridBreakPoint={null}\n                                            cells={['Metric', 'Value']}\n                                            rows={Object.entries(values)}\n                                        >\n                                            <TableHeader />\n                                            <TableBody />\n                                        </Table>\n                                    ) : (notAvailable)\n                            }\n                        >\n                            <React.Fragment>\n                                <Text component={TextVariants.h6} style={{ display: 'inline-block' }}>\n                                    {cvssVer} vector{' '}\n                                    <a>\n                                        <QuestionCircleIcon />\n                                    </a>\n                                </Text>\n                                <br />\n                            </React.Fragment>\n                        </Popover>\n                    </WithLoader>\n\n                    <WithLoader loading={context.isLoading}>{cvssVector || notAvailable} </WithLoader>\n                </TextContent>\n            )}\n        </CVEPageContext.Consumer>\n    );\n};\n\nCvssVector.propTypes = {\n    cvss2_metrics: propTypes.string,\n    cvss3_metrics: propTypes.string\n};\n\nexport default CvssVector;\n","// extracted by mini-css-extract-plugin","import { Skeleton, SkeletonSize, Spinner } from '@redhat-cloud-services/frontend-components';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport ContentLoader, { BulletList, List } from 'react-content-loader';\n\nconst WithLoader = props => {\n    if (props === undefined || props.loading !== false) {\n        switch (props.variant) {\n            case 'spinner':\n                return <Spinner centered />;\n            case 'cvePageOverviewItem':\n                return <CVEPageOverviewItemLoader />;\n            case 'list':\n                return <List />;\n            case 'bulletList':\n                return <BulletList />;\n            case 'trendBox':\n                return <TrendBoxLoader />;\n            case 'currentVulnerabilitiesItem':\n                return <CurrentVulnerabilitiesItemLoader />;\n            default:\n                return <Skeleton size={SkeletonSize.lg} />;\n        }\n    }\n\n    return props.children;\n};\n\n// Loaders\nconst CVEPageOverviewItemLoader = () => {\n    return (\n        <ContentLoader height={61} width={120}>\n            <rect x=\"35\" y=\"0\" rx=\"0\" ry=\"0\" width=\"50\" height=\"35\" />\n            <rect x=\"0\" y=\"45\" rx=\"0\" ry=\"0\" width=\"120\" height=\"16\" />\n        </ContentLoader>\n    );\n};\n\nconst TrendBoxLoader = () => {\n    return (\n        <ContentLoader height={100} width={300}>\n            <rect x=\"388.58\" y=\"109.13\" rx=\"0\" ry=\"0\" width=\"0\" height=\"0\" />\n            <rect x=\"11.58\" y=\"16.13\" rx=\"0\" ry=\"0\" width=\"37\" height=\"62\" />\n            <rect x=\"52.58\" y=\"52.13\" rx=\"0\" ry=\"0\" width=\"17\" height=\"26\" />\n            <rect x=\"76.58\" y=\"52.13\" rx=\"0\" ry=\"0\" width=\"17\" height=\"26\" />\n            <rect x=\"4.58\" y=\"82.13\" rx=\"0\" ry=\"0\" width=\"154\" height=\"22\" />\n        </ContentLoader>\n    );\n};\n\nconst CurrentVulnerabilitiesItemLoader = () => {\n    return (\n        <ContentLoader height={50} width={200} speed={2} primaryColor=\"#f3f3f3\" secondaryColor=\"#ecebeb\">\n            <rect x=\"82.58\" y=\"15.13\" rx=\"0\" ry=\"0\" width=\"110.88\" height=\"21.42\" />\n            <circle cx=\"25\" cy=\"25\" r=\"25\" />\n        </ContentLoader>\n    );\n};\n\nWithLoader.propTypes = {\n    loading: propTypes.bool,\n    variant: propTypes.string\n};\n\nexport default WithLoader;\n","import { DropdownPosition, Page } from '@patternfly/react-core';\nimport { InvalidObject, Main } from '@redhat-cloud-services/frontend-components';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { fetchAffectedSystemsByCVE, fetchCveDetails, handleCveDetailsError, setHeader } from '../../../Store/Actions/Actions';\nimport { sCveDetailsPage } from '../../../Store/Selectors/CVESelectors';\nimport { paths } from '../../../Utilities/Routes';\nimport CVEPageDetails from '../../PresentationalComponents/CVEPageDetails/CVEPageDetails';\nimport BaseKebab from '../../PresentationalComponents/DownloadReportKebab/BaseKebab';\nimport { kebabItemEditBusinessRisk, kebabItemEditStatus } from '../../PresentationalComponents/DownloadReportKebab/KebabItems';\nimport BusinessRiskModal from '../Modals/BusinessRiskModal';\nimport CveStatusModal from '../Modals/CveStatusModal';\nimport SystemsExposedTable from '../SystemsExposedTable/SystemsExposedTable';\nimport VulnerabilityHeader from '../VulnerabilityHeader/VulnerabilityHeader';\n\nexport const CVEPageContext = React.createContext({ isLoading: true });\n\nclass CVEPage extends React.Component {\n    static propTypes = {\n        match: propTypes.object,\n        cveDetails: propTypes.object,\n        fetchCveDetails: propTypes.func,\n        setHeader: propTypes.func,\n        handleCveDetailsError: propTypes.func,\n        fetchAffectedSystems: propTypes.func\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = { cveName: this.props.match.params.cve, BusinessRiskModal: () => null, StatusModal: () => null };\n    }\n\n    componentDidMount() {\n        const { fetchCveDetails, handleCveDetailsError, setHeader } = this.props;\n\n        setHeader({\n            breadcrumbs: [\n                { title: paths.vulnerabilities.title, to: paths.vulnerabilities.to },\n                { title: paths.vulnerabilitiesCves.title, to: paths.vulnerabilitiesCves.to },\n                { title: this.state.cveName, isActive: true }\n            ]\n        });\n\n        fetchCveDetails(this.state.cveName).catch(() => {\n            handleCveDetailsError();\n        });\n    }\n\n    showBusinessRiskModal = cves => {\n        this.setState({\n            BusinessRiskModal: () => (\n                <BusinessRiskModal open cves={cves} updateRef={() => this.props.fetchCveDetails(this.state.cveName)} />\n            )\n        });\n    };\n\n    showStatusModal = cves => {\n        this.setState({\n            StatusModal: () => (\n                <CveStatusModal\n                    cves={cves}\n                    updateRef={() => {\n                        this.props.fetchCveDetails(this.state.cveName);\n                        this.props.fetchAffectedSystems(this.state.cveName);\n                    }}\n                />\n            )\n        });\n    };\n\n    render() {\n        const { showStatusModal } = this;\n        const { cveDetails, fetchAffectedSystems } = this.props;\n        const { error } = cveDetails;\n        const { cveName, BusinessRiskModal, StatusModal } = this.state;\n        const cveStatusDetails = {\n            id: cveName,\n            status_id: cveDetails.data.status_id,\n            justification: cveDetails.data.status_justification\n        };\n        const kebabItems = [\n            kebabItemEditBusinessRisk(this.showBusinessRiskModal, [\n                {\n                    business_risk_id: cveDetails.data.business_risk_id,\n                    id: cveName,\n                    justification: cveDetails.data.business_risk_justification\n                }\n            ]),\n            kebabItemEditStatus(this.showStatusModal, [cveStatusDetails])\n        ];\n\n        if (!error) {\n            return (\n                <Page>\n                    <CVEPageContext.Provider value={cveDetails && { isLoading: cveDetails.isLoading }}>\n                        <VulnerabilityHeader\n                            title={\n                                <span style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                    {cveName}\n                                    <BaseKebab dropdownItems={kebabItems} position={DropdownPosition.right}></BaseKebab>\n                                </span>\n                            }\n                            showTabs={false}\n                        >\n                            <CVEPageDetails data={cveDetails} />\n                            <StatusModal />\n                            <BusinessRiskModal />\n                        </VulnerabilityHeader>\n                        <Main>\n                            <SystemsExposedTable\n                                cve={cveName}\n                                cveStatusDetails={cveStatusDetails}\n                                fetchData={fetchAffectedSystems}\n                                methods={{ showStatusModal }}\n                            />\n                        </Main>\n                    </CVEPageContext.Provider>\n                </Page>\n            );\n        } else {\n            return (\n                <React.Fragment>\n                    <VulnerabilityHeader title={cveName} showTabs={false} />\n                    <InvalidObject />\n                </React.Fragment>\n            );\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        cveDetails: sCveDetailsPage(state)\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchCveDetails: cveName => dispatch(fetchCveDetails(cveName)),\n        setHeader: header => dispatch(setHeader(header)),\n        handleCveDetailsError: () => dispatch(handleCveDetailsError()),\n        fetchAffectedSystems: (cve, options) => dispatch(fetchAffectedSystemsByCVE(cve, options))\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(CVEPage)\n);\n","import { Form, FormGroup, Radio, Stack, StackItem, TextArea } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { setBusinessRisk } from '../../../Helpers/APIHelper';\nimport { businessRiskOptions } from '../../../Helpers/constants';\nimport BaseModal from './BaseModal';\n\nexport const BusinessRiskModal = ({ cves, updateRef }) => {\n    const [cveList] = useState(cves);\n    const [businessRiskId, setBusinessRiskId] = useState('0');\n    const [label, setLabel] = useState();\n\n    useEffect(() => {\n        getDefaultBusinessRisk(), getDefaultLabel();\n    }, [cves]);\n    useEffect(getDefaultLabel, [cves]);\n\n    const handleOnRadioChange = (_, event) => {\n        const { value } = event.currentTarget;\n        setBusinessRiskId(value);\n    };\n\n    const handleOnLabelChange = value => {\n        setLabel(value);\n    };\n\n    const handleSave = () => {\n        return setBusinessRisk({\n            business_risk_id: parseInt(businessRiskId),\n            cve: cveList.map(item => item.id),\n            business_risk_text: label\n        }).then(updateRef);\n    };\n\n    function getDefaultBusinessRisk() {\n        setBusinessRiskId((cveList && cveList.length === 1 && cveList[0].business_risk_id.toString()) || '0');\n    }\n\n    function getDefaultLabel() {\n        setLabel((cveList && cveList.length === 1 && cveList[0].justification) || '');\n    }\n\n    const successNotification = {\n        variant: 'success',\n        title: `Business risk updated for ${cveList.length} CVEs`\n    };\n\n    return (\n        <BaseModal items={cveList} onSave={handleSave} onSuccessNotification={successNotification} title=\"Edit business risk\">\n            <Stack gutter={'md'}>\n                <StackItem>\n                    Business risk can be used to identify, track, and address CVEs that have meaningful impact to your\n                    organization.\n                </StackItem>\n                <StackItem>\n                    <Form>\n                        <FormGroup label=\"Business risk\" fieldId={'businessRiskId'}>\n                            {businessRiskOptions.map(item => (\n                                <Radio\n                                    value={item.value}\n                                    isChecked={businessRiskId === item.value}\n                                    onChange={handleOnRadioChange}\n                                    label={item.label}\n                                    key={item.value}\n                                    id={item.value}\n                                    name={item.label}\n                                    aria-label={item.label}\n                                />\n                            ))}\n                        </FormGroup>\n                        <FormGroup label=\"Justification\" fieldId={'label'}>\n                            <TextArea\n                                type=\"text\"\n                                onChange={handleOnLabelChange}\n                                value={label}\n                                resizeOrientation='vertical'\n                                aria-label={'justification'}\n                            />\n                        </FormGroup>\n                    </Form>\n                </StackItem>\n            </Stack>\n        </BaseModal>\n    );\n};\n\nBusinessRiskModal.propTypes = {\n    cves: propTypes.array,\n    updateRef: propTypes.func\n};\n\nexport default BusinessRiskModal;\n","import { Checkbox, Form, FormGroup, Stack, StackItem, Alert } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { setSystemCveStatus } from '../../../Helpers/APIHelper';\nimport BaseModal, { useJustificationInput, useStatusSelect } from './BaseModal';\n\nexport const CvePairStatusModal = ({ cves, updateRef, inventories, hasDifferentStatus = false }) => {\n    const [cveList] = useState(cves);\n    const [inventoryList] = useState(inventories);\n    const {\n        JustificationInput,\n        justification,\n        setJustification,\n        setProps: setJustificationProps\n    } = useJustificationInput(getDefaultLabel());\n    const [checkboxState, setCheckboxState] = useState(getDefaultCheckboxState());\n    const { StatusSelect, statusId, setStatusId, setProps: setSelectProps } = useStatusSelect(getDefaultStatus());\n    const inventoryIds = inventoryList.map(item => item.id);\n\n    useEffect(() => {\n        if (checkboxState) {\n            setSelectProps({ isDisabled: true });\n            setJustificationProps({ disabled: true });\n        }\n    }, []);\n\n    useEffect(() => {\n        let state = (cveList &&\n            ((checkboxState && !hasDifferentStatus) && cveList[0].cve_status_id\n                || cveList[0].status_id.toString())) || '0';\n        setStatusId(state);\n\n    }, [checkboxState]);\n\n    const handleSave = () => {\n        const cveIds = cveList.map(item => item.id);\n        const setStatusParams = !checkboxState\n            ? {\n                status_id: parseInt(statusId),\n                cve: cveIds,\n                status_text: justification,\n                inventory_id: inventoryIds\n            }\n            : { cve: cveIds, inventory_id: inventoryIds };\n        return setSystemCveStatus(setStatusParams).then(updateRef);\n    };\n\n    function getDefaultStatus() {\n        // system has different status\n        if (inventoryList && inventoryList.length > 0 && inventoryList[0].status_id) {\n            return getSystemsStatus();\n        }\n\n        if (cveList && cveList.length > 0) {\n            return getCvestatus();\n        }\n\n    }\n\n    function getDefaultLabel() {\n        if (inventoryList && inventoryList.length === 1 && inventoryList[0].justification) {\n            return getSystemsJustification();\n        }\n\n        if (cveList && cveList.length === 1) {\n            return getCveJustification();\n        }\n    }\n\n    function getDefaultCheckboxState() {\n        // system has the same status as cve\n        if (inventoryList && inventoryList.length === 1 && inventoryList[0].status_id) {\n            let [inventory] = inventoryList;\n            return cveList.some(cve => (cve.status_id === inventory.status_id));\n        }\n\n        if (cveList && cveList.length === 1) {\n            return true;\n        }\n\n        return false;\n    }\n\n    function getSystemsStatus() {\n        return (inventoryList && inventoryList[0].status_id.toString()) || '0';\n    }\n\n    function getSystemsJustification() {\n        return (inventoryList && inventoryList.length === 1 && inventoryList[0].justification) || '';\n    }\n\n    function getCvestatus() {\n        return (cveList &&\n            (checkboxState && cveList[0].cve_status_id || cveList[0].status_id.toString())) || '0';\n    }\n\n    function getCveJustification() {\n        return (cveList && cveList.length === 1 && cveList[0].justification) || '';\n    }\n\n    function handleCheckboxChange(checked) {\n        setCheckboxState(checked);\n        setSelectProps({ isDisabled: checked });\n        setStatusId(getCvestatus());\n        setJustification(getCveJustification());\n        setJustificationProps({ disabled: checked });\n    }\n\n    const successNotification = {\n        variant: 'success',\n        title: 'CVE status updated'\n    };\n\n    let modalTitle = 'Set status for this CVE and system pair';\n    if (inventoryIds.length > 1 || cves.length > 1) {\n        modalTitle = 'Set status for these CVE and system pairs';\n    }\n\n    return (\n        <BaseModal items={cveList} onSave={handleSave} onSuccessNotification={successNotification} title={modalTitle}>\n            <Stack gutter={'md'}>\n                <StackItem>\n                    {hasDifferentStatus ?\n                        <Alert\n                            variant=\"warning\"\n                            isInline\n                            title=\"Selected pairs have different statuses. Changes will be applied to all \" />\n                        : ''}\n                </StackItem>\n                <StackItem>\n                    <Form key=\"key\">\n                        <FormGroup fieldId={'overall'}>\n                            <Checkbox\n                                label=\"Use overall CVE status\"\n                                id=\"alt-form-checkbox-1\"\n                                name=\"alt-form-checkbox-1\"\n                                isChecked={checkboxState}\n                                onChange={handleCheckboxChange}\n                            />\n                        </FormGroup>\n                        {StatusSelect}\n                        {JustificationInput}\n                    </Form>\n                </StackItem>\n            </Stack>\n        </BaseModal>\n    );\n};\n\nCvePairStatusModal.propTypes = {\n    cves: propTypes.array,\n    updateRef: propTypes.func,\n    inventories: propTypes.array,\n    hasDifferentStatus: propTypes.bool\n};\n\nexport default CvePairStatusModal;\n","import { Checkbox, Form, FormGroup, Split, SplitItem, Stack, StackItem, Tooltip } from '@patternfly/react-core';\nimport { InfoCircleIcon, OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport propTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { setCveStatus, setSystemCveStatus } from '../../../Helpers/APIHelper';\nimport BaseModal, { useJustificationInput, useStatusSelect } from './BaseModal';\n\nexport const CveStatusModal = ({ cves, updateRef }) => {\n    const [cveList] = useState(cves);\n    const { StatusSelect, statusId } = useStatusSelect(getDefaultStatus());\n    const { JustificationInput, justification } = useJustificationInput(getDefaultLabel());\n    const [checkboxState, setCheckboxState] = useState(false);\n\n    const handleSave = () => {\n        const cveIds = cveList.map(item => item.id);\n        return setCveStatus({\n            status_id: parseInt(statusId),\n            cve: cveIds,\n            status_text: justification\n        })\n        .then(() => !checkboxState && setSystemCveStatus({ cve: cveIds }))\n        .then(updateRef);\n    };\n\n    function getDefaultStatus() {\n        return (cveList && cveList.length === 1 && cveList[0].status_id.toString()) || '0';\n    }\n\n    function getDefaultLabel() {\n        return (cveList && cveList.length === 1 && cveList[0].justification) || '';\n    }\n\n    const successNotification = {\n        variant: 'success',\n        title: `Status updated for ${cveList.length} CVEs`\n    };\n    const title = cveList.length > 1 ? 'Set status for these CVEs and all systems' : 'Set status for this CVE and all systems';\n    return (\n        <BaseModal items={cveList} onSave={handleSave} onSuccessNotification={successNotification} title={title}>\n            <Stack gutter={'md'}>\n                <StackItem>\n                    <Form key=\"key\">\n                        {StatusSelect}\n                        {JustificationInput}\n                        <FormGroup fieldId={'overwrite'}>\n                            <Checkbox\n                                label={\n                                    <React.Fragment>\n                                        Do not overwrite individual system status{' '}\n                                        <Tooltip\n                                            content=\"When checked, this setting does not change any pre-existing\n                                        statuses set on individual systems for this CVE.\"\n                                        >\n                                            <React.Fragment>\n                                                <OutlinedQuestionCircleIcon />\n                                            </React.Fragment>\n                                        </Tooltip>\n                                    </React.Fragment>\n                                }\n                                id=\"alt-form-checkbox-1\"\n                                name=\"alt-form-checkbox-1\"\n                                isChecked={checkboxState}\n                                onChange={checked => setCheckboxState(checked)}\n                            />\n                        </FormGroup>\n                        <FormGroup fieldId={'info'}>\n                            <Split>\n                                <SplitItem style={{ marginRight: 'var(--pf-global--spacer--xs)' }}>\n                                    <InfoCircleIcon size=\"md\" color=\"var(--pf-global--active-color--400)\" />\n                                </SplitItem>\n                                <SplitItem isFilled>\n                                    This status is applied to all existing matching systems. Any new matching systems will have\n                                    the status &quot;Not reviewed&quot;{' '}\n                                    <Tooltip\n                                        content='Example: If a new system is added and matches to this vulnerability,\n                                    it will be given a status \"Not reviewed\"'\n                                    >\n                                        <React.Fragment>\n                                            <OutlinedQuestionCircleIcon />\n                                        </React.Fragment>\n                                    </Tooltip>\n                                </SplitItem>\n                            </Split>\n                        </FormGroup>\n                    </Form>\n                </StackItem>\n            </Stack>\n        </BaseModal>\n    );\n};\n\nCveStatusModal.propTypes = {\n    cves: propTypes.array,\n    updateRef: propTypes.func\n};\n\nexport default CveStatusModal;\n","import * as reactCore from '@patternfly/react-core';\nimport {\n    Text,\n    TextContent,\n    TextVariants,\n    ToolbarGroup,\n    ToolbarItem\n} from '@patternfly/react-core';\nimport * as reactIcons from '@patternfly/react-icons';\nimport * as pfReactTable from '@patternfly/react-table';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport RemediationButton from '@redhat-cloud-services/frontend-components-remediations/RemediationButton';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport debounce from 'lodash/debounce';\nimport propTypes from 'prop-types';\nimport qs from 'query-string';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as reactRouterDom from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport { filtersStatus, filterSystemName } from '../../../Helpers/constants';\nimport { dataShape } from '../../../Helpers/MiscHelper';\nimport { systemExposedTableRowActions } from '../../../Helpers/CVEHelper';\nimport {\n    fetchAffectedSystemsByCVE,\n    fetchCveDetails,\n    handleCveDetailsError,\n    selectEntities\n} from '../../../Store/Actions/Actions';\nimport { inventoryEntitiesReducer } from '../../../Store/Reducers/InventoryEntitiesReducer';\nimport { sExposedSystemsTable } from '../../../Store/Selectors/CVESelectors';\nimport ReducerRegistry, { middlewareListener } from '../../../Utilities/ReducerRegistry';\nimport FilterChips from '../../PresentationalComponents/Filters/FilterChips';\nimport Filters from '../../PresentationalComponents/Filters/Filters';\nimport SearchFilter from '../../PresentationalComponents/Filters/SearchFilter';\nimport './SystemsExposedTable.scss';\nimport CvePairStatusModal from '../Modals/CvePairStatusModal';\nimport BaseKebab from '../../PresentationalComponents/DownloadReportKebab/BaseKebab';\nimport {\n    kebabItemDownloadCSV,\n    kebabItemDownloadJSON,\n    kebabItemEditStatus\n} from '../../PresentationalComponents/DownloadReportKebab/KebabItems';\nimport SelectAllCheckbox from '../../PresentationalComponents/SelectAllCheckbox';\n\n/*eslint camelcase: 0*/\n\nclass SystemsExposedTable extends Component {\n    static propTypes = {\n        cve: propTypes.string,\n        cveStatusDetails: propTypes.object,\n        fetchData: propTypes.func,\n        fetchCveDetails: propTypes.func,\n        affectedSystems: dataShape,\n        history: propTypes.object,\n        handleCveDetailsError: propTypes.func,\n        createNotification: propTypes.func,\n        selectRows: propTypes.func,\n        selectMultiple: propTypes.func\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            InventoryCmp: () => <div>Loading...</div>,\n            removeListener: () => { },\n            StatusModal: () => null,\n            filter: undefined,\n            columns: [\n                {\n                    key: 'display_name',\n                    title: 'Name',\n                    composed: ['facts.os_release', 'display_name'],\n                    props: {\n                        width: 40\n                    }\n                },\n                {\n                    key: 'status',\n                    title: 'Status',\n                    props: {\n                        width: 30\n                    }\n                }\n            ],\n            selected: new Set(),\n            selectListener: middlewareListener.addNew({\n                on: 'SELECT_ENTITY',\n                callback: payload => this.onSelect(payload)\n            }),\n            selectAllListener: middlewareListener.addNew({\n                on: 'SELECT_ENTITIES',\n                callback: payload => this.onSelect(payload)\n            })\n        };\n    }\n\n    componentDidMount() {\n        this.fetchInventory();\n        this.props.fetchData(this.props.cve, this.params());\n    }\n\n    shouldComponentUpdate(nextProps) {\n        return !nextProps.affectedSystems.isLoading;\n    }\n\n    onSelect = (payload) => {\n        let selected;\n        if (!payload.data || Array.isArray(payload.data)) {\n            selected = new Set(payload.data);\n        } else {\n            selected = this.state.selected;\n            payload.data.selected ? selected.add(payload.data.id) : selected.delete(payload.data.id);\n        }\n\n        this.setState({ selected }, this.props.selectMultiple);\n    };\n\n    getSelected = () => {\n        return this.state.selected;\n    };\n\n    dataProvider = () => {\n        return {\n            issues: [\n                {\n                    id: `vulnerabilities:${this.props.cve}`,\n                    description: this.props.cve\n                }\n            ],\n            systems: Array.from(this.getSelected())\n        };\n    };\n\n    // #TODO: can be better. Similar function exists in 2 other places.\n    createUrlParams = allParams => {\n        const params = { ...allParams };\n        const allowedParams = ['filter', 'page', 'page_size', 'status_id'];\n        Object.keys(allParams).forEach(\n            key =>\n                (params[key] === undefined || params[key] === '' || !allowedParams.includes(key) || params[key] === false) &&\n                delete params[key]\n        );\n        const queryString = qs.stringify(params);\n        this.props.history.push('?' + queryString);\n    };\n\n    dataReload = () => {\n        const { meta, data } = this.props.affectedSystems;\n        const lastPage = meta.page;\n        const { page } = this.state;\n        const reloadPage = page === lastPage && data.length === 1 ? 1 : meta.page;\n\n        this.setState(\n            {\n                ...this.state,\n                page: reloadPage,\n                page_size: meta.page_size,\n                filter: this.state.filter,\n                system_id: this.state.system_id\n            },\n            this.apply\n        );\n    };\n\n    apply = newFilter => {\n        this.setState({ ...this.state, ...newFilter }, () => {\n            this.sendRequest();\n        });\n    };\n\n    sendRequest = () => {\n        const { fetchData, cve, handleCveDetailsError } = this.props;\n\n        fetchData &&\n            fetchData(cve, this.params()).catch(() => {\n                handleCveDetailsError();\n            });\n\n        this.createUrlParams(this.state);\n    };\n\n    downloadReport = format => {\n        const { payload } =\n            // eslint-disable-next-line camelcase\n            fetchAffectedSystemsByCVE(this.props.cve, {\n                ...this.state,\n                data_format: format,\n                page: 1,\n                page_size: Number.MAX_SAFE_INTEGER\n            });\n        payload &&\n            payload.then(({ data: response }) => {\n                const data = format === 'json' ? JSON.stringify(response) : response;\n                return downloadFile(data, `systems_affected-${this.props.cve}-${new Date().toISOString()}`, format);\n            });\n    };\n\n    showStatusModal = (cves, inventories) => {\n        this.setState({\n            StatusModal: () => (\n                <CvePairStatusModal\n                    cves={cves}\n                    updateRef={() => {\n                        this.props.fetchData(this.props.cve, this.params());\n                        this.props.fetchCveDetails(this.props.cve);\n                    }}\n                    inventories={inventories}\n                />\n            )\n        });\n    };\n\n    async fetchInventory() {\n        const { inventoryConnector, mergeWithEntities, mergeWithDetail } = await insights.loadInventory({\n            react: React,\n            reactRouterDom,\n            reactCore,\n            reactIcons,\n            pfReactTable\n        });\n        ReducerRegistry.register({\n            ...mergeWithEntities(inventoryEntitiesReducer(this.state.columns, this.getSelected)),\n            ...mergeWithDetail()\n        });\n\n        this.setState({\n            InventoryCmp: inventoryConnector().InventoryTable\n        });\n    }\n\n    params = () => {\n        const { filter, page, page_size, status_id } = this.state;\n        return { filter, page, page_size, status_id };\n    };\n\n    handleFilterChange = debounce(value => {\n        this.setState({ ...this.state, filter: value }, this.apply);\n    }, 400);\n\n    handleRemediationCreated = result => {\n        this.props.createNotification(result.getNotification());\n        this.setState({ selected: new Set() });\n        this.props.fetchData(this.props.cve, this.params());\n    };\n\n    handleRefresh = ({ page, per_page: perPage }) => {\n        const { fetchData, cve } = this.props;\n        const { filter, status_id } = this.state;\n        const { meta } = this.props.affectedSystems;\n        if (meta.page !== page || meta.page_size !== perPage) {\n            const config = {\n                page,\n                page_size: perPage || meta.page_size,\n                filter,\n                status_id\n            };\n            fetchData(cve, config);\n            this.createUrlParams(config);\n        }\n    };\n\n    render() {\n        const { StatusModal } = this.state;\n        const { InventoryCmp, filter } = this.state;\n        const { affectedSystems, cveStatusDetails } = this.props;\n        const { data, meta } = affectedSystems;\n        const { showStatusModal } = this;\n        const methods = { showStatusModal };\n        const selectedInventoryIds = Array.from(this.getSelected()).map(selected => ({ id: selected }));\n\n        const kebabOptions = [\n            kebabItemEditStatus(methods.showStatusModal, [cveStatusDetails], selectedInventoryIds, {\n                isDisabled: !selectedInventoryIds.length\n            }),\n            kebabItemDownloadJSON(this.downloadReport),\n            kebabItemDownloadCSV(this.downloadReport)\n        ];\n        return (\n            <React.Fragment>\n                <TextContent>\n                    <Text component={TextVariants.h2}>Affected systems</Text>\n                </TextContent>\n                <InventoryCmp\n                    key={'inventory'}\n                    hasCheckbox={data.length !== 0}\n                    showActions={data.length !== 0}\n                    actions={systemExposedTableRowActions(methods, cveStatusDetails)}\n                    page={meta.page}\n                    total={meta.total_items}\n                    perPage={meta.page_size}\n                    onRefresh={this.handleRefresh}\n                    items={data.map(item => ({\n                        id: item.attributes.inventory_id,\n                        ...item.attributes\n                    }))}\n                >\n                    <ToolbarGroup className={'affected-systems-toolbar'}>\n\n                        <SelectAllCheckbox\n                            selectedItems={this.state.selected}\n                            selectorHandler={this.props.selectRows}\n                            items={affectedSystems}\n                            fetchResource={ops => fetchAffectedSystemsByCVE(this.props.cve, { ...this.params, ...ops })}\n                        />\n                        <ToolbarItem>\n                            <SearchFilter\n                                placeholder=\"Find by name\"\n                                value={filter}\n                                apply={this.apply}\n                            />\n                        </ToolbarItem>\n                        <Filters\n                            filterCategories={[filtersStatus]}\n                            filterValues={this.params()}\n                            apply={this.apply}\n                        />\n                        <ToolbarItem>\n                            <RemediationButton\n                                dataProvider={this.dataProvider}\n                                isDisabled={this.state.selected.size === 0}\n                                onRemediationCreated={this.handleRemediationCreated}\n                            />\n                        </ToolbarItem>\n                        <ToolbarItem>\n                            <BaseKebab dropdownItems={kebabOptions} disabled={data.length === 0} />\n                        </ToolbarItem>\n                    </ToolbarGroup>\n                    <TableToolbar className=\"pf-u-pl-0 affected-systems-filter-chips\">\n                        <ToolbarGroup>\n                            <ToolbarItem>\n                                <FilterChips\n                                    filterValues={this.params()}\n                                    filterCategories={[filterSystemName, filtersStatus]}\n                                    apply={this.apply}\n                                />\n                            </ToolbarItem>\n                        </ToolbarGroup>\n                    </TableToolbar>\n                    <StatusModal />\n                </InventoryCmp>\n            </React.Fragment>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        affectedSystems: sExposedSystemsTable(state, ownProps.cve)\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchData: (cve, options) => dispatch(fetchAffectedSystemsByCVE(cve, options)),\n        fetchCveDetails: cveName => dispatch(fetchCveDetails(cveName)),\n        handleCveDetailsError: () => dispatch(handleCveDetailsError, selectEntities()),\n        selectRows: (value, ids) => dispatch(selectEntities(value, ids)),\n        createNotification: content => dispatch(addNotification(content)),\n        selectMultiple: () => dispatch({ type: 'SELECT_MULTIPLE_ENTITIES' })\n\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(SystemsExposedTable)\n);\n","// extracted by mini-css-extract-plugin","// Initial State\nexport const init = {\n    columns: [],\n    rows: [],\n    entities: []\n};\n// Reducer\n\nfunction modifyInventory(columns, state, getSelectedFunc) {\n    // If a system does not have insights_id, it means it was deleted from inventory but somehow survived in Vuln backend\n    if (state.loaded) {\n        const selected = getSelectedFunc();\n        const lastSeenColumn = state.columns.filter(({ key }) => key === 'updated');\n        return {\n            ...state,\n            rows: state.rows.filter(item => item.insights_id).map(item => ({ ...item, selected: selected.has(item.id) })),\n            columns: [\n                ...columns || [],\n                ...lastSeenColumn || []\n            ]\n        };\n    }\n\n    return state;\n}\n\nfunction selectEntities(state, getSelectedFunc) {\n    const selected = getSelectedFunc();\n    const myRows = state.rows.slice();\n    const retval = {\n        ...state,\n        rows: myRows\n        .map(item => {\n            const newValue =  { ...item, selected: selected.has(item.id) };\n            return newValue;\n        })\n    };\n    return retval;\n}\n\nexport const inventoryEntitiesReducer = (columns, selected) => (state = init, action) => {\n    switch (action.type) {\n        case 'LOAD_ENTITIES_FULFILLED':\n            return modifyInventory(columns, state, selected);\n        case 'SELECT_MULTIPLE_ENTITIES':\n            return selectEntities(state, selected);\n\n        default:\n            return state;\n    }\n};\n","import { createSelector } from 'reselect';\nimport { createCveDetailsPage, createExposedSystemsTable } from '../../Helpers/CVEHelper';\n\nconst cveListWithSystemsSelector = (state, cve) => ({ ...state.CVEStore.affectedSystemsByCVE, cve });\nconst systemsListAllSelector = state => state.SystemsStore;\nconst cveDetailsPageSelector = state => state.CVEStore.cveDetails;\n\nexport const sCveDetailsPage = createSelector(\n    [cveDetailsPageSelector],\n    createCveDetailsPage\n);\nexport const sExposedSystemsTable = createSelector(\n    [cveListWithSystemsSelector],\n    createExposedSystemsTable\n);\n\nexport const sAllSystems = createSelector(\n    [systemsListAllSelector],\n    createExposedSystemsTable\n);\n"],"sourceRoot":""}