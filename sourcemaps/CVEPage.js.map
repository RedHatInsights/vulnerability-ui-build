{"version":3,"sources":["webpack:///./src/Components/PresentationalComponents/CVEPageDetailsDescription/CVEPageDetailsDescription.scss","webpack:///./src/Components/PresentationalComponents/CVEInfoBox/CVEInfoBox.scss?9c01","webpack:///./src/Components/PresentationalComponents/CVEInfoBox/CVEInfoBox.scss","webpack:///./src/Components/PresentationalComponents/CvssVector/CvssVector.scss?e372","webpack:///./src/Components/PresentationalComponents/CvssVector/CvssVector.scss","webpack:///./src/Components/SmartComponents/SystemsExposedTable/SystemsExposedTable.scss?46a3","webpack:///./src/Components/SmartComponents/SystemsExposedTable/SystemsExposedTable.scss","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsDescription/SnippetWithHeaderAndTooltip.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsDescription/CVEPageDetailsDescription.js","webpack:///./src/Components/PresentationalComponents/WithLoader/WithLoader.js","webpack:///./src/Components/PresentationalComponents/CVEInfoBox/CVEInfoBox.js","webpack:///./src/Components/PresentationalComponents/CvssVector/CvssVector.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsSeverity/CVEPageDetailsSeverity.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetails/CVEPageDetails.js","webpack:///./src/Components/SmartComponents/SystemsExposedTable/SystemsExposedTable.js","webpack:///./src/Components/SmartComponents/CVEPage/CVEPage.js","webpack:///./node_modules/@patternfly/react-table/dist/esm/index.js","webpack:///./node_modules/@patternfly/react-table/dist/esm/components/Table/utils/index.js","webpack:///./src/Store/Selectors/CVESelectors.js","webpack:///./src/Components/SmartComponents/Modals/BusinessRiskModal.js","webpack:///./src/Components/SmartComponents/Modals/CveStatusModal.js","webpack:///./node_modules/reselect/lib/index.js","webpack:///./src/Store/Reducers/InventoryEntitiesReducer.js","webpack:///./src/Components/SmartComponents/Modals/CvePairStatusModal.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsDescription/CVEPageDetailsDescription.scss?4f52"],"names":["exports","module","i","push","content","options","transform","undefined","locals","SnippetWithHeaderAndPopover","props","title","value","Popover","bodyContent","headerContent","aria-label","position","Stack","style","display","cursor","StackItem","Label","propTypes","any","CVEPageDetailsDescription","cveAttributes","publishDate","public_date","description","link","rh_link","businessRisk","business_risk","businessRiskJustification","business_risk_justification","status","statusJustification","status_justification","systemsStatusDetail","systems_status_detail","systemsStatusDivergent","systems_status_divergent","detailRows","Object","keys","map","item","STATUS_OPTIONS","find","toString","label","brPopoverContent","TextContent","StyledText","fontWeight","StyledConstants","fontWeights","bold","fontSize","fontSizes","sm","lineHeight","lineHeights","statusPopoverContent","marginTop","className","semi_bold","Table","borders","gridBreakPoint","cells","rows","gutter","Flex","FlexItem","breakpointMods","modifier","color","Text","component","TextVariants","p","StyledBox","marginBottom","WithLoader","loading","variant","centered","size","SkeletonSize","lg","children","CVEPageOverviewItemLoader","height","width","x","y","rx","ry","TrendBoxLoader","CurrentVulnerabilitiesItemLoader","speed","primaryColor","secondaryColor","cx","cy","r","bool","string","CVEInfoBox","CVEPageContext","Consumer","context","Split","isLoading","SplitItem","titleColor","Bullseye","titleContent","isFilled","h6","descriptionTitle","descriptionContent","V3names","AV","name","values","N","A","L","P","AC","H","PR","UI","R","S","U","C","I","CVSS","V2names","M","Au","CvssVector","CVSS2Vector","cvss2_metrics","CVSS3Vector","cvss3_metrics","cvssVer","cvssVector","parsedVector","vector","namesMapping","res","split","forEach","curr","key","val","parseVector","cvssVersion","maxWidth","enableFlip","TableVariant","compact","entries","Fragment","learnMorePopover","cveDetails","text","footerContent","href","target","rel","CVEPageDetailsSeverity","getImpactDetails","impact","cvss3_score","cvss2_score","h3","parseCvssScore","defaultProps","CVEPageDetails","Grid","GridItem","md","data","object","SystemsExposedTable","onSelect","payload","selected","Array","isArray","Set","state","add","id","setState","selectMultiple","getSelected","dataProvider","issues","cve","systems","from","createUrlParams","allParams","params","allowedParams","includes","queryString","qs","stringify","history","dataReload","affectedSystems","meta","lastPage","page","reloadPage","length","page_size","filter","system_id","apply","newFilter","sendRequest","fetchData","handleCveDetailsError","downloadReport","format","fetchAffectedSystemsByCVE","data_format","Number","MAX_SAFE_INTEGER","then","response","JSON","downloadFile","Date","toISOString","showStatusModal","cves","inventories","StatusModal","CvePairStatusModal","updateRef","fetchCveDetails","status_id","handleFilterChange","debounce","handleRemediationCreated","result","createNotification","getNotification","handleRefresh","perPage","per_page","config","InventoryCmp","removeListener","columns","composed","isTime","selectListener","middlewareListener","addNew","on","callback","selectAllListener","this","fetchInventory","nextProps","insights","loadInventory","react","React","reactRouterDom","reactCore","reactIcons","pfReactTable","inventoryConnector","mergeWithEntities","mergeWithDetail","ReducerRegistry","register","inventoryEntitiesReducer","InventoryTable","cveStatusDetails","methods","selectedInventoryIds","kebabOptions","kebabItemEditStatus","isDisabled","kebabItemDownloadJSON","kebabItemDownloadCSV","h2","hasCheckbox","showActions","actions","systemExposedTableRowActions","total","total_items","onRefresh","items","attributes","inventory_id","ToolbarGroup","SelectAllCheckbox","selectedItems","selectorHandler","selectRows","fetchResource","ops","ToolbarItem","SearchFilter","placeholder","Filters","filterCategories","filtersStatus","filterValues","onRemediationCreated","BaseKebab","dropdownItems","FilterChips","filterSystemName","Component","func","dataShape","withRouter","connect","ownProps","sExposedSystemsTable","dispatch","cveName","selectEntities","ids","addNotification","type","createContext","CVEPage","showBusinessRiskModal","BusinessRiskModal","open","CveStatusModal","fetchAffectedSystems","match","setHeader","breadcrumbs","paths","vulnerabilities","to","vulnerabilitiesCves","isActive","error","justification","kebabItems","kebabItemEditBusinessRisk","business_risk_id","VulnerabilityHeader","showTabs","Page","Provider","justifyContent","DropdownPosition","right","sCveDetailsPage","header","createSelector","CVEStore","createCveDetailsPage","affectedSystemsByCVE","createExposedSystemsTable","sAllSystems","SystemsStore","useState","cveList","businessRiskId","setBusinessRiskId","setLabel","useEffect","getDefaultLabel","handleOnRadioChange","_","event","currentTarget","successNotification","onSave","setBusinessRisk","parseInt","business_risk_text","onSuccessNotification","fieldId","businessRiskOptions","isChecked","onChange","resizeOrientation","array","useStatusSelect","StatusSelect","statusId","useJustificationInput","JustificationInput","checkboxState","setCheckboxState","cveIds","setCveStatus","status_text","setSystemCveStatus","checked","marginRight","defaultEqualityCheck","a","b","areArgumentsShallowlyEqual","equalityCheck","prev","next","defaultMemoize","arguments","lastArgs","lastResult","getDependencies","funcs","dependencies","every","dep","dependencyTypes","join","Error","createSelectorCreator","memoize","_len","memoizeOptions","_key","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","concat","selector","resetRecomputations","__esModule","createStructuredSelector","selectors","selectorCreator","objectKeys","_len3","_key3","reduce","composition","index","init","entities","modifyInventory","getSelectedFunc","loaded","insights_id","has","myRows","slice","action","hasDifferentStatus","inventoryList","getCvestatus","getDefaultStatus","setStatusId","setSelectProps","setProps","getCveJustification","setJustification","setJustificationProps","inventory","some","getDefaultCheckboxState","inventoryIds","modalTitle","setStatusParams","isInline"],"mappings":"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","file":"js/CVEPage.js","sourcesContent":["exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js!@redhat-cloud-services/frontend-components-notifications/index.css\"), \"\");\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js!@redhat-cloud-services/frontend-components/index.css\"), \"\");\n\n// module\nexports.push([module.id, \":root {\\n  --ins-color--orange: #ec7a08; }\\n\\nbutton:focus {\\n  outline: none; }\\n\\n.ins-active-app-vulnerabilities .cvetable-toolbar,\\n.page__Vulnerabilities .cvetable-toolbar {\\n  justify-content: space-between; }\\n  .ins-active-app-vulnerabilities .cvetable-toolbar > div,\\n  .page__Vulnerabilities .cvetable-toolbar > div {\\n    align-self: flex-end; }\\n\\n.ins-active-app-vulnerabilities .space-between-toolbar-items,\\n.page__Vulnerabilities .space-between-toolbar-items {\\n  justify-content: space-between;\\n  flex-wrap: nowrap; }\\n  .ins-active-app-vulnerabilities .space-between-toolbar-items > div,\\n  .page__Vulnerabilities .space-between-toolbar-items > div {\\n    flex-wrap: nowrap; }\\n\\n.ins-active-app-vulnerabilities .vulnerability-toolbar-spacing,\\n.page__Vulnerabilities .vulnerability-toolbar-spacing {\\n  justify-content: flex-start; }\\n  .ins-active-app-vulnerabilities .vulnerability-toolbar-spacing > div:not(:last-child),\\n  .page__Vulnerabilities .vulnerability-toolbar-spacing > div:not(:last-child) {\\n    margin-right: var(--pf-global--spacer--sm); }\\n\\n@media screen and (max-width: 1100px) {\\n  .ins-active-app-vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-options-menu,\\n  .ins-active-app-vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-pagination__nav,\\n  .page__Vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-options-menu,\\n  .page__Vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-pagination__nav {\\n    display: none;\\n    visibility: hidden; }\\n  .ins-active-app-vulnerabilities .pf-c-pagination__total-items,\\n  .page__Vulnerabilities .pf-c-pagination__total-items {\\n    display: flex;\\n    visibility: visible; } }\\n\\n.ins-active-app-vulnerabilities .pf-c-pagination.pf-m-footer.ins-c-pagination-next,\\n.page__Vulnerabilities .pf-c-pagination.pf-m-footer.ins-c-pagination-next {\\n  margin-left: auto; }\\n\\n.ins-active-app-vulnerabilities #download-report,\\n.page__Vulnerabilities #download-report {\\n  cursor: pointer; }\\n\\n.ins-active-app-vulnerabilities .number-of-results,\\n.page__Vulnerabilities .number-of-results {\\n  display: inline-block;\\n  min-width: 55px;\\n  text-align: right;\\n  margin-right: 5px; }\\n\\n.ins-active-app-vulnerabilities .table-header-icon,\\n.page__Vulnerabilities .table-header-icon {\\n  margin-right: 5px;\\n  margin-right: 0.3125rem; }\\n\\n.ins-active-app-vulnerabilities .status-dropdown-column > svg,\\n.page__Vulnerabilities .status-dropdown-column > svg {\\n  color: var(--pf-global--primary-color--100); }\\n\\n.ins-active-app-vulnerabilities .status-dropdown-column:hover,\\n.page__Vulnerabilities .status-dropdown-column:hover {\\n  cursor: pointer; }\\n  .ins-active-app-vulnerabilities .status-dropdown-column:hover > svg,\\n  .page__Vulnerabilities .status-dropdown-column:hover > svg {\\n    visibility: visible; }\\n\\n.ins-active-app-vulnerabilities .status-dropdown-column > svg,\\n.page__Vulnerabilities .status-dropdown-column > svg {\\n  visibility: hidden; }\\n\\n.ins-active-app-vulnerabilities tbody > tr > td.pf-c-table__check,\\n.page__Vulnerabilities tbody > tr > td.pf-c-table__check {\\n  vertical-align: middle;\\n  padding-top: 0px !important;\\n  padding-bottom: 0px !important; }\\n\\n.ins-active-app-vulnerabilities thead > tr > td.pf-c-table__check,\\n.page__Vulnerabilities thead > tr > td.pf-c-table__check {\\n  visibility: hidden; }\\n\\n.ins-active-app-vulnerabilities p.pf-c-empty-state__body ul,\\n.page__Vulnerabilities p.pf-c-empty-state__body ul {\\n  margin-top: 0px;\\n  margin-bottom: var(--pf-global--spacer--sm); }\\n  .ins-active-app-vulnerabilities p.pf-c-empty-state__body ul li,\\n  .page__Vulnerabilities p.pf-c-empty-state__body ul li {\\n    margin-top: 0px; }\\n\\n@media (max-width: 1500px) and (min-width: 992px) {\\n  .ins-active-app-vulnerabilities .hide-description,\\n  .page__Vulnerabilities .hide-description {\\n    --pf-hidden-visible--Display: var(\\n                --pf-hidden-visible--hidden--Display\\n            );\\n    --pf-hidden-visible--Visibility: var(\\n                --pf-hidden-visible--hidden--Visibility\\n            ); } }\\n\\n@media (min-width: 1400px) {\\n  .ins-active-app-vulnerabilities .remediation-btn-sml,\\n  .page__Vulnerabilities .remediation-btn-sml {\\n    display: none;\\n    visibility: hidden; } }\\n\\n@media (max-width: 1400px) {\\n  .ins-active-app-vulnerabilities .remediation-btn-lg,\\n  .page__Vulnerabilities .remediation-btn-lg {\\n    display: none;\\n    visibility: none; } }\\n\\n.ins-active-app-vulnerabilities .col-width-10,\\n.page__Vulnerabilities .col-width-10 {\\n  width: 10%; }\\n\\n.ins-active-app-vulnerabilities .col-width-15,\\n.page__Vulnerabilities .col-width-15 {\\n  width: 15%; }\\n\\n.ins-active-app-vulnerabilities .col-width-description,\\n.page__Vulnerabilities .col-width-description {\\n  width: 35%; }\\n\\n.ins-active-app-vulnerabilities .no-wrap,\\n.page__Vulnerabilities .no-wrap {\\n  white-space: nowrap; }\\n\\n.ins-active-app-vulnerabilities .pf-c-table__expandable-row-content,\\n.page__Vulnerabilities .pf-c-table__expandable-row-content {\\n  white-space: normal; }\\n\\n.ins-active-app-vulnerabilities tr.pf-m-expanded .pf-c-table__action,\\n.page__Vulnerabilities tr.pf-m-expanded .pf-c-table__action {\\n  display: none; }\\n\\n.ins-active-app-vulnerabilities .pf-c-table__check,\\n.page__Vulnerabilities .pf-c-table__check {\\n  vertical-align: unset !important; }\\n\\n.page__Vulnerabilities {\\n  overflow-x: auto !important; }\\n  .page__Vulnerabilities .pf-c-page__main {\\n    overflow-x: auto; }\\n\\nimg.pf-c-avatar {\\n  height: var(--pf-global--FontSize--4xl); }\\n\\n.cvepage-st-business-risk-value {\\n  border-bottom: black 2px dotted; }\\n\\n.splitter {\\n  margin-bottom: var(--pf-global--spacer--sm) !important;\\n  margin-top: var(--pf-global--spacer--sm) !important; }\\n\\n.status-breakdown-table tr th {\\n  font-weight: normal;\\n  padding-left: 0px;\\n  padding-right: var(--pf-global--spacer--md);\\n  padding-bottom: var(--pf-global--spacer--sm); }\\n  .status-breakdown-table tr th:last-child {\\n    text-align: right; }\\n\\n.status-breakdown-table tr td {\\n  padding-left: 0px;\\n  padding-right: var(--pf-global--spacer--md);\\n  white-space: nowrap;\\n  padding-top: var(--pf-global--spacer--sm);\\n  padding-bottom: var(--pf-global--spacer--sm); }\\n  .status-breakdown-table tr td:last-child {\\n    text-align: right; }\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEInfoBox.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEInfoBox.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEInfoBox.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js!@redhat-cloud-services/frontend-components-notifications/index.css\"), \"\");\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js!@redhat-cloud-services/frontend-components/index.css\"), \"\");\n\n// module\nexports.push([module.id, \":root {\\n  --ins-color--orange: #ec7a08; }\\n\\nbutton:focus {\\n  outline: none; }\\n\\n.ins-active-app-vulnerabilities .cvetable-toolbar,\\n.page__Vulnerabilities .cvetable-toolbar {\\n  justify-content: space-between; }\\n  .ins-active-app-vulnerabilities .cvetable-toolbar > div,\\n  .page__Vulnerabilities .cvetable-toolbar > div {\\n    align-self: flex-end; }\\n\\n.ins-active-app-vulnerabilities .space-between-toolbar-items,\\n.page__Vulnerabilities .space-between-toolbar-items {\\n  justify-content: space-between;\\n  flex-wrap: nowrap; }\\n  .ins-active-app-vulnerabilities .space-between-toolbar-items > div,\\n  .page__Vulnerabilities .space-between-toolbar-items > div {\\n    flex-wrap: nowrap; }\\n\\n.ins-active-app-vulnerabilities .vulnerability-toolbar-spacing,\\n.page__Vulnerabilities .vulnerability-toolbar-spacing {\\n  justify-content: flex-start; }\\n  .ins-active-app-vulnerabilities .vulnerability-toolbar-spacing > div:not(:last-child),\\n  .page__Vulnerabilities .vulnerability-toolbar-spacing > div:not(:last-child) {\\n    margin-right: var(--pf-global--spacer--sm); }\\n\\n@media screen and (max-width: 1100px) {\\n  .ins-active-app-vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-options-menu,\\n  .ins-active-app-vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-pagination__nav,\\n  .page__Vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-options-menu,\\n  .page__Vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-pagination__nav {\\n    display: none;\\n    visibility: hidden; }\\n  .ins-active-app-vulnerabilities .pf-c-pagination__total-items,\\n  .page__Vulnerabilities .pf-c-pagination__total-items {\\n    display: flex;\\n    visibility: visible; } }\\n\\n.ins-active-app-vulnerabilities .pf-c-pagination.pf-m-footer.ins-c-pagination-next,\\n.page__Vulnerabilities .pf-c-pagination.pf-m-footer.ins-c-pagination-next {\\n  margin-left: auto; }\\n\\n.ins-active-app-vulnerabilities #download-report,\\n.page__Vulnerabilities #download-report {\\n  cursor: pointer; }\\n\\n.ins-active-app-vulnerabilities .number-of-results,\\n.page__Vulnerabilities .number-of-results {\\n  display: inline-block;\\n  min-width: 55px;\\n  text-align: right;\\n  margin-right: 5px; }\\n\\n.ins-active-app-vulnerabilities .table-header-icon,\\n.page__Vulnerabilities .table-header-icon {\\n  margin-right: 5px;\\n  margin-right: 0.3125rem; }\\n\\n.ins-active-app-vulnerabilities .status-dropdown-column > svg,\\n.page__Vulnerabilities .status-dropdown-column > svg {\\n  color: var(--pf-global--primary-color--100); }\\n\\n.ins-active-app-vulnerabilities .status-dropdown-column:hover,\\n.page__Vulnerabilities .status-dropdown-column:hover {\\n  cursor: pointer; }\\n  .ins-active-app-vulnerabilities .status-dropdown-column:hover > svg,\\n  .page__Vulnerabilities .status-dropdown-column:hover > svg {\\n    visibility: visible; }\\n\\n.ins-active-app-vulnerabilities .status-dropdown-column > svg,\\n.page__Vulnerabilities .status-dropdown-column > svg {\\n  visibility: hidden; }\\n\\n.ins-active-app-vulnerabilities tbody > tr > td.pf-c-table__check,\\n.page__Vulnerabilities tbody > tr > td.pf-c-table__check {\\n  vertical-align: middle;\\n  padding-top: 0px !important;\\n  padding-bottom: 0px !important; }\\n\\n.ins-active-app-vulnerabilities thead > tr > td.pf-c-table__check,\\n.page__Vulnerabilities thead > tr > td.pf-c-table__check {\\n  visibility: hidden; }\\n\\n.ins-active-app-vulnerabilities p.pf-c-empty-state__body ul,\\n.page__Vulnerabilities p.pf-c-empty-state__body ul {\\n  margin-top: 0px;\\n  margin-bottom: var(--pf-global--spacer--sm); }\\n  .ins-active-app-vulnerabilities p.pf-c-empty-state__body ul li,\\n  .page__Vulnerabilities p.pf-c-empty-state__body ul li {\\n    margin-top: 0px; }\\n\\n@media (max-width: 1500px) and (min-width: 992px) {\\n  .ins-active-app-vulnerabilities .hide-description,\\n  .page__Vulnerabilities .hide-description {\\n    --pf-hidden-visible--Display: var(\\n                --pf-hidden-visible--hidden--Display\\n            );\\n    --pf-hidden-visible--Visibility: var(\\n                --pf-hidden-visible--hidden--Visibility\\n            ); } }\\n\\n@media (min-width: 1400px) {\\n  .ins-active-app-vulnerabilities .remediation-btn-sml,\\n  .page__Vulnerabilities .remediation-btn-sml {\\n    display: none;\\n    visibility: hidden; } }\\n\\n@media (max-width: 1400px) {\\n  .ins-active-app-vulnerabilities .remediation-btn-lg,\\n  .page__Vulnerabilities .remediation-btn-lg {\\n    display: none;\\n    visibility: none; } }\\n\\n.ins-active-app-vulnerabilities .col-width-10,\\n.page__Vulnerabilities .col-width-10 {\\n  width: 10%; }\\n\\n.ins-active-app-vulnerabilities .col-width-15,\\n.page__Vulnerabilities .col-width-15 {\\n  width: 15%; }\\n\\n.ins-active-app-vulnerabilities .col-width-description,\\n.page__Vulnerabilities .col-width-description {\\n  width: 35%; }\\n\\n.ins-active-app-vulnerabilities .no-wrap,\\n.page__Vulnerabilities .no-wrap {\\n  white-space: nowrap; }\\n\\n.ins-active-app-vulnerabilities .pf-c-table__expandable-row-content,\\n.page__Vulnerabilities .pf-c-table__expandable-row-content {\\n  white-space: normal; }\\n\\n.ins-active-app-vulnerabilities tr.pf-m-expanded .pf-c-table__action,\\n.page__Vulnerabilities tr.pf-m-expanded .pf-c-table__action {\\n  display: none; }\\n\\n.ins-active-app-vulnerabilities .pf-c-table__check,\\n.page__Vulnerabilities .pf-c-table__check {\\n  vertical-align: unset !important; }\\n\\n.page__Vulnerabilities {\\n  overflow-x: auto !important; }\\n  .page__Vulnerabilities .pf-c-page__main {\\n    overflow-x: auto; }\\n\\nimg.pf-c-avatar {\\n  height: var(--pf-global--FontSize--4xl); }\\n\\n.infobox-square {\\n  background-color: var(--pf-global--BackgroundColor--150);\\n  border: var(--pf-global--BorderColor--300) var(--pf-global--BorderWidth--sm) solid;\\n  height: 65px; }\\n  .infobox-square > .pf-l-split__item:first-child {\\n    width: 65px;\\n    color: black;\\n    background-color: white; }\\n    .infobox-square > .pf-l-split__item:first-child:not(.severity-unknown) > div.pf-l-bullseye svg {\\n      color: white; }\\n  .infobox-square h3,\\n  .infobox-square h6 {\\n    margin: 0; }\\n  .infobox-square > .pf-l-split__item:nth-child(2) {\\n    display: flex;\\n    justify-content: flex-start;\\n    align-items: center; }\\n\\n.severity-low {\\n  background-color: var(--pf-global--Color--200) !important; }\\n\\n.severity-critical {\\n  background-color: var(--pf-global--danger-color--100) !important; }\\n\\n.severity-moderate {\\n  background-color: var(--pf-global--warning-color--100) !important; }\\n\\n.severity-color-important {\\n  background-color: #ec7a08 !important; }\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CvssVector.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CvssVector.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CvssVector.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".severity-info-box > div > div:nth-child(3) h6 .ins-c-skeleton {\\n  max-height: 30px !important;\\n  max-width: 30% !important; }\\n\\n.severity-info-box > div > div:nth-child(3) div > .ins-c-skeleton {\\n  max-height: 25px !important;\\n  max-width: 80% !important; }\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./SystemsExposedTable.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./SystemsExposedTable.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./SystemsExposedTable.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".affected-systems-toolbar {\\n  justify-content: flex-start; }\\n  .affected-systems-toolbar > div {\\n    margin-right: var(--pf-global--spacer--sm); }\\n\\n.affected-systems-filter-chips {\\n  order: 5;\\n  flex-basis: 100%; }\\n\", \"\"]);\n\n// exports\n","import { Popover, Stack, StackItem } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport Label from '../Snippets/Label';\nimport './CVEPageDetailsDescription.scss';\n\nconst SnippetWithHeaderAndPopover = props => {\n    const { title, value, content } = props;\n\n    return (\n        <Popover bodyContent={content} headerContent={''} aria-label={'Business risk popover'} position=\"right\">\n            <Stack style={{ display: 'inline-block', cursor: 'pointer' }}>\n                <StackItem>\n                    <Label>{title}</Label>\n                </StackItem>\n                <StackItem>{value}</StackItem>\n            </Stack>\n        </Popover>\n    );\n};\n\nSnippetWithHeaderAndPopover.propTypes = {\n    title: propTypes.any,\n    value: propTypes.any,\n    content: propTypes.any\n};\nexport default SnippetWithHeaderAndPopover;\n","import { Stack, StackItem, Text, TextContent, TextVariants, Flex, FlexItem } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { PatternFlyThemeProvider, StyledBox, StyledText, StyledConstants } from '@patternfly/react-styled-system';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { STATUS_OPTIONS } from '../../../Helpers/constants';\nimport './CVEPageDetailsDescription.scss';\nimport SnippetWithHeaderAndPopover from './SnippetWithHeaderAndTooltip';\n\nconst CVEPageDetailsDescription = ({ cveAttributes }) => {\n    const {\n        public_date: publishDate,\n        description,\n        rh_link: link,\n        business_risk: businessRisk,\n        business_risk_justification: businessRiskJustification,\n        status,\n        status_justification: statusJustification,\n        systems_status_detail: systemsStatusDetail,\n        systems_status_divergent: systemsStatusDivergent\n    } = cveAttributes;\n\n    const detailRows =\n        systemsStatusDetail &&\n        Object.keys(systemsStatusDetail).map(item => [\n            STATUS_OPTIONS.find(status => status.value === item.toString()).label,\n            systemsStatusDetail[item].toString()\n        ]);\n\n    const brPopoverContent = (\n        <TextContent>\n            <Stack>\n                <StackItem>\n                    <StyledText\n                        fontWeight={StyledConstants.fontWeights.bold}\n                        fontSize={StyledConstants.fontSizes.sm}\n                        lineHeight={StyledConstants.lineHeights.sm}\n                    >\n                        Justification note\n                    </StyledText>\n                </StackItem>\n                <StackItem>{businessRiskJustification || '--'}</StackItem>\n            </Stack>\n        </TextContent>\n    );\n\n    const statusPopoverContent = (\n        <Stack>\n            <StackItem>\n                <StyledText\n                    fontWeight={StyledConstants.fontWeights.bold}\n                    fontSize={StyledConstants.fontSizes.sm}\n                    lineHeight={StyledConstants.lineHeights.sm}\n                >\n                    CVE Status\n                </StyledText>\n                {status || '--'}\n\n                <StyledText\n                    fontWeight={StyledConstants.fontWeights.bold}\n                    fontSize={StyledConstants.fontSizes.sm}\n                    lineHeight={StyledConstants.lineHeights.sm}\n                    style={{ marginTop: 'var(--pf-global--spacer--sm)' }}\n                >\n                    Justification note\n                </StyledText>\n                {statusJustification || '--'}\n            </StackItem>\n            {systemsStatusDivergent > 0 && (\n                <StackItem>\n                    <TextContent>\n                        <hr className={'splitter'} />\n                    </TextContent>\n                    <StyledText fontWeight={StyledConstants.fontWeights.semi_bold} lineHeight={StyledConstants.lineHeights.sm}>\n                        Systems with this CVE\n                    </StyledText>\n                    <Table\n                        aria-label={'Status details'}\n                        borders={false}\n                        gridBreakPoint={null}\n                        cells={['Status', 'Count']}\n                        rows={detailRows}\n                        className={'status-breakdown-table'}\n                    >\n                        <TableHeader />\n                        <TableBody />\n                    </Table>\n                </StackItem>\n            )}\n        </Stack>\n    );\n    return (\n        <PatternFlyThemeProvider>\n            <Stack gutter=\"sm\">\n                <StackItem />\n                <StackItem>\n                    <Flex>\n                        <FlexItem breakpointMods={[{ modifier: 'spacer-xl' }]}>\n                            <SnippetWithHeaderAndPopover\n                                title={'Business risk'}\n                                value={businessRisk}\n                                content={brPopoverContent}\n                            />\n                        </FlexItem>\n                        <FlexItem breakpointMods={[{ modifier: 'spacer-xl' }]}>\n                            <SnippetWithHeaderAndPopover\n                                title={'Status'}\n                                content={statusPopoverContent}\n                                value={\n                                    <span>\n                                        {systemsStatusDivergent > 0 && (\n                                            <ExclamationTriangleIcon color={'var(--pf-global--warning-color--100)'} />\n                                        )}{' '}\n                                        {status}\n                                    </span>\n                                }\n                            />\n                        </FlexItem>\n                    </Flex>\n                </StackItem>\n                <StackItem>\n                    <TextContent>\n                        <Text component={TextVariants.p}>{description}</Text>\n                    </TextContent>\n                </StackItem>\n                <StackItem>\n                    <StyledBox style={{ marginBottom: 'var(--pf-global--spacer--xs)' }}>Publish date: {publishDate}</StyledBox>\n                    <StyledBox>{link}</StyledBox>\n                </StackItem>\n            </Stack>\n        </PatternFlyThemeProvider>\n    );\n};\n\nCVEPageDetailsDescription.propTypes = {\n    cveAttributes: propTypes.any\n};\n\nexport default CVEPageDetailsDescription;\n","import { Skeleton, SkeletonSize, Spinner } from '@redhat-cloud-services/frontend-components';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport ContentLoader, { BulletList, List } from 'react-content-loader';\n\nconst WithLoader = props => {\n    if (props === undefined || props.loading !== false) {\n        switch (props.variant) {\n            case 'spinner':\n                return <Spinner centered />;\n            case 'cvePageOverviewItem':\n                return <CVEPageOverviewItemLoader />;\n            case 'list':\n                return <List />;\n            case 'bulletList':\n                return <BulletList />;\n            case 'trendBox':\n                return <TrendBoxLoader />;\n            case 'currentVulnerabilitiesItem':\n                return <CurrentVulnerabilitiesItemLoader />;\n            default:\n                return <Skeleton size={SkeletonSize.lg} />;\n        }\n    }\n\n    return props.children;\n};\n\n// Loaders\nconst CVEPageOverviewItemLoader = () => {\n    return (\n        <ContentLoader height={61} width={120}>\n            <rect x=\"35\" y=\"0\" rx=\"0\" ry=\"0\" width=\"50\" height=\"35\" />\n            <rect x=\"0\" y=\"45\" rx=\"0\" ry=\"0\" width=\"120\" height=\"16\" />\n        </ContentLoader>\n    );\n};\n\nconst TrendBoxLoader = () => {\n    return (\n        <ContentLoader height={100} width={300}>\n            <rect x=\"388.58\" y=\"109.13\" rx=\"0\" ry=\"0\" width=\"0\" height=\"0\" />\n            <rect x=\"11.58\" y=\"16.13\" rx=\"0\" ry=\"0\" width=\"37\" height=\"62\" />\n            <rect x=\"52.58\" y=\"52.13\" rx=\"0\" ry=\"0\" width=\"17\" height=\"26\" />\n            <rect x=\"76.58\" y=\"52.13\" rx=\"0\" ry=\"0\" width=\"17\" height=\"26\" />\n            <rect x=\"4.58\" y=\"82.13\" rx=\"0\" ry=\"0\" width=\"154\" height=\"22\" />\n        </ContentLoader>\n    );\n};\n\nconst CurrentVulnerabilitiesItemLoader = () => {\n    return (\n        <ContentLoader height={50} width={200} speed={2} primaryColor=\"#f3f3f3\" secondaryColor=\"#ecebeb\">\n            <rect x=\"82.58\" y=\"15.13\" rx=\"0\" ry=\"0\" width=\"110.88\" height=\"21.42\" />\n            <circle cx=\"25\" cy=\"25\" r=\"25\" />\n        </ContentLoader>\n    );\n};\n\nWithLoader.propTypes = {\n    loading: propTypes.bool,\n    variant: propTypes.string\n};\n\nexport default WithLoader;\n","import { Bullseye, Split, SplitItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { CVEPageContext } from '../../SmartComponents/CVEPage/CVEPage';\nimport WithLoader from '../WithLoader/WithLoader';\nimport './CVEInfoBox.scss';\n\nconst CVEInfoBox = (props) => {\n    return (\n        <CVEPageContext.Consumer>\n            {context => (\n                <Split className=\"infobox-square\" gutter=\"md\">\n                    <WithLoader loading={context.isLoading}>\n                        <SplitItem className={props.titleColor}>\n                            <Bullseye>{props.titleContent}</Bullseye>\n                        </SplitItem>\n                        <SplitItem isFilled>\n                            <TextContent>\n                                <Text component={TextVariants.h6}>{props.descriptionTitle}</Text>\n                                <Text component={TextVariants.p}>{props.descriptionContent}</Text>\n                            </TextContent>\n                        </SplitItem>\n                    </WithLoader>\n                </Split>\n            )}\n        </CVEPageContext.Consumer>\n    );\n};\n\nCVEInfoBox.propTypes = {\n    titleContent: propTypes.any,\n    titleColor: propTypes.any,\n    descriptionContent: propTypes.any,\n    descriptionTitle: propTypes.any\n};\n\nexport default CVEInfoBox;\n","import { Popover, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { QuestionCircleIcon } from '@patternfly/react-icons';\nimport { Table, TableBody, TableHeader, TableVariant } from '@patternfly/react-table';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { CVEPageContext } from '../../SmartComponents/CVEPage/CVEPage';\nimport WithLoader from '../WithLoader/WithLoader';\nimport './CvssVector.scss';\n\nexport const V3names = {\n    AV: { name: 'Attack vector', values: { N: 'Network', A: 'Adjacent', L: 'Local', P: 'Physical' } },\n    AC: { name: 'Attack complexity', values: { L: 'Low', H: 'High' } },\n    PR: { name: 'Privileges required', values: { N: 'None', L: 'Low', H: 'High' } },\n    UI: { name: 'User interaction', values: { N: 'None', R: 'Required' } },\n    S: { name: 'Scope', values: { U: 'Unchanged', C: 'Changed' } },\n    C: { name: 'Confidentiality', values: { H: 'High', L: 'Low', N: 'None' } },\n    I: { name: 'Integrity', values: { H: 'High', L: 'Low', N: 'None' } },\n    A: { name: 'Availability', values: { H: 'High', L: 'Low', N: 'None' } },\n    CVSS: { name: 'cvssVersion', values: { '3.0': 3.0 } }\n};\n\nexport const V2names = {\n    AV: { name: 'Access vector', values: { N: 'Network', A: 'Adjacent Network', L: 'Local' } },\n    AC: { name: 'Access complexity', values: { L: 'Low', H: 'High', M: 'Medium' } },\n    Au: { name: 'Authentication', values: { M: 'Multiple', S: 'Single', N: 'None' } },\n    C: { name: 'Confidentiality impact', values: { C: 'Complete', P: 'Partial', N: 'None' } },\n    I: { name: 'Integrity impact', values: { C: 'Complete', P: 'Partial', N: 'None' } },\n    A: { name: 'Availability impact', values: { C: 'Complete', P: 'Partial', N: 'None' } }\n};\n\nexport const parseVector = (vector, namesMapping) => {\n    let res = {};\n    vector &&\n        vector.split('/').forEach(curr => {\n            let [key, val] = curr.split(':');\n            const name = namesMapping[key] && namesMapping[key].name;\n            const value = (namesMapping[key] && namesMapping[key].values[val]) || 'N/A';\n            if (name) {\n                res[name] = value;\n            }\n        });\n    return res;\n};\n\nconst CvssVector = props => {\n    const { cvss2_metrics: CVSS2Vector, cvss3_metrics: CVSS3Vector } = props;\n    const cvssVer = (CVSS3Vector && 'CVSS 3.0') || (CVSS2Vector && 'CVSS 2.0') || 'CVSS 3.0';\n    const cvssVector = CVSS3Vector || CVSS2Vector;\n    const namesMapping = (CVSS3Vector && V3names) || (CVSS2Vector && V2names);\n    const parsedVector = parseVector(cvssVector, namesMapping);\n    const notAvailable = 'N/A';\n    // eslint-disable-next-line no-unused-vars\n    const { cvssVersion, ...values } = parsedVector;\n\n    return (\n        <CVEPageContext.Consumer>\n            {context => (\n                <TextContent>\n                    <WithLoader loading={context.isLoading}>\n                        <Popover\n                            position=\"bottom\"\n                            maxWidth={'100%'}\n                            enableFlip\n                            headerContent={`${cvssVer} vector breakdown`}\n                            bodyContent={\n                                cvssVector ?\n                                    (\n                                        <Table\n                                            aria-label={'Metric breakdown'}\n                                            variant={TableVariant.compact}\n                                            borders={false}\n                                            gridBreakPoint={null}\n                                            cells={['Metric', 'Value']}\n                                            rows={Object.entries(values)}\n                                        >\n                                            <TableHeader />\n                                            <TableBody />\n                                        </Table>\n                                    ) : (notAvailable)\n                            }\n                        >\n                            <React.Fragment>\n                                <Text component={TextVariants.h6} style={{ display: 'inline-block' }}>\n                                    {cvssVer} vector{' '}\n                                    <a>\n                                        <QuestionCircleIcon />\n                                    </a>\n                                </Text>\n                                <br />\n                            </React.Fragment>\n                        </Popover>\n                    </WithLoader>\n\n                    <WithLoader loading={context.isLoading}>{cvssVector || notAvailable} </WithLoader>\n                </TextContent>\n            )}\n        </CVEPageContext.Consumer>\n    );\n};\n\nCvssVector.propTypes = {\n    cvss2_metrics: propTypes.string,\n    cvss3_metrics: propTypes.string\n};\n\nexport default CvssVector;\n","import { Popover, Stack, StackItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { parseCvssScore } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { getImpactDetails } from '../../../Helpers/MiscHelper';\nimport CVEInfoBox from '../CVEInfoBox/CVEInfoBox';\nimport CvssVector from '../CvssVector/CvssVector';\n\nconst learnMorePopover = cveDetails => {\n    return (\n        <Popover\n            position=\"bottom\"\n            enableFlip\n            headerContent={<div>{cveDetails.title + ' impact'}</div>}\n            bodyContent={\n                <TextContent>\n                    <Text component={TextVariants.p}>{cveDetails.text}</Text>\n                </TextContent>\n            }\n            footerContent={\n                <a href=\"https://access.redhat.com/security/updates/classification/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    Learn more about security ratings <ExternalLinkAltIcon />\n                </a>\n            }\n        >\n            <a>Learn more</a>\n        </Popover>\n    );\n};\n\nconst CVEPageDetailsSeverity = props => {\n    const cveDetails = getImpactDetails(props.impact);\n    const cvssVersion = (props.cvss3_score && 'CVSS 3.0') || (props.cvss2_score && 'CVSS 2.0') || 'CVSS 3.0';\n    return (\n        <React.Fragment>\n            <Stack gutter=\"sm\">\n                <StackItem>\n                    <CVEInfoBox\n                        titleColor={cveDetails.color}\n                        titleContent={cveDetails.titleContent}\n                        descriptionTitle={cveDetails.title + ' impact'}\n                        descriptionContent={learnMorePopover(cveDetails)}\n                    />\n                </StackItem>\n                <StackItem>\n                    <CVEInfoBox\n                        titleContent={\n                            <TextContent>\n                                <Text component={TextVariants.h3}>{parseCvssScore(props.cvss2_score, props.cvss3_score)}</Text>\n                            </TextContent>\n                        }\n                        descriptionTitle={cvssVersion + ' base score'}\n                    />\n                </StackItem>\n\n                <StackItem>\n                    <CvssVector cvss2_metrics={props.cvss2_metrics} cvss3_metrics={props.cvss3_metrics} />\n                </StackItem>\n            </Stack>\n        </React.Fragment>\n    );\n};\n\nCVEPageDetailsSeverity.propTypes = {\n    impact: propTypes.string,\n    cvss2_score: propTypes.any,\n    cvss3_score: propTypes.any,\n    cvss2_metrics: propTypes.any,\n    cvss3_metrics: propTypes.any\n};\n\nCVEPageDetailsSeverity.defaultProps = {\n    impact: 'Unknown',\n    cvss2_score: undefined,\n    cvss3_score: undefined,\n    cvss2_metrics: undefined,\n    cvss3_metrics: undefined\n};\n\nexport default CVEPageDetailsSeverity;\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { CVEPageContext } from '../../SmartComponents/CVEPage/CVEPage';\nimport CVEPageDetailsDescription from '../CVEPageDetailsDescription/CVEPageDetailsDescription';\nimport CVEPageDetailsSeverity from '../CVEPageDetailsSeverity/CVEPageDetailsSeverity';\nimport WithLoader from '../WithLoader/WithLoader';\n\nconst CVEPageDetails = props => {\n    return (\n        <CVEPageContext.Consumer>\n            {context => (\n                <Grid gutter=\"sm\">\n                    <GridItem md={8} sm={12}>\n                        <WithLoader loading={context.isLoading} variant=\"spinner\">\n                            <CVEPageDetailsDescription cveAttributes={props.data.data} />\n                        </WithLoader>\n                    </GridItem>\n\n                    <GridItem md={4} sm={12} className=\"severity-info-box\">\n                        <CVEPageDetailsSeverity\n                            impact={props.data.data.impact}\n                            cvss2_score={props.data.data.cvss2_score}\n                            cvss3_score={props.data.data.cvss3_score}\n                            cvss2_metrics={props.data.data.cvss2_metrics}\n                            cvss3_metrics={props.data.data.cvss3_metrics}\n                        />\n                    </GridItem>\n                </Grid>\n            )}\n        </CVEPageContext.Consumer>\n    );\n};\n\nCVEPageDetails.propTypes = {\n    data: propTypes.object\n};\n\nexport default CVEPageDetails;\n","import * as reactCore from '@patternfly/react-core';\nimport {\n    Text,\n    TextContent,\n    TextVariants,\n    ToolbarGroup,\n    ToolbarItem\n} from '@patternfly/react-core';\nimport * as reactIcons from '@patternfly/react-icons';\nimport * as pfReactTable from '@patternfly/react-table';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport RemediationButton from '@redhat-cloud-services/frontend-components-remediations/RemediationButton';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport debounce from 'lodash/debounce';\nimport propTypes from 'prop-types';\nimport qs from 'query-string';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as reactRouterDom from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport { filtersStatus, filterSystemName } from '../../../Helpers/constants';\nimport { dataShape } from '../../../Helpers/MiscHelper';\nimport { systemExposedTableRowActions } from '../../../Helpers/CVEHelper';\nimport {\n    fetchAffectedSystemsByCVE,\n    fetchCveDetails,\n    handleCveDetailsError,\n    selectEntities\n} from '../../../Store/Actions/Actions';\nimport { inventoryEntitiesReducer } from '../../../Store/Reducers/InventoryEntitiesReducer';\nimport { sExposedSystemsTable } from '../../../Store/Selectors/CVESelectors';\nimport ReducerRegistry, { middlewareListener } from '../../../Utilities/ReducerRegistry';\nimport FilterChips from '../../PresentationalComponents/Filters/FilterChips';\nimport Filters from '../../PresentationalComponents/Filters/Filters';\nimport SearchFilter from '../../PresentationalComponents/Filters/SearchFilter';\nimport './SystemsExposedTable.scss';\nimport CvePairStatusModal from '../Modals/CvePairStatusModal';\nimport BaseKebab from '../../PresentationalComponents/DownloadReportKebab/BaseKebab';\nimport {\n    kebabItemDownloadCSV,\n    kebabItemDownloadJSON,\n    kebabItemEditStatus\n} from '../../PresentationalComponents/DownloadReportKebab/KebabItems';\nimport SelectAllCheckbox from '../../PresentationalComponents/SelectAllCheckbox';\n\n/*eslint camelcase: 0*/\n\nclass SystemsExposedTable extends Component {\n    static propTypes = {\n        cve: propTypes.string,\n        cveStatusDetails: propTypes.object,\n        fetchData: propTypes.func,\n        fetchCveDetails: propTypes.func,\n        affectedSystems: dataShape,\n        history: propTypes.object,\n        handleCveDetailsError: propTypes.func,\n        createNotification: propTypes.func,\n        selectRows: propTypes.func,\n        selectMultiple: propTypes.func\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            InventoryCmp: () => <div>Loading...</div>,\n            removeListener: () => {},\n            StatusModal: () => null,\n            filter: undefined,\n            columns: [\n                {\n                    key: 'display_name',\n                    title: 'Name',\n                    composed: ['facts.os_release', 'display_name'],\n                    props: {\n                        width: 40\n                    }\n                },\n                {\n                    key: 'status',\n                    title: 'Status',\n                    props: {\n                        width: 30\n                    }\n                },\n                {\n                    key: 'updated',\n                    title: 'Last seen',\n                    isTime: true,\n                    props: {\n                        width: 30\n                    }\n                }\n            ],\n            selected: new Set(),\n            selectListener: middlewareListener.addNew({\n                on: 'SELECT_ENTITY',\n                callback: payload => this.onSelect(payload)\n            }),\n            selectAllListener: middlewareListener.addNew({\n                on: 'SELECT_ENTITIES',\n                callback: payload => this.onSelect(payload)\n            })\n        };\n    }\n\n    componentDidMount() {\n        this.fetchInventory();\n        this.props.fetchData(this.props.cve, this.params());\n    }\n\n    shouldComponentUpdate(nextProps) {\n        return !nextProps.affectedSystems.isLoading;\n    }\n\n    onSelect = (payload) => {\n        let selected;\n        if (!payload.data || Array.isArray(payload.data)) {\n            selected = new Set(payload.data);\n        } else {\n            selected = this.state.selected;\n            payload.data.selected ? selected.add(payload.data.id) : selected.delete(payload.data.id);\n        }\n\n        this.setState({ selected }, this.props.selectMultiple);\n    };\n\n    getSelected = () => {\n        return this.state.selected;\n    };\n\n    dataProvider = () => {\n        return {\n            issues: [\n                {\n                    id: `vulnerabilities:${this.props.cve}`,\n                    description: this.props.cve\n                }\n            ],\n            systems: Array.from(this.getSelected())\n        };\n    };\n\n    // #TODO: can be better. Similar function exists in 2 other places.\n    createUrlParams = allParams => {\n        const params = { ...allParams };\n        const allowedParams = ['filter', 'page', 'page_size', 'status_id'];\n        Object.keys(allParams).forEach(\n            key =>\n                (params[key] === undefined || params[key] === '' || !allowedParams.includes(key) || params[key] === false) &&\n                delete params[key]\n        );\n        const queryString = qs.stringify(params);\n        this.props.history.push('?' + queryString);\n    };\n\n    dataReload = () => {\n        const { meta, data } = this.props.affectedSystems;\n        const lastPage = meta.page;\n        const { page } = this.state;\n        const reloadPage = page === lastPage && data.length === 1 ? 1 : meta.page;\n\n        this.setState(\n            {\n                ...this.state,\n                page: reloadPage,\n                page_size: meta.page_size,\n                filter: this.state.filter,\n                system_id: this.state.system_id\n            },\n            this.apply\n        );\n    };\n\n    apply = newFilter => {\n        this.setState({ ...this.state, ...newFilter }, () => {\n            this.sendRequest();\n        });\n    };\n\n    sendRequest = () => {\n        const { fetchData, cve, handleCveDetailsError } = this.props;\n\n        fetchData &&\n            fetchData(cve, this.params()).catch(() => {\n                handleCveDetailsError();\n            });\n\n        this.createUrlParams(this.state);\n    };\n\n    downloadReport = format => {\n        const { payload } =\n            // eslint-disable-next-line camelcase\n            fetchAffectedSystemsByCVE(this.props.cve, {\n                ...this.state,\n                data_format: format,\n                page: 1,\n                page_size: Number.MAX_SAFE_INTEGER\n            });\n        payload &&\n            payload.then(({ data: response }) => {\n                const data = format === 'json' ? JSON.stringify(response) : response;\n                return downloadFile(data, `systems_affected-${this.props.cve}-${new Date().toISOString()}`, format);\n            });\n    };\n\n    showStatusModal = (cves, inventories) => {\n        this.setState({\n            StatusModal: () => (\n                <CvePairStatusModal\n                    cves={cves}\n                    updateRef={() => {\n                        this.props.fetchData(this.props.cve, this.params());\n                        this.props.fetchCveDetails(this.props.cve);\n                    }}\n                    inventories={inventories}\n                />\n            )\n        });\n    };\n\n    async fetchInventory() {\n        const { inventoryConnector, mergeWithEntities, mergeWithDetail } = await insights.loadInventory({\n            react: React,\n            reactRouterDom,\n            reactCore,\n            reactIcons,\n            pfReactTable\n        });\n        ReducerRegistry.register({\n            ...mergeWithEntities(inventoryEntitiesReducer(this.state.columns, this.getSelected)),\n            ...mergeWithDetail()\n        });\n\n        this.setState({\n            InventoryCmp: inventoryConnector().InventoryTable\n        });\n    }\n\n    params = () => {\n        const { filter, page, page_size, status_id } = this.state;\n        return { filter, page, page_size, status_id };\n    };\n\n    handleFilterChange = debounce(value => {\n        this.setState({ ...this.state, filter: value }, this.apply);\n    }, 400);\n\n    handleRemediationCreated = result => {\n        this.props.createNotification(result.getNotification());\n        this.setState({ selected: new Set() });\n        this.props.fetchData(this.props.cve, this.params());\n    };\n\n    handleRefresh = ({ page, per_page: perPage }) => {\n        const { fetchData, cve } = this.props;\n        const { filter, status_id } = this.state;\n        const { meta } = this.props.affectedSystems;\n        if (meta.page !== page || meta.page_size !== perPage) {\n            const config = {\n                page,\n                page_size: perPage || meta.page_size,\n                filter,\n                status_id\n            };\n            fetchData(cve, config);\n            this.createUrlParams(config);\n        }\n    };\n\n    render() {\n        const { StatusModal } = this.state;\n        const { InventoryCmp, filter } = this.state;\n        const { affectedSystems, cveStatusDetails } = this.props;\n        const { data, meta } = affectedSystems;\n        const { showStatusModal } = this;\n        const methods = { showStatusModal };\n        const selectedInventoryIds = Array.from(this.getSelected()).map(selected => ({ id: selected }));\n\n        const kebabOptions = [\n            kebabItemEditStatus(methods.showStatusModal, [cveStatusDetails], selectedInventoryIds, {\n                isDisabled: !selectedInventoryIds.length\n            }),\n            kebabItemDownloadJSON(this.downloadReport),\n            kebabItemDownloadCSV(this.downloadReport)\n        ];\n        return (\n            <React.Fragment>\n                <TextContent>\n                    <Text component={TextVariants.h2}>Affected systems</Text>\n                </TextContent>\n                <InventoryCmp\n                    key={'inventory'}\n                    hasCheckbox={data.length !== 0}\n                    showActions={data.length !== 0}\n                    actions={systemExposedTableRowActions(methods, cveStatusDetails)}\n                    page={meta.page}\n                    total={meta.total_items}\n                    perPage={meta.page_size}\n                    onRefresh={this.handleRefresh}\n                    items={data.map(item => ({\n                        id: item.attributes.inventory_id,\n                        ...item.attributes\n                    }))}\n                >\n                    <ToolbarGroup className={'affected-systems-toolbar'}>\n\n                        <SelectAllCheckbox\n                            selectedItems={this.state.selected}\n                            selectorHandler={this.props.selectRows}\n                            items={affectedSystems}\n                            fetchResource={ops =>  fetchAffectedSystemsByCVE(this.props.cve, { ...this.params, ...ops })}\n                        />\n                        <ToolbarItem>\n                            <SearchFilter\n                                placeholder=\"Find by name\"\n                                value={filter}\n                                apply={this.apply}\n                            />\n                        </ToolbarItem>\n                        <Filters\n                            filterCategories={[filtersStatus]}\n                            filterValues={this.params()}\n                            apply={this.apply}\n                        />\n                        <ToolbarItem>\n                            <RemediationButton\n                                dataProvider={this.dataProvider}\n                                isDisabled={this.state.selected.size === 0}\n                                onRemediationCreated={this.handleRemediationCreated}\n                            />\n                        </ToolbarItem>\n                        <ToolbarItem>\n                            <BaseKebab dropdownItems={kebabOptions} />\n                        </ToolbarItem>\n                    </ToolbarGroup>\n                    <TableToolbar className=\"pf-u-pl-0 affected-systems-filter-chips\">\n                        <ToolbarGroup>\n                            <ToolbarItem>\n                                <FilterChips\n                                    filterValues={this.params()}\n                                    filterCategories={[filterSystemName, filtersStatus]}\n                                    apply={this.apply}\n                                />\n                            </ToolbarItem>\n                        </ToolbarGroup>\n                    </TableToolbar>\n                    <StatusModal />\n                </InventoryCmp>\n            </React.Fragment>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        affectedSystems: sExposedSystemsTable(state, ownProps.cve)\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchData: (cve, options) => dispatch(fetchAffectedSystemsByCVE(cve, options)),\n        fetchCveDetails: cveName => dispatch(fetchCveDetails(cveName)),\n        handleCveDetailsError: () => dispatch(handleCveDetailsError, selectEntities()),\n        selectRows: (value, ids) => dispatch(selectEntities(value, ids)),\n        createNotification: content => dispatch(addNotification(content)),\n        selectMultiple: () => dispatch({ type: 'SELECT_MULTIPLE_ENTITIES' })\n\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(SystemsExposedTable)\n);\n","import { DropdownPosition, Page } from '@patternfly/react-core';\nimport { InvalidObject, Main } from '@redhat-cloud-services/frontend-components';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { fetchAffectedSystemsByCVE, fetchCveDetails, handleCveDetailsError, setHeader } from '../../../Store/Actions/Actions';\nimport { sCveDetailsPage } from '../../../Store/Selectors/CVESelectors';\nimport { paths } from '../../../Utilities/Routes';\nimport CVEPageDetails from '../../PresentationalComponents/CVEPageDetails/CVEPageDetails';\nimport BaseKebab from '../../PresentationalComponents/DownloadReportKebab/BaseKebab';\nimport { kebabItemEditBusinessRisk, kebabItemEditStatus } from '../../PresentationalComponents/DownloadReportKebab/KebabItems';\nimport BusinessRiskModal from '../Modals/BusinessRiskModal';\nimport CveStatusModal from '../Modals/CveStatusModal';\nimport SystemsExposedTable from '../SystemsExposedTable/SystemsExposedTable';\nimport VulnerabilityHeader from '../VulnerabilityHeader/VulnerabilityHeader';\n\nexport const CVEPageContext = React.createContext({ isLoading: true });\n\nclass CVEPage extends React.Component {\n    static propTypes = {\n        match: propTypes.object,\n        cveDetails: propTypes.object,\n        fetchCveDetails: propTypes.func,\n        setHeader: propTypes.func,\n        handleCveDetailsError: propTypes.func,\n        fetchAffectedSystems: propTypes.func\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = { cveName: this.props.match.params.cve, BusinessRiskModal: () => null, StatusModal: () => null };\n    }\n\n    componentDidMount() {\n        const { fetchCveDetails, handleCveDetailsError, setHeader } = this.props;\n\n        setHeader({\n            breadcrumbs: [\n                { title: paths.vulnerabilities.title, to: paths.vulnerabilities.to },\n                { title: paths.vulnerabilitiesCves.title, to: paths.vulnerabilitiesCves.to },\n                { title: this.state.cveName, isActive: true }\n            ]\n        });\n\n        fetchCveDetails(this.state.cveName).catch(() => {\n            handleCveDetailsError();\n        });\n    }\n\n    showBusinessRiskModal = cves => {\n        this.setState({\n            BusinessRiskModal: () => (\n                <BusinessRiskModal open cves={cves} updateRef={() => this.props.fetchCveDetails(this.state.cveName)} />\n            )\n        });\n    };\n\n    showStatusModal = cves => {\n        this.setState({\n            StatusModal: () => (\n                <CveStatusModal\n                    cves={cves}\n                    updateRef={() => {\n                        this.props.fetchCveDetails(this.state.cveName);\n                        this.props.fetchAffectedSystems(this.state.cveName);\n                    }}\n                />\n            )\n        });\n    };\n\n    render() {\n        const { showStatusModal } = this;\n        const { cveDetails, fetchAffectedSystems } = this.props;\n        const { error } = cveDetails;\n        const { cveName, BusinessRiskModal, StatusModal } = this.state;\n        const cveStatusDetails = {\n            id: cveName,\n            status_id: cveDetails.data.status_id,\n            justification: cveDetails.data.status_justification\n        };\n        const kebabItems = [\n            kebabItemEditBusinessRisk(this.showBusinessRiskModal, [\n                {\n                    business_risk_id: cveDetails.data.business_risk_id,\n                    id: cveName,\n                    justification: cveDetails.data.business_risk_justification\n                }\n            ]),\n            kebabItemEditStatus(this.showStatusModal, [cveStatusDetails])\n        ];\n\n        if (!error) {\n            return (\n                <Page>\n                    <CVEPageContext.Provider value={cveDetails && { isLoading: cveDetails.isLoading }}>\n                        <VulnerabilityHeader\n                            title={\n                                <span style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                    {cveName}\n                                    <BaseKebab dropdownItems={kebabItems} position={DropdownPosition.right}></BaseKebab>\n                                </span>\n                            }\n                            showTabs={false}\n                        >\n                            <CVEPageDetails data={cveDetails} />\n                            <StatusModal />\n                            <BusinessRiskModal />\n                        </VulnerabilityHeader>\n                        <Main>\n                            <SystemsExposedTable\n                                cve={cveName}\n                                cveStatusDetails={cveStatusDetails}\n                                fetchData={fetchAffectedSystems}\n                                methods={{ showStatusModal }}\n                            />\n                        </Main>\n                    </CVEPageContext.Provider>\n                </Page>\n            );\n        } else {\n            return (\n                <React.Fragment>\n                    <VulnerabilityHeader title={cveName} showTabs={false} />\n                    <InvalidObject />\n                </React.Fragment>\n            );\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        cveDetails: sCveDetailsPage(state)\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchCveDetails: cveName => dispatch(fetchCveDetails(cveName)),\n        setHeader: header => dispatch(setHeader(header)),\n        handleCveDetailsError: () => dispatch(handleCveDetailsError()),\n        fetchAffectedSystems: (cve, options) => dispatch(fetchAffectedSystemsByCVE(cve, options))\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(CVEPage)\n);\n","export * from './components';\n//# sourceMappingURL=index.js.map","export * from './transformers';\nexport * from './headerUtils';\nexport * from './formatters';\nexport * from './utils';\n//# sourceMappingURL=index.js.map","import { createSelector } from 'reselect';\nimport { createCveDetailsPage, createExposedSystemsTable } from '../../Helpers/CVEHelper';\n\nconst cveListWithSystemsSelector = (state, cve) => ({ ...state.CVEStore.affectedSystemsByCVE, cve });\nconst systemsListAllSelector = state => state.SystemsStore;\nconst cveDetailsPageSelector = state => state.CVEStore.cveDetails;\n\nexport const sCveDetailsPage = createSelector(\n    [cveDetailsPageSelector],\n    createCveDetailsPage\n);\nexport const sExposedSystemsTable = createSelector(\n    [cveListWithSystemsSelector],\n    createExposedSystemsTable\n);\n\nexport const sAllSystems = createSelector(\n    [systemsListAllSelector],\n    createExposedSystemsTable\n);\n","import { Form, FormGroup, Radio, Stack, StackItem, TextArea } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { setBusinessRisk } from '../../../Helpers/APIHelper';\nimport { businessRiskOptions } from '../../../Helpers/constants';\nimport BaseModal from './BaseModal';\n\nexport const BusinessRiskModal = ({ cves, updateRef }) => {\n    const [cveList] = useState(cves);\n    const [businessRiskId, setBusinessRiskId] = useState('0');\n    const [label, setLabel] = useState();\n\n    useEffect(() => {\n        getDefaultBusinessRisk(), getDefaultLabel();\n    }, [cves]);\n    useEffect(getDefaultLabel, [cves]);\n\n    const handleOnRadioChange = (_, event) => {\n        const { value } = event.currentTarget;\n        setBusinessRiskId(value);\n    };\n\n    const handleOnLabelChange = value => {\n        setLabel(value);\n    };\n\n    const handleSave = () => {\n        return setBusinessRisk({\n            business_risk_id: parseInt(businessRiskId),\n            cve: cveList.map(item => item.id),\n            business_risk_text: label\n        }).then(updateRef);\n    };\n\n    function getDefaultBusinessRisk() {\n        setBusinessRiskId((cveList && cveList.length === 1 && cveList[0].business_risk_id.toString()) || '0');\n    }\n\n    function getDefaultLabel() {\n        setLabel((cveList && cveList.length === 1 && cveList[0].justification) || '');\n    }\n\n    const successNotification = {\n        variant: 'success',\n        title: `Business risk updated for ${cveList.length} CVEs`\n    };\n\n    return (\n        <BaseModal items={cveList} onSave={handleSave} onSuccessNotification={successNotification} title=\"Edit business risk\">\n            <Stack gutter={'md'}>\n                <StackItem>\n                    Business risk can be used to identify, track, and address CVEs that have meaningful impact to your\n                    organization.\n                </StackItem>\n                <StackItem>\n                    <Form>\n                        <FormGroup label=\"Business risk\" fieldId={'businessRiskId'}>\n                            {businessRiskOptions.map(item => (\n                                <Radio\n                                    value={item.value}\n                                    isChecked={businessRiskId === item.value}\n                                    onChange={handleOnRadioChange}\n                                    label={item.label}\n                                    key={item.value}\n                                    id={item.value}\n                                    name={item.label}\n                                    aria-label={item.label}\n                                />\n                            ))}\n                        </FormGroup>\n                        <FormGroup label=\"Justification\" fieldId={'label'}>\n                            <TextArea\n                                type=\"text\"\n                                onChange={handleOnLabelChange}\n                                value={label}\n                                resizeOrientation='vertical'\n                                aria-label={'justification'}\n                            />\n                        </FormGroup>\n                    </Form>\n                </StackItem>\n            </Stack>\n        </BaseModal>\n    );\n};\n\nBusinessRiskModal.propTypes = {\n    cves: propTypes.array,\n    updateRef: propTypes.func\n};\n\nexport default BusinessRiskModal;\n","import { Checkbox, Form, FormGroup, Split, SplitItem, Stack, StackItem, Tooltip } from '@patternfly/react-core';\nimport { InfoCircleIcon, OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport propTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { setCveStatus, setSystemCveStatus } from '../../../Helpers/APIHelper';\nimport BaseModal, { useJustificationInput, useStatusSelect } from './BaseModal';\n\nexport const CveStatusModal = ({ cves, updateRef }) => {\n    const [cveList] = useState(cves);\n    const { StatusSelect, statusId } = useStatusSelect(getDefaultStatus());\n    const { JustificationInput, justification } = useJustificationInput(getDefaultLabel());\n    const [checkboxState, setCheckboxState] = useState(false);\n\n    const handleSave = () => {\n        const cveIds = cveList.map(item => item.id);\n        return setCveStatus({\n            status_id: parseInt(statusId),\n            cve: cveIds,\n            status_text: justification\n        })\n        .then(() => !checkboxState && setSystemCveStatus({ cve: cveIds }))\n        .then(updateRef);\n    };\n\n    function getDefaultStatus() {\n        return (cveList && cveList.length === 1 && cveList[0].status_id.toString()) || '0';\n    }\n\n    function getDefaultLabel() {\n        return (cveList && cveList.length === 1 && cveList[0].justification) || '';\n    }\n\n    const successNotification = {\n        variant: 'success',\n        title: `Status updated for ${cveList.length} CVEs`\n    };\n    const title = cveList.length > 1 ? 'Set status for these CVEs and all systems' : 'Set status for this CVE and all systems';\n    return (\n        <BaseModal items={cveList} onSave={handleSave} onSuccessNotification={successNotification} title={title}>\n            <Stack gutter={'md'}>\n                <StackItem>\n                    <Form key=\"key\">\n                        {StatusSelect}\n                        {JustificationInput}\n                        <FormGroup fieldId={'overwrite'}>\n                            <Checkbox\n                                label={\n                                    <React.Fragment>\n                                        Do not overwrite individual system status{' '}\n                                        <Tooltip\n                                            content=\"When checked, this setting does not change any pre-existing\n                                        statuses set on individual systems for this CVE.\"\n                                        >\n                                            <React.Fragment>\n                                                <OutlinedQuestionCircleIcon />\n                                            </React.Fragment>\n                                        </Tooltip>\n                                    </React.Fragment>\n                                }\n                                id=\"alt-form-checkbox-1\"\n                                name=\"alt-form-checkbox-1\"\n                                isChecked={checkboxState}\n                                onChange={checked => setCheckboxState(checked)}\n                            />\n                        </FormGroup>\n                        <FormGroup fieldId={'info'}>\n                            <Split>\n                                <SplitItem style={{ marginRight: 'var(--pf-global--spacer--xs)' }}>\n                                    <InfoCircleIcon size=\"md\" color=\"var(--pf-global--active-color--400)\" />\n                                </SplitItem>\n                                <SplitItem isFilled>\n                                    This status is applied to all existing matching systems. Any new matching systems will have\n                                    the status &quot;Not reviewed&quot;{' '}\n                                    <Tooltip\n                                        content='Example: If a new system is added and matches to this vulnerability,\n                                    it will be given a status \"Not reviewed\"'\n                                    >\n                                        <React.Fragment>\n                                            <OutlinedQuestionCircleIcon />\n                                        </React.Fragment>\n                                    </Tooltip>\n                                </SplitItem>\n                            </Split>\n                        </FormGroup>\n                    </Form>\n                </StackItem>\n            </Stack>\n        </BaseModal>\n    );\n};\n\nCveStatusModal.propTypes = {\n    cves: propTypes.array,\n    updateRef: propTypes.func\n};\n\nexport default CveStatusModal;\n","'use strict';\n\nexports.__esModule = true;\nexports.defaultMemoize = defaultMemoize;\nexports.createSelectorCreator = createSelectorCreator;\nexports.createStructuredSelector = createStructuredSelector;\nfunction defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nfunction createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = defaultMemoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nvar createSelector = exports.createSelector = createSelectorCreator(defaultMemoize);\n\nfunction createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","// Initial State\nexport const init = {\n    columns: [],\n    rows: [],\n    entities: []\n};\n// Reducer\n\nfunction modifyInventory(columns, state, getSelectedFunc) {\n    // If a system does not have insights_id, it means it was deleted from inventory but somehow survived in Vuln backend\n    if (state.loaded) {\n        const selected = getSelectedFunc();\n        return {\n            ...state,\n            rows: state.rows.filter(item => item.insights_id).map(item => ({ ...item, selected: selected.has(item.id) })),\n            columns\n        };\n    }\n\n    return state;\n}\n\nfunction selectEntities(state, getSelectedFunc) {\n    const selected = getSelectedFunc();\n    const myRows = state.rows.slice();\n    const retval = {\n        ...state,\n        rows: myRows\n        .map(item => {\n            const newValue =  { ...item, selected: selected.has(item.id) };\n            return newValue;\n        })\n    };\n    return retval;\n}\n\nexport const inventoryEntitiesReducer = (columns, selected) => (state = init, action) => {\n    switch (action.type) {\n        case 'LOAD_ENTITIES_FULFILLED':\n            return modifyInventory(columns, state, selected);\n        case 'SELECT_MULTIPLE_ENTITIES':\n            return selectEntities(state, selected);\n\n        default:\n            return state;\n    }\n};\n","import { Checkbox, Form, FormGroup, Stack, StackItem, Alert } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { setSystemCveStatus } from '../../../Helpers/APIHelper';\nimport BaseModal, { useJustificationInput, useStatusSelect } from './BaseModal';\n\nexport const CvePairStatusModal = ({ cves, updateRef, inventories, hasDifferentStatus = false }) => {\n    const [cveList] = useState(cves);\n    const [inventoryList] = useState(inventories);\n    const { StatusSelect, statusId, setStatusId, setProps: setSelectProps } = useStatusSelect(getDefaultStatus());\n    const {\n        JustificationInput,\n        justification,\n        setJustification,\n        setProps: setJustificationProps\n    } = useJustificationInput(getDefaultLabel());\n    const [checkboxState, setCheckboxState] = useState(getDefaultCheckboxState());\n    const inventoryIds = inventoryList.map(item => item.id);\n\n    useEffect(() => {\n        if (checkboxState) {\n            const props = { isDisabled: true };\n            setSelectProps(props);\n            setJustificationProps(props);\n        }\n    }, []);\n\n    const handleSave = () => {\n        const cveIds = cveList.map(item => item.id);\n        const setStatusParams = !checkboxState\n            ? {\n                status_id: parseInt(statusId),\n                cve: cveIds,\n                status_text: justification,\n                inventory_id: inventoryIds\n            }\n            : { cve: cveIds, inventory_id: inventoryIds };\n        return setSystemCveStatus(setStatusParams).then(updateRef);\n    };\n\n    function getDefaultStatus() {\n        // system has different status\n        if (inventoryList && inventoryList.length > 0 && inventoryList[0].status_id) {\n            return getSystemsStatus();\n        }\n\n        if (cveList && cveList.length > 0) {\n            return getCvestatus();\n        }\n\n    }\n\n    function getDefaultLabel() {\n        if (inventoryList && inventoryList.length === 1 && inventoryList[0].justification) {\n            return getSystemsJustification();\n        }\n\n        if (cveList && cveList.length === 1) {\n            return getCveJustification();\n        }\n    }\n\n    function getDefaultCheckboxState() {\n        // system has the same status as cve\n        if (inventoryList && inventoryList.length === 1 && inventoryList[0].status_id) {\n            let [inventory] = inventoryList;\n            return cveList.some(cve => (cve.status_id === inventory.status_id));\n        }\n\n        if (cveList && cveList.length === 1) {\n            return true;\n        }\n\n        return false;\n    }\n\n    function getSystemsStatus() {\n        return (inventoryList && inventoryList[0].status_id.toString()) || '0';\n    }\n\n    function getSystemsJustification() {\n        return (inventoryList && inventoryList.length === 1 && inventoryList[0].justification) || '';\n    }\n\n    function getCvestatus() {\n        return (cveList && cveList[0].status_id.toString()) || '0';\n    }\n\n    function getCveJustification() {\n        return (cveList && cveList.length === 1 && cveList[0].justification) || '';\n    }\n\n    function handleCheckboxChange(checked) {\n        const props = { isDisabled: checked };\n        setCheckboxState(checked);\n        setSelectProps(props);\n        setStatusId(getCvestatus());\n        setJustification(getCveJustification());\n        setJustificationProps(props);\n    }\n\n    const successNotification = {\n        variant: 'success',\n        title: 'CVE status updated'\n    };\n\n    let modalTitle = 'Set status for this CVE and system pair';\n    if (inventoryIds.length > 1 || cves.length > 1) {\n        modalTitle = 'Set status for these CVE and system pairs';\n    }\n\n    return (\n        <BaseModal items={cveList} onSave={handleSave} onSuccessNotification={successNotification} title={modalTitle}>\n            <Stack gutter={'md'}>\n                <StackItem>\n                    {hasDifferentStatus ?\n                        <Alert\n                            variant=\"warning\"\n                            isInline\n                            title=\"Selected pairs have different statuses. Changes will be applied to all \" />\n                        : ''}\n                </StackItem>\n                <StackItem>\n                    <Form key=\"key\">\n                        <FormGroup fieldId={'overall'}>\n                            <Checkbox\n                                label=\"Use overall CVE status\"\n                                id=\"alt-form-checkbox-1\"\n                                name=\"alt-form-checkbox-1\"\n                                isChecked={checkboxState}\n                                onChange={handleCheckboxChange}\n                            />\n                        </FormGroup>\n                        {StatusSelect}\n                        {JustificationInput}\n                    </Form>\n                </StackItem>\n            </Stack>\n        </BaseModal>\n    );\n};\n\nCvePairStatusModal.propTypes = {\n    cves: propTypes.array,\n    updateRef: propTypes.func,\n    inventories: propTypes.array,\n    hasDifferentStatus: propTypes.bool\n};\n\nexport default CvePairStatusModal;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEPageDetailsDescription.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEPageDetailsDescription.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEPageDetailsDescription.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}