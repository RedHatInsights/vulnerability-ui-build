{"version":3,"sources":["webpack:///./node_modules/@patternfly/react-table/dist/esm/index.js","webpack:///./node_modules/@patternfly/react-table/dist/esm/components/Table/utils/index.js","webpack:///./src/Store/Selectors/CVESelectors.js","webpack:///./src/Components/SmartComponents/Modals/BusinessRiskModal.js","webpack:///./src/Components/SmartComponents/Modals/CveStatusModal.js","webpack:///./node_modules/reselect/lib/index.js","webpack:///./src/Store/Reducers/InventoryEntitiesReducer.js","webpack:///./src/Components/SmartComponents/Modals/CvePairStatusModal.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsDescription/CVEPageDetailsDescription.scss?4f52","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsDescription/CVEPageDetailsDescription.scss","webpack:///./src/Components/PresentationalComponents/CVEInfoBox/CVEInfoBox.scss?9c01","webpack:///./src/Components/PresentationalComponents/CVEInfoBox/CVEInfoBox.scss","webpack:///./src/Components/PresentationalComponents/CvssVector/CvssVector.scss?e372","webpack:///./src/Components/PresentationalComponents/CvssVector/CvssVector.scss","webpack:///./src/Components/SmartComponents/SystemsExposedTable/SystemsExposedTable.scss?46a3","webpack:///./src/Components/SmartComponents/SystemsExposedTable/SystemsExposedTable.scss","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsDescription/SnippetWithHeaderAndTooltip.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsDescription/CVEPageDetailsDescription.js","webpack:///./src/Components/PresentationalComponents/WithLoader/WithLoader.js","webpack:///./src/Components/PresentationalComponents/CVEInfoBox/CVEInfoBox.js","webpack:///./src/Components/PresentationalComponents/CvssVector/CvssVector.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsSeverity/CVEPageDetailsSeverity.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetails/CVEPageDetails.js","webpack:///./src/Components/SmartComponents/SystemsExposedTable/SystemsExposedTable.js","webpack:///./src/Components/SmartComponents/CVEPage/CVEPage.js"],"names":["sCveDetailsPage","createSelector","state","CVEStore","cveDetails","createCveDetailsPage","sExposedSystemsTable","cve","affectedSystemsByCVE","createExposedSystemsTable","sAllSystems","SystemsStore","BusinessRiskModal","cves","updateRef","useState","cveList","businessRiskId","setBusinessRiskId","label","setLabel","useEffect","length","business_risk_id","toString","getDefaultLabel","handleOnRadioChange","_","event","value","currentTarget","justification","successNotification","variant","title","items","onSave","setBusinessRisk","parseInt","map","item","id","business_risk_text","then","onSuccessNotification","gutter","fieldId","businessRiskOptions","isChecked","onChange","key","name","aria-label","type","resizeOrientation","propTypes","array","func","CveStatusModal","useStatusSelect","status_id","StatusSelect","statusId","useJustificationInput","JustificationInput","checkboxState","setCheckboxState","cveIds","setCveStatus","status_text","setSystemCveStatus","Fragment","content","checked","style","marginRight","size","color","isFilled","defaultEqualityCheck","a","b","areArgumentsShallowlyEqual","equalityCheck","prev","next","i","defaultMemoize","arguments","undefined","lastArgs","lastResult","apply","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelectorCreator","memoize","_len","memoizeOptions","_key","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","concat","selector","params","push","resetRecomputations","exports","__esModule","createStructuredSelector","selectors","selectorCreator","objectKeys","Object","keys","_len3","values","_key3","reduce","composition","index","init","columns","rows","entities","modifyInventory","getSelectedFunc","loaded","selected","filter","insights_id","has","selectEntities","myRows","slice","inventoryEntitiesReducer","action","CvePairStatusModal","inventories","inventoryList","getCvestatus","getDefaultStatus","setStatusId","setSelectProps","setProps","getCveJustification","setJustification","setJustificationProps","inventory","some","getDefaultCheckboxState","inventoryIds","props","isDisabled","modalTitle","setStatusParams","inventory_id","module","options","transform","locals","SnippetWithHeaderAndPopover","Popover","bodyContent","headerContent","position","Stack","display","cursor","StackItem","Label","any","CVEPageDetailsDescription","cveAttributes","publishDate","public_date","description","link","rh_link","businessRisk","business_risk","businessRiskJustification","business_risk_justification","status","statusJustification","status_justification","systemsStatusDetail","systems_status_detail","systemsStatusDivergent","systems_status_divergent","detailRows","STATUS_OPTIONS","find","brPopoverContent","TextContent","StyledText","fontWeight","StyledConstants","fontWeights","bold","fontSize","fontSizes","sm","lineHeight","lineHeights","statusPopoverContent","marginTop","className","semi_bold","Table","borders","gridBreakPoint","cells","Flex","FlexItem","breakpointMods","modifier","Text","component","TextVariants","p","StyledBox","marginBottom","WithLoader","loading","centered","SkeletonSize","lg","children","CVEPageOverviewItemLoader","height","width","x","y","rx","ry","TrendBoxLoader","CurrentVulnerabilitiesItemLoader","speed","primaryColor","secondaryColor","cx","cy","r","bool","string","CVEInfoBox","CVEPageContext","Consumer","context","Split","isLoading","SplitItem","titleColor","Bullseye","titleContent","h6","descriptionTitle","descriptionContent","V3names","AV","N","A","L","P","AC","H","PR","UI","R","S","U","C","I","CVSS","V2names","M","Au","CvssVector","CVSS2Vector","cvss2_metrics","CVSS3Vector","cvss3_metrics","cvssVer","cvssVector","parsedVector","vector","namesMapping","res","split","forEach","curr","val","parseVector","cvssVersion","maxWidth","enableFlip","TableVariant","compact","entries","learnMorePopover","text","footerContent","href","target","rel","CVEPageDetailsSeverity","getImpactDetails","impact","cvss3_score","cvss2_score","h3","parseCvssScore","defaultProps","CVEPageDetails","Grid","GridItem","md","data","object","SystemsExposedTable","onSelect","payload","Set","add","setState","selectMultiple","getSelected","dataProvider","issues","systems","from","createUrlParams","allParams","allowedParams","includes","queryString","qs","stringify","history","dataReload","affectedSystems","meta","lastPage","page","reloadPage","page_size","system_id","newFilter","sendRequest","fetchData","handleCveDetailsError","downloadReport","format","fetchAffectedSystemsByCVE","data_format","Number","MAX_SAFE_INTEGER","response","JSON","downloadFile","Date","toISOString","showStatusModal","StatusModal","fetchCveDetails","handleFilterChange","debounce","handleRemediationCreated","result","createNotification","getNotification","handleRefresh","perPage","per_page","InventoryCmp","removeListener","composed","isTime","selectListener","middlewareListener","addNew","on","callback","selectAllListener","this","fetchInventory","insights","loadInventory","react","React","reactRouterDom","reactCore","reactIcons","pfReactTable","inventoryConnector","mergeWithEntities","mergeWithDetail","ReducerRegistry","register","InventoryTable","cveStatusDetails","methods","selectedInventoryIds","kebabOptions","kebabItemEditStatus","kebabItemDownloadJSON","kebabItemDownloadCSV","h2","hasCheckbox","showActions","actions","systemExposedTableRowActions","total","total_items","onRefresh","attributes","ToolbarGroup","SelectAllCheckbox","selectedItems","selectorHandler","selectRows","fetchResource","ops","ToolbarItem","SearchFilter","placeholder","Filters","filterCategories","filtersStatus","filterValues","onRemediationCreated","BaseKebab","dropdownItems","FilterChips","filterSystemName","Component","dataShape","withRouter","connect","ownProps","dispatch","cveName","ids","addNotification","createContext","CVEPage","showBusinessRiskModal","open","fetchAffectedSystems","match","setHeader","breadcrumbs","paths","vulnerabilities","to","isActive","error","kebabItems","kebabItemEditBusinessRisk","VulnerabilityHeader","showTabs","Page","Provider","justifyContent","DropdownPosition","right","header"],"mappings":"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","file":"js/CVEPage.js","sourcesContent":["export * from './components';\n//# sourceMappingURL=index.js.map","export * from './transformers';\nexport * from './headerUtils';\nexport * from './formatters';\nexport * from './utils';\n//# sourceMappingURL=index.js.map","import { createSelector } from 'reselect';\nimport { createCveDetailsPage, createExposedSystemsTable } from '../../Helpers/CVEHelper';\n\nconst cveListWithSystemsSelector = (state, cve) => ({ ...state.CVEStore.affectedSystemsByCVE, cve });\nconst systemsListAllSelector = state => state.SystemsStore;\nconst cveDetailsPageSelector = state => state.CVEStore.cveDetails;\n\nexport const sCveDetailsPage = createSelector(\n    [cveDetailsPageSelector],\n    createCveDetailsPage\n);\nexport const sExposedSystemsTable = createSelector(\n    [cveListWithSystemsSelector],\n    createExposedSystemsTable\n);\n\nexport const sAllSystems = createSelector(\n    [systemsListAllSelector],\n    createExposedSystemsTable\n);\n","import { Form, FormGroup, Radio, Stack, StackItem, TextArea } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { setBusinessRisk } from '../../../Helpers/APIHelper';\nimport { businessRiskOptions } from '../../../Helpers/constants';\nimport BaseModal from './BaseModal';\n\nexport const BusinessRiskModal = ({ cves, updateRef }) => {\n    const [cveList] = useState(cves);\n    const [businessRiskId, setBusinessRiskId] = useState('0');\n    const [label, setLabel] = useState();\n\n    useEffect(() => {\n        getDefaultBusinessRisk(), getDefaultLabel();\n    }, [cves]);\n    useEffect(getDefaultLabel, [cves]);\n\n    const handleOnRadioChange = (_, event) => {\n        const { value } = event.currentTarget;\n        setBusinessRiskId(value);\n    };\n\n    const handleOnLabelChange = value => {\n        setLabel(value);\n    };\n\n    const handleSave = () => {\n        return setBusinessRisk({\n            business_risk_id: parseInt(businessRiskId),\n            cve: cveList.map(item => item.id),\n            business_risk_text: label\n        }).then(updateRef);\n    };\n\n    function getDefaultBusinessRisk() {\n        setBusinessRiskId((cveList && cveList.length === 1 && cveList[0].business_risk_id.toString()) || '0');\n    }\n\n    function getDefaultLabel() {\n        setLabel((cveList && cveList.length === 1 && cveList[0].justification) || '');\n    }\n\n    const successNotification = {\n        variant: 'success',\n        title: `Business risk updated for ${cveList.length} CVEs`\n    };\n\n    return (\n        <BaseModal items={cveList} onSave={handleSave} onSuccessNotification={successNotification} title=\"Edit business risk\">\n            <Stack gutter={'md'}>\n                <StackItem>\n                    Business risk can be used to identify, track, and address CVEs that have meaningful impact to your\n                    organization.\n                </StackItem>\n                <StackItem>\n                    <Form>\n                        <FormGroup label=\"Business risk\" fieldId={'businessRiskId'}>\n                            {businessRiskOptions.map(item => (\n                                <Radio\n                                    value={item.value}\n                                    isChecked={businessRiskId === item.value}\n                                    onChange={handleOnRadioChange}\n                                    label={item.label}\n                                    key={item.value}\n                                    id={item.value}\n                                    name={item.label}\n                                    aria-label={item.label}\n                                />\n                            ))}\n                        </FormGroup>\n                        <FormGroup label=\"Justification\" fieldId={'label'}>\n                            <TextArea\n                                type=\"text\"\n                                onChange={handleOnLabelChange}\n                                value={label}\n                                resizeOrientation='vertical'\n                                aria-label={'justification'}\n                            />\n                        </FormGroup>\n                    </Form>\n                </StackItem>\n            </Stack>\n        </BaseModal>\n    );\n};\n\nBusinessRiskModal.propTypes = {\n    cves: propTypes.array,\n    updateRef: propTypes.func\n};\n\nexport default BusinessRiskModal;\n","import { Checkbox, Form, FormGroup, Split, SplitItem, Stack, StackItem, Tooltip } from '@patternfly/react-core';\nimport { InfoCircleIcon, OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport propTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { setCveStatus, setSystemCveStatus } from '../../../Helpers/APIHelper';\nimport BaseModal, { useJustificationInput, useStatusSelect } from './BaseModal';\n\nexport const CveStatusModal = ({ cves, updateRef }) => {\n    const [cveList] = useState(cves);\n    const { StatusSelect, statusId } = useStatusSelect(getDefaultStatus());\n    const { JustificationInput, justification } = useJustificationInput(getDefaultLabel());\n    const [checkboxState, setCheckboxState] = useState(false);\n\n    const handleSave = () => {\n        const cveIds = cveList.map(item => item.id);\n        return setCveStatus({\n            status_id: parseInt(statusId),\n            cve: cveIds,\n            status_text: justification\n        })\n        .then(() => !checkboxState && setSystemCveStatus({ cve: cveIds }))\n        .then(updateRef);\n    };\n\n    function getDefaultStatus() {\n        return (cveList && cveList.length === 1 && cveList[0].status_id.toString()) || '0';\n    }\n\n    function getDefaultLabel() {\n        return (cveList && cveList.length === 1 && cveList[0].justification) || '';\n    }\n\n    const successNotification = {\n        variant: 'success',\n        title: `Status updated for ${cveList.length} CVEs`\n    };\n    const title = cveList.length > 1 ? 'Set status for these CVEs and all systems' : 'Set status for this CVE and all systems';\n    return (\n        <BaseModal items={cveList} onSave={handleSave} onSuccessNotification={successNotification} title={title}>\n            <Stack gutter={'md'}>\n                <StackItem>\n                    <Form key=\"key\">\n                        {StatusSelect}\n                        {JustificationInput}\n                        <FormGroup fieldId={'overwrite'}>\n                            <Checkbox\n                                label={\n                                    <React.Fragment>\n                                        Do not overwrite individual system status{' '}\n                                        <Tooltip\n                                            content=\"When checked, this setting does not change any pre-existing\n                                        statuses set on individual systems for this CVE.\"\n                                        >\n                                            <React.Fragment>\n                                                <OutlinedQuestionCircleIcon />\n                                            </React.Fragment>\n                                        </Tooltip>\n                                    </React.Fragment>\n                                }\n                                id=\"alt-form-checkbox-1\"\n                                name=\"alt-form-checkbox-1\"\n                                isChecked={checkboxState}\n                                onChange={checked => setCheckboxState(checked)}\n                            />\n                        </FormGroup>\n                        <FormGroup fieldId={'info'}>\n                            <Split>\n                                <SplitItem style={{ marginRight: 'var(--pf-global--spacer--xs)' }}>\n                                    <InfoCircleIcon size=\"md\" color=\"var(--pf-global--active-color--400)\" />\n                                </SplitItem>\n                                <SplitItem isFilled>\n                                    This status is applied to all existing matching systems. Any new matching systems will have\n                                    the status &quot;Not reviewed&quot;{' '}\n                                    <Tooltip\n                                        content='Example: If a new system is added and matches to this vulnerability,\n                                    it will be given a status \"Not reviewed\"'\n                                    >\n                                        <React.Fragment>\n                                            <OutlinedQuestionCircleIcon />\n                                        </React.Fragment>\n                                    </Tooltip>\n                                </SplitItem>\n                            </Split>\n                        </FormGroup>\n                    </Form>\n                </StackItem>\n            </Stack>\n        </BaseModal>\n    );\n};\n\nCveStatusModal.propTypes = {\n    cves: propTypes.array,\n    updateRef: propTypes.func\n};\n\nexport default CveStatusModal;\n","'use strict';\n\nexports.__esModule = true;\nexports.defaultMemoize = defaultMemoize;\nexports.createSelectorCreator = createSelectorCreator;\nexports.createStructuredSelector = createStructuredSelector;\nfunction defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nfunction createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = defaultMemoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nvar createSelector = exports.createSelector = createSelectorCreator(defaultMemoize);\n\nfunction createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","// Initial State\nexport const init = {\n    columns: [],\n    rows: [],\n    entities: []\n};\n// Reducer\n\nfunction modifyInventory(columns, state, getSelectedFunc) {\n    // If a system does not have insights_id, it means it was deleted from inventory but somehow survived in Vuln backend\n    if (state.loaded) {\n        const selected = getSelectedFunc();\n        return {\n            ...state,\n            rows: state.rows.filter(item => item.insights_id).map(item => ({ ...item, selected: selected.has(item.id) })),\n            columns\n        };\n    }\n\n    return state;\n}\n\nfunction selectEntities(state, getSelectedFunc) {\n    const selected = getSelectedFunc();\n    const myRows = state.rows.slice();\n    const retval = {\n        ...state,\n        rows: myRows\n        .map(item => {\n            const newValue =  { ...item, selected: selected.has(item.id) };\n            return newValue;\n        })\n    };\n    return retval;\n}\n\nexport const inventoryEntitiesReducer = (columns, selected) => (state = init, action) => {\n    switch (action.type) {\n        case 'LOAD_ENTITIES_FULFILLED':\n            return modifyInventory(columns, state, selected);\n        case 'SELECT_MULTIPLE_ENTITIES':\n            return selectEntities(state, selected);\n\n        default:\n            return state;\n    }\n};\n","import { Checkbox, Form, FormGroup, Stack, StackItem } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { setSystemCveStatus } from '../../../Helpers/APIHelper';\nimport BaseModal, { useJustificationInput, useStatusSelect } from './BaseModal';\n\nexport const CvePairStatusModal = ({ cves, updateRef, inventories }) => {\n    const [cveList] = useState(cves);\n    const [inventoryList] = useState(inventories);\n    const { StatusSelect, statusId, setStatusId, setProps: setSelectProps } = useStatusSelect(getDefaultStatus());\n    const {\n        JustificationInput,\n        justification,\n        setJustification,\n        setProps: setJustificationProps\n    } = useJustificationInput(getDefaultLabel());\n    const [checkboxState, setCheckboxState] = useState(getDefaultCheckboxState());\n    const inventoryIds = inventoryList.map(item => item.id);\n\n    useEffect(() => {\n        if (checkboxState) {\n            const props = { isDisabled: true };\n            setSelectProps(props);\n            setJustificationProps(props);\n        }\n    }, []);\n\n    const handleSave = () => {\n        const cveIds = cveList.map(item => item.id);\n        const setStatusParams = !checkboxState\n            ? {\n                status_id: parseInt(statusId),\n                cve: cveIds,\n                status_text: justification,\n                inventory_id: inventoryIds\n            }\n            : { cve: cveIds, inventory_id: inventoryIds };\n        return setSystemCveStatus(setStatusParams).then(updateRef);\n    };\n\n    function getDefaultStatus() {\n        // system has different status\n        if (inventoryList && inventoryList.length > 0 && inventoryList[0].status_id) {\n            return getSystemsStatus();\n        }\n\n        if (cveList && cveList.length > 0) {\n            return getCvestatus();\n        }\n\n    }\n\n    function getDefaultLabel() {\n        if (inventoryList && inventoryList.length === 1 && inventoryList[0].justification) {\n            return getSystemsJustification();\n        }\n\n        if (cveList && cveList.length === 1) {\n            return getCveJustification();\n        }\n    }\n\n    function getDefaultCheckboxState() {\n        // system has the same status as cve\n        if (inventoryList && inventoryList.length === 1 && inventoryList[0].status_id) {\n            let [inventory] = inventoryList;\n            return cveList.some(cve => (cve.status_id === inventory.status_id));\n        }\n\n        if (cveList && cveList.length === 1) {\n            return true;\n        }\n\n        return false;\n    }\n\n    function getSystemsStatus() {\n        return (inventoryList && inventoryList[0].status_id.toString()) || '0';\n    }\n\n    function getSystemsJustification() {\n        return (inventoryList && inventoryList.length === 1 && inventoryList[0].justification) || '';\n    }\n\n    function getCvestatus() {\n        return (cveList && cveList[0].status_id.toString()) || '0';\n    }\n\n    function getCveJustification() {\n        return (cveList && cveList.length === 1 && cveList[0].justification) || '';\n    }\n\n    function handleCheckboxChange(checked) {\n        const props = { isDisabled: checked };\n        setCheckboxState(checked);\n        setSelectProps(props);\n        setStatusId(getCvestatus());\n        setJustification(getCveJustification());\n        setJustificationProps(props);\n    }\n\n    const successNotification = {\n        variant: 'success',\n        title: 'CVE status updated'\n    };\n\n    let modalTitle = 'Set status for this CVE and system pair';\n    if (inventoryIds.length > 1 || cves.length > 1) {\n        modalTitle = 'Set status for these CVE and system pairs';\n    }\n\n    return (\n        <BaseModal items={cveList} onSave={handleSave} onSuccessNotification={successNotification} title={modalTitle}>\n            <Stack gutter={'md'}>\n                <StackItem>\n                    <Form key=\"key\">\n                        <FormGroup fieldId={'overall'}>\n                            <Checkbox\n                                label=\"Use overall CVE status\"\n                                id=\"alt-form-checkbox-1\"\n                                name=\"alt-form-checkbox-1\"\n                                isChecked={checkboxState}\n                                onChange={handleCheckboxChange}\n                            />\n                        </FormGroup>\n                        {StatusSelect}\n                        {JustificationInput}\n                    </Form>\n                </StackItem>\n            </Stack>\n        </BaseModal>\n    );\n};\n\nCvePairStatusModal.propTypes = {\n    cves: propTypes.array,\n    updateRef: propTypes.func,\n    inventories: propTypes.array\n};\n\nexport default CvePairStatusModal;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEPageDetailsDescription.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEPageDetailsDescription.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEPageDetailsDescription.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js!@redhat-cloud-services/frontend-components-notifications/index.css\"), \"\");\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js!@redhat-cloud-services/frontend-components/index.css\"), \"\");\n\n// module\nexports.push([module.id, \":root {\\n  --ins-color--orange: #ec7a08; }\\n\\nbutton:focus {\\n  outline: none; }\\n\\n.ins-active-app-vulnerabilities .cvetable-toolbar,\\n.page__Vulnerabilities .cvetable-toolbar {\\n  justify-content: space-between; }\\n  .ins-active-app-vulnerabilities .cvetable-toolbar > div,\\n  .page__Vulnerabilities .cvetable-toolbar > div {\\n    align-self: flex-end; }\\n\\n.ins-active-app-vulnerabilities .space-between-toolbar-items,\\n.page__Vulnerabilities .space-between-toolbar-items {\\n  justify-content: space-between;\\n  flex-wrap: nowrap; }\\n  .ins-active-app-vulnerabilities .space-between-toolbar-items > div,\\n  .page__Vulnerabilities .space-between-toolbar-items > div {\\n    flex-wrap: nowrap; }\\n\\n.ins-active-app-vulnerabilities .vulnerability-toolbar-spacing,\\n.page__Vulnerabilities .vulnerability-toolbar-spacing {\\n  justify-content: flex-start; }\\n  .ins-active-app-vulnerabilities .vulnerability-toolbar-spacing > div:not(:last-child),\\n  .page__Vulnerabilities .vulnerability-toolbar-spacing > div:not(:last-child) {\\n    margin-right: var(--pf-global--spacer--sm); }\\n\\n@media screen and (max-width: 1100px) {\\n  .ins-active-app-vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-options-menu,\\n  .ins-active-app-vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-pagination__nav,\\n  .page__Vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-options-menu,\\n  .page__Vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-pagination__nav {\\n    display: none;\\n    visibility: hidden; }\\n  .ins-active-app-vulnerabilities .pf-c-pagination__total-items,\\n  .page__Vulnerabilities .pf-c-pagination__total-items {\\n    display: flex;\\n    visibility: visible; } }\\n\\n.ins-active-app-vulnerabilities .pf-c-pagination.pf-m-footer.ins-c-pagination-next,\\n.page__Vulnerabilities .pf-c-pagination.pf-m-footer.ins-c-pagination-next {\\n  margin-left: auto; }\\n\\n.ins-active-app-vulnerabilities #download-report,\\n.page__Vulnerabilities #download-report {\\n  cursor: pointer; }\\n\\n.ins-active-app-vulnerabilities .number-of-results,\\n.page__Vulnerabilities .number-of-results {\\n  display: inline-block;\\n  min-width: 55px;\\n  text-align: right;\\n  margin-right: 5px; }\\n\\n.ins-active-app-vulnerabilities .table-header-icon,\\n.page__Vulnerabilities .table-header-icon {\\n  margin-right: 5px;\\n  margin-right: 0.3125rem; }\\n\\n.ins-active-app-vulnerabilities .status-dropdown-column > svg,\\n.page__Vulnerabilities .status-dropdown-column > svg {\\n  color: var(--pf-global--primary-color--100); }\\n\\n.ins-active-app-vulnerabilities .status-dropdown-column:hover,\\n.page__Vulnerabilities .status-dropdown-column:hover {\\n  cursor: pointer; }\\n  .ins-active-app-vulnerabilities .status-dropdown-column:hover > svg,\\n  .page__Vulnerabilities .status-dropdown-column:hover > svg {\\n    visibility: visible; }\\n\\n.ins-active-app-vulnerabilities .status-dropdown-column > svg,\\n.page__Vulnerabilities .status-dropdown-column > svg {\\n  visibility: hidden; }\\n\\n.ins-active-app-vulnerabilities tbody > tr > td.pf-c-table__check,\\n.page__Vulnerabilities tbody > tr > td.pf-c-table__check {\\n  vertical-align: middle;\\n  padding-top: 0px !important;\\n  padding-bottom: 0px !important; }\\n\\n.ins-active-app-vulnerabilities thead > tr > td.pf-c-table__check,\\n.page__Vulnerabilities thead > tr > td.pf-c-table__check {\\n  visibility: hidden; }\\n\\n.ins-active-app-vulnerabilities p.pf-c-empty-state__body ul,\\n.page__Vulnerabilities p.pf-c-empty-state__body ul {\\n  margin-top: 0px;\\n  margin-bottom: var(--pf-global--spacer--sm); }\\n  .ins-active-app-vulnerabilities p.pf-c-empty-state__body ul li,\\n  .page__Vulnerabilities p.pf-c-empty-state__body ul li {\\n    margin-top: 0px; }\\n\\n@media (max-width: 1500px) and (min-width: 992px) {\\n  .ins-active-app-vulnerabilities .hide-description,\\n  .page__Vulnerabilities .hide-description {\\n    --pf-hidden-visible--Display: var(\\n                --pf-hidden-visible--hidden--Display\\n            );\\n    --pf-hidden-visible--Visibility: var(\\n                --pf-hidden-visible--hidden--Visibility\\n            ); } }\\n\\n@media (min-width: 1400px) {\\n  .ins-active-app-vulnerabilities .remediation-btn-sml,\\n  .page__Vulnerabilities .remediation-btn-sml {\\n    display: none;\\n    visibility: hidden; } }\\n\\n@media (max-width: 1400px) {\\n  .ins-active-app-vulnerabilities .remediation-btn-lg,\\n  .page__Vulnerabilities .remediation-btn-lg {\\n    display: none;\\n    visibility: none; } }\\n\\n.ins-active-app-vulnerabilities .col-width-10,\\n.page__Vulnerabilities .col-width-10 {\\n  width: 10%; }\\n\\n.ins-active-app-vulnerabilities .col-width-15,\\n.page__Vulnerabilities .col-width-15 {\\n  width: 15%; }\\n\\n.ins-active-app-vulnerabilities .col-width-description,\\n.page__Vulnerabilities .col-width-description {\\n  width: 35%; }\\n\\n.ins-active-app-vulnerabilities .no-wrap,\\n.page__Vulnerabilities .no-wrap {\\n  white-space: nowrap; }\\n\\n.ins-active-app-vulnerabilities .pf-c-table__expandable-row-content,\\n.page__Vulnerabilities .pf-c-table__expandable-row-content {\\n  white-space: normal; }\\n\\n.ins-active-app-vulnerabilities tr.pf-m-expanded .pf-c-table__action,\\n.page__Vulnerabilities tr.pf-m-expanded .pf-c-table__action {\\n  display: none; }\\n\\n.ins-active-app-vulnerabilities .pf-c-table__check,\\n.page__Vulnerabilities .pf-c-table__check {\\n  vertical-align: unset !important; }\\n\\n.page__Vulnerabilities {\\n  overflow-x: auto !important; }\\n  .page__Vulnerabilities .pf-c-page__main {\\n    overflow-x: auto; }\\n\\nimg.pf-c-avatar {\\n  height: var(--pf-global--FontSize--4xl); }\\n\\n.cvepage-st-business-risk-value {\\n  border-bottom: black 2px dotted; }\\n\\n.splitter {\\n  margin-bottom: var(--pf-global--spacer--sm) !important;\\n  margin-top: var(--pf-global--spacer--sm) !important; }\\n\\n.status-breakdown-table tr th {\\n  font-weight: normal;\\n  padding-left: 0px;\\n  padding-right: var(--pf-global--spacer--md);\\n  padding-bottom: var(--pf-global--spacer--sm); }\\n  .status-breakdown-table tr th:last-child {\\n    text-align: right; }\\n\\n.status-breakdown-table tr td {\\n  padding-left: 0px;\\n  padding-right: var(--pf-global--spacer--md);\\n  white-space: nowrap;\\n  padding-top: var(--pf-global--spacer--sm);\\n  padding-bottom: var(--pf-global--spacer--sm); }\\n  .status-breakdown-table tr td:last-child {\\n    text-align: right; }\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEInfoBox.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEInfoBox.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEInfoBox.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js!@redhat-cloud-services/frontend-components-notifications/index.css\"), \"\");\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js!@redhat-cloud-services/frontend-components/index.css\"), \"\");\n\n// module\nexports.push([module.id, \":root {\\n  --ins-color--orange: #ec7a08; }\\n\\nbutton:focus {\\n  outline: none; }\\n\\n.ins-active-app-vulnerabilities .cvetable-toolbar,\\n.page__Vulnerabilities .cvetable-toolbar {\\n  justify-content: space-between; }\\n  .ins-active-app-vulnerabilities .cvetable-toolbar > div,\\n  .page__Vulnerabilities .cvetable-toolbar > div {\\n    align-self: flex-end; }\\n\\n.ins-active-app-vulnerabilities .space-between-toolbar-items,\\n.page__Vulnerabilities .space-between-toolbar-items {\\n  justify-content: space-between;\\n  flex-wrap: nowrap; }\\n  .ins-active-app-vulnerabilities .space-between-toolbar-items > div,\\n  .page__Vulnerabilities .space-between-toolbar-items > div {\\n    flex-wrap: nowrap; }\\n\\n.ins-active-app-vulnerabilities .vulnerability-toolbar-spacing,\\n.page__Vulnerabilities .vulnerability-toolbar-spacing {\\n  justify-content: flex-start; }\\n  .ins-active-app-vulnerabilities .vulnerability-toolbar-spacing > div:not(:last-child),\\n  .page__Vulnerabilities .vulnerability-toolbar-spacing > div:not(:last-child) {\\n    margin-right: var(--pf-global--spacer--sm); }\\n\\n@media screen and (max-width: 1100px) {\\n  .ins-active-app-vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-options-menu,\\n  .ins-active-app-vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-pagination__nav,\\n  .page__Vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-options-menu,\\n  .page__Vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-pagination__nav {\\n    display: none;\\n    visibility: hidden; }\\n  .ins-active-app-vulnerabilities .pf-c-pagination__total-items,\\n  .page__Vulnerabilities .pf-c-pagination__total-items {\\n    display: flex;\\n    visibility: visible; } }\\n\\n.ins-active-app-vulnerabilities .pf-c-pagination.pf-m-footer.ins-c-pagination-next,\\n.page__Vulnerabilities .pf-c-pagination.pf-m-footer.ins-c-pagination-next {\\n  margin-left: auto; }\\n\\n.ins-active-app-vulnerabilities #download-report,\\n.page__Vulnerabilities #download-report {\\n  cursor: pointer; }\\n\\n.ins-active-app-vulnerabilities .number-of-results,\\n.page__Vulnerabilities .number-of-results {\\n  display: inline-block;\\n  min-width: 55px;\\n  text-align: right;\\n  margin-right: 5px; }\\n\\n.ins-active-app-vulnerabilities .table-header-icon,\\n.page__Vulnerabilities .table-header-icon {\\n  margin-right: 5px;\\n  margin-right: 0.3125rem; }\\n\\n.ins-active-app-vulnerabilities .status-dropdown-column > svg,\\n.page__Vulnerabilities .status-dropdown-column > svg {\\n  color: var(--pf-global--primary-color--100); }\\n\\n.ins-active-app-vulnerabilities .status-dropdown-column:hover,\\n.page__Vulnerabilities .status-dropdown-column:hover {\\n  cursor: pointer; }\\n  .ins-active-app-vulnerabilities .status-dropdown-column:hover > svg,\\n  .page__Vulnerabilities .status-dropdown-column:hover > svg {\\n    visibility: visible; }\\n\\n.ins-active-app-vulnerabilities .status-dropdown-column > svg,\\n.page__Vulnerabilities .status-dropdown-column > svg {\\n  visibility: hidden; }\\n\\n.ins-active-app-vulnerabilities tbody > tr > td.pf-c-table__check,\\n.page__Vulnerabilities tbody > tr > td.pf-c-table__check {\\n  vertical-align: middle;\\n  padding-top: 0px !important;\\n  padding-bottom: 0px !important; }\\n\\n.ins-active-app-vulnerabilities thead > tr > td.pf-c-table__check,\\n.page__Vulnerabilities thead > tr > td.pf-c-table__check {\\n  visibility: hidden; }\\n\\n.ins-active-app-vulnerabilities p.pf-c-empty-state__body ul,\\n.page__Vulnerabilities p.pf-c-empty-state__body ul {\\n  margin-top: 0px;\\n  margin-bottom: var(--pf-global--spacer--sm); }\\n  .ins-active-app-vulnerabilities p.pf-c-empty-state__body ul li,\\n  .page__Vulnerabilities p.pf-c-empty-state__body ul li {\\n    margin-top: 0px; }\\n\\n@media (max-width: 1500px) and (min-width: 992px) {\\n  .ins-active-app-vulnerabilities .hide-description,\\n  .page__Vulnerabilities .hide-description {\\n    --pf-hidden-visible--Display: var(\\n                --pf-hidden-visible--hidden--Display\\n            );\\n    --pf-hidden-visible--Visibility: var(\\n                --pf-hidden-visible--hidden--Visibility\\n            ); } }\\n\\n@media (min-width: 1400px) {\\n  .ins-active-app-vulnerabilities .remediation-btn-sml,\\n  .page__Vulnerabilities .remediation-btn-sml {\\n    display: none;\\n    visibility: hidden; } }\\n\\n@media (max-width: 1400px) {\\n  .ins-active-app-vulnerabilities .remediation-btn-lg,\\n  .page__Vulnerabilities .remediation-btn-lg {\\n    display: none;\\n    visibility: none; } }\\n\\n.ins-active-app-vulnerabilities .col-width-10,\\n.page__Vulnerabilities .col-width-10 {\\n  width: 10%; }\\n\\n.ins-active-app-vulnerabilities .col-width-15,\\n.page__Vulnerabilities .col-width-15 {\\n  width: 15%; }\\n\\n.ins-active-app-vulnerabilities .col-width-description,\\n.page__Vulnerabilities .col-width-description {\\n  width: 35%; }\\n\\n.ins-active-app-vulnerabilities .no-wrap,\\n.page__Vulnerabilities .no-wrap {\\n  white-space: nowrap; }\\n\\n.ins-active-app-vulnerabilities .pf-c-table__expandable-row-content,\\n.page__Vulnerabilities .pf-c-table__expandable-row-content {\\n  white-space: normal; }\\n\\n.ins-active-app-vulnerabilities tr.pf-m-expanded .pf-c-table__action,\\n.page__Vulnerabilities tr.pf-m-expanded .pf-c-table__action {\\n  display: none; }\\n\\n.ins-active-app-vulnerabilities .pf-c-table__check,\\n.page__Vulnerabilities .pf-c-table__check {\\n  vertical-align: unset !important; }\\n\\n.page__Vulnerabilities {\\n  overflow-x: auto !important; }\\n  .page__Vulnerabilities .pf-c-page__main {\\n    overflow-x: auto; }\\n\\nimg.pf-c-avatar {\\n  height: var(--pf-global--FontSize--4xl); }\\n\\n.infobox-square {\\n  background-color: var(--pf-global--BackgroundColor--150);\\n  border: var(--pf-global--BorderColor--300) var(--pf-global--BorderWidth--sm) solid;\\n  height: 65px; }\\n  .infobox-square > .pf-l-split__item:first-child {\\n    width: 65px;\\n    color: black;\\n    background-color: white; }\\n    .infobox-square > .pf-l-split__item:first-child:not(.severity-unknown) > div.pf-l-bullseye svg {\\n      color: white; }\\n  .infobox-square h3,\\n  .infobox-square h6 {\\n    margin: 0; }\\n  .infobox-square > .pf-l-split__item:nth-child(2) {\\n    display: flex;\\n    justify-content: flex-start;\\n    align-items: center; }\\n\\n.severity-low {\\n  background-color: var(--pf-global--Color--200) !important; }\\n\\n.severity-critical {\\n  background-color: var(--pf-global--danger-color--100) !important; }\\n\\n.severity-moderate {\\n  background-color: var(--pf-global--warning-color--100) !important; }\\n\\n.severity-color-important {\\n  background-color: #ec7a08 !important; }\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CvssVector.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CvssVector.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CvssVector.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".severity-info-box > div > div:nth-child(3) h6 .ins-c-skeleton {\\n  max-height: 30px !important;\\n  max-width: 30% !important; }\\n\\n.severity-info-box > div > div:nth-child(3) div > .ins-c-skeleton {\\n  max-height: 25px !important;\\n  max-width: 80% !important; }\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./SystemsExposedTable.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./SystemsExposedTable.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./SystemsExposedTable.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".affected-systems-toolbar {\\n  justify-content: flex-start; }\\n  .affected-systems-toolbar > div {\\n    margin-right: var(--pf-global--spacer--sm); }\\n\\n.affected-systems-filter-chips {\\n  order: 5;\\n  flex-basis: 100%; }\\n\", \"\"]);\n\n// exports\n","import { Popover, Stack, StackItem } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport Label from '../Snippets/Label';\nimport './CVEPageDetailsDescription.scss';\n\nconst SnippetWithHeaderAndPopover = props => {\n    const { title, value, content } = props;\n\n    return (\n        <Popover bodyContent={content} headerContent={''} aria-label={'Business risk popover'} position=\"right\">\n            <Stack style={{ display: 'inline-block', cursor: 'pointer' }}>\n                <StackItem>\n                    <Label>{title}</Label>\n                </StackItem>\n                <StackItem>{value}</StackItem>\n            </Stack>\n        </Popover>\n    );\n};\n\nSnippetWithHeaderAndPopover.propTypes = {\n    title: propTypes.any,\n    value: propTypes.any,\n    content: propTypes.any\n};\nexport default SnippetWithHeaderAndPopover;\n","import { Stack, StackItem, Text, TextContent, TextVariants, Flex, FlexItem } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { PatternFlyThemeProvider, StyledBox, StyledText, StyledConstants } from '@patternfly/react-styled-system';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { STATUS_OPTIONS } from '../../../Helpers/constants';\nimport './CVEPageDetailsDescription.scss';\nimport SnippetWithHeaderAndPopover from './SnippetWithHeaderAndTooltip';\n\nconst CVEPageDetailsDescription = ({ cveAttributes }) => {\n    const {\n        public_date: publishDate,\n        description,\n        rh_link: link,\n        business_risk: businessRisk,\n        business_risk_justification: businessRiskJustification,\n        status,\n        status_justification: statusJustification,\n        systems_status_detail: systemsStatusDetail,\n        systems_status_divergent: systemsStatusDivergent\n    } = cveAttributes;\n\n    const detailRows =\n        systemsStatusDetail &&\n        Object.keys(systemsStatusDetail).map(item => [\n            STATUS_OPTIONS.find(status => status.value === item.toString()).label,\n            systemsStatusDetail[item].toString()\n        ]);\n\n    const brPopoverContent = (\n        <TextContent>\n            <Stack>\n                <StackItem>\n                    <StyledText\n                        fontWeight={StyledConstants.fontWeights.bold}\n                        fontSize={StyledConstants.fontSizes.sm}\n                        lineHeight={StyledConstants.lineHeights.sm}\n                    >\n                        Justification note\n                    </StyledText>\n                </StackItem>\n                <StackItem>{businessRiskJustification || '--'}</StackItem>\n            </Stack>\n        </TextContent>\n    );\n\n    const statusPopoverContent = (\n        <Stack>\n            <StackItem>\n                <StyledText\n                    fontWeight={StyledConstants.fontWeights.bold}\n                    fontSize={StyledConstants.fontSizes.sm}\n                    lineHeight={StyledConstants.lineHeights.sm}\n                >\n                    CVE Status\n                </StyledText>\n                {status || '--'}\n\n                <StyledText\n                    fontWeight={StyledConstants.fontWeights.bold}\n                    fontSize={StyledConstants.fontSizes.sm}\n                    lineHeight={StyledConstants.lineHeights.sm}\n                    style={{ marginTop: 'var(--pf-global--spacer--sm)' }}\n                >\n                    Justification note\n                </StyledText>\n                {statusJustification || '--'}\n            </StackItem>\n            {systemsStatusDivergent > 0 && (\n                <StackItem>\n                    <TextContent>\n                        <hr className={'splitter'} />\n                    </TextContent>\n                    <StyledText fontWeight={StyledConstants.fontWeights.semi_bold} lineHeight={StyledConstants.lineHeights.sm}>\n                        Systems with this CVE\n                    </StyledText>\n                    <Table\n                        aria-label={'Status details'}\n                        borders={false}\n                        gridBreakPoint={null}\n                        cells={['Status', 'Count']}\n                        rows={detailRows}\n                        className={'status-breakdown-table'}\n                    >\n                        <TableHeader />\n                        <TableBody />\n                    </Table>\n                </StackItem>\n            )}\n        </Stack>\n    );\n    return (\n        <PatternFlyThemeProvider>\n            <Stack gutter=\"sm\">\n                <StackItem />\n                <StackItem>\n                    <Flex>\n                        <FlexItem breakpointMods={[{ modifier: 'spacer-xl' }]}>\n                            <SnippetWithHeaderAndPopover\n                                title={'Business risk'}\n                                value={businessRisk}\n                                content={brPopoverContent}\n                            />\n                        </FlexItem>\n                        <FlexItem breakpointMods={[{ modifier: 'spacer-xl' }]}>\n                            <SnippetWithHeaderAndPopover\n                                title={'Status'}\n                                content={statusPopoverContent}\n                                value={\n                                    <span>\n                                        {systemsStatusDivergent > 0 && (\n                                            <ExclamationTriangleIcon color={'var(--pf-global--warning-color--100)'} />\n                                        )}{' '}\n                                        {status}\n                                    </span>\n                                }\n                            />\n                        </FlexItem>\n                    </Flex>\n                </StackItem>\n                <StackItem>\n                    <TextContent>\n                        <Text component={TextVariants.p}>{description}</Text>\n                    </TextContent>\n                </StackItem>\n                <StackItem>\n                    <StyledBox style={{ marginBottom: 'var(--pf-global--spacer--xs)' }}>Publish date: {publishDate}</StyledBox>\n                    <StyledBox>{link}</StyledBox>\n                </StackItem>\n            </Stack>\n        </PatternFlyThemeProvider>\n    );\n};\n\nCVEPageDetailsDescription.propTypes = {\n    cveAttributes: propTypes.any\n};\n\nexport default CVEPageDetailsDescription;\n","import { Skeleton, SkeletonSize, Spinner } from '@redhat-cloud-services/frontend-components';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport ContentLoader, { BulletList, List } from 'react-content-loader';\n\nconst WithLoader = props => {\n    if (props === undefined || props.loading !== false) {\n        switch (props.variant) {\n            case 'spinner':\n                return <Spinner centered />;\n            case 'cvePageOverviewItem':\n                return <CVEPageOverviewItemLoader />;\n            case 'list':\n                return <List />;\n            case 'bulletList':\n                return <BulletList />;\n            case 'trendBox':\n                return <TrendBoxLoader />;\n            case 'currentVulnerabilitiesItem':\n                return <CurrentVulnerabilitiesItemLoader />;\n            default:\n                return <Skeleton size={SkeletonSize.lg} />;\n        }\n    }\n\n    return props.children;\n};\n\n// Loaders\nconst CVEPageOverviewItemLoader = () => {\n    return (\n        <ContentLoader height={61} width={120}>\n            <rect x=\"35\" y=\"0\" rx=\"0\" ry=\"0\" width=\"50\" height=\"35\" />\n            <rect x=\"0\" y=\"45\" rx=\"0\" ry=\"0\" width=\"120\" height=\"16\" />\n        </ContentLoader>\n    );\n};\n\nconst TrendBoxLoader = () => {\n    return (\n        <ContentLoader height={100} width={300}>\n            <rect x=\"388.58\" y=\"109.13\" rx=\"0\" ry=\"0\" width=\"0\" height=\"0\" />\n            <rect x=\"11.58\" y=\"16.13\" rx=\"0\" ry=\"0\" width=\"37\" height=\"62\" />\n            <rect x=\"52.58\" y=\"52.13\" rx=\"0\" ry=\"0\" width=\"17\" height=\"26\" />\n            <rect x=\"76.58\" y=\"52.13\" rx=\"0\" ry=\"0\" width=\"17\" height=\"26\" />\n            <rect x=\"4.58\" y=\"82.13\" rx=\"0\" ry=\"0\" width=\"154\" height=\"22\" />\n        </ContentLoader>\n    );\n};\n\nconst CurrentVulnerabilitiesItemLoader = () => {\n    return (\n        <ContentLoader height={50} width={200} speed={2} primaryColor=\"#f3f3f3\" secondaryColor=\"#ecebeb\">\n            <rect x=\"82.58\" y=\"15.13\" rx=\"0\" ry=\"0\" width=\"110.88\" height=\"21.42\" />\n            <circle cx=\"25\" cy=\"25\" r=\"25\" />\n        </ContentLoader>\n    );\n};\n\nWithLoader.propTypes = {\n    loading: propTypes.bool,\n    variant: propTypes.string\n};\n\nexport default WithLoader;\n","import { Bullseye, Split, SplitItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { CVEPageContext } from '../../SmartComponents/CVEPage/CVEPage';\nimport WithLoader from '../WithLoader/WithLoader';\nimport './CVEInfoBox.scss';\n\nconst CVEInfoBox = (props) => {\n    return (\n        <CVEPageContext.Consumer>\n            {context => (\n                <Split className=\"infobox-square\" gutter=\"md\">\n                    <WithLoader loading={context.isLoading}>\n                        <SplitItem className={props.titleColor}>\n                            <Bullseye>{props.titleContent}</Bullseye>\n                        </SplitItem>\n                        <SplitItem isFilled>\n                            <TextContent>\n                                <Text component={TextVariants.h6}>{props.descriptionTitle}</Text>\n                                <Text component={TextVariants.p}>{props.descriptionContent}</Text>\n                            </TextContent>\n                        </SplitItem>\n                    </WithLoader>\n                </Split>\n            )}\n        </CVEPageContext.Consumer>\n    );\n};\n\nCVEInfoBox.propTypes = {\n    titleContent: propTypes.any,\n    titleColor: propTypes.any,\n    descriptionContent: propTypes.any,\n    descriptionTitle: propTypes.any\n};\n\nexport default CVEInfoBox;\n","import { Popover, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { QuestionCircleIcon } from '@patternfly/react-icons';\nimport { Table, TableBody, TableHeader, TableVariant } from '@patternfly/react-table';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { CVEPageContext } from '../../SmartComponents/CVEPage/CVEPage';\nimport WithLoader from '../WithLoader/WithLoader';\nimport './CvssVector.scss';\n\nexport const V3names = {\n    AV: { name: 'Attack vector', values: { N: 'Network', A: 'Adjacent', L: 'Local', P: 'Physical' } },\n    AC: { name: 'Attack complexity', values: { L: 'Low', H: 'High' } },\n    PR: { name: 'Privileges required', values: { N: 'None', L: 'Low', H: 'High' } },\n    UI: { name: 'User interaction', values: { N: 'None', R: 'Required' } },\n    S: { name: 'Scope', values: { U: 'Unchanged', C: 'Changed' } },\n    C: { name: 'Confidentiality', values: { H: 'High', L: 'Low', N: 'None' } },\n    I: { name: 'Integrity', values: { H: 'High', L: 'Low', N: 'None' } },\n    A: { name: 'Availability', values: { H: 'High', L: 'Low', N: 'None' } },\n    CVSS: { name: 'cvssVersion', values: { '3.0': 3.0 } }\n};\n\nexport const V2names = {\n    AV: { name: 'Access vector', values: { N: 'Network', A: 'Adjacent Network', L: 'Local' } },\n    AC: { name: 'Access complexity', values: { L: 'Low', H: 'High', M: 'Medium' } },\n    Au: { name: 'Authentication', values: { M: 'Multiple', S: 'Single', N: 'None' } },\n    C: { name: 'Confidentiality impact', values: { C: 'Complete', P: 'Partial', N: 'None' } },\n    I: { name: 'Integrity impact', values: { C: 'Complete', P: 'Partial', N: 'None' } },\n    A: { name: 'Availability impact', values: { C: 'Complete', P: 'Partial', N: 'None' } }\n};\n\nexport const parseVector = (vector, namesMapping) => {\n    let res = {};\n    vector &&\n        vector.split('/').forEach(curr => {\n            let [key, val] = curr.split(':');\n            const name = namesMapping[key] && namesMapping[key].name;\n            const value = (namesMapping[key] && namesMapping[key].values[val]) || 'N/A';\n            if (name) {\n                res[name] = value;\n            }\n        });\n    return res;\n};\n\nconst CvssVector = props => {\n    const { cvss2_metrics: CVSS2Vector, cvss3_metrics: CVSS3Vector } = props;\n    const cvssVer = (CVSS3Vector && 'CVSS 3.0') || (CVSS2Vector && 'CVSS 2.0') || 'CVSS 3.0';\n    const cvssVector = CVSS3Vector || CVSS2Vector;\n    const namesMapping = (CVSS3Vector && V3names) || (CVSS2Vector && V2names);\n    const parsedVector = parseVector(cvssVector, namesMapping);\n    const notAvailable = 'N/A';\n    // eslint-disable-next-line no-unused-vars\n    const { cvssVersion, ...values } = parsedVector;\n\n    return (\n        <CVEPageContext.Consumer>\n            {context => (\n                <TextContent>\n                    <WithLoader loading={context.isLoading}>\n                        <Popover\n                            position=\"bottom\"\n                            maxWidth={'100%'}\n                            enableFlip\n                            headerContent={`${cvssVer} vector breakdown`}\n                            bodyContent={\n                                cvssVector ?\n                                    (\n                                        <Table\n                                            aria-label={'Metric breakdown'}\n                                            variant={TableVariant.compact}\n                                            borders={false}\n                                            gridBreakPoint={null}\n                                            cells={['Metric', 'Value']}\n                                            rows={Object.entries(values)}\n                                        >\n                                            <TableHeader />\n                                            <TableBody />\n                                        </Table>\n                                    ) : (notAvailable)\n                            }\n                        >\n                            <React.Fragment>\n                                <Text component={TextVariants.h6} style={{ display: 'inline-block' }}>\n                                    {cvssVer} vector{' '}\n                                    <a>\n                                        <QuestionCircleIcon />\n                                    </a>\n                                </Text>\n                                <br />\n                            </React.Fragment>\n                        </Popover>\n                    </WithLoader>\n\n                    <WithLoader loading={context.isLoading}>{cvssVector || notAvailable} </WithLoader>\n                </TextContent>\n            )}\n        </CVEPageContext.Consumer>\n    );\n};\n\nCvssVector.propTypes = {\n    cvss2_metrics: propTypes.string,\n    cvss3_metrics: propTypes.string\n};\n\nexport default CvssVector;\n","import { Popover, Stack, StackItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { parseCvssScore } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { getImpactDetails } from '../../../Helpers/MiscHelper';\nimport CVEInfoBox from '../CVEInfoBox/CVEInfoBox';\nimport CvssVector from '../CvssVector/CvssVector';\n\nconst learnMorePopover = cveDetails => {\n    return (\n        <Popover\n            position=\"bottom\"\n            enableFlip\n            headerContent={<div>{cveDetails.title + ' impact'}</div>}\n            bodyContent={\n                <TextContent>\n                    <Text component={TextVariants.p}>{cveDetails.text}</Text>\n                </TextContent>\n            }\n            footerContent={\n                <a href=\"https://access.redhat.com/security/updates/classification/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    Learn more about security ratings <ExternalLinkAltIcon />\n                </a>\n            }\n        >\n            <a>Learn more</a>\n        </Popover>\n    );\n};\n\nconst CVEPageDetailsSeverity = props => {\n    const cveDetails = getImpactDetails(props.impact);\n    const cvssVersion = (props.cvss3_score && 'CVSS 3.0') || (props.cvss2_score && 'CVSS 2.0') || 'CVSS 3.0';\n    return (\n        <React.Fragment>\n            <Stack gutter=\"sm\">\n                <StackItem>\n                    <CVEInfoBox\n                        titleColor={cveDetails.color}\n                        titleContent={cveDetails.titleContent}\n                        descriptionTitle={cveDetails.title + ' impact'}\n                        descriptionContent={learnMorePopover(cveDetails)}\n                    />\n                </StackItem>\n                <StackItem>\n                    <CVEInfoBox\n                        titleContent={\n                            <TextContent>\n                                <Text component={TextVariants.h3}>{parseCvssScore(props.cvss2_score, props.cvss3_score)}</Text>\n                            </TextContent>\n                        }\n                        descriptionTitle={cvssVersion + ' base score'}\n                    />\n                </StackItem>\n\n                <StackItem>\n                    <CvssVector cvss2_metrics={props.cvss2_metrics} cvss3_metrics={props.cvss3_metrics} />\n                </StackItem>\n            </Stack>\n        </React.Fragment>\n    );\n};\n\nCVEPageDetailsSeverity.propTypes = {\n    impact: propTypes.string,\n    cvss2_score: propTypes.any,\n    cvss3_score: propTypes.any,\n    cvss2_metrics: propTypes.any,\n    cvss3_metrics: propTypes.any\n};\n\nCVEPageDetailsSeverity.defaultProps = {\n    impact: 'Unknown',\n    cvss2_score: undefined,\n    cvss3_score: undefined,\n    cvss2_metrics: undefined,\n    cvss3_metrics: undefined\n};\n\nexport default CVEPageDetailsSeverity;\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { CVEPageContext } from '../../SmartComponents/CVEPage/CVEPage';\nimport CVEPageDetailsDescription from '../CVEPageDetailsDescription/CVEPageDetailsDescription';\nimport CVEPageDetailsSeverity from '../CVEPageDetailsSeverity/CVEPageDetailsSeverity';\nimport WithLoader from '../WithLoader/WithLoader';\n\nconst CVEPageDetails = props => {\n    return (\n        <CVEPageContext.Consumer>\n            {context => (\n                <Grid gutter=\"sm\">\n                    <GridItem md={8} sm={12}>\n                        <WithLoader loading={context.isLoading} variant=\"spinner\">\n                            <CVEPageDetailsDescription cveAttributes={props.data.data} />\n                        </WithLoader>\n                    </GridItem>\n\n                    <GridItem md={4} sm={12} className=\"severity-info-box\">\n                        <CVEPageDetailsSeverity\n                            impact={props.data.data.impact}\n                            cvss2_score={props.data.data.cvss2_score}\n                            cvss3_score={props.data.data.cvss3_score}\n                            cvss2_metrics={props.data.data.cvss2_metrics}\n                            cvss3_metrics={props.data.data.cvss3_metrics}\n                        />\n                    </GridItem>\n                </Grid>\n            )}\n        </CVEPageContext.Consumer>\n    );\n};\n\nCVEPageDetails.propTypes = {\n    data: propTypes.object\n};\n\nexport default CVEPageDetails;\n","import * as reactCore from '@patternfly/react-core';\nimport {\n    Text,\n    TextContent,\n    TextVariants,\n    ToolbarGroup,\n    ToolbarItem\n} from '@patternfly/react-core';\nimport * as reactIcons from '@patternfly/react-icons';\nimport * as pfReactTable from '@patternfly/react-table';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport RemediationButton from '@redhat-cloud-services/frontend-components-remediations/RemediationButton';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport debounce from 'lodash/debounce';\nimport propTypes from 'prop-types';\nimport qs from 'query-string';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as reactRouterDom from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport { filtersStatus, filterSystemName } from '../../../Helpers/constants';\nimport { dataShape } from '../../../Helpers/MiscHelper';\nimport { systemExposedTableRowActions } from '../../../Helpers/CVEHelper';\nimport {\n    fetchAffectedSystemsByCVE,\n    fetchCveDetails,\n    handleCveDetailsError,\n    selectEntities\n} from '../../../Store/Actions/Actions';\nimport { inventoryEntitiesReducer } from '../../../Store/Reducers/InventoryEntitiesReducer';\nimport { sExposedSystemsTable } from '../../../Store/Selectors/CVESelectors';\nimport ReducerRegistry, { middlewareListener } from '../../../Utilities/ReducerRegistry';\nimport FilterChips from '../../PresentationalComponents/Filters/FilterChips';\nimport Filters from '../../PresentationalComponents/Filters/Filters';\nimport SearchFilter from '../../PresentationalComponents/Filters/SearchFilter';\nimport './SystemsExposedTable.scss';\nimport CvePairStatusModal from '../Modals/CvePairStatusModal';\nimport BaseKebab from '../../PresentationalComponents/DownloadReportKebab/BaseKebab';\nimport {\n    kebabItemDownloadCSV,\n    kebabItemDownloadJSON,\n    kebabItemEditStatus\n} from '../../PresentationalComponents/DownloadReportKebab/KebabItems';\nimport SelectAllCheckbox from '../../PresentationalComponents/SelectAllCheckbox';\n/*eslint camelcase: 0*/\n\nclass SystemsExposedTable extends Component {\n    static propTypes = {\n        cve: propTypes.string,\n        cveStatusDetails: propTypes.object,\n        fetchData: propTypes.func,\n        fetchCveDetails: propTypes.func,\n        affectedSystems: dataShape,\n        history: propTypes.object,\n        handleCveDetailsError: propTypes.func,\n        createNotification: propTypes.func,\n        selectRows: propTypes.func,\n        selectMultiple: propTypes.func\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            InventoryCmp: () => <div>Loading...</div>,\n            removeListener: () => {},\n            StatusModal: () => null,\n            filter: undefined,\n            columns: [\n                {\n                    key: 'display_name',\n                    title: 'Name',\n                    composed: ['facts.os_release', 'display_name'],\n                    props: {\n                        width: 40\n                    }\n                },\n                {\n                    key: 'status',\n                    title: 'Status',\n                    props: {\n                        width: 30\n                    }\n                },\n                {\n                    key: 'updated',\n                    title: 'Last seen',\n                    isTime: true,\n                    props: {\n                        width: 30\n                    }\n                }\n            ],\n            selected: new Set(),\n            selectListener: middlewareListener.addNew({\n                on: 'SELECT_ENTITY',\n                callback: payload => this.onSelect(payload)\n            }),\n            selectAllListener: middlewareListener.addNew({\n                on: 'SELECT_ENTITIES',\n                callback: payload => this.onSelect(payload)\n            })\n        };\n    }\n\n    componentDidMount() {\n        this.fetchInventory();\n    }\n\n    onSelect = (payload) => {\n        let selected;\n        if (!payload.data || Array.isArray(payload.data)) {\n            selected = new Set(payload.data);\n        } else {\n            selected = this.state.selected;\n            payload.data.selected ? selected.add(payload.data.id) : selected.delete(payload.data.id);\n        }\n\n        this.setState({ selected }, this.props.selectMultiple);\n    };\n\n    getSelected = () => {\n        return this.state.selected;\n    };\n\n    dataProvider = () => {\n        return {\n            issues: [\n                {\n                    id: `vulnerabilities:${this.props.cve}`,\n                    description: this.props.cve\n                }\n            ],\n            systems: Array.from(this.getSelected())\n        };\n    };\n\n    // #TODO: can be better. Similar function exists in 2 other places.\n    createUrlParams = allParams => {\n        const params = { ...allParams };\n        const allowedParams = ['filter', 'page', 'page_size', 'status_id'];\n        Object.keys(allParams).forEach(\n            key =>\n                (params[key] === undefined || params[key] === '' || !allowedParams.includes(key) || params[key] === false) &&\n                delete params[key]\n        );\n        const queryString = qs.stringify(params);\n        this.props.history.push('?' + queryString);\n    };\n\n    dataReload = () => {\n        const { meta, data } = this.props.affectedSystems;\n        const lastPage = meta.page;\n        const { page } = this.state;\n        const reloadPage = page === lastPage && data.length === 1 ? 1 : meta.page;\n\n        this.setState(\n            {\n                ...this.state,\n                page: reloadPage,\n                page_size: meta.page_size,\n                filter: this.state.filter,\n                system_id: this.state.system_id\n            },\n            this.apply\n        );\n    };\n\n    apply = newFilter => {\n        this.setState({ ...this.state, ...newFilter }, () => {\n            this.sendRequest();\n        });\n    };\n\n    sendRequest = () => {\n        const { fetchData, cve, handleCveDetailsError } = this.props;\n\n        fetchData &&\n            fetchData(cve, this.params()).catch(() => {\n                handleCveDetailsError();\n            });\n\n        this.createUrlParams(this.state);\n    };\n\n    downloadReport = format => {\n        const { payload } =\n            // eslint-disable-next-line camelcase\n            fetchAffectedSystemsByCVE(this.props.cve, {\n                ...this.state,\n                data_format: format,\n                page: 1,\n                page_size: Number.MAX_SAFE_INTEGER\n            });\n        payload &&\n            payload.then(({ data: response }) => {\n                const data = format === 'json' ? JSON.stringify(response) : response;\n                return downloadFile(data, `systems_affected-${this.props.cve}-${new Date().toISOString()}`, format);\n            });\n    };\n\n    showStatusModal = (cves, inventories) => {\n        this.setState({\n            StatusModal: () => (\n                <CvePairStatusModal\n                    cves={cves}\n                    updateRef={() => {\n                        this.props.fetchData(this.props.cve, this.params());\n                        this.props.fetchCveDetails(this.props.cve);\n                    }}\n                    inventories={inventories}\n                />\n            )\n        });\n    };\n\n    async fetchInventory() {\n        const { inventoryConnector, mergeWithEntities, mergeWithDetail } = await insights.loadInventory({\n            react: React,\n            reactRouterDom,\n            reactCore,\n            reactIcons,\n            pfReactTable\n        });\n        ReducerRegistry.register({\n            ...mergeWithEntities(inventoryEntitiesReducer(this.state.columns, this.getSelected)),\n            ...mergeWithDetail()\n        });\n\n        this.setState({\n            InventoryCmp: inventoryConnector().InventoryTable\n        });\n    }\n\n    params = () => {\n        const { filter, page, page_size, status_id } = this.state;\n        return { filter, page, page_size, status_id };\n    };\n\n    handleFilterChange = debounce(value => {\n        this.setState({ ...this.state, filter: value }, this.apply);\n    }, 400);\n\n    handleRemediationCreated = result => {\n        this.props.createNotification(result.getNotification());\n        this.setState({ selected: new Set() });\n        this.props.fetchData(this.props.cve, this.params());\n    };\n\n    handleRefresh = ({ page, per_page: perPage }) => {\n        const { meta } = this.props.affectedSystems;\n        if (meta.page !== page || meta.page_size !== perPage) {\n            this.setState(\n                {\n                    ...this.state,\n                    page: meta.page_size !== perPage ? 1 : page,\n                    page_size: perPage,\n                    filter: this.state.filter\n                },\n                this.apply\n            );\n        }\n    };\n\n    render() {\n        const { StatusModal } = this.state;\n        const { InventoryCmp, filter } = this.state;\n        const { affectedSystems, cveStatusDetails } = this.props;\n        const { data, meta } = affectedSystems;\n        const { showStatusModal } = this;\n        const methods = { showStatusModal };\n        const selectedInventoryIds = Array.from(this.getSelected()).map(selected => ({ id: selected }));\n\n        const kebabOptions = [\n            kebabItemEditStatus(methods.showStatusModal, [cveStatusDetails], selectedInventoryIds, {\n                isDisabled: !selectedInventoryIds.length\n            }),\n            kebabItemDownloadJSON(this.downloadReport),\n            kebabItemDownloadCSV(this.downloadReport)\n        ];\n        return (\n            <React.Fragment>\n                <TextContent>\n                    <Text component={TextVariants.h2}>Affected systems</Text>\n                </TextContent>\n                <InventoryCmp\n                    key={'inventory'}\n                    hasCheckbox={data.length !== 0}\n                    showActions={data.length !== 0}\n                    actions={systemExposedTableRowActions(methods, cveStatusDetails)}\n                    page={meta.page}\n                    total={meta.total_items}\n                    perPage={meta.page_size}\n                    onRefresh={this.handleRefresh}\n                    items={data.map(item => ({\n                        id: item.attributes.inventory_id,\n                        ...item.attributes\n                    }))}\n                >\n                    <ToolbarGroup className={'affected-systems-toolbar'}>\n\n                        <SelectAllCheckbox\n                            selectedItems={this.state.selected}\n                            selectorHandler={this.props.selectRows}\n                            items={affectedSystems}\n                            fetchResource={ops =>  fetchAffectedSystemsByCVE(this.props.cve, { ...this.params, ...ops })}\n                        />\n                        <ToolbarItem>\n                            <SearchFilter\n                                placeholder=\"Find by name\"\n                                value={filter}\n                                apply={this.apply}\n                            />\n                        </ToolbarItem>\n                        <Filters\n                            filterCategories={[filtersStatus]}\n                            filterValues={this.params()}\n                            apply={this.apply}\n                        />\n                        <ToolbarItem>\n                            <RemediationButton\n                                dataProvider={this.dataProvider}\n                                isDisabled={this.state.selected.size === 0}\n                                onRemediationCreated={this.handleRemediationCreated}\n                            />\n                        </ToolbarItem>\n                        <ToolbarItem>\n                            <BaseKebab dropdownItems={kebabOptions} />\n                        </ToolbarItem>\n                    </ToolbarGroup>\n                    <TableToolbar className=\"pf-u-pl-0 affected-systems-filter-chips\">\n                        <ToolbarGroup>\n                            <ToolbarItem>\n                                <FilterChips\n                                    filterValues={this.params()}\n                                    filterCategories={[filterSystemName, filtersStatus]}\n                                    apply={this.apply}\n                                />\n                            </ToolbarItem>\n                        </ToolbarGroup>\n                    </TableToolbar>\n                    <StatusModal />\n                </InventoryCmp>\n            </React.Fragment>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        affectedSystems: sExposedSystemsTable(state, ownProps.cve)\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchData: (cve, options) => dispatch(fetchAffectedSystemsByCVE(cve, options)),\n        fetchCveDetails: cveName => dispatch(fetchCveDetails(cveName)),\n        handleCveDetailsError: () => dispatch(handleCveDetailsError, selectEntities()),\n        selectRows: (value, ids) => dispatch(selectEntities(value, ids)),\n        createNotification: content => dispatch(addNotification(content)),\n        selectMultiple: () => dispatch({ type: 'SELECT_MULTIPLE_ENTITIES' })\n\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(SystemsExposedTable)\n);\n","import { DropdownPosition, Page } from '@patternfly/react-core';\nimport { InvalidObject, Main } from '@redhat-cloud-services/frontend-components';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { fetchAffectedSystemsByCVE, fetchCveDetails, handleCveDetailsError, setHeader } from '../../../Store/Actions/Actions';\nimport { sCveDetailsPage } from '../../../Store/Selectors/CVESelectors';\nimport { paths } from '../../../Utilities/Routes';\nimport CVEPageDetails from '../../PresentationalComponents/CVEPageDetails/CVEPageDetails';\nimport BaseKebab from '../../PresentationalComponents/DownloadReportKebab/BaseKebab';\nimport { kebabItemEditBusinessRisk, kebabItemEditStatus } from '../../PresentationalComponents/DownloadReportKebab/KebabItems';\nimport BusinessRiskModal from '../Modals/BusinessRiskModal';\nimport CveStatusModal from '../Modals/CveStatusModal';\nimport SystemsExposedTable from '../SystemsExposedTable/SystemsExposedTable';\nimport VulnerabilityHeader from '../VulnerabilityHeader/VulnerabilityHeader';\n\nexport const CVEPageContext = React.createContext({ isLoading: true });\n\nclass CVEPage extends React.Component {\n    static propTypes = {\n        match: propTypes.object,\n        cveDetails: propTypes.object,\n        fetchCveDetails: propTypes.func,\n        setHeader: propTypes.func,\n        handleCveDetailsError: propTypes.func,\n        fetchAffectedSystems: propTypes.func\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = { cveName: this.props.match.params.cve, BusinessRiskModal: () => null, StatusModal: () => null };\n    }\n\n    componentDidMount() {\n        const { fetchCveDetails, handleCveDetailsError, setHeader } = this.props;\n\n        setHeader({\n            breadcrumbs: [\n                { title: paths.vulnerabilities.title, to: paths.vulnerabilities.to },\n                { title: this.state.cveName, isActive: true }\n            ]\n        });\n\n        fetchCveDetails(this.state.cveName).catch(() => {\n            handleCveDetailsError();\n        });\n    }\n\n    showBusinessRiskModal = cves => {\n        this.setState({\n            BusinessRiskModal: () => (\n                <BusinessRiskModal open cves={cves} updateRef={() => this.props.fetchCveDetails(this.state.cveName)} />\n            )\n        });\n    };\n\n    showStatusModal = cves => {\n        this.setState({\n            StatusModal: () => (\n                <CveStatusModal\n                    cves={cves}\n                    updateRef={() => {\n                        this.props.fetchCveDetails(this.state.cveName);\n                        this.props.fetchAffectedSystems(this.state.cveName);\n                    }}\n                />\n            )\n        });\n    };\n\n    render() {\n        const { showStatusModal } = this;\n        const { cveDetails, fetchAffectedSystems } = this.props;\n        const { error } = cveDetails;\n        const { cveName, BusinessRiskModal, StatusModal } = this.state;\n        const cveStatusDetails = {\n            id: cveName,\n            status_id: cveDetails.data.status_id,\n            justification: cveDetails.data.status_justification\n        };\n        const kebabItems = [\n            kebabItemEditBusinessRisk(this.showBusinessRiskModal, [\n                {\n                    business_risk_id: cveDetails.data.business_risk_id,\n                    id: cveName,\n                    justification: cveDetails.data.business_risk_justification\n                }\n            ]),\n            kebabItemEditStatus(this.showStatusModal, [cveStatusDetails])\n        ];\n\n        if (!error) {\n            return (\n                <Page>\n                    <CVEPageContext.Provider value={cveDetails && { isLoading: cveDetails.isLoading }}>\n                        <VulnerabilityHeader\n                            title={\n                                <span style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                    {cveName}\n                                    <BaseKebab dropdownItems={kebabItems} position={DropdownPosition.right}></BaseKebab>\n                                </span>\n                            }\n                            showTabs={false}\n                        >\n                            <CVEPageDetails data={cveDetails} />\n                            <StatusModal />\n                            <BusinessRiskModal />\n                        </VulnerabilityHeader>\n                        <Main>\n                            <SystemsExposedTable\n                                cve={cveName}\n                                cveStatusDetails={cveStatusDetails}\n                                fetchData={fetchAffectedSystems}\n                                methods={{ showStatusModal }}\n                            />\n                        </Main>\n                    </CVEPageContext.Provider>\n                </Page>\n            );\n        } else {\n            return (\n                <React.Fragment>\n                    <VulnerabilityHeader title={cveName} showTabs={false} />\n                    <InvalidObject />\n                </React.Fragment>\n            );\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        cveDetails: sCveDetailsPage(state)\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchCveDetails: cveName => dispatch(fetchCveDetails(cveName)),\n        setHeader: header => dispatch(setHeader(header)),\n        handleCveDetailsError: () => dispatch(handleCveDetailsError()),\n        fetchAffectedSystems: (cve, options) => dispatch(fetchAffectedSystemsByCVE(cve, options))\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(CVEPage)\n);\n"],"sourceRoot":""}