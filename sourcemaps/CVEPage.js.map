{"version":3,"sources":["webpack:///./node_modules/@patternfly/react-table/dist/esm/index.js","webpack:///./node_modules/@patternfly/react-table/dist/esm/components/Table/utils/index.js","webpack:///./src/Store/Selectors/CVESelectors.js","webpack:///./src/Components/SmartComponents/Modals/BusinessRiskModal.js","webpack:///./src/Components/SmartComponents/Modals/CveStatusModal.js","webpack:///./node_modules/reselect/lib/index.js","webpack:///./src/Store/Reducers/InventoryEntitiesReducer.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsDescription/CVEPageDetailsDescription.scss?4f52","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsDescription/CVEPageDetailsDescription.scss","webpack:///./src/Components/PresentationalComponents/CVEInfoBox/CVEInfoBox.scss?9c01","webpack:///./src/Components/PresentationalComponents/CVEInfoBox/CVEInfoBox.scss","webpack:///./src/Components/PresentationalComponents/CvssVector/CvssVector.scss?e372","webpack:///./src/Components/PresentationalComponents/CvssVector/CvssVector.scss","webpack:///./src/Components/SmartComponents/SystemsExposedTable/SystemsExposedTable.scss?46a3","webpack:///./src/Components/SmartComponents/SystemsExposedTable/SystemsExposedTable.scss","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsDescription/SnippetWithHeaderAndTooltip.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsDescription/CVEPageDetailsDescription.js","webpack:///./src/Components/PresentationalComponents/WithLoader/WithLoader.js","webpack:///./src/Components/PresentationalComponents/CVEInfoBox/CVEInfoBox.js","webpack:///./src/Components/PresentationalComponents/CvssVector/CvssVector.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsSeverity/CVEPageDetailsSeverity.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetails/CVEPageDetails.js","webpack:///./src/Components/SmartComponents/SystemsExposedTable/SystemsExposedTable.js","webpack:///./src/Components/SmartComponents/CVEPage/CVEPage.js"],"names":["sCveDetailsPage","createSelector","state","CVEStore","cveDetails","createCveDetailsPage","sExposedSystemsTable","cve","affectedSystemsByCVE","createExposedSystemsTable","sAllSystems","SystemsStore","BusinessRiskModal","cves","updateRef","useState","cveList","businessRiskId","setBusinessRiskId","label","setLabel","useEffect","length","business_risk_id","toString","getDefaultLabel","handleOnRadioChange","_","event","value","currentTarget","justification","successNotification","variant","title","items","onSave","setBusinessRisk","parseInt","map","item","id","business_risk_text","then","onSuccessNotification","gutter","fieldId","businessRiskOptions","isChecked","onChange","key","name","aria-label","type","propTypes","array","func","CveStatusModal","useStatusSelect","status_id","StatusSelect","statusId","useJustificationInput","JustificationInput","checkboxState","setCheckboxState","cveIds","setCveStatus","status_text","setSystemCveStatus","checked","size","color","isFilled","defaultEqualityCheck","a","b","areArgumentsShallowlyEqual","equalityCheck","prev","next","i","defaultMemoize","arguments","undefined","lastArgs","lastResult","apply","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelectorCreator","memoize","_len","memoizeOptions","_key","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","concat","selector","params","push","resetRecomputations","exports","__esModule","createStructuredSelector","selectors","selectorCreator","objectKeys","Object","keys","_len3","values","_key3","reduce","composition","index","init","columns","rows","entities","modifyInventory","getSelectedFunc","loaded","selected","filter","insights_id","has","inventoryEntitiesReducer","action","content","module","options","transform","locals","SnippetWithHeaderAndTooltip","props","tooltipText","brValue","className","Stack","StackItem","TextContent","Text","component","TextVariants","h4","style","marginBottom","Tooltip","position","SnippetWithHeaderAndPopover","string","any","CVEPageDetailsDescription","cveAttributes","publishDate","public_date","description","link","rh_link","businessRisk","business_risk","businessRiskJustification","business_risk_justification","status","statusJustification","status_justification","systemsStatusDetail","systems_status_detail","systemsStatusDivergent","systems_status_divergent","detailRows","STATUS_OPTIONS","find","Fragment","Grid","GridItem","span","Popover","headerContent","bodyContent","h6","h2","Table","TableVariant","compact","borders","gridBreakPoint","cells","p","WithLoader","loading","centered","SkeletonSize","lg","children","CVEPageOverviewItemLoader","height","width","x","y","rx","ry","TrendBoxLoader","CurrentVulnerabilitiesItemLoader","speed","primaryColor","secondaryColor","cx","cy","r","bool","CVEInfoBox","CVEPageContext","Consumer","context","Split","isLoading","SplitItem","titleColor","Bullseye","titleContent","descriptionTitle","descriptionContent","V3names","AV","N","A","L","P","AC","H","PR","UI","R","S","U","C","I","CVSS","V2names","M","Au","CvssVector","CVSS2Vector","cvss2_metrics","CVSS3Vector","cvss3_metrics","cvssVer","cvssVector","parsedVector","vector","namesMapping","res","split","forEach","curr","val","parseVector","cvssVersion","maxWidth","enableFlip","entries","learnMorePopover","text","footerContent","href","target","rel","CVEPageDetailsSeverity","getImpactDetails","impact","cvss3_score","cvss2_score","h3","parseCvssScore","defaultProps","CVEPageDetails","md","sm","data","object","SystemsExposedTable","onSelect","payload","add","setState","getSelected","dataProvider","issues","systems","from","createUrlParams","allParams","allowedParams","includes","queryString","qs","stringify","history","dataReload","affectedSystems","meta","lastPage","page","reloadPage","page_size","system_id","newFilter","sendRequest","fetchData","handleCveDetailsError","downloadReport","format","fetchAffectedSystemsByCVE","data_format","Number","MAX_SAFE_INTEGER","response","JSON","downloadFile","Date","toISOString","handleFilterChange","debounce","handleRemediationCreated","result","createNotification","getNotification","Set","handleKebabToggle","isKebabOpen","handleKebabSelect","handleRefresh","perPage","per_page","InventoryCmp","removeListener","composed","isTime","selectListener","middlewareListener","addNew","on","callback","this","fetchInventory","insights","loadInventory","react","React","reactRouterDom","reactCore","reactIcons","pfReactTable","inventoryConnector","mergeWithEntities","mergeWithDetail","ReducerRegistry","register","InventoryTable","hasCheckbox","total","total_items","onRefresh","attributes","inventory_id","ToolbarGroup","Filters","searchPlaceholder","filterCategories","filtersStatus","filterValues","ToolbarItem","isDisabled","onRemediationCreated","Dropdown","toggle","KebabToggle","onToggle","isOpen","isPlain","dropdownItems","DropdownItem","onClick","FilterChips","Component","dataShape","withRouter","connect","ownProps","dispatch","addNotification","createContext","CVEPage","showBusinessRiskModal","open","fetchCveDetails","cveName","showStatusModal","StatusModal","fetchAffectedSystems","match","setHeader","breadcrumbs","paths","vulnerabilities","to","isActive","error","kebabItems","kebabItemEditBusinessRisk","kebabItemEditStatus","VulnerabilityHeader","showTabs","Page","Provider","display","justifyContent","BaseKebab","DropdownPosition","right","header"],"mappings":"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","file":"js/CVEPage.js","sourcesContent":["export * from './components';\n//# sourceMappingURL=index.js.map","export * from './transformers';\nexport * from './headerUtils';\nexport * from './formatters';\nexport * from './utils';\n//# sourceMappingURL=index.js.map","import { createSelector } from 'reselect';\nimport { createCveDetailsPage, createExposedSystemsTable } from '../../Helpers/CVEHelper';\n\nconst cveListWithSystemsSelector = (state, cve) => ({ ...state.CVEStore.affectedSystemsByCVE, cve });\nconst systemsListAllSelector = state => state.SystemsStore;\nconst cveDetailsPageSelector = state => state.CVEStore.cveDetails;\n\nexport const sCveDetailsPage = createSelector(\n    [cveDetailsPageSelector],\n    createCveDetailsPage\n);\nexport const sExposedSystemsTable = createSelector(\n    [cveListWithSystemsSelector],\n    createExposedSystemsTable\n);\n\nexport const sAllSystems = createSelector(\n    [systemsListAllSelector],\n    createExposedSystemsTable\n);\n","import { Form, FormGroup, Radio, Stack, StackItem, TextInput } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { setBusinessRisk } from '../../../Helpers/APIHelper';\nimport { businessRiskOptions } from '../../../Helpers/constants';\nimport BaseModal from './BaseModal';\n\nexport const BusinessRiskModal = ({ cves, updateRef }) => {\n    const [cveList] = useState(cves);\n    const [businessRiskId, setBusinessRiskId] = useState('0');\n    const [label, setLabel] = useState();\n\n    useEffect(() => {\n        getDefaultBusinessRisk(), getDefaultLabel();\n    }, [cves]);\n    useEffect(getDefaultLabel, [cves]);\n\n    const handleOnRadioChange = (_, event) => {\n        const { value } = event.currentTarget;\n        setBusinessRiskId(value);\n    };\n\n    const handleOnLabelChange = value => {\n        setLabel(value);\n    };\n\n    const handleSave = () => {\n        return setBusinessRisk({\n            business_risk_id: parseInt(businessRiskId),\n            cve: cveList.map(item => item.id),\n            business_risk_text: label\n        }).then(updateRef);\n    };\n\n    function getDefaultBusinessRisk() {\n        setBusinessRiskId((cveList && cveList.length === 1 && cveList[0].business_risk_id.toString()) || '0');\n    }\n\n    function getDefaultLabel() {\n        setLabel((cveList && cveList.length === 1 && cveList[0].justification) || '');\n    }\n\n    const successNotification = {\n        variant: 'success',\n        title: `Business risk updated for ${cveList.length} CVEs`\n    };\n\n    return (\n        <BaseModal items={cveList} onSave={handleSave} onSuccessNotification={successNotification} title=\"Edit business risk\">\n            <Stack gutter={'md'}>\n                <StackItem>Business risk can be used to mark which CVEs are most important to you business.</StackItem>\n                <StackItem>\n                    <Form>\n                        <FormGroup label=\"Business risk\" fieldId={'businessRiskId'}>\n                            {businessRiskOptions.map(item => (\n                                <Radio\n                                    value={item.value}\n                                    isChecked={businessRiskId === item.value}\n                                    onChange={handleOnRadioChange}\n                                    label={item.label}\n                                    key={item.value}\n                                    id={item.value}\n                                    name={item.label}\n                                    aria-label={item.label}\n                                />\n                            ))}\n                        </FormGroup>\n                        <FormGroup label=\"Justification\" fieldId={'label'}>\n                            <TextInput type=\"text\" onChange={handleOnLabelChange} value={label} aria-label={'justification'} />\n                        </FormGroup>\n                    </Form>\n                </StackItem>\n            </Stack>\n        </BaseModal>\n    );\n};\n\nBusinessRiskModal.propTypes = {\n    cves: propTypes.array,\n    updateRef: propTypes.func\n};\n\nexport default BusinessRiskModal;\n","import { Checkbox, Form, FormGroup, Split, SplitItem, Stack, StackItem } from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons';\nimport propTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { setCveStatus, setSystemCveStatus } from '../../../Helpers/APIHelper';\nimport BaseModal, { useJustificationInput, useStatusSelect } from './BaseModal';\n\nexport const CveStatusModal = ({ cves, updateRef }) => {\n    const [cveList] = useState(cves);\n    const { StatusSelect, statusId } = useStatusSelect(getDefaultStatus());\n    const { JustificationInput, justification } = useJustificationInput(getDefaultLabel());\n    const [checkboxState, setCheckboxState] = useState(false);\n\n    const handleSave = () => {\n        const cveIds = cveList.map(item => item.id);\n        return setCveStatus({\n            status_id: parseInt(statusId),\n            cve: cveIds,\n            status_text: justification\n        })\n        .then(() => !checkboxState && setSystemCveStatus({ cve: cveIds }))\n        .then(updateRef);\n    };\n\n    function getDefaultStatus() {\n        return (cveList && cveList.length === 1 && cveList[0].status_id.toString()) || '0';\n    }\n\n    function getDefaultLabel() {\n        return (cveList && cveList.length === 1 && cveList[0].justification) || '';\n    }\n\n    const successNotification = {\n        variant: 'success',\n        title: `Status updated for ${cveList.length} CVEs`\n    };\n\n    return (\n        <BaseModal\n            items={cveList}\n            onSave={handleSave}\n            onSuccessNotification={successNotification}\n            title=\"Set status for this CVE and all hosts\"\n        >\n            <Stack gutter={'md'}>\n                <StackItem>\n                    <Form key=\"key\">\n                        {StatusSelect}\n                        {JustificationInput}\n                        <FormGroup fieldId={'overwrite'}>\n                            <Checkbox\n                                label=\"Do not overwrite individual host status\"\n                                id=\"alt-form-checkbox-1\"\n                                name=\"alt-form-checkbox-1\"\n                                isChecked={checkboxState}\n                                onChange={checked => setCheckboxState(checked)}\n                            />\n                        </FormGroup>\n                        <FormGroup fieldId={'info'}>\n                            <Split>\n                                <SplitItem>\n                                    <InfoCircleIcon size=\"md\" color=\"var(--pf-global--active-color--400)\" />\n                                </SplitItem>\n                                <SplitItem isFilled>\n                                    This status is applied to all existing matching hosts. Any new matching hosts will have the\n                                    status &quot;Not review&quot;\n                                </SplitItem>\n                            </Split>\n                        </FormGroup>\n                    </Form>\n                </StackItem>\n            </Stack>\n        </BaseModal>\n    );\n};\n\nCveStatusModal.propTypes = {\n    cves: propTypes.array,\n    updateRef: propTypes.func\n};\n\nexport default CveStatusModal;\n","'use strict';\n\nexports.__esModule = true;\nexports.defaultMemoize = defaultMemoize;\nexports.createSelectorCreator = createSelectorCreator;\nexports.createStructuredSelector = createStructuredSelector;\nfunction defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nfunction createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = defaultMemoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nvar createSelector = exports.createSelector = createSelectorCreator(defaultMemoize);\n\nfunction createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","// Initial State\nexport const init = {\n    columns: [],\n    rows: [],\n    entities: []\n};\n// Reducer\n\nfunction modifyInventory(columns, state, getSelectedFunc) {\n    // If a system does not have insights_id, it means it was deleted from inventory but somehow survived in Vuln backend\n    if (state.loaded) {\n        const selected = getSelectedFunc();\n        return {\n            ...state,\n            rows: state.rows.filter(item => item.insights_id).map(item => ({ ...item, selected: selected.has(item.id) })),\n            columns\n        };\n    }\n\n    return state;\n}\n\nexport const inventoryEntitiesReducer = (columns, selected) => (state = init, action) => {\n    switch (action.type) {\n        case 'LOAD_ENTITIES_FULFILLED':\n            return modifyInventory(columns, state, selected);\n\n        default:\n            return state;\n    }\n};\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEPageDetailsDescription.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEPageDetailsDescription.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEPageDetailsDescription.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js!@redhat-cloud-services/frontend-components-notifications/index.css\"), \"\");\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js!@redhat-cloud-services/frontend-components/index.css\"), \"\");\n\n// module\nexports.push([module.id, \":root {\\n  --ins-color--orange: #ec7a08; }\\n\\nbutton:focus {\\n  outline: none; }\\n\\n.ins-active-app-vulnerabilities .cvetable-toolbar,\\n.page__Vulnerabilities .cvetable-toolbar {\\n  justify-content: space-between; }\\n  .ins-active-app-vulnerabilities .cvetable-toolbar > div,\\n  .page__Vulnerabilities .cvetable-toolbar > div {\\n    align-self: flex-end; }\\n\\n.ins-active-app-vulnerabilities .space-between-toolbar-items,\\n.page__Vulnerabilities .space-between-toolbar-items {\\n  justify-content: space-between;\\n  flex-wrap: nowrap; }\\n  .ins-active-app-vulnerabilities .space-between-toolbar-items > div,\\n  .page__Vulnerabilities .space-between-toolbar-items > div {\\n    flex-wrap: nowrap; }\\n\\n.ins-active-app-vulnerabilities .vulnerability-toolbar-spacing,\\n.page__Vulnerabilities .vulnerability-toolbar-spacing {\\n  justify-content: flex-start; }\\n  .ins-active-app-vulnerabilities .vulnerability-toolbar-spacing > div:not(:last-child),\\n  .page__Vulnerabilities .vulnerability-toolbar-spacing > div:not(:last-child) {\\n    margin-right: var(--pf-global--spacer--sm); }\\n\\n@media screen and (max-width: 1100px) {\\n  .ins-active-app-vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-options-menu,\\n  .ins-active-app-vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-pagination__nav,\\n  .page__Vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-options-menu,\\n  .page__Vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-pagination__nav {\\n    display: none;\\n    visibility: hidden; }\\n  .ins-active-app-vulnerabilities .pf-c-pagination__total-items,\\n  .page__Vulnerabilities .pf-c-pagination__total-items {\\n    display: flex;\\n    visibility: visible; } }\\n\\n.ins-active-app-vulnerabilities .pf-c-pagination.pf-m-footer.ins-c-pagination-next,\\n.page__Vulnerabilities .pf-c-pagination.pf-m-footer.ins-c-pagination-next {\\n  margin-left: auto; }\\n\\n.ins-active-app-vulnerabilities #download-report,\\n.page__Vulnerabilities #download-report {\\n  cursor: pointer; }\\n\\n.ins-active-app-vulnerabilities .number-of-results,\\n.page__Vulnerabilities .number-of-results {\\n  display: inline-block;\\n  min-width: 55px;\\n  text-align: right;\\n  margin-right: 5px; }\\n\\n.ins-active-app-vulnerabilities .table-header-icon,\\n.page__Vulnerabilities .table-header-icon {\\n  margin-right: 5px;\\n  margin-right: 0.3125rem; }\\n\\n.ins-active-app-vulnerabilities .status-dropdown-column > svg,\\n.page__Vulnerabilities .status-dropdown-column > svg {\\n  color: var(--pf-global--primary-color--100); }\\n\\n.ins-active-app-vulnerabilities .status-dropdown-column:hover,\\n.page__Vulnerabilities .status-dropdown-column:hover {\\n  cursor: pointer; }\\n  .ins-active-app-vulnerabilities .status-dropdown-column:hover > svg,\\n  .page__Vulnerabilities .status-dropdown-column:hover > svg {\\n    visibility: visible; }\\n\\n.ins-active-app-vulnerabilities .status-dropdown-column > svg,\\n.page__Vulnerabilities .status-dropdown-column > svg {\\n  visibility: hidden; }\\n\\n.ins-active-app-vulnerabilities tbody > tr > td.pf-c-table__check,\\n.page__Vulnerabilities tbody > tr > td.pf-c-table__check {\\n  vertical-align: middle;\\n  padding-top: 0px !important;\\n  padding-bottom: 0px !important; }\\n\\n.ins-active-app-vulnerabilities thead > tr > td.pf-c-table__check,\\n.page__Vulnerabilities thead > tr > td.pf-c-table__check {\\n  visibility: hidden; }\\n\\n.ins-active-app-vulnerabilities .pf-c-table tr > *,\\n.page__Vulnerabilities .pf-c-table tr > * {\\n  vertical-align: middle !important; }\\n\\n.ins-active-app-vulnerabilities p.pf-c-empty-state__body ul,\\n.page__Vulnerabilities p.pf-c-empty-state__body ul {\\n  margin-top: 0px;\\n  margin-bottom: var(--pf-global--spacer--sm); }\\n  .ins-active-app-vulnerabilities p.pf-c-empty-state__body ul li,\\n  .page__Vulnerabilities p.pf-c-empty-state__body ul li {\\n    margin-top: 0px; }\\n\\n@media (max-width: 1500px) and (min-width: 992px) {\\n  .ins-active-app-vulnerabilities .hide-description,\\n  .page__Vulnerabilities .hide-description {\\n    --pf-hidden-visible--Display: var(\\n                --pf-hidden-visible--hidden--Display\\n            );\\n    --pf-hidden-visible--Visibility: var(\\n                --pf-hidden-visible--hidden--Visibility\\n            ); } }\\n\\n@media (min-width: 1400px) {\\n  .ins-active-app-vulnerabilities .remediation-btn-sml,\\n  .page__Vulnerabilities .remediation-btn-sml {\\n    display: none;\\n    visibility: hidden; } }\\n\\n@media (max-width: 1400px) {\\n  .ins-active-app-vulnerabilities .remediation-btn-lg,\\n  .page__Vulnerabilities .remediation-btn-lg {\\n    display: none;\\n    visibility: none; } }\\n\\n.ins-active-app-vulnerabilities .col-width-10,\\n.page__Vulnerabilities .col-width-10 {\\n  width: 10%; }\\n\\n.ins-active-app-vulnerabilities .col-width-15,\\n.page__Vulnerabilities .col-width-15 {\\n  width: 15%; }\\n\\n.ins-active-app-vulnerabilities .col-width-description,\\n.page__Vulnerabilities .col-width-description {\\n  width: 35%; }\\n\\n.ins-active-app-vulnerabilities .no-wrap,\\n.page__Vulnerabilities .no-wrap {\\n  white-space: nowrap; }\\n\\n.ins-active-app-vulnerabilities .pf-c-table__expandable-row-content,\\n.page__Vulnerabilities .pf-c-table__expandable-row-content {\\n  white-space: normal; }\\n\\n.ins-active-app-vulnerabilities tr.pf-m-expanded .pf-c-table__action,\\n.page__Vulnerabilities tr.pf-m-expanded .pf-c-table__action {\\n  display: none; }\\n\\n.cvepage-st-business-risk-value {\\n  border-bottom: black 2px dotted; }\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEInfoBox.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEInfoBox.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEInfoBox.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js!@redhat-cloud-services/frontend-components-notifications/index.css\"), \"\");\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js!@redhat-cloud-services/frontend-components/index.css\"), \"\");\n\n// module\nexports.push([module.id, \":root {\\n  --ins-color--orange: #ec7a08; }\\n\\nbutton:focus {\\n  outline: none; }\\n\\n.ins-active-app-vulnerabilities .cvetable-toolbar,\\n.page__Vulnerabilities .cvetable-toolbar {\\n  justify-content: space-between; }\\n  .ins-active-app-vulnerabilities .cvetable-toolbar > div,\\n  .page__Vulnerabilities .cvetable-toolbar > div {\\n    align-self: flex-end; }\\n\\n.ins-active-app-vulnerabilities .space-between-toolbar-items,\\n.page__Vulnerabilities .space-between-toolbar-items {\\n  justify-content: space-between;\\n  flex-wrap: nowrap; }\\n  .ins-active-app-vulnerabilities .space-between-toolbar-items > div,\\n  .page__Vulnerabilities .space-between-toolbar-items > div {\\n    flex-wrap: nowrap; }\\n\\n.ins-active-app-vulnerabilities .vulnerability-toolbar-spacing,\\n.page__Vulnerabilities .vulnerability-toolbar-spacing {\\n  justify-content: flex-start; }\\n  .ins-active-app-vulnerabilities .vulnerability-toolbar-spacing > div:not(:last-child),\\n  .page__Vulnerabilities .vulnerability-toolbar-spacing > div:not(:last-child) {\\n    margin-right: var(--pf-global--spacer--sm); }\\n\\n@media screen and (max-width: 1100px) {\\n  .ins-active-app-vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-options-menu,\\n  .ins-active-app-vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-pagination__nav,\\n  .page__Vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-options-menu,\\n  .page__Vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-pagination__nav {\\n    display: none;\\n    visibility: hidden; }\\n  .ins-active-app-vulnerabilities .pf-c-pagination__total-items,\\n  .page__Vulnerabilities .pf-c-pagination__total-items {\\n    display: flex;\\n    visibility: visible; } }\\n\\n.ins-active-app-vulnerabilities .pf-c-pagination.pf-m-footer.ins-c-pagination-next,\\n.page__Vulnerabilities .pf-c-pagination.pf-m-footer.ins-c-pagination-next {\\n  margin-left: auto; }\\n\\n.ins-active-app-vulnerabilities #download-report,\\n.page__Vulnerabilities #download-report {\\n  cursor: pointer; }\\n\\n.ins-active-app-vulnerabilities .number-of-results,\\n.page__Vulnerabilities .number-of-results {\\n  display: inline-block;\\n  min-width: 55px;\\n  text-align: right;\\n  margin-right: 5px; }\\n\\n.ins-active-app-vulnerabilities .table-header-icon,\\n.page__Vulnerabilities .table-header-icon {\\n  margin-right: 5px;\\n  margin-right: 0.3125rem; }\\n\\n.ins-active-app-vulnerabilities .status-dropdown-column > svg,\\n.page__Vulnerabilities .status-dropdown-column > svg {\\n  color: var(--pf-global--primary-color--100); }\\n\\n.ins-active-app-vulnerabilities .status-dropdown-column:hover,\\n.page__Vulnerabilities .status-dropdown-column:hover {\\n  cursor: pointer; }\\n  .ins-active-app-vulnerabilities .status-dropdown-column:hover > svg,\\n  .page__Vulnerabilities .status-dropdown-column:hover > svg {\\n    visibility: visible; }\\n\\n.ins-active-app-vulnerabilities .status-dropdown-column > svg,\\n.page__Vulnerabilities .status-dropdown-column > svg {\\n  visibility: hidden; }\\n\\n.ins-active-app-vulnerabilities tbody > tr > td.pf-c-table__check,\\n.page__Vulnerabilities tbody > tr > td.pf-c-table__check {\\n  vertical-align: middle;\\n  padding-top: 0px !important;\\n  padding-bottom: 0px !important; }\\n\\n.ins-active-app-vulnerabilities thead > tr > td.pf-c-table__check,\\n.page__Vulnerabilities thead > tr > td.pf-c-table__check {\\n  visibility: hidden; }\\n\\n.ins-active-app-vulnerabilities .pf-c-table tr > *,\\n.page__Vulnerabilities .pf-c-table tr > * {\\n  vertical-align: middle !important; }\\n\\n.ins-active-app-vulnerabilities p.pf-c-empty-state__body ul,\\n.page__Vulnerabilities p.pf-c-empty-state__body ul {\\n  margin-top: 0px;\\n  margin-bottom: var(--pf-global--spacer--sm); }\\n  .ins-active-app-vulnerabilities p.pf-c-empty-state__body ul li,\\n  .page__Vulnerabilities p.pf-c-empty-state__body ul li {\\n    margin-top: 0px; }\\n\\n@media (max-width: 1500px) and (min-width: 992px) {\\n  .ins-active-app-vulnerabilities .hide-description,\\n  .page__Vulnerabilities .hide-description {\\n    --pf-hidden-visible--Display: var(\\n                --pf-hidden-visible--hidden--Display\\n            );\\n    --pf-hidden-visible--Visibility: var(\\n                --pf-hidden-visible--hidden--Visibility\\n            ); } }\\n\\n@media (min-width: 1400px) {\\n  .ins-active-app-vulnerabilities .remediation-btn-sml,\\n  .page__Vulnerabilities .remediation-btn-sml {\\n    display: none;\\n    visibility: hidden; } }\\n\\n@media (max-width: 1400px) {\\n  .ins-active-app-vulnerabilities .remediation-btn-lg,\\n  .page__Vulnerabilities .remediation-btn-lg {\\n    display: none;\\n    visibility: none; } }\\n\\n.ins-active-app-vulnerabilities .col-width-10,\\n.page__Vulnerabilities .col-width-10 {\\n  width: 10%; }\\n\\n.ins-active-app-vulnerabilities .col-width-15,\\n.page__Vulnerabilities .col-width-15 {\\n  width: 15%; }\\n\\n.ins-active-app-vulnerabilities .col-width-description,\\n.page__Vulnerabilities .col-width-description {\\n  width: 35%; }\\n\\n.ins-active-app-vulnerabilities .no-wrap,\\n.page__Vulnerabilities .no-wrap {\\n  white-space: nowrap; }\\n\\n.ins-active-app-vulnerabilities .pf-c-table__expandable-row-content,\\n.page__Vulnerabilities .pf-c-table__expandable-row-content {\\n  white-space: normal; }\\n\\n.ins-active-app-vulnerabilities tr.pf-m-expanded .pf-c-table__action,\\n.page__Vulnerabilities tr.pf-m-expanded .pf-c-table__action {\\n  display: none; }\\n\\n.infobox-square {\\n  background-color: var(--pf-global--BackgroundColor--150);\\n  border: var(--pf-global--BorderColor--300) var(--pf-global--BorderWidth--sm) solid;\\n  height: 65px; }\\n  .infobox-square > .pf-l-split__item:first-child {\\n    width: 65px;\\n    color: black;\\n    background-color: white; }\\n    .infobox-square > .pf-l-split__item:first-child > div.pf-l-bullseye svg {\\n      color: white; }\\n  .infobox-square h3,\\n  .infobox-square h6 {\\n    margin: 0; }\\n  .infobox-square > .pf-l-split__item:nth-child(2) {\\n    display: flex;\\n    justify-content: flex-start;\\n    align-items: center; }\\n\\n.severity-low {\\n  background-color: var(--pf-global--Color--200) !important; }\\n\\n.severity-critical {\\n  background-color: var(--pf-global--danger-color--100) !important; }\\n\\n.severity-moderate {\\n  background-color: var(--pf-global--warning-color--100) !important; }\\n\\n.severity-color-important {\\n  background-color: #ec7a08 !important; }\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CvssVector.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CvssVector.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CvssVector.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".severity-info-box > div > div:nth-child(3) h6 .ins-c-skeleton {\\n  max-height: 30px !important;\\n  max-width: 30% !important; }\\n\\n.severity-info-box > div > div:nth-child(3) div > .ins-c-skeleton {\\n  max-height: 25px !important;\\n  max-width: 80% !important; }\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./SystemsExposedTable.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./SystemsExposedTable.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./SystemsExposedTable.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".affected-systems-toolbar {\\n  justify-content: flex-start; }\\n  .affected-systems-toolbar > div:first-child {\\n    overflow: hidden; }\\n  .affected-systems-toolbar > div {\\n    margin-right: var(--pf-global--spacer--sm); }\\n\", \"\"]);\n\n// exports\n","import { Stack, StackItem, Text, TextContent, TextVariants, Tooltip } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport './CVEPageDetailsDescription.scss';\n\nconst SnippetWithHeaderAndTooltip = props => {\n    const { title, value, tooltipText } = props;\n    const brValue = <span className={'cvepage-st-business-risk-value'}>{value}</span>;\n\n    return (\n        <Stack>\n            <StackItem>\n                <TextContent>\n                    <Text component={TextVariants.h4} style={{ marginBottom: 0 }}>\n                        {title}\n                    </Text>\n                </TextContent>\n            </StackItem>\n            <StackItem>\n                {(tooltipText && (\n                    <Tooltip content={tooltipText && tooltipText} position={'bottom'}>\n                        {brValue}\n                    </Tooltip>\n                )) ||\n                    brValue}\n            </StackItem>\n        </Stack>\n    );\n};\n\nexport const SnippetWithHeaderAndPopover = props => {\n    const { title, value, tooltipText } = props;\n    const brValue = <span>{value}</span>;\n\n    return (\n        <Stack>\n            <StackItem>\n                <TextContent>\n                    <Text component={TextVariants.h4} style={{ marginBottom: 0 }}>\n                        {title}\n                    </Text>\n                </TextContent>\n            </StackItem>\n            <StackItem>\n                {(tooltipText && (\n                    <Tooltip content={tooltipText && tooltipText} position={'bottom'}>\n                        {brValue}\n                    </Tooltip>\n                )) ||\n                    brValue}\n            </StackItem>\n        </Stack>\n    );\n};\n\nSnippetWithHeaderAndTooltip.propTypes = {\n    title: propTypes.string,\n    value: propTypes.string,\n    tooltipText: propTypes.any\n};\n\nSnippetWithHeaderAndPopover.propTypes = {\n    title: propTypes.any,\n    value: propTypes.any,\n    tooltipText: propTypes.any\n};\nexport default SnippetWithHeaderAndTooltip;\n","import { Grid, GridItem, Popover, Stack, StackItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { Table, TableBody, TableHeader, TableVariant } from '@patternfly/react-table';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { STATUS_OPTIONS } from '../../../Helpers/constants';\nimport './CVEPageDetailsDescription.scss';\nimport { SnippetWithHeaderAndPopover } from './SnippetWithHeaderAndTooltip';\n\nconst CVEPageDetailsDescription = ({ cveAttributes }) => {\n    const {\n        public_date: publishDate,\n        description,\n        rh_link: link,\n        business_risk: businessRisk,\n        business_risk_justification: businessRiskJustification,\n        status,\n        status_justification: statusJustification,\n        systems_status_detail: systemsStatusDetail,\n        systems_status_divergent: systemsStatusDivergent\n    } = cveAttributes;\n    const detailRows =\n        systemsStatusDetail &&\n        Object.keys(systemsStatusDetail).map(item => [\n            STATUS_OPTIONS.find(status => status.value === item.toString()).label,\n            systemsStatusDetail[item].toString()\n        ]);\n    return (\n        <React.Fragment>\n            <Stack gutter=\"sm\">\n                <StackItem></StackItem>\n                <StackItem>\n                    <Grid gutter=\"sm\">\n                        <GridItem span={2}>\n                            <Popover\n                                headerContent={''}\n                                aria-label={'Business risk popover'}\n                                position=\"right\"\n                                bodyContent={\n                                    <TextContent>\n                                        <Stack>\n                                            <StackItem>\n                                                Justification note\n                                                <Text component={TextVariants.h6}>{businessRiskJustification}</Text>\n                                            </StackItem>\n                                        </Stack>\n                                    </TextContent>\n                                }\n                            >\n                                <SnippetWithHeaderAndPopover\n                                    title={'Business risk'}\n                                    value={businessRisk}\n                                />\n                            </Popover>\n                        </GridItem>\n                        <GridItem span={2}>\n                            <Popover\n                                headerContent={''}\n                                aria-label={'Status popover'}\n                                position=\"right\"\n                                bodyContent={\n                                    <TextContent>\n                                        <Stack>\n                                            <StackItem>\n                                                CVE status\n                                                <Text component={TextVariants.h6}>{status}</Text>\n                                            </StackItem>\n                                            <StackItem>\n                                                Justification note\n                                                <Text component={TextVariants.h6}>{statusJustification}</Text>\n                                            </StackItem>\n                                            {systemsStatusDivergent > 0 && (\n                                                <StackItem>\n                                                    <Text component={TextVariants.h2}>Systems with this CVE</Text>\n                                                    <Table\n                                                        aria-label={'Status details'}\n                                                        variant={TableVariant.compact}\n                                                        borders={false}\n                                                        gridBreakPoint={null}\n                                                        cells={['Status', 'Count']}\n                                                        rows={detailRows}\n                                                    >\n                                                        <TableHeader />\n                                                        <TableBody />\n                                                    </Table>\n                                                </StackItem>\n                                            )}\n                                        </Stack>\n                                    </TextContent>\n                                }\n                            >\n                                <SnippetWithHeaderAndPopover\n                                    title={'Status'}\n                                    value={\n                                        <span>\n                                            {systemsStatusDivergent > 0 ? (\n                                                <ExclamationTriangleIcon color={'var(--pf-global--warning-color--100)'} />\n                                            ) : (\n                                                ''\n                                            )}{' '}\n                                            {status}\n                                        </span>\n                                    }\n                                />\n                            </Popover>\n                        </GridItem>\n                    </Grid>\n                </StackItem>\n                <StackItem>\n                    <TextContent>\n                        <Text component={TextVariants.p}>{description}</Text>\n                    </TextContent>\n                </StackItem>\n                <StackItem>\n                    <TextContent>\n                        <Text component={TextVariants.p}>Publish date: {publishDate}</Text>\n                        <Text component={TextVariants.p}>{link}</Text>\n                    </TextContent>\n                </StackItem>\n            </Stack>\n        </React.Fragment>\n    );\n};\n\nCVEPageDetailsDescription.propTypes = {\n    cveAttributes: propTypes.any\n};\n\nexport default CVEPageDetailsDescription;\n","import { Skeleton, SkeletonSize, Spinner } from '@redhat-cloud-services/frontend-components';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport ContentLoader, { BulletList, List } from 'react-content-loader';\n\nconst WithLoader = props => {\n    if (props === undefined || props.loading !== false) {\n        switch (props.variant) {\n            case 'spinner':\n                return <Spinner centered />;\n            case 'cvePageOverviewItem':\n                return <CVEPageOverviewItemLoader />;\n            case 'list':\n                return <List />;\n            case 'bulletList':\n                return <BulletList />;\n            case 'trendBox':\n                return <TrendBoxLoader />;\n            case 'currentVulnerabilitiesItem':\n                return <CurrentVulnerabilitiesItemLoader />;\n            default:\n                return <Skeleton size={SkeletonSize.lg} />;\n        }\n    }\n\n    return props.children;\n};\n\n// Loaders\nconst CVEPageOverviewItemLoader = () => {\n    return (\n        <ContentLoader height={61} width={120}>\n            <rect x=\"35\" y=\"0\" rx=\"0\" ry=\"0\" width=\"50\" height=\"35\" />\n            <rect x=\"0\" y=\"45\" rx=\"0\" ry=\"0\" width=\"120\" height=\"16\" />\n        </ContentLoader>\n    );\n};\n\nconst TrendBoxLoader = () => {\n    return (\n        <ContentLoader height={100} width={300}>\n            <rect x=\"388.58\" y=\"109.13\" rx=\"0\" ry=\"0\" width=\"0\" height=\"0\" />\n            <rect x=\"11.58\" y=\"16.13\" rx=\"0\" ry=\"0\" width=\"37\" height=\"62\" />\n            <rect x=\"52.58\" y=\"52.13\" rx=\"0\" ry=\"0\" width=\"17\" height=\"26\" />\n            <rect x=\"76.58\" y=\"52.13\" rx=\"0\" ry=\"0\" width=\"17\" height=\"26\" />\n            <rect x=\"4.58\" y=\"82.13\" rx=\"0\" ry=\"0\" width=\"154\" height=\"22\" />\n        </ContentLoader>\n    );\n};\n\nconst CurrentVulnerabilitiesItemLoader = () => {\n    return (\n        <ContentLoader height={50} width={200} speed={2} primaryColor=\"#f3f3f3\" secondaryColor=\"#ecebeb\">\n            <rect x=\"82.58\" y=\"15.13\" rx=\"0\" ry=\"0\" width=\"110.88\" height=\"21.42\" />\n            <circle cx=\"25\" cy=\"25\" r=\"25\" />\n        </ContentLoader>\n    );\n};\n\nWithLoader.propTypes = {\n    loading: propTypes.bool,\n    variant: propTypes.string\n};\n\nexport default WithLoader;\n","import { Bullseye, Split, SplitItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { CVEPageContext } from '../../SmartComponents/CVEPage/CVEPage';\nimport WithLoader from '../WithLoader/WithLoader';\nimport './CVEInfoBox.scss';\n\nconst CVEInfoBox = (props) => {\n    return (\n        <CVEPageContext.Consumer>\n            {context => (\n                <Split className=\"infobox-square\" gutter=\"md\">\n                    <WithLoader loading={context.isLoading}>\n                        <SplitItem className={props.titleColor}>\n                            <Bullseye>{props.titleContent}</Bullseye>\n                        </SplitItem>\n                        <SplitItem isFilled>\n                            <TextContent>\n                                <Text component={TextVariants.h6}>{props.descriptionTitle}</Text>\n                                <Text component={TextVariants.p}>{props.descriptionContent}</Text>\n                            </TextContent>\n                        </SplitItem>\n                    </WithLoader>\n                </Split>\n            )}\n        </CVEPageContext.Consumer>\n    );\n};\n\nCVEInfoBox.propTypes = {\n    titleContent: propTypes.any,\n    titleColor: propTypes.any,\n    descriptionContent: propTypes.any,\n    descriptionTitle: propTypes.any\n};\n\nexport default CVEInfoBox;\n","import { Popover, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { QuestionCircleIcon } from '@patternfly/react-icons';\nimport { Table, TableBody, TableHeader, TableVariant } from '@patternfly/react-table';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { CVEPageContext } from '../../SmartComponents/CVEPage/CVEPage';\nimport WithLoader from '../WithLoader/WithLoader';\nimport './CvssVector.scss';\n\nexport const V3names = {\n    AV: { name: 'Attack Vector', values: { N: 'Network', A: 'Adjacent', L: 'Local', P: 'Physical' } },\n    AC: { name: 'Attack Complexity', values: { L: 'Low', H: 'High' } },\n    PR: { name: 'Privileges Required', values: { N: 'None', L: 'Low', H: 'High' } },\n    UI: { name: 'User Interaction', values: { N: 'None', R: 'Required' } },\n    S: { name: 'Scope', values: { U: 'Unchanged', C: 'Changed' } },\n    C: { name: 'Confidentiality', values: { H: 'High', L: 'Low', N: 'None' } },\n    I: { name: 'Integrity', values: { H: 'High', L: 'Low', N: 'None' } },\n    A: { name: 'Availability', values: { H: 'High', L: 'Low', N: 'None' } },\n    CVSS: { name: 'cvssVersion', values: { '3.0': 3.0 } }\n};\n\nexport const V2names = {\n    AV: { name: 'Access Vector', values: { N: 'Network', A: 'Adjacent Network', L: 'Local' } },\n    AC: { name: 'Access Complexity', values: { L: 'Low', H: 'High', M: 'Medium' } },\n    Au: { name: 'Authentication', values: { M: 'Multiple', S: 'Single', N: 'None' } },\n    C: { name: 'Confidentiality Impact', values: { C: 'Complete', P: 'Partial', N: 'None' } },\n    I: { name: 'Integrity Impact', values: { C: 'Complete', P: 'Partial', N: 'None' } },\n    A: { name: 'Availability Impact', values: { C: 'Complete', P: 'Partial', N: 'None' } }\n};\n\nexport const parseVector = (vector, namesMapping) => {\n    let res = {};\n    vector &&\n        vector.split('/').forEach(curr => {\n            let [key, val] = curr.split(':');\n            const name = namesMapping[key] && namesMapping[key].name;\n            const value = (namesMapping[key] && namesMapping[key].values[val]) || 'N/A';\n            if (name) {\n                res[name] = value;\n            }\n        });\n    return res;\n};\n\nconst CvssVector = (props) => {\n    const { cvss2_metrics: CVSS2Vector, cvss3_metrics: CVSS3Vector } = props;\n    const cvssVer = (CVSS3Vector && 'CVSS 3.0') || (CVSS2Vector && 'CVSS 2.0') || 'CVSS 3.0';\n    const cvssVector = CVSS3Vector || CVSS2Vector;\n    const namesMapping = (CVSS3Vector && V3names) || (CVSS2Vector && V2names);\n    const parsedVector = parseVector(cvssVector, namesMapping);\n    // eslint-disable-next-line no-unused-vars\n    const { cvssVersion, ...values } = parsedVector;\n\n    return (\n        <CVEPageContext.Consumer>\n            {context => (\n                <TextContent>\n                    <Text component={TextVariants.h6}>\n                        <WithLoader loading={context.isLoading}>\n                            {cvssVer} vector{' '}\n                            <Popover\n                                position=\"bottom\"\n                                maxWidth={'100%'}\n                                enableFlip\n                                headerContent={<div>{cvssVer} vector breakdown</div>}\n                                bodyContent={\n                                    <Table\n                                        aria-label={'Metric breakdown'}\n                                        variant={TableVariant.compact}\n                                        borders={false}\n                                        gridBreakPoint={null}\n                                        cells={['Metric', 'Value']}\n                                        rows={Object.entries(values)}\n                                    >\n                                        <TableHeader />\n                                        <TableBody />\n                                    </Table>\n                                }\n                            >\n                                <a>\n                                    <QuestionCircleIcon color={'var(--pf-global--link--Color)'} />\n                                </a>\n                            </Popover>\n                        </WithLoader>\n                    </Text>\n\n                    <WithLoader loading={context.isLoading}>{cvssVector} </WithLoader>\n                </TextContent>\n            )}\n        </CVEPageContext.Consumer>\n    );\n};\n\nCvssVector.propTypes = {\n    cvss2_metrics: propTypes.string,\n    cvss3_metrics: propTypes.string\n};\n\nexport default CvssVector;\n","import { Popover, Stack, StackItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { parseCvssScore } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { getImpactDetails } from '../../../Helpers/MiscHelper';\nimport CVEInfoBox from '../CVEInfoBox/CVEInfoBox';\nimport CvssVector from '../CvssVector/CvssVector';\n\nconst learnMorePopover = cveDetails => {\n    return (\n        <Popover\n            position=\"bottom\"\n            enableFlip\n            headerContent={<div>{cveDetails.title + ' impact'}</div>}\n            bodyContent={\n                <TextContent>\n                    <Text component={TextVariants.p}>{cveDetails.text}</Text>\n                </TextContent>\n            }\n            footerContent={\n                <a href=\"https://access.redhat.com/security/updates/classification/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    Learn more about security ratings\n                    <ExternalLinkAltIcon />\n                </a>\n            }\n        >\n            <a>Learn more</a>\n        </Popover>\n    );\n};\n\nconst CVEPageDetailsSeverity = props => {\n    const cveDetails = getImpactDetails(props.impact);\n    const cvssVersion = (props.cvss3_score && 'CVSS 3.0') || (props.cvss2_score && 'CVSS 2.0') || 'CVSS 3.0';\n    return (\n        <React.Fragment>\n            <Stack gutter=\"sm\">\n                <StackItem>\n                    <CVEInfoBox\n                        titleColor={cveDetails.color}\n                        titleContent={cveDetails.titleContent}\n                        descriptionTitle={cveDetails.title + ' impact'}\n                        descriptionContent={learnMorePopover(cveDetails)}\n                    />\n                </StackItem>\n                <StackItem>\n                    <CVEInfoBox\n                        titleContent={\n                            <TextContent>\n                                <Text component={TextVariants.h3}>{parseCvssScore(props.cvss2_score, props.cvss3_score)}</Text>\n                            </TextContent>\n                        }\n                        descriptionTitle={cvssVersion + ' base score'}\n                    />\n                </StackItem>\n\n                <StackItem>\n                    <CvssVector cvss2_metrics={props.cvss2_metrics} cvss3_metrics={props.cvss3_metrics} />\n                </StackItem>\n            </Stack>\n        </React.Fragment>\n    );\n};\n\nCVEPageDetailsSeverity.propTypes = {\n    impact: propTypes.string,\n    cvss2_score: propTypes.any,\n    cvss3_score: propTypes.any,\n    cvss2_metrics: propTypes.any,\n    cvss3_metrics: propTypes.any\n};\n\nCVEPageDetailsSeverity.defaultProps = {\n    impact: 'Unknown',\n    cvss2_score: undefined,\n    cvss3_score: undefined,\n    cvss2_metrics: undefined,\n    cvss3_metrics: undefined\n};\n\nexport default CVEPageDetailsSeverity;\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { CVEPageContext } from '../../SmartComponents/CVEPage/CVEPage';\nimport CVEPageDetailsDescription from '../CVEPageDetailsDescription/CVEPageDetailsDescription';\nimport CVEPageDetailsSeverity from '../CVEPageDetailsSeverity/CVEPageDetailsSeverity';\nimport WithLoader from '../WithLoader/WithLoader';\n\nconst CVEPageDetails = props => {\n    return (\n        <CVEPageContext.Consumer>\n            {context => (\n                <Grid gutter=\"sm\">\n                    <GridItem md={8} sm={12}>\n                        <WithLoader loading={context.isLoading} variant=\"spinner\">\n                            <CVEPageDetailsDescription cveAttributes={props.data.data} />\n                        </WithLoader>\n                    </GridItem>\n\n                    <GridItem md={4} sm={12} className=\"severity-info-box\">\n                        <CVEPageDetailsSeverity\n                            impact={props.data.data.impact}\n                            cvss2_score={props.data.data.cvss2_score}\n                            cvss3_score={props.data.data.cvss3_score}\n                            cvss2_metrics={props.data.data.cvss2_metrics}\n                            cvss3_metrics={props.data.data.cvss3_metrics}\n                        />\n                    </GridItem>\n                </Grid>\n            )}\n        </CVEPageContext.Consumer>\n    );\n};\n\nCVEPageDetails.propTypes = {\n    data: propTypes.object\n};\n\nexport default CVEPageDetails;\n","import * as reactCore from '@patternfly/react-core';\nimport {\n    Dropdown,\n    DropdownItem,\n    KebabToggle,\n    Text,\n    TextContent,\n    TextVariants,\n    ToolbarGroup,\n    ToolbarItem\n} from '@patternfly/react-core';\nimport * as reactIcons from '@patternfly/react-icons';\nimport * as pfReactTable from '@patternfly/react-table';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport RemediationButton from '@redhat-cloud-services/frontend-components-remediations/RemediationButton';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport debounce from 'lodash/debounce';\nimport propTypes from 'prop-types';\nimport qs from 'query-string';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as reactRouterDom from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport { filtersStatus } from '../../../Helpers/constants';\nimport { dataShape } from '../../../Helpers/MiscHelper';\nimport { fetchAffectedSystemsByCVE, handleCveDetailsError } from '../../../Store/Actions/Actions';\nimport { inventoryEntitiesReducer } from '../../../Store/Reducers/InventoryEntitiesReducer';\nimport { sExposedSystemsTable } from '../../../Store/Selectors/CVESelectors';\nimport ReducerRegistry, { middlewareListener } from '../../../Utilities/ReducerRegistry';\nimport FilterChips from '../../PresentationalComponents/Filters/FilterChips';\nimport Filters from '../../PresentationalComponents/Filters/Filters';\nimport './SystemsExposedTable.scss';\n\n/*eslint camelcase: 0*/\n\nclass SystemsExposedTable extends React.Component {\n    static propTypes = {\n        cve: propTypes.string,\n        fetchData: propTypes.func,\n        affectedSystems: dataShape,\n        history: propTypes.object,\n        handleCveDetailsError: propTypes.func,\n        createNotification: propTypes.func\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            InventoryCmp: () => <div>Loading...</div>,\n            removeListener: () => {},\n            filter: '',\n            columns: [\n                {\n                    key: 'display_name',\n                    title: 'Name',\n                    composed: ['facts.os_release', 'display_name'],\n                    props: {\n                        width: 40\n                    }\n                },\n                {\n                    key: 'status',\n                    title: 'Status',\n                    props: {\n                        width: 30\n                    }\n                },\n                {\n                    key: 'updated',\n                    title: 'Last seen',\n                    isTime: true,\n                    props: {\n                        width: 30\n                    }\n                }\n            ],\n            isKebabOpen: false,\n            selected: new Set(),\n            selectListener: middlewareListener.addNew({\n                on: 'SELECT_ENTITY',\n                callback: payload => this.onSelect(payload)\n            })\n        };\n    }\n\n    componentDidMount() {\n        this.fetchInventory();\n    }\n\n    onSelect = payload => {\n        const { selected } = this.state;\n        payload.data.selected ? selected.add(payload.data.id) : selected.delete(payload.data.id);\n        this.setState({ selected });\n    };\n\n    getSelected = () => {\n        return this.state.selected;\n    };\n\n    dataProvider = () => {\n        return {\n            issues: [\n                {\n                    id: `vulnerabilities:${this.props.cve}`,\n                    description: this.props.cve\n                }\n            ],\n            systems: Array.from(this.getSelected())\n        };\n    };\n\n    // #TODO: can be better. Similar function exists in 2 other places.\n    createUrlParams = allParams => {\n        const params = { ...allParams };\n        const allowedParams = ['filter', 'page', 'page_size', 'status_id'];\n        Object.keys(allParams).forEach(\n            key =>\n                (params[key] === undefined || params[key] === '' || !allowedParams.includes(key) || params[key] === false) &&\n                delete params[key]\n        );\n        const queryString = qs.stringify(params);\n        this.props.history.push('?' + queryString);\n    };\n\n    dataReload = () => {\n        const { meta, data } = this.props.affectedSystems;\n        const lastPage = meta.page;\n        const { page } = this.state;\n        const reloadPage = page === lastPage && data.length === 1 ? 1 : meta.page;\n\n        this.setState(\n            {\n                ...this.state,\n                page: reloadPage,\n                page_size: meta.page_size,\n                filter: this.state.filter,\n                system_id: this.state.system_id\n            },\n            this.apply\n        );\n    };\n\n    apply = newFilter => {\n        this.setState({ ...this.state, ...newFilter }, () => {\n            this.sendRequest();\n        });\n    };\n\n    sendRequest = () => {\n        const { fetchData, cve, handleCveDetailsError } = this.props;\n\n        fetchData &&\n            fetchData(cve, this.params()).catch(() => {\n                handleCveDetailsError();\n            });\n\n        this.createUrlParams(this.state);\n    };\n\n    downloadReport = format => {\n        const { payload } =\n            // eslint-disable-next-line camelcase\n            fetchAffectedSystemsByCVE(this.props.cve, {\n                ...this.state,\n                data_format: format,\n                page: 1,\n                page_size: Number.MAX_SAFE_INTEGER\n            });\n        payload &&\n            payload.then(({ data: response }) => {\n                const data = format === 'json' ? JSON.stringify(response) : response;\n                return downloadFile(data, `systems_affected-${this.props.cve}-${new Date().toISOString()}`, format);\n            });\n    };\n\n    async fetchInventory() {\n        const { inventoryConnector, mergeWithEntities, mergeWithDetail } = await insights.loadInventory({\n            react: React,\n            reactRouterDom,\n            reactCore,\n            reactIcons,\n            pfReactTable\n        });\n        ReducerRegistry.register({\n            ...mergeWithEntities(inventoryEntitiesReducer(this.state.columns, this.getSelected)),\n            ...mergeWithDetail()\n        });\n\n        this.setState({\n            InventoryCmp: inventoryConnector().InventoryTable\n        });\n    }\n\n    params = () => {\n        const { filter, page, page_size, status_id } = this.state;\n        return { filter, page, page_size, status_id };\n    };\n\n    handleFilterChange = debounce(value => {\n        this.setState({ ...this.state, filter: value }, this.apply);\n    }, 400);\n\n    handleRemediationCreated = result => {\n        this.props.createNotification(result.getNotification());\n        this.setState({ selected: new Set() });\n        this.props.fetchData(this.props.cve, this.params());\n    };\n\n    handleKebabToggle = isKebabOpen => {\n        this.setState({\n            isKebabOpen\n        });\n    };\n\n    handleKebabSelect = () => {\n        this.setState({\n            isKebabOpen: !this.state.isKebabOpen\n        });\n    };\n\n    handleRefresh = ({ page, per_page: perPage }) => {\n        const { meta } = this.props.affectedSystems;\n        if (meta.page !== page || meta.page_size !== perPage) {\n            this.setState(\n                {\n                    ...this.state,\n                    page: meta.page_size !== perPage ? 1 : page,\n                    page_size: perPage,\n                    filter: this.state.filter\n                },\n                this.apply\n            );\n        }\n    };\n\n    render() {\n        const { InventoryCmp } = this.state;\n        const { affectedSystems } = this.props;\n        const { data, meta } = affectedSystems;\n        return (\n            <React.Fragment>\n                <TextContent>\n                    <Text component={TextVariants.h2}>Affected systems</Text>\n                </TextContent>\n                <InventoryCmp\n                    hasCheckbox={data.length !== 0}\n                    page={meta.page}\n                    total={meta.total_items}\n                    perPage={meta.page_size}\n                    onRefresh={this.handleRefresh}\n                    items={data.map(item => ({\n                        id: item.attributes.inventory_id,\n                        ...item.attributes\n                    }))}\n                >\n                    <ToolbarGroup className={'affected-systems-toolbar'}>\n                        <Filters\n                            searchPlaceholder=\"Find a system by UUID\"\n                            filterCategories={[filtersStatus]}\n                            filterValues={this.params()}\n                            apply={this.apply}\n                        />\n                        <ToolbarItem>\n                            <RemediationButton\n                                dataProvider={this.dataProvider}\n                                isDisabled={this.state.selected.size === 0}\n                                onRemediationCreated={this.handleRemediationCreated}\n                            />\n                        </ToolbarItem>\n                        <ToolbarItem>\n                            <Dropdown\n                                onSelect={this.handleKebabSelect}\n                                toggle={<KebabToggle onToggle={this.handleKebabToggle} />}\n                                isOpen={this.state.isKebabOpen}\n                                isPlain\n                                dropdownItems={[\n                                    <DropdownItem key=\"json\" component=\"button\" onClick={() => this.downloadReport('json')}>\n                                        Export as JSON\n                                    </DropdownItem>,\n                                    <DropdownItem key=\"csv\" component=\"button\" onClick={() => this.downloadReport('csv')}>\n                                        Export as CSV\n                                    </DropdownItem>\n                                ]}\n                            />\n                        </ToolbarItem>\n                    </ToolbarGroup>\n                    <TableToolbar className=\"pf-u-pl-0\">\n                        <ToolbarGroup>\n                            <ToolbarItem>\n                                <FilterChips filterValues={this.params()} filterCategories={[filtersStatus]} apply={this.apply} />\n                            </ToolbarItem>\n                        </ToolbarGroup>\n                    </TableToolbar>\n                </InventoryCmp>\n            </React.Fragment>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        affectedSystems: sExposedSystemsTable(state, ownProps.cve)\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchData: (cve, options) => dispatch(fetchAffectedSystemsByCVE(cve, options)),\n        handleCveDetailsError: () => dispatch(handleCveDetailsError()),\n        createNotification: content => dispatch(addNotification(content))\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(SystemsExposedTable)\n);\n","import { DropdownPosition, Page } from '@patternfly/react-core';\nimport { InvalidObject, Main } from '@redhat-cloud-services/frontend-components';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { fetchAffectedSystemsByCVE, fetchCveDetails, handleCveDetailsError, setHeader } from '../../../Store/Actions/Actions';\nimport { sCveDetailsPage } from '../../../Store/Selectors/CVESelectors';\nimport { paths } from '../../../Utilities/Routes';\nimport CVEPageDetails from '../../PresentationalComponents/CVEPageDetails/CVEPageDetails';\nimport BaseKebab from '../../PresentationalComponents/DownloadReportKebab/BaseKebab';\nimport { kebabItemEditBusinessRisk, kebabItemEditStatus } from '../../PresentationalComponents/DownloadReportKebab/KebabItems';\nimport BusinessRiskModal from '../Modals/BusinessRiskModal';\nimport CveStatusModal from '../Modals/CveStatusModal';\nimport SystemsExposedTable from '../SystemsExposedTable/SystemsExposedTable';\nimport VulnerabilityHeader from '../VulnerabilityHeader/VulnerabilityHeader';\n\nexport const CVEPageContext = React.createContext({ isLoading: true });\n\nclass CVEPage extends React.Component {\n    static propTypes = {\n        match: propTypes.object,\n        cveDetails: propTypes.object,\n        fetchCveDetails: propTypes.func,\n        setHeader: propTypes.func,\n        handleCveDetailsError: propTypes.func,\n        fetchAffectedSystems: propTypes.func\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = { cveName: this.props.match.params.cve, BusinessRiskModal: () => null, StatusModal: () => null };\n    }\n\n    componentDidMount() {\n        const { fetchCveDetails, handleCveDetailsError, setHeader } = this.props;\n\n        setHeader({\n            breadcrumbs: [\n                { title: paths.vulnerabilities.title, to: paths.vulnerabilities.to },\n                { title: this.state.cveName, isActive: true }\n            ]\n        });\n\n        fetchCveDetails(this.state.cveName).catch(() => {\n            handleCveDetailsError();\n        });\n    }\n\n    showBusinessRiskModal = cves => {\n        this.setState({\n            BusinessRiskModal: () => (\n                <BusinessRiskModal open cves={cves} updateRef={() => this.props.fetchCveDetails(this.state.cveName)} />\n            )\n        });\n    };\n\n    showStatusModal = cves => {\n        this.setState({\n            StatusModal: () => (\n                <CveStatusModal\n                    cves={cves}\n                    updateRef={() => {\n                        this.props.fetchCveDetails(this.state.cveName);\n                        this.props.fetchAffectedSystems(this.state.cveName);\n                    }}\n                />\n            )\n        });\n    };\n\n    render() {\n        const { cveDetails, fetchAffectedSystems } = this.props;\n        const { error } = cveDetails;\n        const { cveName, BusinessRiskModal, StatusModal } = this.state;\n        const kebabItems = [\n            kebabItemEditBusinessRisk(this.showBusinessRiskModal, [\n                {\n                    business_risk_id: cveDetails.data.business_risk_id,\n                    id: cveName,\n                    justification: cveDetails.data.business_risk_justification\n                }\n            ]),\n            kebabItemEditStatus(this.showStatusModal, [\n                { id: cveName, status_id: cveDetails.data.status_id, justification: cveDetails.data.status_justification }\n            ])\n        ];\n\n        if (!error) {\n            return (\n                <Page>\n                    <CVEPageContext.Provider value={cveDetails && { isLoading: cveDetails.isLoading }}>\n                        <VulnerabilityHeader\n                            title={\n                                <span style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                    {cveName}\n                                    <BaseKebab dropdownItems={kebabItems} position={DropdownPosition.right}></BaseKebab>\n                                </span>\n                            }\n                            showTabs={false}\n                        >\n                            <CVEPageDetails data={cveDetails} />\n                            <StatusModal />\n                            <BusinessRiskModal />\n                        </VulnerabilityHeader>\n                        <Main>\n                            <SystemsExposedTable cve={cveName} fetchData={fetchAffectedSystems} />\n                        </Main>\n                    </CVEPageContext.Provider>\n                </Page>\n            );\n        } else {\n            return (\n                <React.Fragment>\n                    <VulnerabilityHeader title={cveName} showTabs={false} />\n                    <InvalidObject />\n                </React.Fragment>\n            );\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        cveDetails: sCveDetailsPage(state)\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchCveDetails: cveName => dispatch(fetchCveDetails(cveName)),\n        setHeader: header => dispatch(setHeader(header)),\n        handleCveDetailsError: () => dispatch(handleCveDetailsError()),\n        fetchAffectedSystems: (cve, options) => dispatch(fetchAffectedSystemsByCVE(cve, options))\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(CVEPage)\n);\n"],"sourceRoot":""}