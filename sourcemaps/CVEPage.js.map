{"version":3,"sources":["webpack:///./src/Components/PresentationalComponents/CVEPageDetailsDescription/CVEPageDetailsDescription.scss","webpack:///./src/Components/PresentationalComponents/CVEInfoBox/CVEInfoBox.scss?9c01","webpack:///./src/Components/PresentationalComponents/CVEInfoBox/CVEInfoBox.scss","webpack:///./src/Components/PresentationalComponents/CvssVector/CvssVector.scss?e372","webpack:///./src/Components/PresentationalComponents/CvssVector/CvssVector.scss","webpack:///./src/Components/SmartComponents/SystemsExposedTable/SystemsExposedTable.scss?46a3","webpack:///./src/Components/SmartComponents/SystemsExposedTable/SystemsExposedTable.scss","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsDescription/SnippetWithHeaderAndTooltip.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsDescription/CVEPageDetailsDescription.js","webpack:///./src/Components/PresentationalComponents/WithLoader/WithLoader.js","webpack:///./src/Components/PresentationalComponents/CVEInfoBox/CVEInfoBox.js","webpack:///./src/Components/PresentationalComponents/CvssVector/vectorNames.js","webpack:///./src/Components/PresentationalComponents/CvssVector/CvssVector.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsSeverity/CVEPageDetailsSeverity.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetails/CVEPageDetails.js","webpack:///./src/Components/SmartComponents/SystemsExposedTable/SystemsExposedTable.js","webpack:///./src/Components/SmartComponents/CVEPage/CVEPage.js","webpack:///./src/Store/Selectors/CVESelectors.js","webpack:///./src/Components/SmartComponents/Modals/BusinessRiskModal.js","webpack:///./src/Components/SmartComponents/Modals/CveStatusModal.js","webpack:///./node_modules/reselect/lib/index.js","webpack:///./src/Store/Reducers/InventoryEntitiesReducer.js","webpack:///./src/Components/SmartComponents/Modals/CvePairStatusModal.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsDescription/CVEPageDetailsDescription.scss?4f52"],"names":["exports","module","i","push","content","options","transform","undefined","locals","SnippetWithHeaderAndPopover","props","title","value","Popover","bodyContent","headerContent","aria-label","position","Stack","style","display","cursor","StackItem","Label","propTypes","any","CVEPageDetailsDescription","cveAttributes","intl","publishDate","public_date","description","link","rh_link","businessRisk","business_risk","businessRiskJustification","business_risk_justification","status","statusJustification","status_justification","systemsStatusDetail","systems_status_detail","systemsStatusDivergent","systems_status_divergent","detailRows","Object","keys","map","item","STATUS_OPTIONS","find","toString","label","brPopoverContent","TextContent","StyledText","fontWeight","StyledConstants","fontWeights","bold","fontSize","fontSizes","sm","lineHeight","lineHeights","formatMessage","messages","justificationNote","statusPopoverContent","cveStatus","marginTop","className","semi_bold","cvePageDetailsSystemsWTCves","Table","borders","gridBreakPoint","cells","statusLabel","count","rows","gutter","Flex","FlexItem","breakpointMods","modifier","businessRiskLabel","color","Text","component","TextVariants","p","StyledBox","marginBottom","injectIntl","WithLoader","loading","variant","centered","size","SkeletonSize","lg","children","CVEPageOverviewItemLoader","height","width","x","y","rx","ry","TrendBoxLoader","CurrentVulnerabilitiesItemLoader","speed","primaryColor","secondaryColor","cx","cy","r","bool","string","CVEInfoBox","CVEPageContext","Consumer","context","Split","isLoading","SplitItem","titleColor","Bullseye","titleContent","isFilled","h6","descriptionTitle","descriptionContent","cache","createIntlCache","locale","navigator","language","createIntl","onError","console","log","V3names","AV","name","vectorNamesV3AV","values","N","vectorValuesNetwork","A","vectorValuesAdjacent","L","vectorValuesLocal","P","vectorValuesPhysical","AC","vectorNamesV3AC","vectorValuesLow","H","vectorValuesHigh","PR","vectorNamesV3PR","vectorValuesNone","UI","vectorNamesV3UI","R","vectorValuesRequired","S","vectorNamesV3S","U","vectorValuesUnchanged","C","vectorValuesChanged","vectorNamesV3C","I","vectorNamesV3I","vectorNamesV3A","CVSS","vectorNamesCvssVersion","V2names","vectorNamesV2AV","vectorValuesAdjacentNetwork","vectorNamesV2AC","Au","vectorNamesV2AU","M","vectorValuesMultiple","vectorValuesSingle","vectorNamesV2C","vectorValuesComplete","vectorValuesPartial","vectorNamesV2I","vectorNamesV2A","CvssVector","CVSS2Vector","cvss2_metrics","CVSS3Vector","cvss3_metrics","cvssVer","cvssVector","parsedVector","vector","namesMapping","res","split","forEach","curr","key","val","parseVector","cvssVersion","maxWidth","enableFlip","cvssVectorPopoverTitle","TableVariant","compact","cvssVectorMetric","cvssVectorValue","entries","Fragment","cvssVectorVectorString","learnMorePopover","cveDetails","cvePageSeverityDetailsImpact","text","footerContent","href","target","rel","cvePageSeverityDetailsLearnMoreRatings","cvePageSeverityDetailsLearnMore","CVEPageDetailsSeverity","getImpactDetails","impact","cvss3_score","cvss2_score","h3","parseCvssScore","cvePageSeverityDetailsBaseScore","defaultProps","CVEPageDetails","Grid","GridItem","md","data","object","SystemsExposedTable","onSelect","payload","selected","Array","isArray","Set","state","add","id","setState","selectMultiple","getSelected","dataProvider","issues","cve","systems","from","createUrlParams","allParams","params","allowedParams","includes","queryString","qs","stringify","history","dataReload","affectedSystems","meta","lastPage","page","reloadPage","length","page_size","filter","system_id","apply","newFilter","sendRequest","fetchData","handleCveDetailsError","downloadReport","format","fetchAffectedSystemsByCVE","data_format","Number","MAX_SAFE_INTEGER","then","response","JSON","downloadFile","Date","toISOString","showStatusModal","cves","inventories","StatusModal","CvePairStatusModal","updateRef","fetchCveDetails","status_id","handleFilterChange","debounce","handleRemediationCreated","result","createNotification","getNotification","handleRefresh","perPage","per_page","config","InventoryCmp","removeListener","columns","systemsColumnHeaderName","composed","selectListener","middlewareListener","addNew","on","callback","selectAllListener","this","fetchInventory","nextProps","insights","loadInventory","react","React","reactRouterDom","reactCore","reactIcons","pfReactTable","inventoryConnector","mergeWithEntities","mergeWithDetail","ReducerRegistry","register","inventoryEntitiesReducer","InventoryTable","cveStatusDetails","methods","selectedInventoryIds","kebabOptions","kebabItemEditStatus","isDisabled","kebabItemDownloadJSON","kebabItemDownloadCSV","h2","systemsExposedTableHeader","hasCheckbox","showActions","actions","systemExposedTableRowActions","total","total_items","onRefresh","items","attributes","inventory_id","ToolbarGroup","SelectAllCheckbox","selectedItems","selectorHandler","selectRows","fetchResource","ops","ToolbarItem","SearchFilter","placeholder","searchFindByName","Filters","filterCategories","filtersStatus","filterValues","onRemediationCreated","BaseKebab","dropdownItems","disabled","FilterChips","filterSystemName","Component","func","dataShape","withRouter","connect","ownProps","sExposedSystemsTable","dispatch","cveName","selectEntities","ids","addNotification","type","createContext","CVEPage","showBusinessRiskModal","BusinessRiskModal","open","CveStatusModal","fetchAffectedSystems","match","setHeader","breadcrumbs","paths","vulnerabilities","to","vulnerabilitiesCves","isActive","error","justification","kebabItems","kebabItemEditBusinessRisk","business_risk_id","VulnerabilityHeader","showTabs","Page","Provider","justifyContent","DropdownPosition","right","sCveDetailsPage","header","createSelector","CVEStore","createCveDetailsPage","affectedSystemsByCVE","createExposedSystemsTable","sAllSystems","SystemsStore","useState","cveList","businessRiskId","setBusinessRiskId","setLabel","useEffect","getDefaultLabel","handleOnRadioChange","_","event","currentTarget","successNotification","businessRiskUpdateSuccessfulSingle","businessRiskUpdateSuccessfulPlural","cveCount","onSave","setBusinessRisk","parseInt","business_risk_text","onSuccessNotification","businessRiskModalInfo","businessRiskModalTitle","fieldId","businessRiskOptions","isChecked","onChange","justificationLabel","resizeOrientation","array","useStatusSelect","StatusSelect","statusId","useJustificationInput","JustificationInput","checkboxState","setCheckboxState","cveStatusModalUpdateSuccessfulSingle","cveStatusModalUpdateSuccessfulPlural","cveStatusModalTitlePlural","cveStatusModalTitleSingle","cveIds","setCveStatus","status_text","setSystemCveStatus","cveStatusModalOverwriteCheckbox","cveStatusModalOverwriteTooltip","checked","marginRight","cveStatusModalInfo","cveStatusModalInfoTooltip","defaultEqualityCheck","a","b","areArgumentsShallowlyEqual","equalityCheck","prev","next","defaultMemoize","arguments","lastArgs","lastResult","getDependencies","funcs","dependencies","every","dep","dependencyTypes","join","Error","createSelectorCreator","memoize","_len","memoizeOptions","_key","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","concat","selector","resetRecomputations","__esModule","createStructuredSelector","selectors","selectorCreator","objectKeys","_len3","_key3","reduce","composition","index","init","entities","modifyInventory","getSelectedFunc","loaded","lastSeenColumn","insights_id","has","myRows","slice","action","hasDifferentStatus","inventoryList","getCveJustification","setJustification","setJustificationProps","setProps","inventory","some","getDefaultCheckboxState","getCvestatus","getDefaultStatus","setStatusId","setSelectProps","inventoryIds","cve_status_id","cvePairStatusModalUpdateSuccessful","modalTitle","cvePairStatusModalTitleSingle","cvePairStatusModalTitlePlural","setStatusParams","isInline","cvePairStatusModalAlert","cvePairStatusModalUseOverallCve"],"mappings":"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","file":"js/CVEPage.js","sourcesContent":["exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js!@redhat-cloud-services/frontend-components-notifications/index.css\"), \"\");\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js!@redhat-cloud-services/frontend-components/index.css\"), \"\");\n\n// module\nexports.push([module.id, \":root {\\n  --ins-color--orange: #ec7a08; }\\n\\nbutton:focus {\\n  outline: none; }\\n\\n.ins-active-app-vulnerabilities .cvetable-toolbar,\\n.page__Vulnerabilities .cvetable-toolbar {\\n  justify-content: space-between; }\\n  .ins-active-app-vulnerabilities .cvetable-toolbar > div,\\n  .page__Vulnerabilities .cvetable-toolbar > div {\\n    align-self: flex-end; }\\n\\n.ins-active-app-vulnerabilities .space-between-toolbar-items,\\n.page__Vulnerabilities .space-between-toolbar-items {\\n  justify-content: space-between;\\n  flex-wrap: nowrap; }\\n  .ins-active-app-vulnerabilities .space-between-toolbar-items > div,\\n  .page__Vulnerabilities .space-between-toolbar-items > div {\\n    flex-wrap: nowrap; }\\n\\n.ins-active-app-vulnerabilities .vulnerability-toolbar-spacing,\\n.page__Vulnerabilities .vulnerability-toolbar-spacing {\\n  justify-content: flex-start; }\\n  .ins-active-app-vulnerabilities .vulnerability-toolbar-spacing > div:not(:last-child),\\n  .page__Vulnerabilities .vulnerability-toolbar-spacing > div:not(:last-child) {\\n    margin-right: var(--pf-global--spacer--sm); }\\n\\n@media screen and (max-width: 1100px) {\\n  .ins-active-app-vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-options-menu,\\n  .ins-active-app-vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-pagination__nav,\\n  .page__Vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-options-menu,\\n  .page__Vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-pagination__nav {\\n    display: none;\\n    visibility: hidden; }\\n  .ins-active-app-vulnerabilities .pf-c-pagination__total-items,\\n  .page__Vulnerabilities .pf-c-pagination__total-items {\\n    display: flex;\\n    visibility: visible; } }\\n\\n.ins-active-app-vulnerabilities .pf-c-pagination.pf-m-footer.ins-c-pagination-next,\\n.page__Vulnerabilities .pf-c-pagination.pf-m-footer.ins-c-pagination-next {\\n  margin-left: auto; }\\n\\n.ins-active-app-vulnerabilities #download-report,\\n.page__Vulnerabilities #download-report {\\n  cursor: pointer; }\\n\\n.ins-active-app-vulnerabilities .number-of-results,\\n.page__Vulnerabilities .number-of-results {\\n  display: inline-block;\\n  min-width: 55px;\\n  text-align: right;\\n  margin-right: 5px; }\\n\\n.ins-active-app-vulnerabilities .table-header-icon,\\n.page__Vulnerabilities .table-header-icon {\\n  margin-right: 5px;\\n  margin-right: 0.3125rem; }\\n\\n.ins-active-app-vulnerabilities .status-dropdown-column > svg,\\n.page__Vulnerabilities .status-dropdown-column > svg {\\n  color: var(--pf-global--primary-color--100); }\\n\\n.ins-active-app-vulnerabilities .status-dropdown-column:hover,\\n.page__Vulnerabilities .status-dropdown-column:hover {\\n  cursor: pointer; }\\n  .ins-active-app-vulnerabilities .status-dropdown-column:hover > svg,\\n  .page__Vulnerabilities .status-dropdown-column:hover > svg {\\n    visibility: visible; }\\n\\n.ins-active-app-vulnerabilities .status-dropdown-column > svg,\\n.page__Vulnerabilities .status-dropdown-column > svg {\\n  visibility: hidden; }\\n\\n.ins-active-app-vulnerabilities tbody > tr > td.pf-c-table__check,\\n.page__Vulnerabilities tbody > tr > td.pf-c-table__check {\\n  vertical-align: middle;\\n  padding-top: 0px !important;\\n  padding-bottom: 0px !important; }\\n\\n.ins-active-app-vulnerabilities thead > tr > td.pf-c-table__check,\\n.page__Vulnerabilities thead > tr > td.pf-c-table__check {\\n  visibility: hidden; }\\n\\n.ins-active-app-vulnerabilities p.pf-c-empty-state__body ul,\\n.page__Vulnerabilities p.pf-c-empty-state__body ul {\\n  margin-top: 0px;\\n  margin-bottom: var(--pf-global--spacer--sm); }\\n  .ins-active-app-vulnerabilities p.pf-c-empty-state__body ul li,\\n  .page__Vulnerabilities p.pf-c-empty-state__body ul li {\\n    margin-top: 0px; }\\n\\n@media (max-width: 1500px) and (min-width: 992px) {\\n  .ins-active-app-vulnerabilities .hide-description,\\n  .page__Vulnerabilities .hide-description {\\n    --pf-hidden-visible--Display: var(\\n                --pf-hidden-visible--hidden--Display\\n            );\\n    --pf-hidden-visible--Visibility: var(\\n                --pf-hidden-visible--hidden--Visibility\\n            ); } }\\n\\n@media (min-width: 1400px) {\\n  .ins-active-app-vulnerabilities .remediation-btn-sml,\\n  .page__Vulnerabilities .remediation-btn-sml {\\n    display: none;\\n    visibility: hidden; } }\\n\\n@media (max-width: 1400px) {\\n  .ins-active-app-vulnerabilities .remediation-btn-lg,\\n  .page__Vulnerabilities .remediation-btn-lg {\\n    display: none;\\n    visibility: none; } }\\n\\n.ins-active-app-vulnerabilities .col-width-10,\\n.page__Vulnerabilities .col-width-10 {\\n  width: 10%; }\\n\\n.ins-active-app-vulnerabilities .col-width-15,\\n.page__Vulnerabilities .col-width-15 {\\n  width: 15%; }\\n\\n.ins-active-app-vulnerabilities .col-width-description,\\n.page__Vulnerabilities .col-width-description {\\n  width: 35%; }\\n\\n.ins-active-app-vulnerabilities .no-wrap,\\n.page__Vulnerabilities .no-wrap {\\n  white-space: nowrap; }\\n\\n.ins-active-app-vulnerabilities .pf-c-table__expandable-row-content,\\n.page__Vulnerabilities .pf-c-table__expandable-row-content {\\n  white-space: normal; }\\n\\n.ins-active-app-vulnerabilities tr.pf-m-expanded .pf-c-table__action,\\n.page__Vulnerabilities tr.pf-m-expanded .pf-c-table__action {\\n  display: none; }\\n\\n.ins-active-app-vulnerabilities .pf-c-table__check,\\n.page__Vulnerabilities .pf-c-table__check {\\n  vertical-align: unset !important; }\\n\\n.page__Vulnerabilities {\\n  overflow-x: auto !important; }\\n  .page__Vulnerabilities .pf-c-page__main {\\n    overflow-x: auto; }\\n\\nimg.pf-c-avatar {\\n  height: var(--pf-global--FontSize--4xl); }\\n\\n.cvepage-st-business-risk-value {\\n  border-bottom: black 2px dotted; }\\n\\n.splitter {\\n  margin-bottom: var(--pf-global--spacer--sm) !important;\\n  margin-top: var(--pf-global--spacer--sm) !important; }\\n\\n.status-breakdown-table tr th {\\n  font-weight: normal;\\n  padding-left: 0px;\\n  padding-right: var(--pf-global--spacer--md);\\n  padding-bottom: var(--pf-global--spacer--sm); }\\n  .status-breakdown-table tr th:last-child {\\n    text-align: right; }\\n\\n.status-breakdown-table tr td {\\n  padding-left: 0px;\\n  padding-right: var(--pf-global--spacer--md);\\n  white-space: nowrap;\\n  padding-top: var(--pf-global--spacer--sm);\\n  padding-bottom: var(--pf-global--spacer--sm); }\\n  .status-breakdown-table tr td:last-child {\\n    text-align: right; }\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEInfoBox.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEInfoBox.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEInfoBox.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js!@redhat-cloud-services/frontend-components-notifications/index.css\"), \"\");\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js!@redhat-cloud-services/frontend-components/index.css\"), \"\");\n\n// module\nexports.push([module.id, \":root {\\n  --ins-color--orange: #ec7a08; }\\n\\nbutton:focus {\\n  outline: none; }\\n\\n.ins-active-app-vulnerabilities .cvetable-toolbar,\\n.page__Vulnerabilities .cvetable-toolbar {\\n  justify-content: space-between; }\\n  .ins-active-app-vulnerabilities .cvetable-toolbar > div,\\n  .page__Vulnerabilities .cvetable-toolbar > div {\\n    align-self: flex-end; }\\n\\n.ins-active-app-vulnerabilities .space-between-toolbar-items,\\n.page__Vulnerabilities .space-between-toolbar-items {\\n  justify-content: space-between;\\n  flex-wrap: nowrap; }\\n  .ins-active-app-vulnerabilities .space-between-toolbar-items > div,\\n  .page__Vulnerabilities .space-between-toolbar-items > div {\\n    flex-wrap: nowrap; }\\n\\n.ins-active-app-vulnerabilities .vulnerability-toolbar-spacing,\\n.page__Vulnerabilities .vulnerability-toolbar-spacing {\\n  justify-content: flex-start; }\\n  .ins-active-app-vulnerabilities .vulnerability-toolbar-spacing > div:not(:last-child),\\n  .page__Vulnerabilities .vulnerability-toolbar-spacing > div:not(:last-child) {\\n    margin-right: var(--pf-global--spacer--sm); }\\n\\n@media screen and (max-width: 1100px) {\\n  .ins-active-app-vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-options-menu,\\n  .ins-active-app-vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-pagination__nav,\\n  .page__Vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-options-menu,\\n  .page__Vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-pagination__nav {\\n    display: none;\\n    visibility: hidden; }\\n  .ins-active-app-vulnerabilities .pf-c-pagination__total-items,\\n  .page__Vulnerabilities .pf-c-pagination__total-items {\\n    display: flex;\\n    visibility: visible; } }\\n\\n.ins-active-app-vulnerabilities .pf-c-pagination.pf-m-footer.ins-c-pagination-next,\\n.page__Vulnerabilities .pf-c-pagination.pf-m-footer.ins-c-pagination-next {\\n  margin-left: auto; }\\n\\n.ins-active-app-vulnerabilities #download-report,\\n.page__Vulnerabilities #download-report {\\n  cursor: pointer; }\\n\\n.ins-active-app-vulnerabilities .number-of-results,\\n.page__Vulnerabilities .number-of-results {\\n  display: inline-block;\\n  min-width: 55px;\\n  text-align: right;\\n  margin-right: 5px; }\\n\\n.ins-active-app-vulnerabilities .table-header-icon,\\n.page__Vulnerabilities .table-header-icon {\\n  margin-right: 5px;\\n  margin-right: 0.3125rem; }\\n\\n.ins-active-app-vulnerabilities .status-dropdown-column > svg,\\n.page__Vulnerabilities .status-dropdown-column > svg {\\n  color: var(--pf-global--primary-color--100); }\\n\\n.ins-active-app-vulnerabilities .status-dropdown-column:hover,\\n.page__Vulnerabilities .status-dropdown-column:hover {\\n  cursor: pointer; }\\n  .ins-active-app-vulnerabilities .status-dropdown-column:hover > svg,\\n  .page__Vulnerabilities .status-dropdown-column:hover > svg {\\n    visibility: visible; }\\n\\n.ins-active-app-vulnerabilities .status-dropdown-column > svg,\\n.page__Vulnerabilities .status-dropdown-column > svg {\\n  visibility: hidden; }\\n\\n.ins-active-app-vulnerabilities tbody > tr > td.pf-c-table__check,\\n.page__Vulnerabilities tbody > tr > td.pf-c-table__check {\\n  vertical-align: middle;\\n  padding-top: 0px !important;\\n  padding-bottom: 0px !important; }\\n\\n.ins-active-app-vulnerabilities thead > tr > td.pf-c-table__check,\\n.page__Vulnerabilities thead > tr > td.pf-c-table__check {\\n  visibility: hidden; }\\n\\n.ins-active-app-vulnerabilities p.pf-c-empty-state__body ul,\\n.page__Vulnerabilities p.pf-c-empty-state__body ul {\\n  margin-top: 0px;\\n  margin-bottom: var(--pf-global--spacer--sm); }\\n  .ins-active-app-vulnerabilities p.pf-c-empty-state__body ul li,\\n  .page__Vulnerabilities p.pf-c-empty-state__body ul li {\\n    margin-top: 0px; }\\n\\n@media (max-width: 1500px) and (min-width: 992px) {\\n  .ins-active-app-vulnerabilities .hide-description,\\n  .page__Vulnerabilities .hide-description {\\n    --pf-hidden-visible--Display: var(\\n                --pf-hidden-visible--hidden--Display\\n            );\\n    --pf-hidden-visible--Visibility: var(\\n                --pf-hidden-visible--hidden--Visibility\\n            ); } }\\n\\n@media (min-width: 1400px) {\\n  .ins-active-app-vulnerabilities .remediation-btn-sml,\\n  .page__Vulnerabilities .remediation-btn-sml {\\n    display: none;\\n    visibility: hidden; } }\\n\\n@media (max-width: 1400px) {\\n  .ins-active-app-vulnerabilities .remediation-btn-lg,\\n  .page__Vulnerabilities .remediation-btn-lg {\\n    display: none;\\n    visibility: none; } }\\n\\n.ins-active-app-vulnerabilities .col-width-10,\\n.page__Vulnerabilities .col-width-10 {\\n  width: 10%; }\\n\\n.ins-active-app-vulnerabilities .col-width-15,\\n.page__Vulnerabilities .col-width-15 {\\n  width: 15%; }\\n\\n.ins-active-app-vulnerabilities .col-width-description,\\n.page__Vulnerabilities .col-width-description {\\n  width: 35%; }\\n\\n.ins-active-app-vulnerabilities .no-wrap,\\n.page__Vulnerabilities .no-wrap {\\n  white-space: nowrap; }\\n\\n.ins-active-app-vulnerabilities .pf-c-table__expandable-row-content,\\n.page__Vulnerabilities .pf-c-table__expandable-row-content {\\n  white-space: normal; }\\n\\n.ins-active-app-vulnerabilities tr.pf-m-expanded .pf-c-table__action,\\n.page__Vulnerabilities tr.pf-m-expanded .pf-c-table__action {\\n  display: none; }\\n\\n.ins-active-app-vulnerabilities .pf-c-table__check,\\n.page__Vulnerabilities .pf-c-table__check {\\n  vertical-align: unset !important; }\\n\\n.page__Vulnerabilities {\\n  overflow-x: auto !important; }\\n  .page__Vulnerabilities .pf-c-page__main {\\n    overflow-x: auto; }\\n\\nimg.pf-c-avatar {\\n  height: var(--pf-global--FontSize--4xl); }\\n\\n.infobox-square {\\n  background-color: var(--pf-global--BackgroundColor--150);\\n  border: var(--pf-global--BorderColor--300) var(--pf-global--BorderWidth--sm) solid;\\n  height: 65px; }\\n  .infobox-square > .pf-l-split__item:first-child {\\n    width: 65px;\\n    color: black;\\n    background-color: white; }\\n    .infobox-square > .pf-l-split__item:first-child:not(.severity-unknown) > div.pf-l-bullseye svg {\\n      color: white; }\\n  .infobox-square h3,\\n  .infobox-square h6 {\\n    margin: 0; }\\n  .infobox-square > .pf-l-split__item:nth-child(2) {\\n    display: flex;\\n    justify-content: flex-start;\\n    align-items: center; }\\n\\n.severity-low {\\n  background-color: var(--pf-global--Color--200) !important; }\\n\\n.severity-critical {\\n  background-color: var(--pf-global--danger-color--100) !important; }\\n\\n.severity-moderate {\\n  background-color: var(--pf-global--warning-color--100) !important; }\\n\\n.severity-color-important {\\n  background-color: #ec7a08 !important; }\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CvssVector.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CvssVector.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CvssVector.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".severity-info-box > div > div:nth-child(3) h6 .ins-c-skeleton {\\n  max-height: 30px !important;\\n  max-width: 30% !important; }\\n\\n.severity-info-box > div > div:nth-child(3) div > .ins-c-skeleton {\\n  max-height: 25px !important;\\n  max-width: 80% !important; }\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./SystemsExposedTable.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./SystemsExposedTable.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./SystemsExposedTable.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".affected-systems-toolbar {\\n  justify-content: flex-start; }\\n  .affected-systems-toolbar > div {\\n    margin-right: var(--pf-global--spacer--sm); }\\n\\n.affected-systems-filter-chips {\\n  order: 5;\\n  flex-basis: 100%; }\\n\", \"\"]);\n\n// exports\n","import { Popover, Stack, StackItem } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport Label from '../Snippets/Label';\nimport './CVEPageDetailsDescription.scss';\n\nconst SnippetWithHeaderAndPopover = props => {\n    const { title, value, content } = props;\n\n    return (\n        <Popover bodyContent={content} headerContent={''} aria-label={'Business risk popover'} position=\"right\">\n            <Stack style={{ display: 'inline-block', cursor: 'pointer' }}>\n                <StackItem>\n                    <Label>{title}</Label>\n                </StackItem>\n                <StackItem>{value}</StackItem>\n            </Stack>\n        </Popover>\n    );\n};\n\nSnippetWithHeaderAndPopover.propTypes = {\n    title: propTypes.any,\n    value: propTypes.any,\n    content: propTypes.any\n};\nexport default SnippetWithHeaderAndPopover;\n","import { Stack, StackItem, Text, TextContent, TextVariants, Flex, FlexItem } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { PatternFlyThemeProvider, StyledBox, StyledText, StyledConstants } from '@patternfly/react-styled-system';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { STATUS_OPTIONS } from '../../../Helpers/constants';\nimport './CVEPageDetailsDescription.scss';\nimport SnippetWithHeaderAndPopover from './SnippetWithHeaderAndTooltip';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst CVEPageDetailsDescription = ({ cveAttributes, intl }) => {\n    const {\n        public_date: publishDate,\n        description,\n        rh_link: link,\n        business_risk: businessRisk,\n        business_risk_justification: businessRiskJustification,\n        status,\n        status_justification: statusJustification,\n        systems_status_detail: systemsStatusDetail,\n        systems_status_divergent: systemsStatusDivergent\n    } = cveAttributes;\n\n    const detailRows =\n        systemsStatusDetail &&\n        Object.keys(systemsStatusDetail).map(item => [\n            STATUS_OPTIONS.find(status => status.value === item.toString()).label,\n            systemsStatusDetail[item].toString()\n        ]);\n\n    const brPopoverContent = (\n        <TextContent>\n            <Stack>\n                <StackItem>\n                    <StyledText\n                        fontWeight={StyledConstants.fontWeights.bold}\n                        fontSize={StyledConstants.fontSizes.sm}\n                        lineHeight={StyledConstants.lineHeights.sm}\n                    >\n                        {intl.formatMessage(messages.justificationNote)}\n                    </StyledText>\n                </StackItem>\n                <StackItem>{businessRiskJustification || '--'}</StackItem>\n            </Stack>\n        </TextContent>\n    );\n\n    const statusPopoverContent = (\n        <Stack>\n            <StackItem>\n                <StyledText\n                    fontWeight={StyledConstants.fontWeights.bold}\n                    fontSize={StyledConstants.fontSizes.sm}\n                    lineHeight={StyledConstants.lineHeights.sm}\n                >\n                    {intl.formatMessage(messages.cveStatus)}\n                </StyledText>\n                {status || '--'}\n\n                <StyledText\n                    fontWeight={StyledConstants.fontWeights.bold}\n                    fontSize={StyledConstants.fontSizes.sm}\n                    lineHeight={StyledConstants.lineHeights.sm}\n                    style={{ marginTop: 'var(--pf-global--spacer--sm)' }}\n                >\n                    {intl.formatMessage(messages.justificationNote)}\n                </StyledText>\n                {statusJustification || '--'}\n            </StackItem>\n            {systemsStatusDivergent > 0 && (\n                <StackItem>\n                    <TextContent>\n                        <hr className={'splitter'} />\n                    </TextContent>\n                    <StyledText fontWeight={StyledConstants.fontWeights.semi_bold} lineHeight={StyledConstants.lineHeights.sm}>\n                        {intl.formatMessage(messages.cvePageDetailsSystemsWTCves)}\n                    </StyledText>\n                    <Table\n                        aria-label={'Status details'}\n                        borders={false}\n                        gridBreakPoint={null}\n                        cells={[intl.formatMessage(messages.statusLabel), intl.formatMessage(messages.count)]}\n                        rows={detailRows}\n                        className={'status-breakdown-table'}\n                    >\n                        <TableHeader />\n                        <TableBody />\n                    </Table>\n                </StackItem>\n            )}\n        </Stack>\n    );\n    return (\n        <PatternFlyThemeProvider>\n            <Stack gutter=\"sm\">\n                <StackItem />\n                <StackItem>\n                    <Flex>\n                        <FlexItem breakpointMods={[{ modifier: 'spacer-xl' }]}>\n                            <SnippetWithHeaderAndPopover\n                                title={intl.formatMessage(messages.businessRiskLabel)}\n                                value={businessRisk}\n                                content={brPopoverContent}\n                            />\n                        </FlexItem>\n                        <FlexItem breakpointMods={[{ modifier: 'spacer-xl' }]}>\n                            <SnippetWithHeaderAndPopover\n                                title={intl.formatMessage(messages.statusLabel)}\n                                content={statusPopoverContent}\n                                value={\n                                    <span>\n                                        {systemsStatusDivergent > 0 && (\n                                            <ExclamationTriangleIcon color={'var(--pf-global--warning-color--100)'} />\n                                        )}{' '}\n                                        {status}\n                                    </span>\n                                }\n                            />\n                        </FlexItem>\n                    </Flex>\n                </StackItem>\n                <StackItem>\n                    <TextContent>\n                        <Text component={TextVariants.p}>{description}</Text>\n                    </TextContent>\n                </StackItem>\n                <StackItem>\n                    <StyledBox style={{ marginBottom: 'var(--pf-global--spacer--xs)' }}>\n                        {intl.formatMessage(messages.publishDate)}: {publishDate}\n                    </StyledBox>\n                    <StyledBox>{link}</StyledBox>\n                </StackItem>\n            </Stack>\n        </PatternFlyThemeProvider>\n    );\n};\n\nCVEPageDetailsDescription.propTypes = {\n    cveAttributes: propTypes.any,\n    intl: propTypes.any\n};\n\nexport default injectIntl(CVEPageDetailsDescription);\n","import { Skeleton, SkeletonSize, Spinner } from '@redhat-cloud-services/frontend-components';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport ContentLoader, { BulletList, List } from 'react-content-loader';\n\nconst WithLoader = props => {\n    if (props === undefined || props.loading !== false) {\n        switch (props.variant) {\n            case 'spinner':\n                return <Spinner centered />;\n            case 'cvePageOverviewItem':\n                return <CVEPageOverviewItemLoader />;\n            case 'list':\n                return <List />;\n            case 'bulletList':\n                return <BulletList />;\n            case 'trendBox':\n                return <TrendBoxLoader />;\n            case 'currentVulnerabilitiesItem':\n                return <CurrentVulnerabilitiesItemLoader />;\n            default:\n                return <Skeleton size={SkeletonSize.lg} />;\n        }\n    }\n\n    return props.children;\n};\n\n// Loaders\nconst CVEPageOverviewItemLoader = () => {\n    return (\n        <ContentLoader height={61} width={120}>\n            <rect x=\"35\" y=\"0\" rx=\"0\" ry=\"0\" width=\"50\" height=\"35\" />\n            <rect x=\"0\" y=\"45\" rx=\"0\" ry=\"0\" width=\"120\" height=\"16\" />\n        </ContentLoader>\n    );\n};\n\nconst TrendBoxLoader = () => {\n    return (\n        <ContentLoader height={100} width={300}>\n            <rect x=\"388.58\" y=\"109.13\" rx=\"0\" ry=\"0\" width=\"0\" height=\"0\" />\n            <rect x=\"11.58\" y=\"16.13\" rx=\"0\" ry=\"0\" width=\"37\" height=\"62\" />\n            <rect x=\"52.58\" y=\"52.13\" rx=\"0\" ry=\"0\" width=\"17\" height=\"26\" />\n            <rect x=\"76.58\" y=\"52.13\" rx=\"0\" ry=\"0\" width=\"17\" height=\"26\" />\n            <rect x=\"4.58\" y=\"82.13\" rx=\"0\" ry=\"0\" width=\"154\" height=\"22\" />\n        </ContentLoader>\n    );\n};\n\nconst CurrentVulnerabilitiesItemLoader = () => {\n    return (\n        <ContentLoader height={50} width={200} speed={2} primaryColor=\"#f3f3f3\" secondaryColor=\"#ecebeb\">\n            <rect x=\"82.58\" y=\"15.13\" rx=\"0\" ry=\"0\" width=\"110.88\" height=\"21.42\" />\n            <circle cx=\"25\" cy=\"25\" r=\"25\" />\n        </ContentLoader>\n    );\n};\n\nWithLoader.propTypes = {\n    loading: propTypes.bool,\n    variant: propTypes.string\n};\n\nexport default WithLoader;\n","import { Bullseye, Split, SplitItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { CVEPageContext } from '../../SmartComponents/CVEPage/CVEPage';\nimport WithLoader from '../WithLoader/WithLoader';\nimport './CVEInfoBox.scss';\n\nconst CVEInfoBox = (props) => {\n    return (\n        <CVEPageContext.Consumer>\n            {context => (\n                <Split className=\"infobox-square\" gutter=\"md\">\n                    <WithLoader loading={context.isLoading}>\n                        <SplitItem className={props.titleColor}>\n                            <Bullseye>{props.titleContent}</Bullseye>\n                        </SplitItem>\n                        <SplitItem isFilled>\n                            <TextContent>\n                                <Text component={TextVariants.h6}>{props.descriptionTitle}</Text>\n                                <Text component={TextVariants.p}>{props.descriptionContent}</Text>\n                            </TextContent>\n                        </SplitItem>\n                    </WithLoader>\n                </Split>\n            )}\n        </CVEPageContext.Consumer>\n    );\n};\n\nCVEInfoBox.propTypes = {\n    titleContent: propTypes.any,\n    titleColor: propTypes.any,\n    descriptionContent: propTypes.any,\n    descriptionTitle: propTypes.any\n};\n\nexport default CVEInfoBox;\n","import { createIntl, createIntlCache } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst cache = createIntlCache();\nconst locale = navigator.language;\nconst intl = createIntl({\n    // eslint-disable-next-line no-console\n    onError: console.log,\n    locale\n}, cache);\n\nexport const V3names = {\n    AV: {\n        name: intl.formatMessage(messages.vectorNamesV3AV),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNetwork),\n            A: intl.formatMessage(messages.vectorValuesAdjacent),\n            L: intl.formatMessage(messages.vectorValuesLocal),\n            P: intl.formatMessage(messages.vectorValuesPhysical)\n        }\n    },\n    AC: {\n        name: intl.formatMessage(messages.vectorNamesV3AC),\n        values: {\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    PR: {\n        name: intl.formatMessage(messages.vectorNamesV3PR),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    UI: {\n        name: intl.formatMessage(messages.vectorNamesV3UI),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            R: intl.formatMessage(messages.vectorValuesRequired)\n        }\n    },\n    S: {\n        name: intl.formatMessage(messages.vectorNamesV3S),\n        values: {\n            U: intl.formatMessage(messages.vectorValuesUnchanged),\n            C: intl.formatMessage(messages.vectorValuesChanged)\n        }\n    },\n    C: {\n        name: intl.formatMessage(messages.vectorNamesV3C),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    I: {\n        name: intl.formatMessage(messages.vectorNamesV3I),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    A: {\n        name: intl.formatMessage(messages.vectorNamesV3A),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    CVSS: {\n        name: intl.formatMessage(messages.vectorNamesCvssVersion),\n        values: {\n            '3.0': 3.0\n        }\n    }\n};\n\nexport const V2names = {\n    AV: {\n        name: intl.formatMessage(messages.vectorNamesV2AV),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNetwork),\n            A: intl.formatMessage(messages.vectorValuesAdjacentNetwork),\n            L: intl.formatMessage(messages.vectorValuesLocal)\n        }\n    },\n    AC: {\n        name: intl.formatMessage(messages.vectorNamesV2AC),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    Au: {\n        name: intl.formatMessage(messages.vectorNamesV2AU),\n        values: {\n            M: intl.formatMessage(messages.vectorValuesMultiple),\n            S: intl.formatMessage(messages.vectorValuesSingle),\n            N: intl.formatMessage(messages.vectorValuesNone)\n        }\n    },\n    C: {\n        name: intl.formatMessage(messages.vectorNamesV2C),\n        values: {\n            C: intl.formatMessage(messages.vectorValuesComplete),\n            P: intl.formatMessage(messages.vectorValuesPartial),\n            N: intl.formatMessage(messages.vectorValuesNone)\n        }\n    },\n    I: {\n        name: intl.formatMessage(messages.vectorNamesV2I),\n        values: {\n            C: intl.formatMessage(messages.vectorValuesComplete),\n            P: intl.formatMessage(messages.vectorValuesPartial),\n            N: intl.formatMessage(messages.vectorValuesNone)\n        }\n    },\n    A: {\n        name: intl.formatMessage(messages.vectorNamesV2A),\n        values: {\n            C: intl.formatMessage(messages.vectorValuesComplete),\n            P: intl.formatMessage(messages.vectorValuesPartial),\n            N: intl.formatMessage(messages.vectorValuesNone)\n        }\n    }\n};\n","import { Popover, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { QuestionCircleIcon } from '@patternfly/react-icons';\nimport { Table, TableBody, TableHeader, TableVariant } from '@patternfly/react-table';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { CVEPageContext } from '../../SmartComponents/CVEPage/CVEPage';\nimport WithLoader from '../WithLoader/WithLoader';\nimport './CvssVector.scss';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport { V3names, V2names } from './vectorNames';\n\nexport const parseVector = (vector, namesMapping) => {\n    let res = {};\n    vector &&\n        vector.split('/').forEach(curr => {\n            let [key, val] = curr.split(':');\n            const name = namesMapping[key] && namesMapping[key].name;\n            const value = (namesMapping[key] && namesMapping[key].values[val]) || 'N/A';\n            if (name) {\n                res[name] = value;\n            }\n        });\n    return res;\n};\n\nconst CvssVector = props => {\n    const { cvss2_metrics: CVSS2Vector, cvss3_metrics: CVSS3Vector, intl } = props;\n    const cvssVer = (CVSS3Vector && 'CVSS 3.0') || (CVSS2Vector && 'CVSS 2.0') || 'CVSS 3.0';\n    const cvssVector = CVSS3Vector || CVSS2Vector;\n    const namesMapping = (CVSS3Vector && V3names) || (CVSS2Vector && V2names);\n    const parsedVector = parseVector(cvssVector, namesMapping);\n    const notAvailable = 'N/A';\n    // eslint-disable-next-line no-unused-vars\n    const { cvssVersion, ...values } = parsedVector;\n\n    return (\n        <CVEPageContext.Consumer>\n            {context => (\n                <TextContent>\n                    <WithLoader loading={context.isLoading}>\n                        <Popover\n                            position=\"bottom\"\n                            maxWidth={'100%'}\n                            enableFlip\n                            headerContent={ `${cvssVer} ${intl.formatMessage(messages.cvssVectorPopoverTitle)}` }\n                            bodyContent={\n                                cvssVector ?\n                                    (\n                                        <Table\n                                            aria-label={'Metric breakdown'}\n                                            variant={TableVariant.compact}\n                                            borders={false}\n                                            gridBreakPoint={null}\n                                            cells={\n                                                [intl.formatMessage(messages.cvssVectorMetric),\n                                                    intl.formatMessage(messages.cvssVectorValue)]\n                                            }\n                                            rows={Object.entries(values)}\n                                        >\n                                            <TableHeader />\n                                            <TableBody />\n                                        </Table>\n                                    ) : (notAvailable)\n                            }\n                        >\n                            <React.Fragment>\n                                <Text component={TextVariants.h6} style={{ display: 'inline-block' }}>\n                                    {cvssVer} {intl.formatMessage(messages.cvssVectorVectorString)}\n                                    <a>\n                                        <QuestionCircleIcon />\n                                    </a>\n                                </Text>\n                                <br />\n                            </React.Fragment>\n                        </Popover>\n                    </WithLoader>\n\n                    <WithLoader loading={context.isLoading}>{cvssVector || notAvailable} </WithLoader>\n                </TextContent>\n            )}\n        </CVEPageContext.Consumer>\n    );\n};\n\nCvssVector.propTypes = {\n    cvss2_metrics: propTypes.string,\n    cvss3_metrics: propTypes.string,\n    intl: propTypes.any\n};\n\nexport default injectIntl(CvssVector);\n","import { Popover, Stack, StackItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { parseCvssScore } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { getImpactDetails } from '../../../Helpers/MiscHelper';\nimport CVEInfoBox from '../CVEInfoBox/CVEInfoBox';\nimport CvssVector from '../CvssVector/CvssVector';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst learnMorePopover = (cveDetails, intl) => {\n    return (\n        <Popover\n            position=\"bottom\"\n            enableFlip\n            headerContent={<div>{cveDetails.title + intl.formatMessage(messages.cvePageSeverityDetailsImpact)}</div>}\n            bodyContent={\n                <TextContent>\n                    <Text component={TextVariants.p}>{cveDetails.text}</Text>\n                </TextContent>\n            }\n            footerContent={\n                <a href=\"https://access.redhat.com/security/updates/classification/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    {intl.formatMessage(messages.cvePageSeverityDetailsLearnMoreRatings)}  <ExternalLinkAltIcon />\n                </a>\n            }\n        >\n            <a>{intl.formatMessage(messages.cvePageSeverityDetailsLearnMore)}</a>\n        </Popover>\n    );\n};\n\nconst CVEPageDetailsSeverity = props => {\n    const cveDetails = getImpactDetails(props.impact);\n    const cvssVersion = (props.cvss3_score && 'CVSS 3.0') || (props.cvss2_score && 'CVSS 2.0') || 'CVSS 3.0';\n    return (\n        <React.Fragment>\n            <Stack gutter=\"sm\">\n                <StackItem>\n                    <CVEInfoBox\n                        titleColor={cveDetails.color}\n                        titleContent={cveDetails.titleContent}\n                        descriptionTitle={cveDetails.title + props.intl.formatMessage(messages.cvePageSeverityDetailsImpact)}\n                        descriptionContent={learnMorePopover(cveDetails, props.intl)}\n                    />\n                </StackItem>\n                <StackItem>\n                    <CVEInfoBox\n                        titleContent={\n                            <TextContent>\n                                <Text component={TextVariants.h3}>{parseCvssScore(props.cvss2_score, props.cvss3_score)}</Text>\n                            </TextContent>\n                        }\n                        descriptionTitle={cvssVersion + props.intl.formatMessage(messages.cvePageSeverityDetailsBaseScore)}\n                    />\n                </StackItem>\n\n                <StackItem>\n                    <CvssVector cvss2_metrics={props.cvss2_metrics} cvss3_metrics={props.cvss3_metrics} />\n                </StackItem>\n            </Stack>\n        </React.Fragment>\n    );\n};\n\nCVEPageDetailsSeverity.propTypes = {\n    impact: propTypes.string,\n    cvss2_score: propTypes.any,\n    cvss3_score: propTypes.any,\n    cvss2_metrics: propTypes.any,\n    cvss3_metrics: propTypes.any,\n    intl: propTypes.any\n};\n\nCVEPageDetailsSeverity.defaultProps = {\n    impact: 'Unknown',\n    cvss2_score: undefined,\n    cvss3_score: undefined,\n    cvss2_metrics: undefined,\n    cvss3_metrics: undefined\n};\n\nexport default injectIntl(CVEPageDetailsSeverity);\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { CVEPageContext } from '../../SmartComponents/CVEPage/CVEPage';\nimport CVEPageDetailsDescription from '../CVEPageDetailsDescription/CVEPageDetailsDescription';\nimport CVEPageDetailsSeverity from '../CVEPageDetailsSeverity/CVEPageDetailsSeverity';\nimport WithLoader from '../WithLoader/WithLoader';\n\nconst CVEPageDetails = props => {\n    return (\n        <CVEPageContext.Consumer>\n            {context => (\n                <Grid gutter=\"sm\">\n                    <GridItem md={8} sm={12}>\n                        <WithLoader loading={context.isLoading} variant=\"spinner\">\n                            <CVEPageDetailsDescription cveAttributes={props.data.data} />\n                        </WithLoader>\n                    </GridItem>\n\n                    <GridItem md={4} sm={12} className=\"severity-info-box\">\n                        <CVEPageDetailsSeverity\n                            impact={props.data.data.impact}\n                            cvss2_score={props.data.data.cvss2_score}\n                            cvss3_score={props.data.data.cvss3_score}\n                            cvss2_metrics={props.data.data.cvss2_metrics}\n                            cvss3_metrics={props.data.data.cvss3_metrics}\n                        />\n                    </GridItem>\n                </Grid>\n            )}\n        </CVEPageContext.Consumer>\n    );\n};\n\nCVEPageDetails.propTypes = {\n    data: propTypes.object\n};\n\nexport default CVEPageDetails;\n","import * as reactCore from '@patternfly/react-core';\nimport {\n    Text,\n    TextContent,\n    TextVariants,\n    ToolbarGroup,\n    ToolbarItem\n} from '@patternfly/react-core';\nimport * as reactIcons from '@patternfly/react-icons';\nimport * as pfReactTable from '@patternfly/react-table';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport RemediationButton from '@redhat-cloud-services/frontend-components-remediations/RemediationButton';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport debounce from 'lodash/debounce';\nimport propTypes from 'prop-types';\nimport qs from 'query-string';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as reactRouterDom from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport { filtersStatus, filterSystemName } from '../../../Helpers/constants';\nimport { dataShape } from '../../../Helpers/MiscHelper';\nimport { systemExposedTableRowActions } from '../../../Helpers/CVEHelper';\nimport {\n    fetchAffectedSystemsByCVE,\n    fetchCveDetails,\n    handleCveDetailsError,\n    selectEntities\n} from '../../../Store/Actions/Actions';\nimport { inventoryEntitiesReducer } from '../../../Store/Reducers/InventoryEntitiesReducer';\nimport { sExposedSystemsTable } from '../../../Store/Selectors/CVESelectors';\nimport ReducerRegistry, { middlewareListener } from '../../../Utilities/ReducerRegistry';\nimport FilterChips from '../../PresentationalComponents/Filters/FilterChips';\nimport Filters from '../../PresentationalComponents/Filters/Filters';\nimport SearchFilter from '../../PresentationalComponents/Filters/SearchFilter';\nimport './SystemsExposedTable.scss';\nimport CvePairStatusModal from '../Modals/CvePairStatusModal';\nimport BaseKebab from '../../PresentationalComponents/DownloadReportKebab/BaseKebab';\nimport {\n    kebabItemDownloadCSV,\n    kebabItemDownloadJSON,\n    kebabItemEditStatus\n} from '../../PresentationalComponents/DownloadReportKebab/KebabItems';\nimport SelectAllCheckbox from '../../PresentationalComponents/SelectAllCheckbox';\nimport messages from '../../../Messages';\nimport { injectIntl } from 'react-intl';\n/*eslint camelcase: 0*/\n\nclass SystemsExposedTable extends Component {\n    static propTypes = {\n        cve: propTypes.string,\n        cveStatusDetails: propTypes.object,\n        fetchData: propTypes.func,\n        fetchCveDetails: propTypes.func,\n        affectedSystems: dataShape,\n        history: propTypes.object,\n        handleCveDetailsError: propTypes.func,\n        createNotification: propTypes.func,\n        selectRows: propTypes.func,\n        selectMultiple: propTypes.func,\n        intl: propTypes.any\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            InventoryCmp: () => <div>Loading...</div>,\n            removeListener: () => { },\n            StatusModal: () => null,\n            filter: undefined,\n            columns: [\n                {\n                    key: 'display_name',\n                    title: this.props.intl.formatMessage(messages.systemsColumnHeaderName),\n                    composed: ['facts.os_release', 'display_name'],\n                    props: {\n                        width: 40\n                    }\n                },\n                {\n                    key: 'status',\n                    title: this.props.intl.formatMessage(messages.status),\n                    props: {\n                        width: 30\n                    }\n                }\n            ],\n            selected: new Set(),\n            selectListener: middlewareListener.addNew({\n                on: 'SELECT_ENTITY',\n                callback: payload => this.onSelect(payload)\n            }),\n            selectAllListener: middlewareListener.addNew({\n                on: 'SELECT_ENTITIES',\n                callback: payload => this.onSelect(payload)\n            })\n        };\n    }\n\n    componentDidMount() {\n        this.fetchInventory();\n        this.props.fetchData(this.props.cve, this.params());\n    }\n\n    shouldComponentUpdate(nextProps) {\n        return !nextProps.affectedSystems.isLoading;\n    }\n\n    onSelect = (payload) => {\n        let selected;\n        if (!payload.data || Array.isArray(payload.data)) {\n            selected = new Set(payload.data);\n        } else {\n            selected = this.state.selected;\n            payload.data.selected ? selected.add(payload.data.id) : selected.delete(payload.data.id);\n        }\n\n        this.setState({ selected }, this.props.selectMultiple);\n    };\n\n    getSelected = () => {\n        return this.state.selected;\n    };\n\n    dataProvider = () => {\n        return {\n            issues: [\n                {\n                    id: `vulnerabilities:${this.props.cve}`,\n                    description: this.props.cve\n                }\n            ],\n            systems: Array.from(this.getSelected())\n        };\n    };\n\n    // #TODO: can be better. Similar function exists in 2 other places.\n    createUrlParams = allParams => {\n        const params = { ...allParams };\n        const allowedParams = ['filter', 'page', 'page_size', 'status_id'];\n        Object.keys(allParams).forEach(\n            key =>\n                (params[key] === undefined || params[key] === '' || !allowedParams.includes(key) || params[key] === false) &&\n                delete params[key]\n        );\n        const queryString = qs.stringify(params);\n        this.props.history.push('?' + queryString);\n    };\n\n    dataReload = () => {\n        const { meta, data } = this.props.affectedSystems;\n        const lastPage = meta.page;\n        const { page } = this.state;\n        const reloadPage = page === lastPage && data.length === 1 ? 1 : meta.page;\n\n        this.setState(\n            {\n                ...this.state,\n                page: reloadPage,\n                page_size: meta.page_size,\n                filter: this.state.filter,\n                system_id: this.state.system_id\n            },\n            this.apply\n        );\n    };\n\n    apply = newFilter => {\n        this.setState({ ...this.state, ...newFilter }, () => {\n            this.sendRequest();\n        });\n    };\n\n    sendRequest = () => {\n        const { fetchData, cve, handleCveDetailsError } = this.props;\n\n        fetchData &&\n            fetchData(cve, this.params()).catch(() => {\n                handleCveDetailsError();\n            });\n\n        this.createUrlParams(this.state);\n    };\n\n    downloadReport = format => {\n        const { payload } =\n            // eslint-disable-next-line camelcase\n            fetchAffectedSystemsByCVE(this.props.cve, {\n                ...this.state,\n                data_format: format,\n                page: 1,\n                page_size: Number.MAX_SAFE_INTEGER\n            });\n        payload &&\n            payload.then(({ data: response }) => {\n                const data = format === 'json' ? JSON.stringify(response) : response;\n                return downloadFile(data, `systems_affected-${this.props.cve}-${new Date().toISOString()}`, format);\n            });\n    };\n\n    showStatusModal = (cves, inventories) => {\n        this.setState({\n            StatusModal: () => (\n                <CvePairStatusModal\n                    cves={cves}\n                    updateRef={() => {\n                        this.props.fetchData(this.props.cve, this.params());\n                        this.props.fetchCveDetails(this.props.cve);\n                    }}\n                    inventories={inventories}\n                />\n            )\n        });\n    };\n\n    async fetchInventory() {\n        const { inventoryConnector, mergeWithEntities, mergeWithDetail } = await insights.loadInventory({\n            react: React,\n            reactRouterDom,\n            reactCore,\n            reactIcons,\n            pfReactTable\n        });\n        ReducerRegistry.register({\n            ...mergeWithEntities(inventoryEntitiesReducer(this.state.columns, this.getSelected)),\n            ...mergeWithDetail()\n        });\n\n        this.setState({\n            InventoryCmp: inventoryConnector().InventoryTable\n        });\n    }\n\n    params = () => {\n        const { filter, page, page_size, status_id } = this.state;\n        return { filter, page, page_size, status_id };\n    };\n\n    handleFilterChange = debounce(value => {\n        this.setState({ ...this.state, filter: value }, this.apply);\n    }, 400);\n\n    handleRemediationCreated = result => {\n        this.props.createNotification(result.getNotification());\n        this.setState({ selected: new Set() });\n        this.props.fetchData(this.props.cve, this.params());\n    };\n\n    handleRefresh = ({ page, per_page: perPage }) => {\n        const { fetchData, cve } = this.props;\n        const { filter, status_id } = this.state;\n        const { meta } = this.props.affectedSystems;\n        if (meta.page !== page || meta.page_size !== perPage) {\n            const config = {\n                page,\n                page_size: perPage || meta.page_size,\n                filter,\n                status_id\n            };\n            fetchData(cve, config);\n            this.createUrlParams(config);\n        }\n    };\n\n    render() {\n        const { StatusModal } = this.state;\n        const { InventoryCmp, filter } = this.state;\n        const { affectedSystems, cveStatusDetails } = this.props;\n        const { data, meta } = affectedSystems;\n        const { showStatusModal } = this;\n        const methods = { showStatusModal };\n        const selectedInventoryIds = Array.from(this.getSelected()).map(selected => ({ id: selected }));\n\n        const kebabOptions = [\n            kebabItemEditStatus(methods.showStatusModal, [cveStatusDetails], selectedInventoryIds, {\n                isDisabled: !selectedInventoryIds.length\n            }),\n            kebabItemDownloadJSON(this.downloadReport),\n            kebabItemDownloadCSV(this.downloadReport)\n        ];\n        return (\n            <React.Fragment>\n                <TextContent>\n                    <Text component={TextVariants.h2}>\n                        {this.props.intl.formatMessage(messages.systemsExposedTableHeader)}\n                    </Text>\n                </TextContent>\n                <InventoryCmp\n                    key={'inventory'}\n                    hasCheckbox={data.length !== 0}\n                    showActions={data.length !== 0}\n                    actions={systemExposedTableRowActions(methods, cveStatusDetails)}\n                    page={meta.page}\n                    total={meta.total_items}\n                    perPage={meta.page_size}\n                    onRefresh={this.handleRefresh}\n                    items={data.map(item => ({\n                        id: item.attributes.inventory_id,\n                        ...item.attributes\n                    }))}\n                >\n                    <ToolbarGroup className={'affected-systems-toolbar'}>\n\n                        <SelectAllCheckbox\n                            selectedItems={this.state.selected}\n                            selectorHandler={this.props.selectRows}\n                            items={affectedSystems}\n                            fetchResource={ops => fetchAffectedSystemsByCVE(this.props.cve, { ...this.params, ...ops })}\n                        />\n                        <ToolbarItem>\n                            <SearchFilter\n                                placeholder={this.props.intl.formatMessage(messages.searchFindByName)}\n                                value={filter}\n                                apply={this.apply}\n                            />\n                        </ToolbarItem>\n                        <Filters\n                            filterCategories={[filtersStatus]}\n                            filterValues={this.params()}\n                            apply={this.apply}\n                        />\n                        <ToolbarItem>\n                            <RemediationButton\n                                dataProvider={this.dataProvider}\n                                isDisabled={this.state.selected.size === 0}\n                                onRemediationCreated={this.handleRemediationCreated}\n                            />\n                        </ToolbarItem>\n                        <ToolbarItem>\n                            <BaseKebab dropdownItems={kebabOptions} disabled={data.length === 0} />\n                        </ToolbarItem>\n                    </ToolbarGroup>\n                    <TableToolbar className=\"pf-u-pl-0 affected-systems-filter-chips\">\n                        <ToolbarGroup>\n                            <ToolbarItem>\n                                <FilterChips\n                                    filterValues={this.params()}\n                                    filterCategories={[filterSystemName, filtersStatus]}\n                                    apply={this.apply}\n                                />\n                            </ToolbarItem>\n                        </ToolbarGroup>\n                    </TableToolbar>\n                    <StatusModal />\n                </InventoryCmp>\n            </React.Fragment>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        affectedSystems: sExposedSystemsTable(state, ownProps.cve)\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchData: (cve, options) => dispatch(fetchAffectedSystemsByCVE(cve, options)),\n        fetchCveDetails: cveName => dispatch(fetchCveDetails(cveName)),\n        handleCveDetailsError: () => dispatch(handleCveDetailsError, selectEntities()),\n        selectRows: (value, ids) => dispatch(selectEntities(value, ids)),\n        createNotification: content => dispatch(addNotification(content)),\n        selectMultiple: () => dispatch({ type: 'SELECT_MULTIPLE_ENTITIES' })\n\n    };\n};\n\nexport default injectIntl(\n    withRouter(\n        connect(\n            mapStateToProps,\n            mapDispatchToProps\n        )(SystemsExposedTable)\n    )\n);\n","import { DropdownPosition, Page } from '@patternfly/react-core';\nimport { InvalidObject, Main } from '@redhat-cloud-services/frontend-components';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { fetchAffectedSystemsByCVE, fetchCveDetails, handleCveDetailsError, setHeader } from '../../../Store/Actions/Actions';\nimport { sCveDetailsPage } from '../../../Store/Selectors/CVESelectors';\nimport { paths } from '../../../Utilities/Routes';\nimport CVEPageDetails from '../../PresentationalComponents/CVEPageDetails/CVEPageDetails';\nimport BaseKebab from '../../PresentationalComponents/DownloadReportKebab/BaseKebab';\nimport { kebabItemEditBusinessRisk, kebabItemEditStatus } from '../../PresentationalComponents/DownloadReportKebab/KebabItems';\nimport BusinessRiskModal from '../Modals/BusinessRiskModal';\nimport CveStatusModal from '../Modals/CveStatusModal';\nimport SystemsExposedTable from '../SystemsExposedTable/SystemsExposedTable';\nimport VulnerabilityHeader from '../VulnerabilityHeader/VulnerabilityHeader';\n\nexport const CVEPageContext = React.createContext({ isLoading: true });\n\nclass CVEPage extends React.Component {\n    static propTypes = {\n        match: propTypes.object,\n        cveDetails: propTypes.object,\n        fetchCveDetails: propTypes.func,\n        setHeader: propTypes.func,\n        handleCveDetailsError: propTypes.func,\n        fetchAffectedSystems: propTypes.func\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = { cveName: this.props.match.params.cve, BusinessRiskModal: () => null, StatusModal: () => null };\n    }\n\n    componentDidMount() {\n        const { fetchCveDetails, handleCveDetailsError, setHeader } = this.props;\n\n        setHeader({\n            breadcrumbs: [\n                { title: paths.vulnerabilities.title, to: paths.vulnerabilities.to },\n                { title: paths.vulnerabilitiesCves.title, to: paths.vulnerabilitiesCves.to },\n                { title: this.state.cveName, isActive: true }\n            ]\n        });\n\n        fetchCveDetails(this.state.cveName).catch(() => {\n            handleCveDetailsError();\n        });\n    }\n\n    showBusinessRiskModal = cves => {\n        this.setState({\n            BusinessRiskModal: () => (\n                <BusinessRiskModal open cves={cves} updateRef={() => this.props.fetchCveDetails(this.state.cveName)} />\n            )\n        });\n    };\n\n    showStatusModal = cves => {\n        this.setState({\n            StatusModal: () => (\n                <CveStatusModal\n                    cves={cves}\n                    updateRef={() => {\n                        this.props.fetchCveDetails(this.state.cveName);\n                        this.props.fetchAffectedSystems(this.state.cveName);\n                    }}\n                />\n            )\n        });\n    };\n\n    render() {\n        const { showStatusModal } = this;\n        const { cveDetails, fetchAffectedSystems } = this.props;\n        const { error } = cveDetails;\n        const { cveName, BusinessRiskModal, StatusModal } = this.state;\n        const cveStatusDetails = {\n            id: cveName,\n            status_id: cveDetails.data.status_id,\n            justification: cveDetails.data.status_justification\n        };\n        const kebabItems = [\n            kebabItemEditBusinessRisk(this.showBusinessRiskModal, [\n                {\n                    business_risk_id: cveDetails.data.business_risk_id,\n                    id: cveName,\n                    justification: cveDetails.data.business_risk_justification\n                }\n            ]),\n            kebabItemEditStatus(this.showStatusModal, [cveStatusDetails])\n        ];\n\n        if (!error) {\n            return (\n                <Page>\n                    <CVEPageContext.Provider value={cveDetails && { isLoading: cveDetails.isLoading }}>\n                        <VulnerabilityHeader\n                            title={\n                                <span style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                    {cveName}\n                                    <BaseKebab dropdownItems={kebabItems} position={DropdownPosition.right}></BaseKebab>\n                                </span>\n                            }\n                            showTabs={false}\n                        >\n                            <CVEPageDetails data={cveDetails} />\n                            <StatusModal />\n                            <BusinessRiskModal />\n                        </VulnerabilityHeader>\n                        <Main>\n                            <SystemsExposedTable\n                                cve={cveName}\n                                cveStatusDetails={cveStatusDetails}\n                                fetchData={fetchAffectedSystems}\n                                methods={{ showStatusModal }}\n                            />\n                        </Main>\n                    </CVEPageContext.Provider>\n                </Page>\n            );\n        } else {\n            return (\n                <React.Fragment>\n                    <VulnerabilityHeader title={cveName} showTabs={false} />\n                    <InvalidObject />\n                </React.Fragment>\n            );\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        cveDetails: sCveDetailsPage(state)\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchCveDetails: cveName => dispatch(fetchCveDetails(cveName)),\n        setHeader: header => dispatch(setHeader(header)),\n        handleCveDetailsError: () => dispatch(handleCveDetailsError()),\n        fetchAffectedSystems: (cve, options) => dispatch(fetchAffectedSystemsByCVE(cve, options))\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(CVEPage)\n);\n","import { createSelector } from 'reselect';\nimport { createCveDetailsPage, createExposedSystemsTable } from '../../Helpers/CVEHelper';\n\nconst cveListWithSystemsSelector = (state, cve) => ({ ...state.CVEStore.affectedSystemsByCVE, cve });\nconst systemsListAllSelector = state => state.SystemsStore;\nconst cveDetailsPageSelector = state => state.CVEStore.cveDetails;\n\nexport const sCveDetailsPage = createSelector(\n    [cveDetailsPageSelector],\n    createCveDetailsPage\n);\nexport const sExposedSystemsTable = createSelector(\n    [cveListWithSystemsSelector],\n    createExposedSystemsTable\n);\n\nexport const sAllSystems = createSelector(\n    [systemsListAllSelector],\n    createExposedSystemsTable\n);\n","import { Form, FormGroup, Radio, Stack, StackItem, TextArea } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { setBusinessRisk } from '../../../Helpers/APIHelper';\nimport { businessRiskOptions } from '../../../Helpers/constants';\nimport BaseModal from './BaseModal';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nexport const BusinessRiskModal = ({ cves, updateRef, intl }) => {\n    const [cveList] = useState(cves);\n    const [businessRiskId, setBusinessRiskId] = useState('0');\n    const [label, setLabel] = useState();\n\n    useEffect(() => {\n        getDefaultBusinessRisk(), getDefaultLabel();\n    }, [cves]);\n    useEffect(getDefaultLabel, [cves]);\n\n    const handleOnRadioChange = (_, event) => {\n        const { value } = event.currentTarget;\n        setBusinessRiskId(value);\n    };\n\n    const handleOnLabelChange = value => {\n        setLabel(value);\n    };\n\n    const handleSave = () => {\n        return setBusinessRisk({\n            business_risk_id: parseInt(businessRiskId),\n            cve: cveList.map(item => item.id),\n            business_risk_text: label\n        }).then(updateRef);\n    };\n\n    function getDefaultBusinessRisk() {\n        setBusinessRiskId((cveList && cveList.length === 1 && cveList[0].business_risk_id.toString()) || '0');\n    }\n\n    function getDefaultLabel() {\n        setLabel((cveList && cveList.length === 1 && cveList[0].justification) || '');\n    }\n\n    const successNotification = {\n        variant: 'success',\n        title: cveList.length === 1\n            ? intl.formatMessage(messages.businessRiskUpdateSuccessfulSingle)\n            : intl.formatMessage(messages.businessRiskUpdateSuccessfulPlural, { cveCount: cveList.length || 0 })\n    };\n\n    return (\n        <BaseModal\n            items={cveList}\n            onSave={handleSave}\n            onSuccessNotification={successNotification}\n            title={intl.formatMessage(messages.businessRiskModalInfo)}\n        >\n            <Stack gutter={'md'}>\n                <StackItem>\n                    {intl.formatMessage(messages.businessRiskModalTitle)}\n                </StackItem>\n                <StackItem>\n                    <Form>\n                        <FormGroup label={intl.formatMessage(messages.businessRiskLabel)} fieldId={'businessRiskId'}>\n                            {businessRiskOptions.map(item => (\n                                <Radio\n                                    value={item.value}\n                                    isChecked={businessRiskId === item.value}\n                                    onChange={handleOnRadioChange}\n                                    label={item.label}\n                                    key={item.value}\n                                    id={item.value}\n                                    name={item.label}\n                                    aria-label={item.label}\n                                />\n                            ))}\n                        </FormGroup>\n                        <FormGroup label={intl.formatMessage(messages.justificationLabel)} fieldId={'label'}>\n                            <TextArea\n                                type=\"text\"\n                                onChange={handleOnLabelChange}\n                                value={label}\n                                resizeOrientation='vertical'\n                                aria-label={'justification'}\n                            />\n                        </FormGroup>\n                    </Form>\n                </StackItem>\n            </Stack>\n        </BaseModal>\n    );\n};\n\nBusinessRiskModal.propTypes = {\n    cves: propTypes.array,\n    updateRef: propTypes.func,\n    intl: propTypes.any\n};\n\nexport default injectIntl(BusinessRiskModal);\n","import { Checkbox, Form, FormGroup, Split, SplitItem, Stack, StackItem, Tooltip } from '@patternfly/react-core';\nimport { InfoCircleIcon, OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport propTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { setCveStatus, setSystemCveStatus } from '../../../Helpers/APIHelper';\nimport BaseModal, { useJustificationInput, useStatusSelect } from './BaseModal';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nexport const CveStatusModal = ({ cves, updateRef, intl }) => {\n    const [cveList] = useState(cves);\n    const { StatusSelect, statusId } = useStatusSelect(getDefaultStatus());\n    const { JustificationInput, justification } = useJustificationInput(getDefaultLabel());\n    const [checkboxState, setCheckboxState] = useState(false);\n\n    const handleSave = () => {\n        const cveIds = cveList.map(item => item.id);\n        return setCveStatus({\n            status_id: parseInt(statusId),\n            cve: cveIds,\n            status_text: justification\n        })\n        .then(() => !checkboxState && setSystemCveStatus({ cve: cveIds }))\n        .then(updateRef);\n    };\n\n    function getDefaultStatus() {\n        return (cveList && cveList.length === 1 && cveList[0].status_id.toString()) || '0';\n    }\n\n    function getDefaultLabel() {\n        return (cveList && cveList.length === 1 && cveList[0].justification) || '';\n    }\n\n    const successNotification = {\n        variant: 'success',\n        title: cveList.length === 1\n            ? intl.formatMessage(messages.cveStatusModalUpdateSuccessfulSingle)\n            : intl.formatMessage(messages.cveStatusModalUpdateSuccessfulPlural, { cveCount: cveList.length || 0 })\n    };\n    const title = cveList.length > 1 ? intl.formatMessage(messages.cveStatusModalTitlePlural)\n        : intl.formatMessage(messages.cveStatusModalTitleSingle);\n\n    return (\n        <BaseModal items={cveList} onSave={handleSave} onSuccessNotification={successNotification} title={title}>\n            <Stack gutter={'md'}>\n                <StackItem>\n                    <Form key=\"key\">\n                        {StatusSelect}\n                        {JustificationInput}\n                        <FormGroup fieldId={'overwrite'}>\n                            <Checkbox\n                                label={\n                                    <React.Fragment>\n                                        {intl.formatMessage(messages.cveStatusModalOverwriteCheckbox)}\n                                        <Tooltip\n                                            content={intl.formatMessage(messages.cveStatusModalOverwriteTooltip)}\n                                        >\n                                            <React.Fragment>\n                                                <OutlinedQuestionCircleIcon />\n                                            </React.Fragment>\n                                        </Tooltip>\n                                    </React.Fragment>\n                                }\n                                id=\"alt-form-checkbox-1\"\n                                name=\"alt-form-checkbox-1\"\n                                isChecked={checkboxState}\n                                onChange={checked => setCheckboxState(checked)}\n                            />\n                        </FormGroup>\n                        <FormGroup fieldId={'info'}>\n                            <Split>\n                                <SplitItem style={{ marginRight: 'var(--pf-global--spacer--xs)' }}>\n                                    <InfoCircleIcon size=\"md\" color=\"var(--pf-global--active-color--400)\" />\n                                </SplitItem>\n                                <SplitItem isFilled>\n                                    {intl.formatMessage(messages.cveStatusModalInfo)}\n                                    <Tooltip\n                                        content={intl.formatMessage(messages.cveStatusModalInfoTooltip)}\n                                    >\n                                        <React.Fragment>\n                                            <OutlinedQuestionCircleIcon />\n                                        </React.Fragment>\n                                    </Tooltip>\n                                </SplitItem>\n                            </Split>\n                        </FormGroup>\n                    </Form>\n                </StackItem>\n            </Stack>\n        </BaseModal>\n    );\n};\n\nCveStatusModal.propTypes = {\n    cves: propTypes.array,\n    updateRef: propTypes.func,\n    intl: propTypes.any\n};\n\nexport default injectIntl(CveStatusModal);\n","'use strict';\n\nexports.__esModule = true;\nexports.defaultMemoize = defaultMemoize;\nexports.createSelectorCreator = createSelectorCreator;\nexports.createStructuredSelector = createStructuredSelector;\nfunction defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nfunction createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = defaultMemoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nvar createSelector = exports.createSelector = createSelectorCreator(defaultMemoize);\n\nfunction createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","// Initial State\nexport const init = {\n    columns: [],\n    rows: [],\n    entities: []\n};\n// Reducer\n\nfunction modifyInventory(columns, state, getSelectedFunc) {\n    // If a system does not have insights_id, it means it was deleted from inventory but somehow survived in Vuln backend\n    if (state.loaded) {\n        const selected = getSelectedFunc();\n        const lastSeenColumn = state.columns.filter(({ key }) => key === 'updated');\n        return {\n            ...state,\n            rows: state.rows.filter(item => item.insights_id).map(item => ({ ...item, selected: selected.has(item.id) })),\n            columns: [\n                ...columns || [],\n                ...lastSeenColumn || []\n            ]\n        };\n    }\n\n    return state;\n}\n\nfunction selectEntities(state, getSelectedFunc) {\n    const selected = getSelectedFunc();\n    const myRows = state.rows.slice();\n    const retval = {\n        ...state,\n        rows: myRows\n        .map(item => {\n            const newValue =  { ...item, selected: selected.has(item.id) };\n            return newValue;\n        })\n    };\n    return retval;\n}\n\nexport const inventoryEntitiesReducer = (columns, selected) => (state = init, action) => {\n    switch (action.type) {\n        case 'LOAD_ENTITIES_FULFILLED':\n            return modifyInventory(columns, state, selected);\n        case 'SELECT_MULTIPLE_ENTITIES':\n            return selectEntities(state, selected);\n\n        default:\n            return state;\n    }\n};\n","import { Checkbox, Form, FormGroup, Stack, StackItem, Alert } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { setSystemCveStatus } from '../../../Helpers/APIHelper';\nimport BaseModal, { useJustificationInput, useStatusSelect } from './BaseModal';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nexport const CvePairStatusModal = ({ cves, updateRef, inventories, hasDifferentStatus = false, intl }) => {\n    const [cveList] = useState(cves);\n    const [inventoryList] = useState(inventories);\n    const {\n        JustificationInput,\n        justification,\n        setJustification,\n        setProps: setJustificationProps\n    } = useJustificationInput(getDefaultLabel());\n    const [checkboxState, setCheckboxState] = useState(getDefaultCheckboxState());\n    const { StatusSelect, statusId, setStatusId, setProps: setSelectProps } = useStatusSelect(getDefaultStatus());\n    const inventoryIds = inventoryList.map(item => item.id);\n\n    useEffect(() => {\n        if (checkboxState) {\n            setSelectProps({ isDisabled: true });\n            setJustificationProps({ disabled: true });\n        }\n    }, []);\n\n    useEffect(() => {\n        let state = (cveList &&\n            ((checkboxState && !hasDifferentStatus) && cveList[0].cve_status_id\n                || cveList[0].status_id.toString())) || '0';\n        setStatusId(state);\n\n    }, [checkboxState]);\n\n    const handleSave = () => {\n        const cveIds = cveList.map(item => item.id);\n        const setStatusParams = !checkboxState\n            ? {\n                status_id: parseInt(statusId),\n                cve: cveIds,\n                status_text: justification,\n                inventory_id: inventoryIds\n            }\n            : { cve: cveIds, inventory_id: inventoryIds };\n        return setSystemCveStatus(setStatusParams).then(updateRef);\n    };\n\n    function getDefaultStatus() {\n        // system has different status\n        if (inventoryList && inventoryList.length > 0 && inventoryList[0].status_id) {\n            return getSystemsStatus();\n        }\n\n        if (cveList && cveList.length > 0) {\n            return getCvestatus();\n        }\n\n    }\n\n    function getDefaultLabel() {\n        if (inventoryList && inventoryList.length === 1 && inventoryList[0].justification) {\n            return getSystemsJustification();\n        }\n\n        if (cveList && cveList.length === 1) {\n            return getCveJustification();\n        }\n    }\n\n    function getDefaultCheckboxState() {\n        // system has the same status as cve\n        if (inventoryList && inventoryList.length === 1 && inventoryList[0].status_id) {\n            let [inventory] = inventoryList;\n            return cveList.some(cve => (cve.status_id === inventory.status_id));\n        }\n\n        if (cveList && cveList.length === 1) {\n            return true;\n        }\n\n        return false;\n    }\n\n    function getSystemsStatus() {\n        return (inventoryList && inventoryList[0].status_id.toString()) || '0';\n    }\n\n    function getSystemsJustification() {\n        return (inventoryList && inventoryList.length === 1 && inventoryList[0].justification) || '';\n    }\n\n    function getCvestatus() {\n        return (cveList &&\n            (checkboxState && cveList[0].cve_status_id || cveList[0].status_id.toString())) || '0';\n    }\n\n    function getCveJustification() {\n        return (cveList && cveList.length === 1 && cveList[0].justification) || '';\n    }\n\n    function handleCheckboxChange(checked) {\n        setCheckboxState(checked);\n        setSelectProps({ isDisabled: checked });\n        setStatusId(getCvestatus());\n        setJustification(getCveJustification());\n        setJustificationProps({ disabled: checked });\n    }\n\n    const successNotification = {\n        variant: 'success',\n        title: intl.formatMessage(messages.cvePairStatusModalUpdateSuccessful)\n    };\n\n    let modalTitle = intl.formatMessage(messages.cvePairStatusModalTitleSingle);\n    if (inventoryIds.length > 1 || cves.length > 1) {\n        modalTitle = intl.formatMessage(messages.cvePairStatusModalTitlePlural);\n    }\n\n    return (\n        <BaseModal items={cveList} onSave={handleSave} onSuccessNotification={successNotification} title={modalTitle}>\n            <Stack gutter={'md'}>\n                <StackItem>\n                    {hasDifferentStatus ?\n                        <Alert\n                            variant=\"warning\"\n                            isInline\n                            title={intl.formatMessage(messages.cvePairStatusModalAlert)} />\n                        : ''}\n                </StackItem>\n                <StackItem>\n                    <Form key=\"key\">\n                        <FormGroup fieldId={'overall'}>\n                            <Checkbox\n                                label={intl.formatMessage(messages.cvePairStatusModalUseOverallCve)}\n                                id=\"alt-form-checkbox-1\"\n                                name=\"alt-form-checkbox-1\"\n                                isChecked={checkboxState}\n                                onChange={handleCheckboxChange}\n                            />\n                        </FormGroup>\n                        {StatusSelect}\n                        {JustificationInput}\n                    </Form>\n                </StackItem>\n            </Stack>\n        </BaseModal>\n    );\n};\n\nCvePairStatusModal.propTypes = {\n    cves: propTypes.array,\n    updateRef: propTypes.func,\n    inventories: propTypes.array,\n    hasDifferentStatus: propTypes.bool,\n    intl: propTypes.any\n};\n\nexport default injectIntl(CvePairStatusModal);\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEPageDetailsDescription.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEPageDetailsDescription.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEPageDetailsDescription.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}