{"version":3,"file":"js/ImmutableDevices.b7172ccbd65b8b6e1dec.js","mappings":"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","sources":["webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/OsVersionFilter.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/SearchFilter.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/SecurityRuleFilter.js","webpack:///./src/Components/SmartComponents/HybridInventory/ImmutableDevicesTab/helpers.js","webpack:///./src/Components/SmartComponents/HybridInventory/ImmutableDevicesTab/ImmutableDevices.js","webpack:///./src/Helpers/TableToolbarHelper.js","webpack:///./src/Store/Reducers/InventoryEntitiesReducer.js","webpack:///./node_modules/lodash/unionWith.js"],"sourcesContent":["import { useSelector } from 'react-redux';\nimport { useLoadModule } from '@scalprum/react-core';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\n\nconst useOsVersionFilter = (appliedVersions, apply) => {\n    /* operatingSystems are obtained from the Inventory store */\n    const operatingSystems = useSelector(({ entities }) => entities?.operatingSystems) || [];\n    const [{ toGroupSelectionValue, buildOSFilterConfig } = {}] = useLoadModule({\n        appName: 'inventory',\n        scope: 'inventory',\n        module: './OsFilterHelpers'\n    });\n\n    return buildOSFilterConfig\n        ? [\n            buildOSFilterConfig(\n                {\n                    label: intl.formatMessage(messages.osFilterLabel),\n                    type: 'checkbox',\n                    id: 'rhel_version',\n                    value: toGroupSelectionValue(\n                        appliedVersions\n                            ? appliedVersions.split(',')\n                            : []\n                    ),\n                    onChange: (event, value) => {\n                    /* `versions` must be of type string, e.g., \"8.9,9.0\" */\n                        const versions = Object.values(value)\n                            .flatMap((versions) => Object.keys(versions))\n                            .toString();\n                        apply({ rhel_version: versions, page: 1 });\n                    },\n                    placeholder: intl.formatMessage(messages.osFilterPlaceholder)\n                },\n                operatingSystems\n            )\n        ]\n        : [];\n};\n\nexport default useOsVersionFilter;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { intl } from '../../../../Utilities/IntlProvider';\n\nimport debounce from 'lodash/debounce';\nimport React from 'react';\n\nconst useSearchFilter = (urlParam, label, placeholder, search, apply) => {\n    const [searchValue, setSearchValue] = React.useState();\n    const [handleSearch] = React.useState(() =>\n        debounce(newValue =>  {\n            if (newValue !== undefined) {\n                apply({ [urlParam]: newValue, page: 1 });\n            }},\n        400)\n    );\n\n    React.useEffect(() => setSearchValue(search), [search]);\n\n    return {\n        type: conditionalFilterType.text,\n        label: intl.formatMessage(label),\n        key: urlParam,\n        filterValues: {\n            'aria-label': 'search-field',\n            id: `search-${label.id}`,\n            onChange: (event, value) => {\n                setSearchValue(value);\n                handleSearch(value);\n            },\n            placeholder: intl.formatMessage(placeholder),\n            value: searchValue\n        }\n    };\n};\n\nexport default useSearchFilter;\n","\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { RULE_PRESENCE_OPTIONS } from '../../../../Helpers/constants';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\nimport unionWith from 'lodash/unionWith';\nimport isEqual from 'lodash/isEqual';\n\nconst securityRuleFilter = (apply, currentFilter = {}, dynamicFilters = [], config = {}) => {\n    let currentValue = [];\n\n    if (currentFilter.rule_presence) {\n        currentValue = currentValue.concat(currentFilter.rule_presence.split(','));\n    }\n\n    if (currentFilter.rule) {\n        currentValue = currentValue.concat(currentFilter.rule.split(','));\n    }\n\n    const filterBySecurityRule = values => {\n        apply({\n            ...config.isDynamic && { rule: values.join(',') || undefined },\n            ...!config.isDynamic && { rule_presence: values.join(',') || undefined },\n            page: 1\n        });\n    };\n\n    const dropdownItems\t= () => {\n        const items = config.dropdownItems ? config.dropdownItems : RULE_PRESENCE_OPTIONS;\n\n        return unionWith(items, dynamicFilters, isEqual).map(({ label, value }) => ({ label, value }));\n    };\n\n    return {\n        label: intl.formatMessage(messages.filterSecurityRules),\n        type: conditionalFilterType.checkbox,\n        key: 'security_rule',\n        filterValues: {\n            onChange: (event, value) => {\n                filterBySecurityRule(value);\n            },\n            items: dropdownItems(),\n            value: currentValue\n        }\n    };\n};\n\nexport default securityRuleFilter;\n","import { getAffectedSystemsByCVE, useGetImageData } from '../../../../Helpers/APIHelper';\nimport { SYSTEMS_EXPOSED_HEADER } from '../../../../Helpers/constants';\n\nexport const fetchFullDeviceInfo = async (parameters, fetchImagesData) => {\n    const vulnerableSystems = await getAffectedSystemsByCVE(parameters);\n    const deviceIds = vulnerableSystems?.data.map(data => data.id);\n\n    if (deviceIds.length) {\n        const deviceData = await fetchImagesData({ devices_uuid: deviceIds });\n        vulnerableSystems.data?.forEach(system => {\n            const systemDevice = deviceData?.data?.devices?.find(device => device.DeviceUUID === system.id);\n            return system.attributes = { ...system.attributes, ...systemDevice };\n        });\n    }\n\n    return vulnerableSystems;\n};\n\nexport const useGetEntities = ({ id, setUrlParams, createRows }) => {\n    const fetchImagesData = useGetImageData();\n    const getEntities = async (\n        _items,\n        { orderBy, orderDirection, page, per_page: perPage, edgeParams, filters }\n    ) => {\n        const { hostnameOrId: filter } = filters;\n        const sort = `${orderDirection === 'ASC' ? '' : '-'}${orderBy}`;\n\n        const params = {\n            filter,\n            ...edgeParams,\n            ...filters?.hostGroupFilter ? {\n                group_names: filters.hostGroupFilter.join(',')\n            } : {},\n            page,\n            page_size: perPage,\n            sort\n        };\n\n        setUrlParams?.({ ...params });\n\n        const items = await fetchFullDeviceInfo(\n            {\n                ...id && { id },\n                ...params\n            },\n            fetchImagesData\n        );\n\n        return {\n            results: typeof createRows === 'function'\n                ? createRows(items || {})\n                : items?.data?.map(row => ({ id: row.id, ...row.attributes })),\n            total: items?.meta?.total_items,\n            page: items?.meta?.page,\n            perPage: items?.meta?.page_size,\n            meta: {\n                page: items?.meta?.page,\n                sort: items?.meta?.sort,\n                page_size: items?.meta?.page_size,\n                cves_without_errata: items?.meta?.cves_without_errata\n            }\n        };\n    };\n\n    return getEntities;\n};\n\nexport const mergeAppColumns = (defaultColumns) => {\n    const osColumn = SYSTEMS_EXPOSED_HEADER.find((column) => column.key === 'os');\n    const advisoryColumn = SYSTEMS_EXPOSED_HEADER.find((column) => column.key === 'advisories_list');\n\n    const osIndex = defaultColumns.findIndex(column =>{\n        return column.key === 'system_profile';\n    });\n    if (osIndex !== -1) {\n        defaultColumns[osIndex] = osColumn;\n    }\n\n    return [...defaultColumns, ...[advisoryColumn || []]];\n};\n","import React, { useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport { useUrlParams } from '../../../../Helpers/MiscHelper';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ReducerRegistry from '../../../../Utilities/ReducerRegistry';\nimport { createExposedDevicesRows } from '../../../../Helpers/CVEHelper';\nimport { inventoryEntitiesReducer } from '../../../../Store/Reducers/InventoryEntitiesReducer';\nimport {\n    changeExposedDevicesParameters\n} from '../../../../Store/Actions/Actions';\nimport {\n    SYSTEMS_EXPOSED_ALLOWED_PARAMS,\n    PERMISSIONS,\n    DEFAULT_PAGE_SIZE,\n    RULE_PRESENCE_OPTIONS,\n    CVE_DETAILS_FILTER_PARAMS\n} from '../../../../Helpers/constants';\nimport ErrorHandler from '../../../PresentationalComponents/ErrorHandler/ErrorHandler';\nimport { EmptyStateNoSystems } from '../../../PresentationalComponents/EmptyStates/EmptyStates';\nimport { useGetEntities, mergeAppColumns } from './helpers.js';\nimport Spinner from '@redhat-cloud-services/frontend-components/Spinner';\nimport { buildActiveFilters, removeFilters, isFilterInDefaultState } from '../../../../Helpers/TableToolbarHelper';\nimport useSearchFilter from '../../../PresentationalComponents/Filters/PrimaryToolbarFilters/SearchFilter';\nimport useOsVersionFilter from '../../../PresentationalComponents/Filters/PrimaryToolbarFilters/OsVersionFilter';\nimport useSecurityRuleFilter from '../../../PresentationalComponents/Filters/PrimaryToolbarFilters/SecurityRuleFilter';\nimport AsynComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\nimport { useRbac } from '../../../../Helpers/Hooks';\nimport messages from '../../../../Messages';\n\nconst ImmutableDevices = ({ intl, cveName, filterRuleValues, inventoryRef, headerFilters }) => {\n    const [[canReadHostsInventory], isLoadingInventory] = useRbac([\n        PERMISSIONS.readHosts\n    ], 'inventory');\n\n    const dispatch = useDispatch();\n    const [urlParameters, setUrlParams] = useUrlParams(SYSTEMS_EXPOSED_ALLOWED_PARAMS);\n\n    const totalItems = useSelector(({ entities }) => entities?.total);\n    const error = useSelector(({ entities }) => entities?.error || {});\n\n    const parameters = useSelector(\n        ({ ImmutableDevicesStore }) => ImmutableDevicesStore.parameters);\n\n    const apply = (params) => dispatch(changeExposedDevicesParameters(params));\n\n    useEffect(() => apply(urlParameters), []);\n\n    useEffect(() => setUrlParams({ ...parameters, ...headerFilters }), [parameters, headerFilters]);\n\n    const getEntities = useGetEntities(\n        {\n            id: cveName,\n            createRows: createExposedDevicesRows\n        }\n    );\n\n    useEffect(() => {\n        apply(headerFilters);\n    }, [headerFilters]);\n\n    const searchFilter = useSearchFilter(\n        'filter',\n        messages.systemsSearchName,\n        messages.searchFilterByName,\n        parameters.filter,\n        apply\n    );\n\n    const advisoryNameFilter = useSearchFilter(\n        'advisory',\n        messages.advisoryName,\n        messages.searchFilterByAdvisoryName,\n        parameters.advisory,\n        apply\n    );\n\n    const osVersionFilter = useOsVersionFilter(\n        parameters.rhel_version,\n        apply\n    );\n\n    const securityRuleFilter = useSecurityRuleFilter(\n        apply,\n        parameters,\n        filterRuleValues,\n        {\n            isDynamic: true,\n            dropdownItems: RULE_PRESENCE_OPTIONS.filter(item => item.value !== 'true')\n        }\n    );\n\n    const activeFilters = {\n        filters: buildActiveFilters({ ...parameters }, filterRuleValues),\n        onDelete: (_, chips, reset) => removeFilters(chips, apply, reset, {}),\n        deleteTitle: intl.formatMessage(messages.resetFilters),\n        showDeleteButton: !isFilterInDefaultState(parameters, {}, CVE_DETAILS_FILTER_PARAMS)\n    };\n\n    return isLoadingInventory ? <Spinner centered /> :\n        error?.hasError && !canReadHostsInventory    ? <ErrorHandler code={error?.errorCode} />\n            : (<AsynComponent\n                appName=\"inventory\"\n                ref={inventoryRef}\n                module=\"./ImmutableDevices\"\n                fallback={<div />}\n                store={ReducerRegistry.getStore()}\n                onLoad={({ mergeWithEntities }) => {\n                    ReducerRegistry.register({\n                        ...mergeWithEntities(\n                            inventoryEntitiesReducer([]),\n                            {\n                                page: Number(parameters.page || 1),\n                                perPage: DEFAULT_PAGE_SIZE,\n                                ...(parameters.sort && {\n                                    sortBy: {\n                                        key: parameters.sort.replace(/^-/, ''),\n                                        direction: parameters.sort.match(/^-/) ? 'desc' : 'asc'\n                                    }\n                                })\n                            }\n                        )\n                    });\n                }}\n                key=\"immutableDevices\"\n                customFilters={{\n                    edgeParams: {\n                        ...parameters,\n                        host_type: 'edge'\n                    }\n                }}\n                getEntities={getEntities}\n                showActions={totalItems !== 0}\n                hideFilters={{ all: true, hostGroupFilter: false }}\n                noSystemsTable={<EmptyStateNoSystems />}\n                mergeAppColumns={mergeAppColumns}\n                filterConfig={{\n                    items: [\n                        searchFilter,\n                        securityRuleFilter,\n                        advisoryNameFilter,\n                        ...osVersionFilter\n                    ]\n                }}\n                activeFiltersConfig={activeFilters}\n            />\n            );\n};\n\nImmutableDevices.propTypes = {\n    cveName: propTypes.string,\n    intl: propTypes.object,\n    filterRuleValues: propTypes.object,\n    inventoryRef: propTypes.object,\n    headerFilters: propTypes.object\n};\n\nexport default injectIntl(ImmutableDevices);\n","import messages from '../Messages';\nimport { FILTERS, ONLY_NON_VULNERABLE_SYSTEMS } from './constants';\nimport { intl } from '../Utilities/IntlProvider';\nimport isEqual from 'lodash/isEqual';\n\nexport const handleChangePage = (_event, page, apply) => apply({ page });\n\nexport const handleSetPageSize = (_event, perPage, apply) => apply({ page_size: perPage, page: 1 });\n\nexport const exportConfig = (methods) => (\n    { onSelect: (_event, fileType) => methods.downloadReport(fileType) }\n);\n\nexport const buildActiveFilters = (currentFilters, filterRuleValues = []) => {\n    const { filter: nameFilter, advisory: advisoryFilter } = currentFilters;\n\n    const buildChip = (key, parameter) => (\n        FILTERS[key].items.reduce((object, item) => {\n            if (parameter === item.value) {\n                object.name = item.label;\n                object.value = item.value;\n            }\n            else if (key === 'rule_presence') {\n                const filteredRule = filterRuleValues.find(({ value }) => value === parameter);\n\n                ['true', 'false', ONLY_NON_VULNERABLE_SYSTEMS].includes(parameter)\n                    ? object.name = FILTERS.rule_presence.items.find(e => e.value === parameter).label\n                    : object.name = filteredRule && filteredRule.label || parameter;\n\n                object.value = parameter;\n            }\n\n            return object;\n        }, {})\n    );\n\n    const buildChips = (paramValues, key) => {\n        return paramValues.reduce((values, parameter) => {\n            values.push(buildChip(key, parameter));\n            return values;\n        }, []);\n    };\n\n    const hasValue = (filters, key) => Object.keys(filters).includes(key) && !['', undefined].includes(filters[key]);\n\n    // FIXME please!!!\n    const filterChips = Object.keys(FILTERS).reduce((array, key) => {\n        if (key === 'rule_presence' && (hasValue(currentFilters, 'rule_presence') || hasValue(currentFilters, 'rule'))) {\n            const multiValue = [].concat(\n                currentFilters.rule_presence ? currentFilters.rule_presence.split(',') : [],\n                currentFilters.rule ? currentFilters.rule.split(',') : []);\n            array.push({ key, multiValue, category: FILTERS[key].title, chips: buildChips(multiValue, key) });\n        }\n        else if (key === 'cvss_filter' && (hasValue(currentFilters, 'cvss_from') || hasValue(currentFilters, 'cvss_to'))) {\n            const cvssFrom = (currentFilters.cvss_from && parseFloat(currentFilters.cvss_from).toFixed(1)) || '0.0';\n            const cvssTo = (currentFilters.cvss_to && parseFloat(currentFilters.cvss_to).toFixed(1)) || '10.0';\n\n            if (cvssFrom !== '0.0' || cvssTo !== '10.0') {\n                array.push({ key, category: FILTERS[key].title, chips: [{ name: `${cvssFrom} - ${cvssTo}` }] });\n            }\n        }\n        else if (key === 'rhel_version' && hasValue(currentFilters, 'rhel_version')) {\n            array.push({\n                key,\n                multiValue: currentFilters.rhel_version.split(','),\n                category: 'Operating system',\n                chips: currentFilters.rhel_version\n                    .split(',')\n                    .map((v) => ({ value: v, name: `RHEL ${v}` }))\n            });\n        }\n        else if (hasValue(currentFilters, key)) {\n            const multiValue = typeof currentFilters[key] === 'string' && currentFilters[key].split(',');\n            const filteredValues = (multiValue && multiValue.length > 1)\n                && buildChips(multiValue, key)\n                || [buildChip(key, currentFilters[key])];\n\n            array.push({ key, multiValue, category: FILTERS[key].title, chips: filteredValues });\n        }\n\n        return array;\n    }, []);\n\n    nameFilter && filterChips.push(\n        {\n            key: 'filter',\n            category: intl.formatMessage(messages.searchLabel),\n            chips: [{ name: nameFilter }]\n        }\n    );\n\n    advisoryFilter && filterChips.push(\n        {\n            key: 'advisory',\n            category: intl.formatMessage(messages.advisoryName),\n            chips: [{ name: advisoryFilter }]\n        }\n    );\n\n    return filterChips;\n};\n\nexport const removeFilters = (chips, apply, reset = false, defaultFilters = {}) => {\n    if (reset) {\n        apply({ ...defaultFilters, page: 1, reset });\n        return;\n    }\n\n    const emptyFilter = chips.reduce((obj, item) => {\n        if (item.key === 'rule_presence') {\n            const remainingValues = item.multiValue.filter(value => !item.chips.some(chip => chip.value === value));\n            obj.rule_presence = remainingValues.filter(value => ['true', 'false'].includes(value)).join(',') || '';\n            obj.rule = remainingValues.filter(value => !['true', 'false'].includes(value)).join(',') || '';\n        }\n        else if (item.key === 'filter' || item.key === 'advisory' || (item.multiValue && item.multiValue.length === 1)) {\n            obj[item.key] = '';\n        }\n        else if (item.key === 'cvss_filter') {\n            obj.cvss_filter = undefined;\n            obj.cvss_from = undefined;\n            obj.cvss_to = undefined;\n        }\n        else {\n            obj[item.key] = item.multiValue.filter(value => !item.chips.some(chip => chip.value === value)).join(',');\n        }\n\n        if (obj[item.key] === '') {\n            obj[item.key] = undefined;\n        }\n\n        return obj;\n    }, {});\n\n    apply({ ...emptyFilter, page: 1 });\n};\n\nexport const isFilterInDefaultState = (currentParams, defaultParams, filterParams) => {\n    // filter out params which have nothing to do with filter chips, like page, sort, etc.\n    currentParams = filterParams.reduce((acc, param) => (\n        {\n            ...acc,\n            ...currentParams[param] && { [param]: currentParams[param] }\n        }\n    ), {});\n\n    return isEqual(currentParams, defaultParams);\n};\n","import { selectRows } from './reducersHelper';\nimport * as ActionTypes from '../ActionTypes';\nimport { DEFAULT_PAGE_SIZE } from '../../Helpers/constants';\n\nexport const initialState = {\n    columns: [],\n    rows: [],\n    entities: [],\n    loaded: false,\n    tagsLoaded: false,\n    allTagsLoaded: false,\n    invConfig: {},\n    sortBy: {\n        key: 'updated',\n        direction: 'desc'\n    },\n    page: 1,\n    perPage: DEFAULT_PAGE_SIZE,\n    selectedRows: [],\n    selectedRowsCount: 0\n};\n\nfunction modifyInventory(columns, state, action) {\n    if (!state.selectedRows) {\n        state.selectedRows = [];\n    }\n\n    if (!state.sortBy) {\n        state.sortBy = {\n            key: 'updated',\n            direction: 'desc'\n        };\n    }\n\n    if (state.loaded) {\n        return {\n            ...state,\n            columns,\n            rows: state.rows.map(row => ({\n                ...row,\n                selected: state.selectedRows.some(selectedRow => selectedRow.id === row.id) || false\n            })),\n            meta: action.payload.meta\n        };\n    }\n\n    return state;\n}\n\nexport const inventoryEntitiesReducer = (columns) => (state = initialState, action) => {\n    let newState = { ...state };\n\n    switch (action.type) {\n        case ActionTypes.LOAD_ENTITIES + '_FULFILLED':\n            return modifyInventory(columns, newState, action);\n        case ActionTypes.SELECT_ENTITY:\n            return selectRows(newState, action, action.selecting);\n        case ActionTypes.EXPAND_ROW:\n            return {\n                ...newState,\n                rows: newState.rows.map(row => ({\n                    ...row,\n                    isOpen: row.id === action.payload.id ? action.payload.isOpen : row.isOpen\n                }))\n            };\n        case ActionTypes.CLEAR_INVENTORY_STORE:\n            return initialState;\n        default:\n            return newState;\n    }\n};\n","var baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    baseUniq = require('./_baseUniq'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    last = require('./last');\n\n/**\n * This method is like `_.union` except that it accepts `comparator` which\n * is invoked to compare elements of `arrays`. Result values are chosen from\n * the first array in which the value occurs. The comparator is invoked\n * with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.unionWith(objects, others, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n */\nvar unionWith = baseRest(function(arrays) {\n  var comparator = last(arrays);\n  comparator = typeof comparator == 'function' ? comparator : undefined;\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n});\n\nmodule.exports = unionWith;\n"],"names":["appliedVersions","apply","operatingSystems","useSelector","_ref","entities","_useLoadModule","useLoadModule","appName","scope","module","_useLoadModule2$","_slicedToArray","_useLoadModule2$2","toGroupSelectionValue","buildOSFilterConfig","label","intl","formatMessage","messages","osFilterLabel","type","id","value","split","onChange","event","versions","Object","values","flatMap","keys","toString","rhel_version","page","placeholder","osFilterPlaceholder","urlParam","search","_React$useState","React","_React$useState2","searchValue","setSearchValue","_React$useState3","debounce","newValue","_apply","undefined","_defineProperty","handleSearch","conditionalFilterType","text","key","filterValues","concat","items","currentFilter","arguments","length","dynamicFilters","config","currentValue","rule_presence","rule","filterSecurityRules","checkbox","_objectSpread","isDynamic","join","dropdownItems","RULE_PRESENCE_OPTIONS","unionWith","isEqual","map","fetchFullDeviceInfo","_asyncToGenerator","_regeneratorRuntime","_callee","parameters","fetchImagesData","vulnerableSystems","deviceIds","_vulnerableSystems$da","deviceData","_context","prev","next","getAffectedSystemsByCVE","sent","data","devices_uuid","forEach","system","_deviceData$data","_deviceData$data$devi","systemDevice","devices","find","device","DeviceUUID","attributes","abrupt","stop","_x","_x2","mergeAppColumns","defaultColumns","osColumn","SYSTEMS_EXPOSED_HEADER","column","advisoryColumn","osIndex","findIndex","_toConsumableArray","ImmutableDevices","cveName","filterRuleValues","inventoryRef","headerFilters","_useRbac","useRbac","PERMISSIONS","readHosts","_useRbac2","canReadHostsInventory","isLoadingInventory","dispatch","useDispatch","_useUrlParams","useUrlParams","SYSTEMS_EXPOSED_ALLOWED_PARAMS","_useUrlParams2","urlParameters","setUrlParams","totalItems","_ref2","total","error","_ref3","_ref4","ImmutableDevicesStore","params","changeExposedDevicesParameters","useEffect","getEntities","createRows","useGetImageData","_callee2","_items","_items$data","_items$meta","_items$meta2","_items$meta3","_items$meta4","_items$meta5","_items$meta6","_items$meta7","orderBy","orderDirection","perPage","edgeParams","filters","filter","sort","_context2","per_page","hostnameOrId","hostGroupFilter","group_names","page_size","results","row","meta","total_items","cves_without_errata","_x3","_x4","useGetEntities","createExposedDevicesRows","searchFilter","useSearchFilter","systemsSearchName","searchFilterByName","advisoryNameFilter","advisoryName","searchFilterByAdvisoryName","advisory","osVersionFilter","useOsVersionFilter","securityRuleFilter","useSecurityRuleFilter","item","activeFilters","buildActiveFilters","onDelete","_","chips","reset","removeFilters","deleteTitle","resetFilters","showDeleteButton","isFilterInDefaultState","CVE_DETAILS_FILTER_PARAMS","Spinner","centered","hasError","ErrorHandler","code","errorCode","AsynComponent","ref","fallback","store","ReducerRegistry","getStore","onLoad","_ref5","mergeWithEntities","register","inventoryEntitiesReducer","Number","DEFAULT_PAGE_SIZE","sortBy","replace","direction","match","customFilters","host_type","showActions","hideFilters","all","noSystemsTable","EmptyStateNoSystems","filterConfig","activeFiltersConfig","propTypes","injectIntl","handleChangePage","_event","handleSetPageSize","exportConfig","methods","onSelect","fileType","downloadReport","currentFilters","nameFilter","advisoryFilter","buildChip","parameter","FILTERS","reduce","object","name","filteredRule","ONLY_NON_VULNERABLE_SYSTEMS","includes","e","buildChips","paramValues","push","hasValue","filterChips","array","multiValue","category","title","cvssFrom","cvss_from","parseFloat","toFixed","cvssTo","cvss_to","v","filteredValues","searchLabel","obj","remainingValues","some","chip","cvss_filter","currentParams","defaultParams","filterParams","acc","param","initialState","columns","rows","loaded","tagsLoaded","allTagsLoaded","invConfig","selectedRows","selectedRowsCount","action","newState","ActionTypes","state","selected","selectedRow","payload","modifyInventory","selectRows","selecting","isOpen","baseFlatten","baseRest","baseUniq","isArrayLikeObject","last","arrays","comparator","exports"],"sourceRoot":""}