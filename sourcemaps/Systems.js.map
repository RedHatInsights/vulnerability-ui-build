{"version":3,"sources":["webpack:///./src/Components/SmartComponents/Systems/Systems.js","webpack:///./src/Components/SmartComponents/Systems/Systems.scss?4fb1","webpack:///./src/Components/SmartComponents/Systems/Systems.scss"],"names":["Systems","props","_this","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_5___default","this","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_7___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8___default","call","downloadReport","format","_this$state","state","opt_out","filter","payload","fetchSystems","data_format","page","page_size","Number","MAX_SAFE_INTEGER","then","_ref","response","data","JSON","stringify","downloadFile","concat","Date","toISOString","apply","config","arguments","length","undefined","setState","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_4___default","params","omit","fetchData","addFilter","param","value","type","newFilter","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default","handleFilterChange","debounce","systems","meta","handleRefresh","_ref4","perPage","per_page","handleOptOut","handleKebabToggle","isKebabOpen","handleKebabSelect","InventoryCmp","react__WEBPACK_IMPORTED_MODULE_23___default","a","createElement","removeListener","columns","key","title","composed","isTime","fetchInventory","insights","loadInventory","react","React","reactRouterDom","reactCore","reactIcons","pfReactTable","inventoryConnector","mergeWithEntities","mergeWithDetail","ReducerRegistry","register","inventoryEntitiesReducer","InventoryTable","_this2","_this$props$systems","items","map","item","_item$attributes","attributes","cve_count","rest","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0___default","id","inventory_id","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_11__","_VulnerabilityHeader_VulnerabilityHeader__WEBPACK_IMPORTED_MODULE_33__","_redhat_cloud_services_frontend_components__WEBPACK_IMPORTED_MODULE_18__","hasCheckbox","total","total_items","onRefresh","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_12__","className","onFilterChange","buttonTitle","placeholder","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_13__","onSelect","toggle","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_14__","onToggle","isOpen","isPlain","dropdownItems","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_15__","component","onClick","Component","propTypes","func","dataShape","withRouter","connect","sAllSystems","setHeader","header","dispatchAction","options","content","__webpack_require__","module","i","hmr","transform","insertInto","locals","exports","push"],"mappings":"ugBAwBMA,sBAMF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,IAAAC,KAAAJ,IACfE,EAAAG,IAAAD,KAAAE,IAAAN,GAAAO,KAAAH,KAAMH,KA+BVO,eAAiB,SAAAC,GAAU,IAAAC,EACKR,EAAKS,MAAzBC,EADeF,EACfE,QAASC,EADMH,EACNG,OACTC,EACJC,YAAa,CACTH,UACAC,SACAG,YAAaP,EACbQ,KAAM,EACNC,UAAWC,OAAOC,mBANlBN,QAQRA,GACIA,EAAQO,KAAK,SAAAC,GAAwB,IAAfC,EAAeD,EAArBE,KACNA,EAAkB,SAAXf,EAAoBgB,KAAKC,UAAUH,GAAYA,EAC5D,OAAOI,uBAAaH,EAAD,WAAAI,QAAkB,IAAIC,MAAOC,eAAiBrB,MA7C1DP,EAoEnB6B,MAAQ,WAAiB,IAAhBC,EAAgBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GACd/B,EAAKkC,SAALC,IAAA,GAAmBnC,EAAKS,MAAUqB,GAAU,WACxC,IAAMM,EAASC,IAAKrC,EAAKS,MAAO,CAAC,eAAgB,UAAW,mBAC5DT,EAAKD,MAAMuC,UAAUF,MAvEVpC,EA2EnBuC,UAAY,SAACC,EAAOC,EAAOC,GACvB,IAAIC,EAEAA,EADS,UAATD,GAA8B,aAAVF,EACRI,IAAA,GAAGJ,EAAQC,GAEXzC,EAAKS,MAAM+B,GAAXI,IAAA,GAAuBJ,EAAvB,GAAAd,OAAkC1B,EAAKS,MAAM+B,GAA7C,KAAAd,OAAuDe,IAAvDG,IAAA,GAAsEJ,EAAQC,GAG9FzC,EAAK6B,MAALM,IAAA,GAAgBQ,EAAhB,CAA2B5B,KAAM,MAnFlBf,EAsFnB6C,mBAAqBC,IAAS,SAAAL,GAAS,IAE3BzB,EADShB,EAAKD,MAAMgD,QAApBC,KACAhC,UACRhB,EAAK6B,MAAM,CAAElB,OAAQ8B,EAAOzB,eAC7B,KA1FgBhB,EA4FnBiD,cAAgB,SAAAC,GAAiC,IAA9BnC,EAA8BmC,EAA9BnC,KAAgBoC,EAAcD,EAAxBE,SACbJ,EAAShD,EAAKD,MAAMgD,QAApBC,KACJA,EAAKjC,OAASA,GAAQiC,EAAKhC,YAAcmC,GACzCnD,EAAK6B,MAAM,CACPd,KAAMiC,EAAKhC,YAAcmC,EAAU,EAAIpC,EACvCC,UAAWmC,EACXxC,OAAQX,EAAKS,MAAME,UAlGZX,EAuGnBqD,aAAe,WACXrD,EAAKkC,SAAS,CACVxB,SAAUV,EAAKS,MAAMC,UAEzBV,EAAK6C,mBAAmB7C,EAAKS,MAAME,SA3GpBX,EA8GnBsD,kBAAoB,SAAAC,GAChBvD,EAAKkC,SAAS,CACVqB,iBAhHWvD,EAoHnBwD,kBAAoB,WAChBxD,EAAKkC,SAAS,CACVqB,aAAcvD,EAAKS,MAAM8C,eApH7BvD,EAAKS,MAAQ,CACTgD,aAAc,kBAAMC,EAAAC,EAAAC,cAAA,0BACpBjD,OAAQ,GACRkD,eAAgB,aAChBC,QAAS,CACL,CACIC,IAAK,eACLC,MAAO,OACPC,SAAU,CAAC,mBAAoB,iBAEnC,CACIF,IAAK,YACLC,MAAO,kBAEX,CACID,IAAK,UACLC,MAAO,YACPE,QAAQ,IAGhBxD,SAAS,EACT6C,aAAa,GAvBFvD,mEA4BfE,KAAKH,MAAMuC,YACXpC,KAAKiE,sLAqBoEC,SAASC,cAAc,CAC5FC,MAAOC,IACPC,iBACAC,YACAC,aACAC,iCALIC,uBAAoBC,sBAAmBC,oBAO/CC,IAAgBC,SAAhB7C,IAAA,GACO0C,EAAkBI,YAAyB/E,KAAKO,MAAMqD,UACtDgB,MAGP5E,KAAKgC,SAAS,CACVuB,aAAcmB,IAAqBM,iBAEvChF,KAAKO,MAAMoD,oJAyDN,IAAAsB,EAAAjF,KACGuD,EAAiBvD,KAAKO,MAAtBgD,aADH2B,EAEkBlF,KAAKH,MAAMgD,QAA1BzB,EAFH8D,EAEG9D,KAAM0B,EAFToC,EAESpC,KACRqC,EAAQ/D,EAAKgE,IAAI,SAAAC,GAAQ,IAAAC,EACID,EAAKE,WAA5BC,EADmBF,EACnBE,UAAcC,EADKC,IAAAJ,EAAA,eAE3B,OAAArD,IAAA,CACIuD,UAAY1C,EAAKtC,QAAW,WAAegF,EAC3CG,GAAIN,EAAKE,WAAWK,cACjBH,KAGX,OACIjC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,KACIrC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,MACAtC,EAAAC,EAAAC,cAACqC,EAAA,KAAD,KACIvC,EAAAC,EAAAC,cAACH,EAAD,CACIyC,aAAa,EACbnF,KAAMiC,EAAKjC,KACXoF,MAAOnD,EAAKoD,YACZjD,QAASH,EAAKhC,UACdqF,UAAWnG,KAAK+C,cAChBoC,MAAOA,GAEP3B,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAcC,UAAU,mBACpB7C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACqC,EAAA,kBAAD,CACIO,eAAgBtG,KAAK2C,mBACrB4D,YAAa,KACbC,YAAY,2BAGpBhD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACIC,SAAU1G,KAAKsD,kBACfqD,OAAQnD,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAaC,SAAU7G,KAAKoD,oBACpC0D,OAAQ9G,KAAKO,MAAM8C,YACnB0D,SAAO,EACPC,cAAe,CACXxD,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAcpD,IAAI,UAAUqD,UAAU,SAASC,QAAS,kBAAMlC,EAAK9B,iBAC9DnD,KAAKO,MAAMC,QACN,sCACA,uCAEVgD,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAcpD,IAAI,MAAMqD,UAAU,SAASC,QAAS,kBAAMlC,EAAK7E,eAAe,SAA9E,iBAGAoD,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAcpD,IAAI,OAAOqD,UAAU,SAASC,QAAS,kBAAMlC,EAAK7E,eAAe,UAA/E,iCA9KlBiE,IAAM+C,YAAtBxH,EACKyH,UAAY,CACfjF,UAAWiF,IAAUC,KACrBzE,QAAS0E,KAsMFC,sBACXC,kBAdJ,SAAyBlH,GACrB,MAAO,CACHsC,QAAS6E,YAAYnH,KAIF,WACvB,MAAO,CACHoH,UAAW,SAAAC,GAAM,OAAIC,YAAeF,YAAUC,KAC9CxF,UAAW,SAAA0F,GAAO,OAAID,YAAelH,YAAamH,OAKtDL,CAGE7H,yBCpON,IAAAmI,EAAcC,EAAQ,KAEtB,iBAAAD,MAAA,EAA4CE,EAAAC,EAASH,EAAA,MAOrD,IAAAD,EAAA,CAAeK,KAAA,EAEfC,eAPAA,EAQAC,gBAAAtG,GAEaiG,EAAQ,EAARA,CAAiED,EAAAD,GAE9EC,EAAAO,SAAAL,EAAAM,QAAAR,EAAAO,8BCjBAL,EAAAM,QAA2BP,EAAQ,EAARA,EAA6D,IAKxFQ,KAAA,CAAcP,EAAAC,EAAS,iaAA+Z","file":"js/Systems.js","sourcesContent":["import * as reactCore from '@patternfly/react-core';\nimport { Dropdown, DropdownItem, KebabToggle, Page, ToolbarGroup } from '@patternfly/react-core';\nimport * as reactIcons from '@patternfly/react-icons';\nimport * as pfReactTable from '@patternfly/react-table';\nimport { Main, SimpleTableFilter } from '@redhat-cloud-services/frontend-components';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport debounce from 'lodash/debounce';\nimport omit from 'lodash/omit';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as reactRouterDom from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport { dispatchAction } from '../../../Helpers/Dispatcher';\nimport { dataShape } from '../../../Helpers/MiscHelper';\nimport { fetchSystems, setHeader } from '../../../Store/Actions/Actions';\nimport { inventoryEntitiesReducer } from '../../../Store/Reducers/InventoryEntitiesReducer';\nimport { sAllSystems } from '../../../Store/Selectors/CVESelectors';\nimport ReducerRegistry from '../../../Utilities/ReducerRegistry';\nimport VulnerabilityHeader from '../VulnerabilityHeader/VulnerabilityHeader';\nimport './Systems.scss';\n\n/*eslint camelcase: 0*/\n\nclass Systems extends React.Component {\n    static propTypes = {\n        fetchData: propTypes.func,\n        systems: dataShape\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            InventoryCmp: () => <div>Loading...</div>,\n            filter: '',\n            removeListener: () => {},\n            columns: [\n                {\n                    key: 'display_name',\n                    title: 'Name',\n                    composed: ['facts.os_release', 'display_name']\n                },\n                {\n                    key: 'cve_count',\n                    title: 'Number of CVEs'\n                },\n                {\n                    key: 'updated',\n                    title: 'Last Seen',\n                    isTime: true\n                }\n            ],\n            opt_out: false,\n            isKebabOpen: false\n        };\n    }\n\n    componentDidMount() {\n        this.props.fetchData();\n        this.fetchInventory();\n    }\n\n    downloadReport = format => {\n        const { opt_out, filter } = this.state;\n        const { payload } =\n            fetchSystems({\n                opt_out,\n                filter,\n                data_format: format,\n                page: 1,\n                page_size: Number.MAX_SAFE_INTEGER\n            });\n        payload &&\n            payload.then(({ data: response }) => {\n                const data = format === 'json' ? JSON.stringify(response) : response;\n                return downloadFile(data, `systems-${new Date().toISOString()}`, format);\n            });\n    };\n\n    async fetchInventory() {\n        const { inventoryConnector, mergeWithEntities, mergeWithDetail } = await insights.loadInventory({\n            react: React,\n            reactRouterDom,\n            reactCore,\n            reactIcons,\n            pfReactTable\n        });\n        ReducerRegistry.register({\n            ...mergeWithEntities(inventoryEntitiesReducer(this.state.columns)),\n            ...mergeWithDetail()\n        });\n\n        this.setState({\n            InventoryCmp: inventoryConnector().InventoryTable\n        });\n        this.state.removeListener();\n    }\n\n    apply = (config = {}) => {\n        this.setState({ ...this.state, ...config }, () => {\n            const params = omit(this.state, ['InventoryCmp', 'columns', 'removeListener']);\n            this.props.fetchData(params);\n        });\n    };\n\n    addFilter = (param, value, type) => {\n        let newFilter;\n        if (type === 'radio' || param === 'show_all') {\n            newFilter = { [param]: value };\n        } else {\n            newFilter = this.state[param] ? { [param]: `${this.state[param]},${value}` } : { [param]: value };\n        }\n\n        this.apply({ ...newFilter, page: 1 });\n    };\n\n    handleFilterChange = debounce(value => {\n        const { meta } = this.props.systems;\n        const { page_size } = meta;\n        this.apply({ filter: value, page_size });\n    }, 400);\n\n    handleRefresh = ({ page, per_page: perPage }) => {\n        const { meta } = this.props.systems;\n        if (meta.page !== page || meta.page_size !== perPage) {\n            this.apply({\n                page: meta.page_size !== perPage ? 1 : page,\n                page_size: perPage,\n                filter: this.state.filter\n            });\n        }\n    };\n\n    handleOptOut = () => {\n        this.setState({\n            opt_out: !this.state.opt_out\n        });\n        this.handleFilterChange(this.state.filter);\n    };\n\n    handleKebabToggle = isKebabOpen => {\n        this.setState({\n            isKebabOpen\n        });\n    };\n\n    handleKebabSelect = () => {\n        this.setState({\n            isKebabOpen: !this.state.isKebabOpen\n        });\n    };\n\n    render() {\n        const { InventoryCmp } = this.state;\n        const { data, meta } = this.props.systems;\n        const items = data.map(item => {\n            const { cve_count, ...rest } = item.attributes;\n            return {\n                cve_count: (meta.opt_out && 'Excluded') || cve_count,\n                id: item.attributes.inventory_id,\n                ...rest\n            };\n        });\n        return (\n            <Page>\n                <VulnerabilityHeader />\n                <Main>\n                    <InventoryCmp\n                        hasCheckbox={false}\n                        page={meta.page}\n                        total={meta.total_items}\n                        perPage={meta.page_size}\n                        onRefresh={this.handleRefresh}\n                        items={items}\n                    >\n                        <ToolbarGroup className=\"systems-toolbar\">\n                            <div>\n                                <SimpleTableFilter\n                                    onFilterChange={this.handleFilterChange}\n                                    buttonTitle={null}\n                                    placeholder=\"Find a system by UUID\"\n                                />\n                            </div>\n                            <div>\n                                <Dropdown\n                                    onSelect={this.handleKebabSelect}\n                                    toggle={<KebabToggle onToggle={this.handleKebabToggle} />}\n                                    isOpen={this.state.isKebabOpen}\n                                    isPlain\n                                    dropdownItems={[\n                                        <DropdownItem key=\"opt_out\" component=\"button\" onClick={() => this.handleOptOut()}>\n                                            {this.state.opt_out\n                                                ? 'Hide systems excluded from analysis'\n                                                : 'Show systems excluded from analysis'}\n                                        </DropdownItem>,\n                                        <DropdownItem key=\"csv\" component=\"button\" onClick={() => this.downloadReport('csv')}>\n                                            Export as CSV\n                                        </DropdownItem>,\n                                        <DropdownItem key=\"json\" component=\"button\" onClick={() => this.downloadReport('json')}>\n                                            Export as JSON\n                                        </DropdownItem>\n                                    ]}\n                                />\n                            </div>\n                        </ToolbarGroup>\n                    </InventoryCmp>\n                </Main>\n            </Page>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        systems: sAllSystems(state)\n    };\n}\n\nconst mapDispatchToProps = () => {\n    return {\n        setHeader: header => dispatchAction(setHeader(header)),\n        fetchData: options => dispatchAction(fetchSystems(options))\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Systems)\n);\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./Systems.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./Systems.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./Systems.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".systems-toolbar > div {\\n  margin-right: var(--pf-global--spacer--sm); }\\n\\n.space-between-toolbar-items {\\n  justify-content: space-between;\\n  flex-wrap: nowrap; }\\n  .space-between-toolbar-items > div {\\n    flex-wrap: nowrap; }\\n\\n.vulnerability-toolbar-spacing {\\n  justify-content: flex-start; }\\n  .vulnerability-toolbar-spacing > div:not(:last-child) {\\n    margin-right: var(--pf-global--spacer--sm); }\\n\", \"\"]);\n\n// exports\n"],"sourceRoot":""}