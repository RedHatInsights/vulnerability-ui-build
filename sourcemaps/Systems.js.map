{"version":3,"sources":["webpack:///./src/Components/PresentationalComponents/DownloadReportKebab/BaseKebab.js","webpack:///./src/Components/PresentationalComponents/DownloadReportKebab/KebabItems.js","webpack:///./src/Components/PresentationalComponents/Filters/FilterChips.js","webpack:///./src/Components/PresentationalComponents/Filters/SearchFilter.js","webpack:///./src/Components/PresentationalComponents/SelectAllCheckbox.js","webpack:///./src/Store/Selectors/CVESelectors.js","webpack:///./node_modules/reselect/lib/index.js","webpack:///./src/Store/Reducers/InventoryEntitiesReducer.js","webpack:///./src/Components/SmartComponents/Systems/Systems.js","webpack:///./src/Components/SmartComponents/Systems/Systems.scss?4fb1","webpack:///./src/Components/SmartComponents/Systems/Systems.scss"],"names":["BaseKebab","dropdownItems","disabled","props","useState","isOpen","setOpen","onSelect","toggle","onToggle","kebabState","isDisabled","isPlain","propTypes","array","bool","kebabItemDownloadJSON","downloadReport","key","component","onClick","messages","kebabExportAsJson","kebabItemDownloadCSV","kebabExportAsCsv","kebabItemEditBusinessRisk","showBusinessRiskModal","cves","kebabEditBusinessRisk","kebabItemEditStatus","showStatusModal","inventoryIds","kebabEditStatus","kebabItemToggleCvesDescription","toggleCveDescription","isExpanded","kebabCollapseCves","kebabExpandCves","kebabItemExcludeSystemAnalysis","doOptOut","isOptOut","kebabResumeAnalysis","kebabExcludeVulnerabilityAnalysis","kebabItemToggleExcludeSystemDisplay","handleOptOut","isOptedOut","kebabHideExcludedSystems","kebabShowExcludedSystems","FilterChips","filterValues","filterCategories","apply","localFilters","localFilterCategories","show_all","allowedFilters","map","urlParam","Object","entries","find","filter","includes","undefined","filterIsNotEmpty","length","Fragment","withToolbar","value","title","values","categoryName","toString","split","chip","mapChip","indexOf","label","newFilter","item","join","page","removeFilter","variant","resetParams","reduce","o","removeAllFilters","filterChipsClear","object","func","SearchFilter","placeholder","filterValue","updateFilterValue","debounce","applyFunction","useEffect","onChange","event","string","SelectAllCheckbox","setIsOpen","selectedItems","items","multiRow","selectedItemsArray","Array","from","selectedItemsCount","meta","data","checkboxlabel","Boolean","selectPageNumber","itemLabel","number","handleUnselectAll","selectorHandler","handleSelectAll","fetchResource","payload","page_size","total_items","then","id","intl","formatMessage","selectNone","union","selectPage","selectAll","splitButtonItems","isChecked","oneOfType","any","defaultProps","impact","injectIntl","sCveDetailsPage","createSelector","state","CVEStore","cveDetails","createCveDetailsPage","sExposedSystemsTable","cve","affectedSystemsByCVE","createExposedSystemsTable","sAllSystems","SystemsStore","createSystemsListTable","defaultEqualityCheck","a","b","areArgumentsShallowlyEqual","equalityCheck","prev","next","i","defaultMemoize","arguments","lastArgs","lastResult","getDependencies","funcs","dependencies","isArray","every","dep","dependencyTypes","Error","createSelectorCreator","memoize","_len","memoizeOptions","_key","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","concat","selector","params","push","resetRecomputations","exports","__esModule","createStructuredSelector","selectors","selectorCreator","objectKeys","keys","_len3","_key3","composition","index","init","columns","rows","entities","modifyInventory","getSelectedFunc","loaded","selected","lastSeenColumn","insights_id","has","selectEntities","myRows","slice","inventoryEntitiesReducer","action","type","row","Systems","format","opt_out","date","Date","toISOString","replace","fetchSystems","data_format","Number","MAX_SAFE_INTEGER","response","JSON","stringify","downloadFile","config","setState","sendRequest","fetchData","createUrlParams","allParams","allowedParams","forEach","queryString","qs","history","addFilter","param","systems","size","optOutSystems","addNotification","systemsExcludedNotification","count","systemsResumedNotificationTitle","description","systemsResumedNotificationBody","Set","add","selectMultiple","getSelected","handleFilterChange","handleRefresh","perPage","per_page","inventory","current","onRefreshData","handleKebabToggle","isKebabOpen","handleKebabSelect","React","createRef","InventoryCmp","removeListener","systemsColumnHeaderName","composed","systemsColumnHeaderCveCount","selectListener","middlewareListener","addNew","on","callback","selectAllListener","queryObject","parse","this","location","search","show_irrelevant","fetchInventory","nextProps","isLoading","insights","loadInventory","react","reactRouterDom","reactCore","reactIcons","pfReactTable","inventoryConnector","mergeWithEntities","mergeWithDetail","ReducerRegistry","register","getStore","InventoryTable","attributes","cve_count","rest","inventory_id","kebabOptions","showBreadcrumb","ref","hasCheckbox","total","onRefresh","actions","systemTableRowActions","className","selectRows","ops","searchFilterByName","filterSystemName","Component","dataShape","withRouter","connect","dispatch","setHeader","header","options","status","optOutSystemsAction","notification","ids","content","module","transform","locals"],"mappings":"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","file":"js/Systems.js","sourcesContent":["/* eslint-disable camelcase */\nimport { Dropdown, KebabToggle } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React, { useState } from 'react';\n\nconst BaseKebab = ({ dropdownItems, disabled, ...props }) => {\n    const [isOpen, setOpen] = useState(false);\n\n    function handleOnKebabToggle(kebabState) {\n        setOpen(kebabState);\n    }\n\n    function handleOnKebabSelect() {\n        setOpen(!isOpen);\n    }\n\n    return (\n        <div>\n            <Dropdown\n                onSelect={handleOnKebabSelect}\n                toggle={<KebabToggle onToggle={handleOnKebabToggle} isDisabled={disabled} />}\n                isOpen={isOpen}\n                isPlain\n                dropdownItems={dropdownItems}\n                {...props}\n            />\n        </div>\n    );\n};\n\nBaseKebab.propTypes = {\n    dropdownItems: propTypes.array,\n    disabled: propTypes.bool\n};\n\nexport default BaseKebab;\n","/* eslint-disable camelcase */\nimport { DropdownItem } from '@patternfly/react-core';\nimport React from 'react';\nimport messages from '../../../Messages';\nimport { FormattedMessage } from 'react-intl';\n\nexport const kebabItemDownloadJSON = (downloadReport, { ...props }) => (\n    <DropdownItem key=\"json\" component=\"button\" onClick={() => downloadReport('json')} {...props}>\n        <FormattedMessage {...messages.kebabExportAsJson} />\n    </DropdownItem>\n);\n\nexport const kebabItemDownloadCSV = (downloadReport, { ...props }) => (\n    <DropdownItem key=\"csv\" component=\"button\" onClick={() => downloadReport('csv')} {...props}>\n        <FormattedMessage {...messages.kebabExportAsCsv} />\n    </DropdownItem>\n);\n\nexport const kebabItemEditBusinessRisk = (showBusinessRiskModal, cves, { ...props }) => (\n    <DropdownItem key=\"editBusinessRisk\" component=\"button\" onClick={() => showBusinessRiskModal(cves)} {...props}>\n        <FormattedMessage {...messages.kebabEditBusinessRisk} />\n    </DropdownItem>\n);\n\nexport const kebabItemEditStatus = (showStatusModal, cves, inventoryIds,  { ...props }) => (\n    <DropdownItem key=\"editStatus\" component=\"button\" onClick={() => showStatusModal(cves, inventoryIds)} {...props}>\n        <FormattedMessage {...messages.kebabEditStatus} />\n    </DropdownItem>\n);\n\nexport const kebabItemToggleCvesDescription = (toggleCveDescription, isExpanded, { ...props }) => (\n    <DropdownItem key=\"toggleCveDescription\" component=\"button\" onClick={() => toggleCveDescription()} {...props}>\n        {isExpanded ? <FormattedMessage {...messages.kebabCollapseCves} /> : <FormattedMessage {...messages.kebabExpandCves} /> }\n    </DropdownItem>\n);\n\nexport const kebabItemExcludeSystemAnalysis = (doOptOut, isOptOut,  { ...props }) => (\n    <DropdownItem key=\"do_opt_out\" component=\"button\" onClick={() => doOptOut()} {...props}>\n        {isOptOut ?\n            <FormattedMessage {...messages.kebabResumeAnalysis} /> :\n            <FormattedMessage {...messages.kebabExcludeVulnerabilityAnalysis} />}\n    </DropdownItem>\n);\n\nexport const kebabItemExcludeSystem = (doOptOut, isOptOut,  { ...props }) => (\n    <DropdownItem key=\"do_opt_out\" component=\"button\" onClick={() => doOptOut()} {...props}>\n        {isOptOut ?\n            <FormattedMessage {...messages.kebabResumeAnalysis} /> :\n            <FormattedMessage {...messages.kebabExcludeAnalysis} />}\n    </DropdownItem>\n);\n\nexport const kebabItemToggleExcludeSystemDisplay = (handleOptOut, isOptedOut,  { ...props }) => (\n    <DropdownItem key=\"toggle_opt_out\" component=\"button\" onClick={() => handleOptOut()} {...props}>\n        {isOptedOut ?\n            <FormattedMessage {...messages.kebabHideExcludedSystems} />  :\n            <FormattedMessage {...messages.kebabShowExcludedSystems} />}\n    </DropdownItem>\n);\n","import React from 'react';\nimport { Button, Chip, ChipGroup, ChipGroupToolbarItem } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport messages from '../../../Messages';\nimport { FormattedMessage } from 'react-intl';\n\nconst FilterChips = (props) => {\n    const { filterValues, filterCategories, apply } = props;\n    const localFilters = { ...filterValues };\n    const localFilterCategories = [...filterCategories];\n\n    delete localFilters.show_all;\n\n    const removeFilter = (key, value) => {\n        const values = value.split(',');\n        const newFilter = {\n            [key]: filterValues[key]\n            .split(',')\n            .filter(item => !values.includes(item))\n            .join(',')\n        };\n\n        if (newFilter[key].length !== 0) {\n            apply({ ...newFilter, page: 1 });\n        } else {\n            const filter = { ...filterValues, [key]: undefined };\n            apply({ ...filter, page: 1 });\n        }\n    };\n\n    const removeAllFilters = (allowedFilters) => {\n\n        const resetParams = allowedFilters.reduce((o, key) => ({ ...o, [key[0]]: undefined }), {});\n\n        apply({ ...resetParams, page: 1 });\n    };\n\n    const filterIsNotEmpty = (filter) => {\n        return filter && (!filter.includes(undefined) && !filter.includes(''));\n    };\n\n    const getFilters = () => {\n        const filters = localFilterCategories.map(\n            ({ urlParam }) => Object.entries(localFilters).find(([key]) => key === urlParam)\n        );\n\n        return filters.filter(filter => filterIsNotEmpty(filter));\n    };\n\n    const allowedFilters = getFilters();\n\n    return allowedFilters.length > 0 &&\n        <React.Fragment>\n            <ChipGroup withToolbar>\n                {allowedFilters.map(([key, value]) => {\n                    const { title, urlParam, values } = localFilterCategories.find(({ urlParam }) => urlParam === key);\n                    return (\n                        <ChipGroupToolbarItem key={key} categoryName={title}>\n                            { value && value.toString().split(',').map(chip => {\n                                const mapChip = values.find(({ value }) => value.indexOf(chip) !== -1);\n                                let { value, label } = mapChip ? { ...mapChip } : { value: key, label: chip };\n                                return (\n                                    <Chip key={value} onClick={() => removeFilter(urlParam, chip)}>\n                                        { label }\n                                    </Chip>\n                                );\n                            }) }\n                        </ChipGroupToolbarItem>\n                    );\n                }) }\n            </ChipGroup>\n            <Button variant=\"link\" onClick={() => removeAllFilters(allowedFilters)}>\n                <FormattedMessage {...messages.filterChipsClear} />\n            </Button>\n        </React.Fragment>;\n};\n\nFilterChips.propTypes = {\n    filterValues: propTypes.object,\n    filterCategories: propTypes.array,\n    apply: propTypes.func\n};\n\nexport default FilterChips;\n","import { ConditionalFilter } from '@redhat-cloud-services/frontend-components';\nimport debounce from 'lodash/debounce';\nimport propTypes from 'prop-types';\nimport React, { useState, useEffect }  from 'react';\n\nconst SearchFilter = props => {\n    const { placeholder, value, apply } = props;\n    const [filterValue, updateFilterValue] = useState(value);\n\n    const [applyFunction] = useState(() => debounce(filter => {\n        if (filter !== undefined) { apply({ filter, page: 1 }); }\n    }, 400));\n\n    useEffect(() => applyFunction(filterValue), [filterValue, applyFunction]);\n    useEffect(() => updateFilterValue(value), [value]);\n\n    return (\n        <ConditionalFilter\n            placeholder={placeholder}\n            onChange={(event, value) => updateFilterValue(value)}\n            value={filterValue}\n        />\n    );\n};\n\nSearchFilter.propTypes = {\n    placeholder: propTypes.string,\n    value: propTypes.string,\n    apply: propTypes.func\n};\n\nexport default SearchFilter;\n","import { Checkbox, Dropdown, DropdownItem, DropdownToggle } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport union from 'lodash/union';\nimport messages from '../../Messages';\nimport { injectIntl } from 'react-intl';\n\nconst SelectAllCheckbox = (props) => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    const { selectedItems, items, multiRow } = props;\n    const selectedItemsArray = Array.from(selectedItems); // we might get array or set and there's no common method for size\n    const selectedItemsCount = selectedItemsArray && selectedItemsArray.length;\n    const { meta, data } = items;\n    const checkboxlabel = Boolean(selectedItemsCount) && `${selectedItemsCount} selected`;\n    const selectPageNumber = multiRow ? data.length / 2 : data.length;\n    const itemLabel = number => (number > 1 && 'items') || 'item';\n\n    const handleOnToggle = isOpen => {\n        setIsOpen(isOpen);\n    };\n\n    const handleOnSelect = () => {\n        setIsOpen(!isOpen);\n    };\n\n    const handleSelectPage = () => {\n        const { items: { data }, selectorHandler } = props;\n        const items = union(data.filter(item => item.id).map(item => item.id), selectedItemsArray);\n        selectorHandler(true, items);\n    };\n\n    const handleUnselectAll = () => {\n        const { selectorHandler } = props;\n        selectorHandler(false, undefined);\n    };\n\n    const handleSelectAll = () => {\n        const { items: { meta }, selectorHandler, fetchResource } = props;\n        // eslint-disable-next-line camelcase\n        let { payload } = fetchResource && fetchResource({ page_size: meta.total_items, page: 1 });\n        payload &&\n            payload.then(({ data: response }) => {\n                const items = response.map(item => item.id);\n                selectorHandler(true, items);\n            });\n    };\n\n    const handleOnCheckboxChange = () => {\n        if (selectedItemsCount === 0) {\n            handleSelectAll();\n        } else {\n            handleUnselectAll();\n        }\n    };\n\n    const dropdownItems = [\n        <DropdownItem key=\"none\" onClick={handleUnselectAll}>\n            {props.intl.formatMessage(messages.selectNone)}\n        </DropdownItem>,\n        <DropdownItem key=\"page\" onClick={handleSelectPage} isDisabled={meta.total_items === 0}>\n            {props.intl.formatMessage(messages.selectPage)} ({selectPageNumber} {itemLabel(selectPageNumber)})\n        </DropdownItem>,\n        <DropdownItem key=\"all\" onClick={handleSelectAll} isDisabled={meta.total_items === 0}>\n            {props.intl.formatMessage(messages.selectAll)} ({meta.total_items} {itemLabel(meta.total_items)})\n        </DropdownItem>\n    ];\n\n    return (\n        <Dropdown\n            onSelect={handleOnSelect}\n            toggle={\n                <DropdownToggle\n                    splitButtonItems={[\n                        <Checkbox\n                            id={'selectAllcheckbox'}\n                            key={'selectAllcheckbox'}\n                            isChecked={selectedItemsCount === 0 ? false : meta.total_items === selectedItemsCount ? true : null}\n                            onChange={handleOnCheckboxChange}\n                        />,\n                        checkboxlabel\n                    ]}\n                    onToggle={handleOnToggle}\n                    isDisabled={meta.total_items === 0 && selectedItemsCount === 0}\n                />\n            }\n            isOpen={isOpen}\n            dropdownItems={dropdownItems}\n        />\n    );\n};\n\nSelectAllCheckbox.propTypes = {\n    selectorHandler: propTypes.func,\n    fetchResource: propTypes.func,\n    selectedItems: propTypes.oneOfType([\n        propTypes.array,\n        propTypes.object\n    ]),\n    items: propTypes.object,\n    multiRow: propTypes.bool,\n    intl: propTypes.any\n};\n\nSelectAllCheckbox.defaultProps = {\n    impact: 'Unknown',\n    selectedItems: [],\n    items: {},\n    multiRow: false\n};\n\nexport default injectIntl(SelectAllCheckbox);\n","import { createSelector } from 'reselect';\nimport { createCveDetailsPage, createExposedSystemsTable, createSystemsListTable } from '../../Helpers/CVEHelper';\n\nconst cveListWithSystemsSelector = (state, cve) => ({ ...state.CVEStore.affectedSystemsByCVE, cve });\nconst systemsListAllSelector = state => state.SystemsStore;\nconst cveDetailsPageSelector = state => state.CVEStore.cveDetails;\n\nexport const sCveDetailsPage = createSelector(\n    [cveDetailsPageSelector],\n    createCveDetailsPage\n);\nexport const sExposedSystemsTable = createSelector(\n    [cveListWithSystemsSelector],\n    createExposedSystemsTable\n);\n\nexport const sAllSystems = createSelector(\n    [systemsListAllSelector],\n    createSystemsListTable\n);\n","'use strict';\n\nexports.__esModule = true;\nexports.defaultMemoize = defaultMemoize;\nexports.createSelectorCreator = createSelectorCreator;\nexports.createStructuredSelector = createStructuredSelector;\nfunction defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nfunction createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = defaultMemoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nvar createSelector = exports.createSelector = createSelectorCreator(defaultMemoize);\n\nfunction createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","// Initial State\nexport const init = {\n    columns: [],\n    rows: [],\n    entities: []\n};\n// Reducer\n\nfunction modifyInventory(columns, state, getSelectedFunc) {\n    // If a system does not have insights_id, it means it was deleted from inventory but somehow survived in Vuln backend\n    if (state.loaded) {\n        const selected = getSelectedFunc();\n        const lastSeenColumn = state.columns.filter(({ key }) => key === 'updated');\n        return {\n            ...state,\n            rows: state.rows.filter(item => item.insights_id).map(item => ({ ...item, selected: selected.has(item.id) })),\n            columns: [\n                ...columns || [],\n                ...lastSeenColumn || []\n            ]\n        };\n    }\n\n    return state;\n}\n\nfunction selectEntities(state, getSelectedFunc) {\n    const selected = getSelectedFunc();\n    const myRows = state.rows.slice();\n    const retval = {\n        ...state,\n        rows: myRows\n        .map(item => {\n            const newValue =  { ...item, selected: selected.has(item.id) };\n            return newValue;\n        })\n    };\n    return retval;\n}\n\nexport const inventoryEntitiesReducer = (columns, selected) => (state = init, action) => {\n    switch (action.type) {\n        case 'LOAD_ENTITIES_FULFILLED':\n            return modifyInventory(columns, state, selected);\n        case 'SELECT_MULTIPLE_ENTITIES':\n            return selectEntities(state, selected);\n        case 'EXPAND_ROW':\n            return {\n                ...state,\n                rows: state.rows.map((row) => ({\n                    ...row,\n                    isOpen: row.id === action.payload.id ? action.payload.isOpen : row.isOpen\n                }))\n            };\n\n        default:\n            return state;\n    }\n};\n","import * as reactCore from '@patternfly/react-core';\nimport { Page, ToolbarGroup, ToolbarItem } from '@patternfly/react-core';\nimport * as reactIcons from '@patternfly/react-icons';\nimport * as pfReactTable from '@patternfly/react-table';\nimport { Main, TableToolbar } from '@redhat-cloud-services/frontend-components';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport debounce from 'lodash/debounce';\nimport propTypes from 'prop-types';\nimport qs from 'query-string';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as reactRouterDom from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport { dataShape } from '../../../Helpers/MiscHelper';\nimport { fetchSystems, optOutSystemsAction, setHeader, selectEntities } from '../../../Store/Actions/Actions';\nimport { inventoryEntitiesReducer } from '../../../Store/Reducers/InventoryEntitiesReducer';\nimport { sAllSystems } from '../../../Store/Selectors/CVESelectors';\nimport ReducerRegistry, { middlewareListener } from '../../../Utilities/ReducerRegistry';\nimport VulnerabilityHeader from '../VulnerabilityHeader/VulnerabilityHeader';\nimport BaseKebab from '../../PresentationalComponents/DownloadReportKebab/BaseKebab';\nimport {\n    kebabItemDownloadCSV,\n    kebabItemDownloadJSON,\n    kebabItemToggleExcludeSystemDisplay,\n    kebabItemExcludeSystemAnalysis\n} from '../../PresentationalComponents/DownloadReportKebab/KebabItems';\nimport './Systems.scss';\nimport SelectAllCheckbox from '../../PresentationalComponents/SelectAllCheckbox';\nimport { filterSystemName } from '../../../Helpers/constants';\nimport FilterChips  from '../../PresentationalComponents/Filters/FilterChips';\nimport SearchFilter  from '../../PresentationalComponents/Filters/SearchFilter';\nimport messages from '../../../Messages';\nimport { injectIntl } from 'react-intl';\nimport { systemTableRowActions } from '../../../Helpers/CVEHelper';\n/*eslint camelcase: 0*/\n\nclass Systems extends React.Component {\n    static propTypes = {\n        fetchData: propTypes.func,\n        systems: dataShape,\n        optOutSystems: propTypes.func,\n        addNotification: propTypes.func,\n        selectRows: propTypes.func,\n        selectMultiple: propTypes.func,\n        history: propTypes.object,\n        location: propTypes.object,\n        intl: propTypes.any\n    };\n\n    constructor(props) {\n        super(props);\n        this.inventory = React.createRef();\n        this.state = {\n            InventoryCmp: () => <div>Loading...</div>,\n            filter: undefined,\n            removeListener: () => { },\n            columns: [\n                {\n                    key: 'display_name',\n                    title: this.props.intl.formatMessage(messages.systemsColumnHeaderName),\n                    composed: ['facts.os_release', 'display_name']\n                },\n                {\n                    key: 'cve_count',\n                    title: this.props.intl.formatMessage(messages.systemsColumnHeaderCveCount)\n                }\n            ],\n            opt_out: false,\n            isKebabOpen: false,\n            selectListener: middlewareListener.addNew({\n                on: 'SELECT_ENTITY',\n                callback: payload => this.onSelect(payload)\n            }),\n            selectAllListener: middlewareListener.addNew({\n                on: 'SELECT_ENTITIES',\n                callback: payload => this.onSelect(payload)\n            }),\n            selected: new Set()\n        };\n    }\n\n    componentDidMount() {\n\n        const queryObject = qs.parse(this.props.location.search);\n        queryObject.show_irrelevant = queryObject.show_irrelevant === 'true';\n        if (queryObject.show_irrelevant) {\n            queryObject.show_all = undefined;\n        }\n\n        this.fetchInventory();\n        this.apply({ ...queryObject });\n    }\n\n    shouldComponentUpdate(nextProps) {\n        return !nextProps.systems.isLoading;\n    }\n\n    downloadReport = format => {\n        const { opt_out, filter } = this.state;\n        const date = new Date().toISOString().replace(/[T:]/g, '-').split('.')[0] + '-utc';\n        const { payload } = fetchSystems({\n            opt_out,\n            filter,\n            data_format: format,\n            page: 1,\n            page_size: Number.MAX_SAFE_INTEGER\n        });\n        payload &&\n            payload.then(({ data: response }) => {\n                const data = format === 'json' ? JSON.stringify(response) : response;\n                return downloadFile(data, `vulnerability_systems--${date}`, format);\n            });\n    };\n\n    async fetchInventory() {\n        const { inventoryConnector, mergeWithEntities, mergeWithDetail } = await insights.loadInventory({\n            react: React,\n            reactRouterDom,\n            reactCore,\n            reactIcons,\n            pfReactTable\n        });\n        ReducerRegistry.register({\n            ...mergeWithEntities(inventoryEntitiesReducer(this.state.columns, this.getSelected)),\n            ...mergeWithDetail()\n        });\n\n        this.setState({\n            InventoryCmp: inventoryConnector(ReducerRegistry.getStore()).InventoryTable\n        });\n        this.state.removeListener();\n    }\n\n    apply = (config = {}) => {\n        this.setState({ ...this.state, ...config }, this.sendRequest);\n    };\n\n    sendRequest = () => {\n        const { fetchData } = this.props;\n        fetchData({ ...this.state });\n        this.createUrlParams(this.state);\n    }\n\n    createUrlParams = allParams => {\n        const params = { ...allParams };\n        const allowedParams = ['filter', 'page', 'page_size'];\n        Object.keys(allParams).forEach(\n            key =>\n                (params[key] === undefined || params[key] === '' || !allowedParams.includes(key) || params[key] === false) &&\n                delete params[key]\n        );\n        const queryString = qs.stringify(params);\n        this.props.history.push('?' + queryString);\n    };\n\n    addFilter = (param, value, type) => {\n        let newFilter;\n        if (type === 'radio' || param === 'show_all') {\n            newFilter = { [param]: value };\n        } else {\n            newFilter = this.state[param] ? { [param]: `${this.state[param]},${value}` } : { [param]: value };\n        }\n\n        this.apply({ ...newFilter, page: 1 });\n    };\n\n    doOptOut = (systems) => {\n        if (systems.size > 0) {\n            this.props.optOutSystems(systems, !this.state.opt_out).then(() => {\n                this.props.fetchData({ ...this.params(), page: 1 });\n                this.state.opt_out === false\n                    ? this.props.addNotification({\n                        variant: 'success',\n                        title: this.props.intl.formatMessage(\n                            messages.systemsExcludedNotification,\n                            { count: systems.size || 0 }\n                        )\n                    })\n                    : this.props.addNotification({\n                        variant: 'success',\n                        title: this.props.intl.formatMessage(\n                            messages.systemsResumedNotificationTitle,\n                            { count: systems.size || 0 }\n                        ),\n                        description: this.props.intl.formatMessage(messages.systemsResumedNotificationBody)\n                    });\n                this.setState({ selected: new Set() });\n            });\n        }\n    };\n\n    onSelect = (payload) => {\n        let selected;\n        if (!payload.data || Array.isArray(payload.data)) {\n            selected = new Set(payload.data);\n        } else {\n            selected = this.state.selected;\n            payload.data.selected ? selected.add(payload.data.id) : selected.delete(payload.data.id);\n        }\n\n        this.setState({ selected }, this.props.selectMultiple);\n    };\n\n    getSelected = () => {\n        return this.state.selected;\n    };\n\n    params = () => {\n        const { filter, opt_out, page, page_size } = this.state;\n        return { filter, opt_out, page, page_size };\n    };\n\n    handleFilterChange = debounce(value => {\n        const { meta } = this.props.systems;\n        const { page_size } = meta;\n        this.apply({ filter: value, page_size, page: 1 });\n    }, 400);\n\n    handleRefresh = ({ page, per_page: perPage }) => {\n        const { meta } = this.props.systems;\n        const { fetchData } = this.props;\n        if (meta.page !== page || meta.page_size !== perPage) {\n            const config = {\n                page,\n                page_size: perPage || meta.page_size,\n                filter: this.state.filter,\n                opt_out: this.state.opt_out\n            };\n            fetchData(config);\n            this.createUrlParams(config);\n        }\n\n        if (meta.total_items <= perPage && this.inventory.current) {\n            this.inventory.current.onRefreshData({ page, per_page: perPage, perPage });\n        }\n    };\n\n    handleOptOut = () => {\n        this.setState({\n            opt_out: !this.state.opt_out,\n            selected: new Set(),\n            page: 1\n        }, this.sendRequest);\n    };\n\n    handleKebabToggle = isKebabOpen => {\n        this.setState({\n            isKebabOpen\n        });\n    };\n\n    handleKebabSelect = () => {\n        this.setState({\n            isKebabOpen: !this.state.isKebabOpen\n        });\n    };\n\n    render() {\n        const { InventoryCmp, filter } = this.state;\n        const { data, meta } = this.props.systems;\n        const items = data.map(item => {\n            const { cve_count, ...rest } = item.attributes;\n            return {\n                cve_count: (meta.opt_out && 'Excluded') || cve_count,\n                id: item.attributes.inventory_id,\n                ...rest\n            };\n        });\n\n        const kebabOptions = [\n            kebabItemExcludeSystemAnalysis(() => this.doOptOut(this.state.selected), this.state.opt_out, {\n                isDisabled: !this.getSelected().size\n            }),\n            kebabItemToggleExcludeSystemDisplay(this.handleOptOut, this.state.opt_out),\n            kebabItemDownloadJSON(this.downloadReport, { isDisabled: data.length === 0 }),\n            kebabItemDownloadCSV(this.downloadReport, { isDisabled: data.length === 0 })\n        ];\n        return (\n            <Page>\n                <VulnerabilityHeader showBreadcrumb={false} />\n                <Main>\n                    <InventoryCmp\n                        ref={this.inventory}\n                        hasCheckbox={data.length !== 0}\n                        page={meta.page}\n                        total={meta.total_items}\n                        perPage={meta.page_size}\n                        onRefresh={this.handleRefresh}\n                        items={items}\n                        actions={systemTableRowActions(this.doOptOut, this.state.opt_out)}\n                    >\n\n                        <ToolbarGroup className=\"systems-toolbar\">\n                            <ToolbarItem>\n                                <SelectAllCheckbox\n                                    selectedItems={this.state.selected}\n                                    selectorHandler={this.props.selectRows}\n                                    items={this.props.systems}\n                                    fetchResource={ops => fetchSystems({ ...this.params(), ...ops })}\n                                />\n                            </ToolbarItem>\n\n                            <ToolbarItem>\n                                <SearchFilter\n                                    placeholder={this.props.intl.formatMessage(messages.searchFilterByName)}\n                                    value={filter}\n                                    apply={this.apply}\n                                />\n                            </ToolbarItem>\n\n                            <ToolbarItem>\n                                <BaseKebab dropdownItems={kebabOptions} />\n                            </ToolbarItem>\n                        </ToolbarGroup>\n                        <TableToolbar className=\"pf-u-pl-0 system-filter-chips\">\n                            <ToolbarGroup>\n                                <ToolbarItem>\n                                    <FilterChips\n                                        filterValues={this.params()}\n                                        filterCategories={[filterSystemName]}\n                                        apply={this.apply}\n                                    />\n                                </ToolbarItem>\n                            </ToolbarGroup>\n                        </TableToolbar>\n                    </InventoryCmp>\n                </Main>\n            </Page>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        systems: sAllSystems(state)\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setHeader: header => dispatch(setHeader(header)),\n        fetchData: options => dispatch(fetchSystems(options)),\n        optOutSystems: (systems, status) => dispatch(optOutSystemsAction(systems, status)),\n        addNotification: notification => dispatch(addNotification(notification)),\n        selectRows: (value, ids) => dispatch(selectEntities(value, ids)),\n        selectMultiple: () => dispatch({ type: 'SELECT_MULTIPLE_ENTITIES' })\n    };\n};\n\nexport default injectIntl(\n    withRouter(\n        connect(\n            mapStateToProps,\n            mapDispatchToProps\n        )(Systems)\n    )\n);\n\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./Systems.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./Systems.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./Systems.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".systems-toolbar > div {\\n  margin-right: var(--pf-global--spacer--sm); }\\n\\n.space-between-toolbar-items {\\n  justify-content: space-between;\\n  flex-wrap: nowrap; }\\n  .space-between-toolbar-items > div {\\n    flex-wrap: nowrap; }\\n\\n.vulnerability-toolbar-spacing {\\n  justify-content: flex-start; }\\n  .vulnerability-toolbar-spacing > div:not(:last-child) {\\n    margin-right: var(--pf-global--spacer--sm); }\\n\\n.system-filter-chips {\\n  order: 6;\\n  flex-basis: 100%; }\\n\", \"\"]);\n\n// exports\n"],"sourceRoot":""}