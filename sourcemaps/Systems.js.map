{"version":3,"sources":["webpack:///./src/Store/Selectors/CVESelectors.js","webpack:///./node_modules/reselect/lib/index.js","webpack:///./src/Store/Reducers/InventoryEntitiesReducer.js","webpack:///./src/Components/SmartComponents/Systems/Systems.js","webpack:///./src/Components/SmartComponents/Systems/Systems.scss?4fb1","webpack:///./src/Components/SmartComponents/Systems/Systems.scss"],"names":["sCveDetailsPage","createSelector","state","CVEStore","cveDetails","createCveDetailsPage","sExposedSystemsTable","cve","affectedSystemsByCVE","createExposedSystemsTable","sAllSystems","SystemsStore","createSystemsListTable","defaultEqualityCheck","a","b","areArgumentsShallowlyEqual","equalityCheck","prev","next","length","i","defaultMemoize","func","arguments","undefined","lastArgs","lastResult","apply","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptions","_key","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","concat","selector","params","push","resetRecomputations","exports","__esModule","createStructuredSelector","selectors","selectorCreator","objectKeys","Object","keys","key","_len3","values","_key3","reduce","composition","value","index","init","columns","rows","entities","modifyInventory","getSelectedFunc","loaded","selected","lastSeenColumn","filter","item","insights_id","has","id","selectEntities","myRows","slice","inventoryEntitiesReducer","action","type","row","isOpen","payload","Systems","props","downloadReport","format","opt_out","fetchSystems","data_format","page","page_size","Number","MAX_SAFE_INTEGER","then","response","data","JSON","stringify","downloadFile","Date","toISOString","config","setState","sendRequest","fetchData","createUrlParams","allParams","allowedParams","forEach","includes","queryString","qs","history","addFilter","param","newFilter","doOptOut","systems","size","optOutSystems","addNotification","variant","title","intl","formatMessage","messages","systemsExcludedNotification","count","systemsResumedNotificationTitle","description","systemsResumedNotificationBody","Set","onSelect","add","selectMultiple","getSelected","handleFilterChange","debounce","meta","handleRefresh","perPage","per_page","total_items","inventory","current","onRefreshData","handleOptOut","handleKebabToggle","isKebabOpen","handleKebabSelect","React","createRef","InventoryCmp","removeListener","systemsColumnHeaderName","composed","systemsColumnHeaderCveCount","selectListener","middlewareListener","addNew","on","callback","selectAllListener","queryObject","parse","this","location","search","show_irrelevant","show_all","fetchInventory","nextProps","isLoading","insights","loadInventory","react","reactRouterDom","reactCore","reactIcons","pfReactTable","inventoryConnector","mergeWithEntities","mergeWithDetail","ReducerRegistry","register","getStore","InventoryTable","items","attributes","cve_count","rest","inventory_id","kebabOptions","kebabItemExcludeSystemAnalysis","isDisabled","kebabItemToggleExcludeSystemDisplay","kebabItemDownloadJSON","kebabItemDownloadCSV","showBreadcrumb","ref","hasCheckbox","total","onRefresh","actions","systemTableRowActions","className","selectedItems","selectorHandler","selectRows","fetchResource","ops","placeholder","searchFilterByName","dropdownItems","filterValues","filterCategories","filterSystemName","Component","propTypes","dataShape","object","any","injectIntl","withRouter","connect","dispatch","setHeader","header","options","status","optOutSystemsAction","notification","ids","content","module","transform","locals"],"mappings":"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","file":"js/Systems.js","sourcesContent":["import { createSelector } from 'reselect';\nimport { createCveDetailsPage, createExposedSystemsTable, createSystemsListTable } from '../../Helpers/CVEHelper';\n\nconst cveListWithSystemsSelector = (state, cve) => ({ ...state.CVEStore.affectedSystemsByCVE, cve });\nconst systemsListAllSelector = state => state.SystemsStore;\nconst cveDetailsPageSelector = state => state.CVEStore.cveDetails;\n\nexport const sCveDetailsPage = createSelector(\n    [cveDetailsPageSelector],\n    createCveDetailsPage\n);\nexport const sExposedSystemsTable = createSelector(\n    [cveListWithSystemsSelector],\n    createExposedSystemsTable\n);\n\nexport const sAllSystems = createSelector(\n    [systemsListAllSelector],\n    createSystemsListTable\n);\n","'use strict';\n\nexports.__esModule = true;\nexports.defaultMemoize = defaultMemoize;\nexports.createSelectorCreator = createSelectorCreator;\nexports.createStructuredSelector = createStructuredSelector;\nfunction defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nfunction createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = defaultMemoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nvar createSelector = exports.createSelector = createSelectorCreator(defaultMemoize);\n\nfunction createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","// Initial State\nexport const init = {\n    columns: [],\n    rows: [],\n    entities: []\n};\n// Reducer\n\nfunction modifyInventory(columns, state, getSelectedFunc) {\n    // If a system does not have insights_id, it means it was deleted from inventory but somehow survived in Vuln backend\n    if (state.loaded) {\n        const selected = getSelectedFunc();\n        const lastSeenColumn = state.columns.filter(({ key }) => key === 'updated');\n        return {\n            ...state,\n            rows: state.rows.filter(item => item.insights_id).map(item => ({ ...item, selected: selected.has(item.id) })),\n            columns: [\n                ...columns || [],\n                ...lastSeenColumn || []\n            ]\n        };\n    }\n\n    return state;\n}\n\nfunction selectEntities(state, getSelectedFunc) {\n    const selected = getSelectedFunc();\n    const myRows = state.rows.slice();\n    const retval = {\n        ...state,\n        rows: myRows\n        .map(item => {\n            const newValue =  { ...item, selected: selected.has(item.id) };\n            return newValue;\n        })\n    };\n    return retval;\n}\n\nexport const inventoryEntitiesReducer = (columns, selected) => (state = init, action) => {\n    switch (action.type) {\n        case 'LOAD_ENTITIES_FULFILLED':\n            return modifyInventory(columns, state, selected);\n        case 'SELECT_MULTIPLE_ENTITIES':\n            return selectEntities(state, selected);\n        case 'EXPAND_ROW':\n            return {\n                ...state,\n                rows: state.rows.map((row) => ({\n                    ...row,\n                    isOpen: row.id === action.payload.id ? action.payload.isOpen : row.isOpen\n                }))\n            };\n\n        default:\n            return state;\n    }\n};\n","import * as reactCore from '@patternfly/react-core';\nimport { Page, ToolbarGroup, ToolbarItem } from '@patternfly/react-core';\nimport * as reactIcons from '@patternfly/react-icons';\nimport * as pfReactTable from '@patternfly/react-table';\nimport { Main, TableToolbar } from '@redhat-cloud-services/frontend-components';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport debounce from 'lodash/debounce';\nimport propTypes from 'prop-types';\nimport qs from 'query-string';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as reactRouterDom from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport { dataShape } from '../../../Helpers/MiscHelper';\nimport { fetchSystems, optOutSystemsAction, setHeader, selectEntities } from '../../../Store/Actions/Actions';\nimport { inventoryEntitiesReducer } from '../../../Store/Reducers/InventoryEntitiesReducer';\nimport { sAllSystems } from '../../../Store/Selectors/CVESelectors';\nimport ReducerRegistry, { middlewareListener } from '../../../Utilities/ReducerRegistry';\nimport VulnerabilityHeader from '../VulnerabilityHeader/VulnerabilityHeader';\nimport BaseKebab from '../../PresentationalComponents/DownloadReportKebab/BaseKebab';\nimport {\n    kebabItemDownloadCSV,\n    kebabItemDownloadJSON,\n    kebabItemToggleExcludeSystemDisplay,\n    kebabItemExcludeSystemAnalysis\n} from '../../PresentationalComponents/DownloadReportKebab/KebabItems';\nimport './Systems.scss';\nimport SelectAllCheckbox from '../../PresentationalComponents/SelectAllCheckbox';\nimport { filterSystemName } from '../../../Helpers/constants';\nimport FilterChips  from '../../PresentationalComponents/Filters/FilterChips';\nimport SearchFilter  from '../../PresentationalComponents/Filters/SearchFilter';\nimport messages from '../../../Messages';\nimport { injectIntl } from 'react-intl';\nimport { systemTableRowActions } from '../../../Helpers/CVEHelper';\n/*eslint camelcase: 0*/\n\nclass Systems extends React.Component {\n    static propTypes = {\n        fetchData: propTypes.func,\n        systems: dataShape,\n        optOutSystems: propTypes.func,\n        addNotification: propTypes.func,\n        selectRows: propTypes.func,\n        selectMultiple: propTypes.func,\n        history: propTypes.object,\n        location: propTypes.object,\n        intl: propTypes.any\n    };\n\n    constructor(props) {\n        super(props);\n        this.inventory = React.createRef();\n        this.state = {\n            InventoryCmp: () => <div>Loading...</div>,\n            filter: undefined,\n            removeListener: () => { },\n            columns: [\n                {\n                    key: 'display_name',\n                    title: this.props.intl.formatMessage(messages.systemsColumnHeaderName),\n                    composed: ['facts.os_release', 'display_name']\n                },\n                {\n                    key: 'cve_count',\n                    title: this.props.intl.formatMessage(messages.systemsColumnHeaderCveCount)\n                }\n            ],\n            opt_out: false,\n            isKebabOpen: false,\n            selectListener: middlewareListener.addNew({\n                on: 'SELECT_ENTITY',\n                callback: payload => this.onSelect(payload)\n            }),\n            selectAllListener: middlewareListener.addNew({\n                on: 'SELECT_ENTITIES',\n                callback: payload => this.onSelect(payload)\n            }),\n            selected: new Set()\n        };\n    }\n\n    componentDidMount() {\n\n        const queryObject = qs.parse(this.props.location.search);\n        queryObject.show_irrelevant = queryObject.show_irrelevant === 'true';\n        if (queryObject.show_irrelevant) {\n            queryObject.show_all = undefined;\n        }\n\n        this.fetchInventory();\n        this.apply({ ...queryObject });\n    }\n\n    shouldComponentUpdate(nextProps) {\n        return !nextProps.systems.isLoading;\n    }\n\n    downloadReport = format => {\n        const { opt_out, filter } = this.state;\n        const { payload } = fetchSystems({\n            opt_out,\n            filter,\n            data_format: format,\n            page: 1,\n            page_size: Number.MAX_SAFE_INTEGER\n        });\n        payload &&\n            payload.then(({ data: response }) => {\n                const data = format === 'json' ? JSON.stringify(response) : response;\n                return downloadFile(data, `systems-${new Date().toISOString()}`, format);\n            });\n    };\n\n    async fetchInventory() {\n        const { inventoryConnector, mergeWithEntities, mergeWithDetail } = await insights.loadInventory({\n            react: React,\n            reactRouterDom,\n            reactCore,\n            reactIcons,\n            pfReactTable\n        });\n        ReducerRegistry.register({\n            ...mergeWithEntities(inventoryEntitiesReducer(this.state.columns, this.getSelected)),\n            ...mergeWithDetail()\n        });\n\n        this.setState({\n            InventoryCmp: inventoryConnector(ReducerRegistry.getStore()).InventoryTable\n        });\n        this.state.removeListener();\n    }\n\n    apply = (config = {}) => {\n        this.setState({ ...this.state, ...config }, this.sendRequest);\n    };\n\n    sendRequest = () => {\n        const { fetchData } = this.props;\n        fetchData({ ...this.state });\n        this.createUrlParams(this.state);\n    }\n\n    createUrlParams = allParams => {\n        const params = { ...allParams };\n        const allowedParams = ['filter', 'page', 'page_size'];\n        Object.keys(allParams).forEach(\n            key =>\n                (params[key] === undefined || params[key] === '' || !allowedParams.includes(key) || params[key] === false) &&\n                delete params[key]\n        );\n        const queryString = qs.stringify(params);\n        this.props.history.push('?' + queryString);\n    };\n\n    addFilter = (param, value, type) => {\n        let newFilter;\n        if (type === 'radio' || param === 'show_all') {\n            newFilter = { [param]: value };\n        } else {\n            newFilter = this.state[param] ? { [param]: `${this.state[param]},${value}` } : { [param]: value };\n        }\n\n        this.apply({ ...newFilter, page: 1 });\n    };\n\n    doOptOut = (systems) => {\n        if (systems.size > 0) {\n            this.props.optOutSystems(systems, !this.state.opt_out).then(() => {\n                this.props.fetchData({ ...this.params(), page: 1 });\n                this.state.opt_out === false\n                    ? this.props.addNotification({\n                        variant: 'success',\n                        title: this.props.intl.formatMessage(\n                            messages.systemsExcludedNotification,\n                            { count: systems.size || 0 }\n                        )\n                    })\n                    : this.props.addNotification({\n                        variant: 'success',\n                        title: this.props.intl.formatMessage(\n                            messages.systemsResumedNotificationTitle,\n                            { count: systems.size || 0 }\n                        ),\n                        description: this.props.intl.formatMessage(messages.systemsResumedNotificationBody)\n                    });\n                this.setState({ selected: new Set() });\n            });\n        }\n    };\n\n    onSelect = (payload) => {\n        let selected;\n        if (!payload.data || Array.isArray(payload.data)) {\n            selected = new Set(payload.data);\n        } else {\n            selected = this.state.selected;\n            payload.data.selected ? selected.add(payload.data.id) : selected.delete(payload.data.id);\n        }\n\n        this.setState({ selected }, this.props.selectMultiple);\n    };\n\n    getSelected = () => {\n        return this.state.selected;\n    };\n\n    params = () => {\n        const { filter, opt_out, page, page_size } = this.state;\n        return { filter, opt_out, page, page_size };\n    };\n\n    handleFilterChange = debounce(value => {\n        const { meta } = this.props.systems;\n        const { page_size } = meta;\n        this.apply({ filter: value, page_size, page: 1 });\n    }, 400);\n\n    handleRefresh = ({ page, per_page: perPage }) => {\n        const { meta } = this.props.systems;\n        const { fetchData } = this.props;\n        if (meta.page !== page || meta.page_size !== perPage) {\n            const config = {\n                page,\n                page_size: perPage || meta.page_size,\n                filter: this.state.filter,\n                opt_out: this.state.opt_out\n            };\n            fetchData(config);\n            this.createUrlParams(config);\n        }\n\n        if (meta.total_items <= perPage && this.inventory.current) {\n            this.inventory.current.onRefreshData({ page, per_page: perPage, perPage });\n        }\n    };\n\n    handleOptOut = () => {\n        this.setState({\n            opt_out: !this.state.opt_out,\n            selected: new Set(),\n            page: 1\n        }, this.sendRequest);\n    };\n\n    handleKebabToggle = isKebabOpen => {\n        this.setState({\n            isKebabOpen\n        });\n    };\n\n    handleKebabSelect = () => {\n        this.setState({\n            isKebabOpen: !this.state.isKebabOpen\n        });\n    };\n\n    render() {\n        const { InventoryCmp, filter } = this.state;\n        const { data, meta } = this.props.systems;\n        const items = data.map(item => {\n            const { cve_count, ...rest } = item.attributes;\n            return {\n                cve_count: (meta.opt_out && 'Excluded') || cve_count,\n                id: item.attributes.inventory_id,\n                ...rest\n            };\n        });\n\n        const kebabOptions = [\n            kebabItemExcludeSystemAnalysis(() => this.doOptOut(this.state.selected), this.state.opt_out, {\n                isDisabled: !this.getSelected().size\n            }),\n            kebabItemToggleExcludeSystemDisplay(this.handleOptOut, this.state.opt_out),\n            kebabItemDownloadJSON(this.downloadReport, { isDisabled: data.length === 0 }),\n            kebabItemDownloadCSV(this.downloadReport, { isDisabled: data.length === 0 })\n        ];\n        return (\n            <Page>\n                <VulnerabilityHeader showBreadcrumb={false} />\n                <Main>\n                    <InventoryCmp\n                        ref={this.inventory}\n                        hasCheckbox={data.length !== 0}\n                        page={meta.page}\n                        total={meta.total_items}\n                        perPage={meta.page_size}\n                        onRefresh={this.handleRefresh}\n                        items={items}\n                        actions={systemTableRowActions(this.doOptOut, this.state.opt_out)}\n                    >\n\n                        <ToolbarGroup className=\"systems-toolbar\">\n                            <ToolbarItem>\n                                <SelectAllCheckbox\n                                    selectedItems={this.state.selected}\n                                    selectorHandler={this.props.selectRows}\n                                    items={this.props.systems}\n                                    fetchResource={ops => fetchSystems({ ...this.params(), ...ops })}\n                                />\n                            </ToolbarItem>\n\n                            <ToolbarItem>\n                                <SearchFilter\n                                    placeholder={this.props.intl.formatMessage(messages.searchFilterByName)}\n                                    value={filter}\n                                    apply={this.apply}\n                                />\n                            </ToolbarItem>\n\n                            <ToolbarItem>\n                                <BaseKebab dropdownItems={kebabOptions} />\n                            </ToolbarItem>\n                        </ToolbarGroup>\n                        <TableToolbar className=\"pf-u-pl-0 system-filter-chips\">\n                            <ToolbarGroup>\n                                <ToolbarItem>\n                                    <FilterChips\n                                        filterValues={this.params()}\n                                        filterCategories={[filterSystemName]}\n                                        apply={this.apply}\n                                    />\n                                </ToolbarItem>\n                            </ToolbarGroup>\n                        </TableToolbar>\n                    </InventoryCmp>\n                </Main>\n            </Page>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        systems: sAllSystems(state)\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setHeader: header => dispatch(setHeader(header)),\n        fetchData: options => dispatch(fetchSystems(options)),\n        optOutSystems: (systems, status) => dispatch(optOutSystemsAction(systems, status)),\n        addNotification: notification => dispatch(addNotification(notification)),\n        selectRows: (value, ids) => dispatch(selectEntities(value, ids)),\n        selectMultiple: () => dispatch({ type: 'SELECT_MULTIPLE_ENTITIES' })\n    };\n};\n\nexport default injectIntl(\n    withRouter(\n        connect(\n            mapStateToProps,\n            mapDispatchToProps\n        )(Systems)\n    )\n);\n\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./Systems.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./Systems.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./Systems.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".systems-toolbar > div {\\n  margin-right: var(--pf-global--spacer--sm); }\\n\\n.space-between-toolbar-items {\\n  justify-content: space-between;\\n  flex-wrap: nowrap; }\\n  .space-between-toolbar-items > div {\\n    flex-wrap: nowrap; }\\n\\n.vulnerability-toolbar-spacing {\\n  justify-content: flex-start; }\\n  .vulnerability-toolbar-spacing > div:not(:last-child) {\\n    margin-right: var(--pf-global--spacer--sm); }\\n\\n.system-filter-chips {\\n  order: 6;\\n  flex-basis: 100%; }\\n\", \"\"]);\n\n// exports\n"],"sourceRoot":""}