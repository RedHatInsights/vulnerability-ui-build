{"version":3,"sources":["webpack:///./node_modules/@patternfly/react-table/dist/esm/index.js","webpack:///./node_modules/@patternfly/react-table/dist/esm/components/Table/utils/index.js","webpack:///./src/Store/Selectors/CVESelectors.js","webpack:///./node_modules/reselect/lib/index.js","webpack:///./src/Store/Reducers/InventoryEntitiesReducer.js","webpack:///./src/Components/SmartComponents/Systems/Systems.js","webpack:///./src/Components/SmartComponents/Systems/Systems.scss?4fb1","webpack:///./src/Components/SmartComponents/Systems/Systems.scss"],"names":["sCveDetailsPage","createSelector","state","CVEStore","cveDetails","createCveDetailsPage","sExposedSystemsTable","cve","affectedSystemsByCVE","createExposedSystemsTable","sAllSystems","SystemsStore","defaultEqualityCheck","a","b","areArgumentsShallowlyEqual","equalityCheck","prev","next","length","i","defaultMemoize","func","arguments","undefined","lastArgs","lastResult","apply","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptions","_key","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","concat","selector","params","push","resetRecomputations","exports","__esModule","createStructuredSelector","selectors","selectorCreator","objectKeys","Object","keys","key","_len3","values","_key3","reduce","composition","value","index","init","columns","rows","entities","modifyInventory","getSelectedFunc","loaded","selected","filter","item","insights_id","has","id","selectEntities","myRows","slice","inventoryEntitiesReducer","action","type","Systems","props","downloadReport","format","opt_out","payload","fetchSystems","data_format","page","page_size","Number","MAX_SAFE_INTEGER","then","response","data","JSON","stringify","downloadFile","Date","toISOString","config","setState","fetchData","addFilter","param","newFilter","doOptOut","size","optOutSystems","addNotification","variant","title","description","Set","onSelect","add","selectMultiple","getSelected","handleFilterChange","debounce","systems","meta","handleRefresh","perPage","per_page","handleOptOut","handleKebabToggle","isKebabOpen","handleKebabSelect","InventoryCmp","removeListener","composed","isTime","selectListener","middlewareListener","addNew","on","callback","selectAllListener","this","fetchInventory","insights","loadInventory","react","React","reactRouterDom","reactCore","reactIcons","pfReactTable","inventoryConnector","mergeWithEntities","mergeWithDetail","ReducerRegistry","register","InventoryTable","selectedCount","items","attributes","cve_count","rest","inventory_id","kebabOptions","kebabItemExcludeSystemAnalysis","isDisabled","kebabItemToggleExcludeSystemDisplay","kebabItemDownloadJSON","kebabItemDownloadCSV","showBreadcrumb","hasCheckbox","total","total_items","onRefresh","className","selectedItems","selectorHandler","selectRows","fetchResource","ops","onFilterChange","buttonTitle","placeholder","dropdownItems","Component","propTypes","dataShape","withRouter","connect","dispatch","setHeader","header","options","status","optOutSystemsAction","notification","ids","content","module","transform","locals"],"mappings":"0NAAA,isD,iCCAA,m0B,qYCGA,IAIaA,EAAkBC,yBAC3B,CAH2B,SAAAC,GAAK,OAAIA,EAAMC,SAASC,aAInDC,KAESC,EAAuBL,yBAChC,CAT+B,SAACC,EAAOK,GAAR,O,6UAAA,IAAsBL,EAAMC,SAASK,qBAArC,CAA2DD,UAU1FE,KAGSC,EAAcT,yBACvB,CAb2B,SAAAC,GAAK,OAAIA,EAAMS,eAc1CF,M,iCCZJ,SAASG,EAAqBC,EAAGC,GAC/B,OAAOD,IAAMC,EAGf,SAASC,EAA2BC,EAAeC,EAAMC,GACvD,GAAa,OAATD,GAA0B,OAATC,GAAiBD,EAAKE,SAAWD,EAAKC,OACzD,OAAO,EAKT,IADA,IAAIA,EAASF,EAAKE,OACTC,EAAI,EAAGA,EAAID,EAAQC,IAC1B,IAAKJ,EAAcC,EAAKG,GAAIF,EAAKE,IAC/B,OAAO,EAIX,OAAO,EAGT,SAASC,EAAeC,GACtB,IAAIN,EAAgBO,UAAUJ,OAAS,QAAsBK,IAAjBD,UAAU,GAAmBA,UAAU,GAAKX,EAEpFa,EAAW,KACXC,EAAa,KAEjB,OAAO,WAOL,OANKX,EAA2BC,EAAeS,EAAUF,aAEvDG,EAAaJ,EAAKK,MAAM,KAAMJ,YAGhCE,EAAWF,UACJG,GAIX,SAASE,EAAgBC,GACvB,IAAIC,EAAeC,MAAMC,QAAQH,EAAM,IAAMA,EAAM,GAAKA,EAExD,IAAKC,EAAaG,MAAM,SAAUC,GAChC,MAAsB,mBAARA,IACZ,CACF,IAAIC,EAAkBL,EAAaM,IAAI,SAAUF,GAC/C,cAAcA,IACbG,KAAK,MACR,MAAM,IAAIC,MAAM,wGAAgHH,EAAkB,KAGpJ,OAAOL,EAGT,SAASS,EAAsBC,GAC7B,IAAK,IAAIC,EAAOlB,UAAUJ,OAAQuB,EAAiBX,MAAMU,EAAO,EAAIA,EAAO,EAAI,GAAIE,EAAO,EAAGA,EAAOF,EAAME,IACxGD,EAAeC,EAAO,GAAKpB,UAAUoB,GAGvC,OAAO,WACL,IAAK,IAAIC,EAAQrB,UAAUJ,OAAQU,EAAQE,MAAMa,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACjFhB,EAAMgB,GAAStB,UAAUsB,GAG3B,IAAIC,EAAiB,EACjBC,EAAalB,EAAMmB,MACnBlB,EAAeF,EAAgBC,GAE/BoB,EAAqBT,EAAQb,WAAMH,EAAW,CAAC,WAGjD,OAFAsB,IAEOC,EAAWpB,MAAM,KAAMJ,aAC7B2B,OAAOR,IAGNS,EAAW9B,EAAe,WAI5B,IAHA,IAAI+B,EAAS,GACTjC,EAASW,EAAaX,OAEjBC,EAAI,EAAGA,EAAID,EAAQC,IAE1BgC,EAAOC,KAAKvB,EAAaV,GAAGO,MAAM,KAAMJ,YAI1C,OAAO0B,EAAmBtB,MAAM,KAAMyB,KAUxC,OAPAD,EAASJ,WAAaA,EACtBI,EAASL,eAAiB,WACxB,OAAOA,GAETK,EAASG,oBAAsB,WAC7B,OAAOR,EAAiB,GAEnBK,GAjGXI,EAAQC,YAAa,EACrBD,EAAQlC,eAAiBA,EACzBkC,EAAQhB,sBAAwBA,EAChCgB,EAAQE,yBAoGR,SAAkCC,GAChC,IAAIC,EAAkBpC,UAAUJ,OAAS,QAAsBK,IAAjBD,UAAU,GAAmBA,UAAU,GAAKtB,EAE1F,GAAyB,iBAAdyD,EACT,MAAM,IAAIpB,MAAM,gIAAwIoB,GAE1J,IAAIE,EAAaC,OAAOC,KAAKJ,GAC7B,OAAOC,EAAgBC,EAAWxB,IAAI,SAAU2B,GAC9C,OAAOL,EAAUK,KACf,WACF,IAAK,IAAIC,EAAQzC,UAAUJ,OAAQ8C,EAASlC,MAAMiC,GAAQE,EAAQ,EAAGA,EAAQF,EAAOE,IAClFD,EAAOC,GAAS3C,UAAU2C,GAG5B,OAAOD,EAAOE,OAAO,SAAUC,EAAaC,EAAOC,GAEjD,OADAF,EAAYR,EAAWU,IAAUD,EAC1BD,GACN,OAnBP,IAAInE,EAAiBsD,EAAQtD,eAAiBsC,EAAsBlB,I,koBCtG7D,IAAMkD,EAAO,CAChBC,QAAS,GACTC,KAAM,GACNC,SAAU,IAId,SAASC,EAAgBH,EAAStE,EAAO0E,GAErC,GAAI1E,EAAM2E,OAAQ,CACd,IAAMC,EAAWF,IACjB,YACO1E,EADP,CAEIuE,KAAMvE,EAAMuE,KAAKM,OAAO,SAAAC,GAAI,OAAIA,EAAKC,cAAa7C,IAAI,SAAA4C,GAAI,YAAUA,EAAV,CAAgBF,SAAUA,EAASI,IAAIF,EAAKG,QACtGX,YAIR,OAAOtE,EAGX,SAASkF,EAAelF,EAAO0E,GAC3B,IAAME,EAAWF,IACXS,EAASnF,EAAMuE,KAAKa,QAS1B,OARe,EAAH,GACLpF,EADK,CAERuE,KAAMY,EACLjD,IAAI,SAAA4C,GAED,OADiB,EAAH,GAASA,EAAT,CAAeF,SAAUA,EAASI,IAAIF,EAAKG,UAO9D,IAAMI,EAA2B,SAACf,EAASM,GAAV,OAAuB,WAA0B,IAAzB5E,EAAyB,uDAAjBqE,EAAMiB,EAAW,uCACrF,OAAQA,EAAOC,MACX,IAAK,0BACD,OAAOd,EAAgBH,EAAStE,EAAO4E,GAC3C,IAAK,2BACD,OAAOM,EAAelF,EAAO4E,GAEjC,QACI,OAAO5E,M,m+BCbbwF,E,YAUF,WAAYC,GAAO,0BACf,4BAAMA,KAwCVC,eAAiB,SAAAC,GAAU,MACK,EAAK3F,MAAzB4F,EADe,EACfA,QAASf,EADM,EACNA,OACTgB,EAAYC,YAAa,CAC7BF,UACAf,SACAkB,YAAaJ,EACbK,KAAM,EACNC,UAAWC,OAAOC,mBALdN,QAORA,GACIA,EAAQO,KAAK,YAAwB,IAAfC,EAAe,EAArBC,KACNA,EAAkB,SAAXX,EAAoBY,KAAKC,UAAUH,GAAYA,EAC5D,OAAOI,uBAAaH,EAAD,mBAAkB,IAAII,MAAOC,eAAiBhB,MArD1D,EA4EnBlE,MAAQ,WAAiB,IAAhBmF,EAAgB,uDAAP,GACd,EAAKC,SAAL,KAAmB,EAAK7G,MAAxB,GAAkC4G,GAAU,WACxC,EAAKnB,MAAMqB,UAAU,EAAK5D,aA9Ef,EAkFnB6D,UAAY,SAACC,EAAO7C,EAAOoB,GACvB,IAAI0B,EAEAA,EADS,UAAT1B,GAA8B,aAAVyB,EACR,OAAGA,EAAQ7C,GAEX,EAAKnE,MAAMgH,GAAX,OAAuBA,EAAvB,UAAkC,EAAKhH,MAAMgH,GAA7C,YAAuD7C,IAAvD,OAAsE6C,EAAQ7C,GAG9F,EAAK1C,MAAL,KAAgBwF,EAAhB,CAA2BjB,KAAM,MA1FlB,EA6FnBkB,SAAW,WACH,EAAKlH,MAAM4E,SAASuC,KAAO,GAC3B,EAAK1B,MAAM2B,cAAc,EAAKpH,MAAM4E,UAAW,EAAK5E,MAAM4F,SAASQ,KAAK,WACpE,EAAKX,MAAMqB,UAAX,KAA0B,EAAK5D,SAA/B,CAAyC8C,KAAM,MACxB,IAAvB,EAAKhG,MAAM4F,QACL,EAAKH,MAAM4B,gBAAgB,CACzBC,QAAS,UACTC,MAAO,EAAKvH,MAAM4E,SAASuC,KAAO,+DAEpC,EAAK1B,MAAM4B,gBAAgB,CACzBC,QAAS,UACTC,MAAO,EAAKvH,MAAM4E,SAASuC,KAAO,uDAClCK,YAAa,mDAErB,EAAKX,SAAS,CAAEjC,SAAU,IAAI6C,SA3GvB,EAgHnBC,SAAW,SAAC7B,GACR,IAAIjB,GACCiB,EAAQS,MAAQzE,MAAMC,QAAQ+D,EAAQS,MACvC1B,EAAW,IAAI6C,IAAI5B,EAAQS,OAE3B1B,EAAW,EAAK5E,MAAM4E,SACtBiB,EAAQS,KAAK1B,SAAWA,EAAS+C,IAAI9B,EAAQS,KAAKrB,IAAML,EAAQ,OAAQiB,EAAQS,KAAKrB,KAGzF,EAAK4B,SAAS,CAAEjC,YAAY,EAAKa,MAAMmC,iBAzHxB,EA4HnBC,YAAc,WACV,OAAO,EAAK7H,MAAM4E,UA7HH,EAgInB1B,OAAS,WAAM,MACkC,EAAKlD,MAClD,MAAO,CAAE6E,OAFE,EACHA,OACSe,QAFN,EACKA,QACUI,KAFf,EACcA,KACOC,UAFrB,EACoBA,YAjIhB,EAqInB6B,mBAAqBC,IAAS,SAAA5D,GAAS,IAE3B8B,EADS,EAAKR,MAAMuC,QAApBC,KACAhC,UACR,EAAKxE,MAAM,CAAEoD,OAAQV,EAAO8B,eAC7B,KAzIgB,EA2InBiC,cAAgB,YAAiC,IAA9BlC,EAA8B,EAA9BA,KAAgBmC,EAAc,EAAxBC,SACbH,EAAS,EAAKxC,MAAMuC,QAApBC,KACJA,EAAKjC,OAASA,GAAQiC,EAAKhC,YAAckC,GACzC,EAAK1G,MAAM,CACPuE,KAAMiC,EAAKhC,YAAckC,EAAU,EAAInC,EACvCC,UAAWkC,EACXtD,OAAQ,EAAK7E,MAAM6E,UAjJZ,EAsJnBwD,aAAe,WACX,EAAKxB,SAAS,CACVjB,SAAU,EAAK5F,MAAM4F,QACrBhB,SAAU,IAAI6C,IACdzB,KAAM,IAEV,EAAK8B,mBAAmB,EAAK9H,MAAM6E,SA5JpB,EA+JnByD,kBAAoB,SAAAC,GAChB,EAAK1B,SAAS,CACV0B,iBAjKW,EAqKnBC,kBAAoB,WAChB,EAAK3B,SAAS,CACV0B,aAAc,EAAKvI,MAAMuI,eArK7B,EAAKvI,MAAQ,CACTyI,aAAc,kBAAM,4CACpB5D,OAAQ,GACR6D,eAAgB,aAChBpE,QAAS,CACL,CACIT,IAAK,eACL0D,MAAO,OACPoB,SAAU,CAAC,mBAAoB,iBAEnC,CACI9E,IAAK,YACL0D,MAAO,kBAEX,CACI1D,IAAK,UACL0D,MAAO,YACPqB,QAAQ,IAGhBhD,SAAS,EACT2C,aAAa,EACbM,eAAgBC,IAAmBC,OAAO,CACtCC,GAAI,gBACJC,SAAU,SAAApD,GAAO,OAAI,EAAK6B,SAAS7B,MAEvCqD,kBAAmBJ,IAAmBC,OAAO,CACzCC,GAAI,kBACJC,SAAU,SAAApD,GAAO,OAAI,EAAK6B,SAAS7B,MAEvCjB,SAAU,IAAI6C,KAhCH,E,uEAqCf0B,KAAK1D,MAAMqB,YACXqC,KAAKC,mB,qJAoBoEC,SAASC,cAAc,CAC5FC,MAAOC,IACPC,iBACAC,YACAC,aACAC,iB,gBALIC,E,EAAAA,mBAAoBC,E,EAAAA,kBAAmBC,E,EAAAA,gBAO/CC,IAAgBC,SAAhB,KACOH,EAAkBzE,YAAyB8D,KAAKnJ,MAAMsE,QAAS6E,KAAKtB,cAD3E,GAEOkC,MAGPZ,KAAKtC,SAAS,CACV4B,aAAcoB,IAAqBK,iBAEvCf,KAAKnJ,MAAM0I,iB,0HAkGN,WACGD,EAAiBU,KAAKnJ,MAAtByI,aADH,EAEkBU,KAAK1D,MAAMuC,QAA1B1B,EAFH,EAEGA,KAAM2B,EAFT,EAESA,KACRkC,EAAgBhB,KAAKnJ,MAAM4E,SAASuC,KACpCiD,EAAQ9D,EAAKpE,IAAI,SAAA4C,GAAQ,MACIA,EAAKuF,WAA5BC,EADmB,EACnBA,UAAcC,EADK,qBAE3B,UACID,UAAYrC,EAAKrC,QAAW,WAAe0E,EAC3CrF,GAAIH,EAAKuF,WAAWG,cACjBD,KAILE,EAAe,CACjBC,YAA+BvB,KAAKjC,SAAUiC,KAAKnJ,MAAM4F,QAAS,CAC9D+E,YAAaxB,KAAKtB,cAAcV,OAEpCyD,YAAoCzB,KAAKd,aAAcc,KAAKnJ,MAAM4F,SAClEiF,YAAsB1B,KAAKzD,gBAC3BoF,YAAqB3B,KAAKzD,iBAE9B,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAqBqF,gBAAgB,IACrC,kBAAC,OAAD,KACI,kBAACtC,EAAD,CACIuC,YAA6B,IAAhB1E,EAAKrF,OAClB+E,KAAMiC,EAAKjC,KACXiF,MAAOhD,EAAKiD,YACZ/C,QAASF,EAAKhC,UACdkF,UAAWhC,KAAKjB,cAChBkC,MAAOA,GAEP,kBAAC,IAAD,CAAcgB,UAAU,mBACpB,6BACI,kBAAC,IAAD,CACIC,cAAelB,EACfmB,gBAAiBnC,KAAK1D,MAAM8F,WAC5BnB,MAAOjB,KAAK1D,MAAMuC,QAClBwD,cAAe,SAAAC,GAAG,OAAI3F,YAAa,EAAD,GAAM,EAAK5C,SAAX,GAAwBuI,QAGlE,6BACI,kBAAC,oBAAD,CACIC,eAAgBvC,KAAKrB,mBACrB6D,YAAa,KACbC,YAAY,2BAGpB,6BACI,kBAAC,IAAD,CAAWC,cAAepB,a,GAvOpCjB,IAAMsC,WAAtBtG,EACKuG,UAAY,CACfjF,UAAWiF,IAAU3K,KACrB4G,QAASgE,IACT5E,cAAe2E,IAAU3K,KACzBiG,gBAAiB0E,IAAU3K,KAC3BmK,WAAYQ,IAAU3K,KACtBwG,eAAgBmE,IAAU3K,MA2PnB6K,sBACXC,kBAlBJ,SAAyBlM,GACrB,MAAO,CACHgI,QAASxH,YAAYR,KAIF,SAAAmM,GACvB,MAAO,CACHC,UAAW,SAAAC,GAAM,OAAIF,EAASC,YAAUC,KACxCvF,UAAW,SAAAwF,GAAO,OAAIH,EAASrG,YAAawG,KAC5ClF,cAAe,SAACY,EAASuE,GAAV,OAAqBJ,EAASK,YAAoBxE,EAASuE,KAC1ElF,gBAAiB,SAAAoF,GAAY,OAAIN,EAAS9E,0BAAgBoF,KAC1DlB,WAAY,SAACpH,EAAOuI,GAAR,OAAgBP,EAASjH,YAAef,EAAOuI,KAC3D9E,eAAgB,kBAAMuE,EAAS,CAAE5G,KAAM,gCAK3C2G,CAGE1G,K,oBCpSN,IAAImH,EAAU,EAAQ,KAEA,iBAAZA,IAAsBA,EAAU,CAAC,CAACC,EAAO1L,EAAIyL,EAAS,MAOhE,IAAIL,EAAU,CAAC,KAAM,EAErB,eAPIO,EAQJ,gBAAqBvL,GAER,EAAQ,EAAR,CAAmEqL,EAASL,GAEtFK,EAAQG,SAAQF,EAAOvJ,QAAUsJ,EAAQG,S,qBCjBlCF,EAAOvJ,QAAU,EAAQ,EAAR,EAA+D,IAKlFF,KAAK,CAACyJ,EAAO1L,EAAI,iaAAka","file":"js/Systems.js","sourcesContent":["export * from './components';\n//# sourceMappingURL=index.js.map","export * from './transformers';\nexport * from './headerUtils';\nexport * from './formatters';\nexport * from './utils';\n//# sourceMappingURL=index.js.map","import { createSelector } from 'reselect';\nimport { createCveDetailsPage, createExposedSystemsTable } from '../../Helpers/CVEHelper';\n\nconst cveListWithSystemsSelector = (state, cve) => ({ ...state.CVEStore.affectedSystemsByCVE, cve });\nconst systemsListAllSelector = state => state.SystemsStore;\nconst cveDetailsPageSelector = state => state.CVEStore.cveDetails;\n\nexport const sCveDetailsPage = createSelector(\n    [cveDetailsPageSelector],\n    createCveDetailsPage\n);\nexport const sExposedSystemsTable = createSelector(\n    [cveListWithSystemsSelector],\n    createExposedSystemsTable\n);\n\nexport const sAllSystems = createSelector(\n    [systemsListAllSelector],\n    createExposedSystemsTable\n);\n","'use strict';\n\nexports.__esModule = true;\nexports.defaultMemoize = defaultMemoize;\nexports.createSelectorCreator = createSelectorCreator;\nexports.createStructuredSelector = createStructuredSelector;\nfunction defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nfunction createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = defaultMemoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nvar createSelector = exports.createSelector = createSelectorCreator(defaultMemoize);\n\nfunction createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","// Initial State\nexport const init = {\n    columns: [],\n    rows: [],\n    entities: []\n};\n// Reducer\n\nfunction modifyInventory(columns, state, getSelectedFunc) {\n    // If a system does not have insights_id, it means it was deleted from inventory but somehow survived in Vuln backend\n    if (state.loaded) {\n        const selected = getSelectedFunc();\n        return {\n            ...state,\n            rows: state.rows.filter(item => item.insights_id).map(item => ({ ...item, selected: selected.has(item.id) })),\n            columns\n        };\n    }\n\n    return state;\n}\n\nfunction selectEntities(state, getSelectedFunc) {\n    const selected = getSelectedFunc();\n    const myRows = state.rows.slice();\n    const retval = {\n        ...state,\n        rows: myRows\n        .map(item => {\n            const newValue =  { ...item, selected: selected.has(item.id) };\n            return newValue;\n        })\n    };\n    return retval;\n}\n\nexport const inventoryEntitiesReducer = (columns, selected) => (state = init, action) => {\n    switch (action.type) {\n        case 'LOAD_ENTITIES_FULFILLED':\n            return modifyInventory(columns, state, selected);\n        case 'SELECT_MULTIPLE_ENTITIES':\n            return selectEntities(state, selected);\n\n        default:\n            return state;\n    }\n};\n","import * as reactCore from '@patternfly/react-core';\nimport { Page, ToolbarGroup } from '@patternfly/react-core';\nimport * as reactIcons from '@patternfly/react-icons';\nimport * as pfReactTable from '@patternfly/react-table';\nimport { Main, SimpleTableFilter } from '@redhat-cloud-services/frontend-components';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport debounce from 'lodash/debounce';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as reactRouterDom from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport { dataShape } from '../../../Helpers/MiscHelper';\nimport { fetchSystems, optOutSystemsAction, setHeader, selectEntities } from '../../../Store/Actions/Actions';\nimport { inventoryEntitiesReducer } from '../../../Store/Reducers/InventoryEntitiesReducer';\nimport { sAllSystems } from '../../../Store/Selectors/CVESelectors';\nimport ReducerRegistry, { middlewareListener } from '../../../Utilities/ReducerRegistry';\nimport VulnerabilityHeader from '../VulnerabilityHeader/VulnerabilityHeader';\nimport BaseKebab from '../../PresentationalComponents/DownloadReportKebab/BaseKebab';\nimport {\n    kebabItemDownloadCSV,\n    kebabItemDownloadJSON,\n    kebabItemToggleExcludeSystemDisplay,\n    kebabItemExcludeSystemAnalysis\n} from '../../PresentationalComponents/DownloadReportKebab/KebabItems';\nimport './Systems.scss';\nimport SelectAllCheckbox from '../SelectAllCheckbox/SelectAllCheckbox';\n\n/*eslint camelcase: 0*/\n\nclass Systems extends React.Component {\n    static propTypes = {\n        fetchData: propTypes.func,\n        systems: dataShape,\n        optOutSystems: propTypes.func,\n        addNotification: propTypes.func,\n        selectRows: propTypes.func,\n        selectMultiple: propTypes.func\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            InventoryCmp: () => <div>Loading...</div>,\n            filter: '',\n            removeListener: () => {},\n            columns: [\n                {\n                    key: 'display_name',\n                    title: 'Name',\n                    composed: ['facts.os_release', 'display_name']\n                },\n                {\n                    key: 'cve_count',\n                    title: 'Number of CVEs'\n                },\n                {\n                    key: 'updated',\n                    title: 'Last seen',\n                    isTime: true\n                }\n            ],\n            opt_out: false,\n            isKebabOpen: false,\n            selectListener: middlewareListener.addNew({\n                on: 'SELECT_ENTITY',\n                callback: payload => this.onSelect(payload)\n            }),\n            selectAllListener: middlewareListener.addNew({\n                on: 'SELECT_ENTITIES',\n                callback: payload => this.onSelect(payload)\n            }),\n            selected: new Set()\n        };\n    }\n\n    componentDidMount() {\n        this.props.fetchData();\n        this.fetchInventory();\n    }\n\n    downloadReport = format => {\n        const { opt_out, filter } = this.state;\n        const { payload } = fetchSystems({\n            opt_out,\n            filter,\n            data_format: format,\n            page: 1,\n            page_size: Number.MAX_SAFE_INTEGER\n        });\n        payload &&\n            payload.then(({ data: response }) => {\n                const data = format === 'json' ? JSON.stringify(response) : response;\n                return downloadFile(data, `systems-${new Date().toISOString()}`, format);\n            });\n    };\n\n    async fetchInventory() {\n        const { inventoryConnector, mergeWithEntities, mergeWithDetail } = await insights.loadInventory({\n            react: React,\n            reactRouterDom,\n            reactCore,\n            reactIcons,\n            pfReactTable\n        });\n        ReducerRegistry.register({\n            ...mergeWithEntities(inventoryEntitiesReducer(this.state.columns, this.getSelected)),\n            ...mergeWithDetail()\n        });\n\n        this.setState({\n            InventoryCmp: inventoryConnector().InventoryTable\n        });\n        this.state.removeListener();\n    }\n\n    apply = (config = {}) => {\n        this.setState({ ...this.state, ...config }, () => {\n            this.props.fetchData(this.params());\n        });\n    };\n\n    addFilter = (param, value, type) => {\n        let newFilter;\n        if (type === 'radio' || param === 'show_all') {\n            newFilter = { [param]: value };\n        } else {\n            newFilter = this.state[param] ? { [param]: `${this.state[param]},${value}` } : { [param]: value };\n        }\n\n        this.apply({ ...newFilter, page: 1 });\n    };\n\n    doOptOut = () => {\n        if (this.state.selected.size > 0) {\n            this.props.optOutSystems(this.state.selected, !this.state.opt_out).then(() => {\n                this.props.fetchData({ ...this.params(), page: 1 });\n                this.state.opt_out === false\n                    ? this.props.addNotification({\n                        variant: 'success',\n                        title: this.state.selected.size + ' systems successfully excluded from vulnerability analysis'\n                    })\n                    : this.props.addNotification({\n                        variant: 'success',\n                        title: this.state.selected.size + ' systems successfully resumed vulnerability analysis',\n                        description: 'There may be 24 hours before data is available'\n                    });\n                this.setState({ selected: new Set() });\n            });\n        }\n    };\n\n    onSelect = (payload) => {\n        let selected;\n        if (!payload.data || Array.isArray(payload.data)) {\n            selected = new Set(payload.data);\n        } else {\n            selected = this.state.selected;\n            payload.data.selected ? selected.add(payload.data.id) : selected.delete(payload.data.id);\n        }\n\n        this.setState({ selected }, this.props.selectMultiple);\n    };\n\n    getSelected = () => {\n        return this.state.selected;\n    };\n\n    params = () => {\n        const { filter, opt_out, page, page_size } = this.state;\n        return { filter, opt_out, page, page_size };\n    };\n\n    handleFilterChange = debounce(value => {\n        const { meta } = this.props.systems;\n        const { page_size } = meta;\n        this.apply({ filter: value, page_size });\n    }, 400);\n\n    handleRefresh = ({ page, per_page: perPage }) => {\n        const { meta } = this.props.systems;\n        if (meta.page !== page || meta.page_size !== perPage) {\n            this.apply({\n                page: meta.page_size !== perPage ? 1 : page,\n                page_size: perPage,\n                filter: this.state.filter\n            });\n        }\n    };\n\n    handleOptOut = () => {\n        this.setState({\n            opt_out: !this.state.opt_out,\n            selected: new Set(),\n            page: 1\n        });\n        this.handleFilterChange(this.state.filter);\n    };\n\n    handleKebabToggle = isKebabOpen => {\n        this.setState({\n            isKebabOpen\n        });\n    };\n\n    handleKebabSelect = () => {\n        this.setState({\n            isKebabOpen: !this.state.isKebabOpen\n        });\n    };\n\n    render() {\n        const { InventoryCmp } = this.state;\n        const { data, meta } = this.props.systems;\n        const selectedCount = this.state.selected.size;\n        const items = data.map(item => {\n            const { cve_count, ...rest } = item.attributes;\n            return {\n                cve_count: (meta.opt_out && 'Excluded') || cve_count,\n                id: item.attributes.inventory_id,\n                ...rest\n            };\n        });\n\n        const kebabOptions = [\n            kebabItemExcludeSystemAnalysis(this.doOptOut, this.state.opt_out, {\n                isDisabled: !this.getSelected().size\n            }),\n            kebabItemToggleExcludeSystemDisplay(this.handleOptOut, this.state.opt_out),\n            kebabItemDownloadJSON(this.downloadReport),\n            kebabItemDownloadCSV(this.downloadReport)\n        ];\n        return (\n            <Page>\n                <VulnerabilityHeader showBreadcrumb={false} />\n                <Main>\n                    <InventoryCmp\n                        hasCheckbox={data.length !== 0}\n                        page={meta.page}\n                        total={meta.total_items}\n                        perPage={meta.page_size}\n                        onRefresh={this.handleRefresh}\n                        items={items}\n                    >\n                        <ToolbarGroup className=\"systems-toolbar\">\n                            <div>\n                                <SelectAllCheckbox\n                                    selectedItems={selectedCount}\n                                    selectorHandler={this.props.selectRows}\n                                    items={this.props.systems}\n                                    fetchResource={ops => fetchSystems({ ...this.params(), ...ops })}\n                                />\n                            </div>\n                            <div>\n                                <SimpleTableFilter\n                                    onFilterChange={this.handleFilterChange}\n                                    buttonTitle={null}\n                                    placeholder=\"Find a system by UUID\"\n                                />\n                            </div>\n                            <div>\n                                <BaseKebab dropdownItems={kebabOptions} />\n                            </div>\n                        </ToolbarGroup>\n                    </InventoryCmp>\n                </Main>\n            </Page>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        systems: sAllSystems(state)\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setHeader: header => dispatch(setHeader(header)),\n        fetchData: options => dispatch(fetchSystems(options)),\n        optOutSystems: (systems, status) => dispatch(optOutSystemsAction(systems, status)),\n        addNotification: notification => dispatch(addNotification(notification)),\n        selectRows: (value, ids) => dispatch(selectEntities(value, ids)),\n        selectMultiple: () => dispatch({ type: 'SELECT_MULTIPLE_ENTITIES' })\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Systems)\n);\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./Systems.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./Systems.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./Systems.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".systems-toolbar > div {\\n  margin-right: var(--pf-global--spacer--sm); }\\n\\n.space-between-toolbar-items {\\n  justify-content: space-between;\\n  flex-wrap: nowrap; }\\n  .space-between-toolbar-items > div {\\n    flex-wrap: nowrap; }\\n\\n.vulnerability-toolbar-spacing {\\n  justify-content: flex-start; }\\n  .vulnerability-toolbar-spacing > div:not(:last-child) {\\n    margin-right: var(--pf-global--spacer--sm); }\\n\", \"\"]);\n\n// exports\n"],"sourceRoot":""}