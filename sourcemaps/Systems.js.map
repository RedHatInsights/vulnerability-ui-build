{"version":3,"sources":["webpack:///./src/Components/SmartComponents/Systems/Systems.js","webpack:///./src/Components/SmartComponents/Systems/Systems.scss?4fb1","webpack:///./src/Components/SmartComponents/Systems/Systems.scss"],"names":["Systems","props","_this","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_4___default","this","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_6___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_7___default","call","apply","config","arguments","length","undefined","setState","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_3___default","state","params","omit","fetchData","addFilter","param","value","type","newFilter","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default","concat","page","handleFilterChange","debounce","page_size","systems","meta","filter","handleRefresh","_ref3","perPage","per_page","InventoryCmp","react__WEBPACK_IMPORTED_MODULE_18___default","a","createElement","removeListener","columns","key","title","composed","isTime","opt_out","fetchInventory","insights","loadInventory","react","React","reactRouterDom","reactCore","reactIcons","pfReactTable","inventoryConnector","mergeWithEntities","mergeWithDetail","ReducerRegistry","register","inventoryEntitiesReducer","InventoryTable","_this$props$systems","data","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_10__","_VulnerabilityHeader_VulnerabilityHeader__WEBPACK_IMPORTED_MODULE_28__","_redhat_cloud_services_frontend_components__WEBPACK_IMPORTED_MODULE_14__","hasCheckbox","total","total_items","onRefresh","items","map","item","id","attributes","inventory_id","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_11__","className","onFilterChange","buttonTitle","placeholder","filters","filterCategories","urlParam","values","label","Component","propTypes","func","dataShape","withRouter","connect","sAllSystems","setHeader","header","dispatchAction","options","fetchSystems","content","__webpack_require__","module","i","hmr","transform","insertInto","locals","exports","push"],"mappings":"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","file":"js/Systems.js","sourcesContent":["import * as reactCore from '@patternfly/react-core';\nimport { Page, ToolbarGroup } from '@patternfly/react-core';\nimport * as reactIcons from '@patternfly/react-icons';\nimport * as pfReactTable from '@patternfly/react-table';\nimport { FilterDropdown, Main, SimpleTableFilter } from '@redhat-cloud-services/frontend-components';\nimport debounce from 'lodash/debounce';\nimport omit from 'lodash/omit';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as reactRouterDom from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport { dispatchAction } from '../../../Helpers/Dispatcher';\nimport { dataShape } from '../../../Helpers/MiscHelper';\nimport { fetchSystems, setHeader } from '../../../Store/Actions/Actions';\nimport { inventoryEntitiesReducer } from '../../../Store/Reducers/InventoryEntitiesReducer';\nimport { sAllSystems } from '../../../Store/Selectors/CVESelectors';\nimport ReducerRegistry from '../../../Utilities/ReducerRegistry';\nimport VulnerabilityHeader from '../VulnerabilityHeader/VulnerabilityHeader';\nimport './Systems.scss';\n\n/*eslint camelcase: 0*/\n\nclass Systems extends React.Component {\n    static propTypes = {\n        fetchData: propTypes.func,\n        systems: dataShape\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            InventoryCmp: () => <div>Loading...</div>,\n            filter: '',\n            removeListener: () => {},\n            columns: [\n                {\n                    key: 'display_name',\n                    title: 'Name',\n                    composed: ['facts.os_release', 'display_name']\n                },\n                {\n                    key: 'cve_count',\n                    title: 'Number of CVEs'\n                },\n                {\n                    key: 'updated',\n                    title: 'Last Seen',\n                    isTime: true\n                }\n            ],\n            opt_out: false\n        };\n    }\n\n    componentDidMount() {\n        this.props.fetchData();\n        this.fetchInventory();\n    }\n\n    async fetchInventory() {\n        const { inventoryConnector, mergeWithEntities, mergeWithDetail } = await insights.loadInventory({\n            react: React,\n            reactRouterDom,\n            reactCore,\n            reactIcons,\n            pfReactTable\n        });\n        ReducerRegistry.register({\n            ...mergeWithEntities(inventoryEntitiesReducer(this.state.columns)),\n            ...mergeWithDetail()\n        });\n\n        this.setState({\n            InventoryCmp: inventoryConnector().InventoryTable\n        });\n        this.state.removeListener();\n    }\n\n    apply = (config = {}) => {\n        this.setState({ ...this.state, ...config }, () => {\n            const params = omit(this.state, ['InventoryCmp', 'columns', 'removeListener']);\n            this.props.fetchData(params);\n        });\n    };\n\n    addFilter = (param, value, type) => {\n        let newFilter;\n        if (type === 'radio' || param === 'show_all') {\n            newFilter = { [param]: value };\n        } else {\n            newFilter = this.state[param] ? { [param]: `${this.state[param]},${value}` } : { [param]: value };\n        }\n\n        this.apply({ ...newFilter, page: 1 });\n    };\n\n    handleFilterChange = debounce(value => {\n        const { meta } = this.props.systems;\n        const { page_size } = meta;\n        this.apply({ filter: value, page_size });\n    }, 400);\n\n    handleRefresh = ({ page, per_page: perPage }) => {\n        const { meta } = this.props.systems;\n        if (meta.page !== page || meta.page_size !== perPage) {\n            this.apply({\n                page: meta.page_size !== perPage ? 1 : page,\n                page_size: perPage,\n                filter: this.state.filter\n            });\n        }\n    };\n\n    render() {\n        const { InventoryCmp } = this.state;\n        const { data, meta } = this.props.systems;\n        return (\n            <Page>\n                <VulnerabilityHeader />\n                <Main>\n                    <InventoryCmp\n                        hasCheckbox={false}\n                        page={meta.page}\n                        total={meta.total_items}\n                        perPage={meta.page_size}\n                        onRefresh={this.handleRefresh}\n                        items={data.map(item => ({\n                            id: item.attributes.inventory_id,\n                            ...item.attributes\n                        }))}\n                    >\n                        <ToolbarGroup className=\"systems-toolbar\">\n                            <div>\n                                <SimpleTableFilter\n                                    onFilterChange={this.handleFilterChange}\n                                    buttonTitle={null}\n                                    placeholder=\"Find a system by UUID\"\n                                />\n                            </div>\n                            <div>\n                                <FilterDropdown\n                                    addFilter={this.addFilter}\n                                    filters={this.state}\n                                    filterCategories={[\n                                        {\n                                            type: 'radio',\n                                            title: '',\n                                            urlParam: 'opt_out',\n                                            values: [\n                                                { label: 'Show opt-in systems', value: false },\n                                                { label: 'Show opt-out systems', value: true }\n                                            ]\n                                        }\n                                    ]}\n                                />\n                            </div>\n                        </ToolbarGroup>\n                    </InventoryCmp>\n                </Main>\n            </Page>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        systems: sAllSystems(state)\n    };\n}\n\nconst mapDispatchToProps = () => {\n    return {\n        setHeader: header => dispatchAction(setHeader(header)),\n        fetchData: options => dispatchAction(fetchSystems(options))\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Systems)\n);\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./Systems.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./Systems.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./Systems.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".systems-toolbar > div {\\n  margin-right: var(--pf-global--spacer--sm); }\\n\\n.space-between-toolbar-items {\\n  justify-content: space-between;\\n  flex-wrap: nowrap; }\\n  .space-between-toolbar-items > div {\\n    flex-wrap: nowrap; }\\n\\n.vulnerability-toolbar-spacing {\\n  justify-content: flex-start; }\\n  .vulnerability-toolbar-spacing > div:not(:last-child) {\\n    margin-right: var(--pf-global--spacer--sm); }\\n\", \"\"]);\n\n// exports\n"],"sourceRoot":""}