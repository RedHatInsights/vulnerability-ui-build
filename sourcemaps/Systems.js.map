{"version":3,"sources":["webpack:///./node_modules/reselect/lib/index.js","webpack:///./src/Components/SmartComponents/Systems/Systems.js","webpack:///./src/Components/SmartComponents/Systems/Systems.scss","webpack:///./src/Store/Reducers/InventoryEntitiesReducer.js","webpack:///./src/Store/Selectors/CVESelectors.js"],"names":["Systems","props","downloadReport","format","state","opt_out","filter","fetchSystems","data_format","page","page_size","Number","MAX_SAFE_INTEGER","payload","then","response","data","JSON","stringify","downloadFile","Date","toISOString","apply","config","setState","sendRequest","fetchData","createUrlParams","allParams","params","allowedParams","Object","keys","forEach","key","undefined","includes","queryString","qs","history","push","addFilter","param","value","type","newFilter","doOptOut","selected","size","optOutSystems","addNotification","variant","title","description","Set","onSelect","Array","isArray","add","id","selectMultiple","getSelected","handleFilterChange","debounce","meta","systems","handleRefresh","perPage","per_page","handleOptOut","handleKebabToggle","isKebabOpen","handleKebabSelect","InventoryCmp","removeListener","columns","composed","selectListener","middlewareListener","addNew","on","callback","selectAllListener","queryObject","parse","location","search","show_irrelevant","show_all","fetchInventory","nextProps","isLoading","insights","loadInventory","react","React","reactRouterDom","reactCore","reactIcons","pfReactTable","inventoryConnector","mergeWithEntities","mergeWithDetail","ReducerRegistry","register","inventoryEntitiesReducer","InventoryTable","items","map","item","attributes","cve_count","rest","inventory_id","kebabOptions","kebabItemExcludeSystemAnalysis","isDisabled","kebabItemToggleExcludeSystemDisplay","kebabItemDownloadJSON","kebabItemDownloadCSV","length","total_items","selectRows","ops","filterSystemName","Component","propTypes","func","dataShape","object","mapStateToProps","sAllSystems","mapDispatchToProps","dispatch","setHeader","header","options","status","optOutSystemsAction","notification","ids","selectEntities","withRouter","connect","init","rows","entities","modifyInventory","getSelectedFunc","loaded","lastSeenColumn","insights_id","has","myRows","slice","retval","newValue","action","cveListWithSystemsSelector","cve","CVEStore","affectedSystemsByCVE","systemsListAllSelector","SystemsStore","cveDetailsPageSelector","cveDetails","sCveDetailsPage","createSelector","createCveDetailsPage","sExposedSystemsTable","createExposedSystemsTable"],"mappings":";;;;;;;;;;AAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA,8FAA8F,aAAa;AAC3G;AACA;;AAEA;AACA,uEAAuE,eAAe;AACtF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA,qBAAqB,YAAY;AACjC;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,wEAAwE,eAAe;AACvF;AACA;;AAEA;AACA;AACA;AACA,KAAK,IAAI;AACT,GAAG;AACH,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AAEA;;IAEMA,O;;;;;AAYF,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,2MAAMA,KAAN;;AADe,UA+CnBC,cA/CmB,GA+CF,UAAAC,MAAM,EAAI;AAAA,wBACK,MAAKC,KADV;AAAA,UACfC,OADe,eACfA,OADe;AAAA,UACNC,MADM,eACNA,MADM;;AAAA,0BAEHC,4EAAY,CAAC;AAC7BF,eAAO,EAAPA,OAD6B;AAE7BC,cAAM,EAANA,MAF6B;AAG7BE,mBAAW,EAAEL,MAHgB;AAI7BM,YAAI,EAAE,CAJuB;AAK7BC,iBAAS,EAAEC,MAAM,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","file":"js/Systems.js","sourcesContent":["'use strict';\n\nexports.__esModule = true;\nexports.defaultMemoize = defaultMemoize;\nexports.createSelectorCreator = createSelectorCreator;\nexports.createStructuredSelector = createStructuredSelector;\nfunction defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nfunction createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = defaultMemoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nvar createSelector = exports.createSelector = createSelectorCreator(defaultMemoize);\n\nfunction createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import * as reactCore from '@patternfly/react-core';\nimport { Page, ToolbarGroup, ToolbarItem } from '@patternfly/react-core';\nimport * as reactIcons from '@patternfly/react-icons';\nimport * as pfReactTable from '@patternfly/react-table';\nimport { Main, TableToolbar } from '@redhat-cloud-services/frontend-components';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport debounce from 'lodash/debounce';\nimport propTypes from 'prop-types';\nimport qs from 'query-string';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as reactRouterDom from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport { dataShape } from '../../../Helpers/MiscHelper';\nimport { fetchSystems, optOutSystemsAction, setHeader, selectEntities } from '../../../Store/Actions/Actions';\nimport { inventoryEntitiesReducer } from '../../../Store/Reducers/InventoryEntitiesReducer';\nimport { sAllSystems } from '../../../Store/Selectors/CVESelectors';\nimport ReducerRegistry, { middlewareListener } from '../../../Utilities/ReducerRegistry';\nimport VulnerabilityHeader from '../VulnerabilityHeader/VulnerabilityHeader';\nimport BaseKebab from '../../PresentationalComponents/DownloadReportKebab/BaseKebab';\nimport {\n    kebabItemDownloadCSV,\n    kebabItemDownloadJSON,\n    kebabItemToggleExcludeSystemDisplay,\n    kebabItemExcludeSystemAnalysis\n} from '../../PresentationalComponents/DownloadReportKebab/KebabItems';\nimport './Systems.scss';\nimport SelectAllCheckbox from '../../PresentationalComponents/SelectAllCheckbox';\nimport { filterSystemName } from '../../../Helpers/constants';\nimport FilterChips from '../../PresentationalComponents/Filters/FilterChips';\nimport SearchFilter from '../../PresentationalComponents/Filters/SearchFilter';\n\n/*eslint camelcase: 0*/\n\nclass Systems extends React.Component {\n    static propTypes = {\n        fetchData: propTypes.func,\n        systems: dataShape,\n        optOutSystems: propTypes.func,\n        addNotification: propTypes.func,\n        selectRows: propTypes.func,\n        selectMultiple: propTypes.func,\n        history: propTypes.object,\n        location: propTypes.object\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            InventoryCmp: () => <div>Loading...</div>,\n            filter: undefined,\n            removeListener: () => { },\n            columns: [\n                {\n                    key: 'display_name',\n                    title: 'Name',\n                    composed: ['facts.os_release', 'display_name']\n                },\n                {\n                    key: 'cve_count',\n                    title: 'Applicable CVEs'\n                }\n            ],\n            opt_out: false,\n            isKebabOpen: false,\n            selectListener: middlewareListener.addNew({\n                on: 'SELECT_ENTITY',\n                callback: payload => this.onSelect(payload)\n            }),\n            selectAllListener: middlewareListener.addNew({\n                on: 'SELECT_ENTITIES',\n                callback: payload => this.onSelect(payload)\n            }),\n            selected: new Set()\n        };\n    }\n\n    componentDidMount() {\n\n        const queryObject = qs.parse(this.props.location.search);\n        queryObject.show_irrelevant = queryObject.show_irrelevant === 'true';\n        if (queryObject.show_irrelevant) {\n            queryObject.show_all = undefined;\n        }\n\n        this.fetchInventory();\n        this.apply({ ...queryObject });\n    }\n\n    shouldComponentUpdate(nextProps) {\n        return !nextProps.systems.isLoading;\n    }\n\n    downloadReport = format => {\n        const { opt_out, filter } = this.state;\n        const { payload } = fetchSystems({\n            opt_out,\n            filter,\n            data_format: format,\n            page: 1,\n            page_size: Number.MAX_SAFE_INTEGER\n        });\n        payload &&\n            payload.then(({ data: response }) => {\n                const data = format === 'json' ? JSON.stringify(response) : response;\n                return downloadFile(data, `systems-${new Date().toISOString()}`, format);\n            });\n    };\n\n    async fetchInventory() {\n        const { inventoryConnector, mergeWithEntities, mergeWithDetail } = await insights.loadInventory({\n            react: React,\n            reactRouterDom,\n            reactCore,\n            reactIcons,\n            pfReactTable\n        });\n        ReducerRegistry.register({\n            ...mergeWithEntities(inventoryEntitiesReducer(this.state.columns, this.getSelected)),\n            ...mergeWithDetail()\n        });\n\n        this.setState({\n            InventoryCmp: inventoryConnector().InventoryTable\n        });\n        this.state.removeListener();\n    }\n\n    apply = (config = {}) => {\n        this.setState({ ...this.state, ...config }, this.sendRequest);\n    };\n\n    sendRequest = () => {\n        const { fetchData } = this.props;\n        fetchData({ ...this.state });\n        this.createUrlParams(this.state);\n    }\n\n    createUrlParams = allParams => {\n        const params = { ...allParams };\n        const allowedParams = ['filter', 'page', 'page_size'];\n        Object.keys(allParams).forEach(\n            key =>\n                (params[key] === undefined || params[key] === '' || !allowedParams.includes(key) || params[key] === false) &&\n                delete params[key]\n        );\n        const queryString = qs.stringify(params);\n        this.props.history.push('?' + queryString);\n    };\n\n    addFilter = (param, value, type) => {\n        let newFilter;\n        if (type === 'radio' || param === 'show_all') {\n            newFilter = { [param]: value };\n        } else {\n            newFilter = this.state[param] ? { [param]: `${this.state[param]},${value}` } : { [param]: value };\n        }\n\n        this.apply({ ...newFilter, page: 1 });\n    };\n\n    doOptOut = () => {\n        if (this.state.selected.size > 0) {\n            this.props.optOutSystems(this.state.selected, !this.state.opt_out).then(() => {\n                this.props.fetchData({ ...this.params(), page: 1 });\n                this.state.opt_out === false\n                    ? this.props.addNotification({\n                        variant: 'success',\n                        title: this.state.selected.size + ' systems successfully excluded from vulnerability analysis'\n                    })\n                    : this.props.addNotification({\n                        variant: 'success',\n                        title: this.state.selected.size + ' systems successfully resumed vulnerability analysis',\n                        description: 'There may be 24 hours before data is available'\n                    });\n                this.setState({ selected: new Set() });\n            });\n        }\n    };\n\n    onSelect = (payload) => {\n        let selected;\n        if (!payload.data || Array.isArray(payload.data)) {\n            selected = new Set(payload.data);\n        } else {\n            selected = this.state.selected;\n            payload.data.selected ? selected.add(payload.data.id) : selected.delete(payload.data.id);\n        }\n\n        this.setState({ selected }, this.props.selectMultiple);\n    };\n\n    getSelected = () => {\n        return this.state.selected;\n    };\n\n    params = () => {\n        const { filter, opt_out, page, page_size } = this.state;\n        return { filter, opt_out, page, page_size };\n    };\n\n    handleFilterChange = debounce(value => {\n        const { meta } = this.props.systems;\n        const { page_size } = meta;\n        this.apply({ filter: value, page_size, page: 1 });\n    }, 400);\n\n    handleRefresh = ({ page, per_page: perPage }) => {\n        const { meta } = this.props.systems;\n        const { fetchData } = this.props;\n        if (meta.page !== page || meta.page_size !== perPage) {\n            const config = {\n                page,\n                page_size: perPage || meta.page_size,\n                filter: this.state.filter,\n                opt_out: this.state.opt_out\n            };\n            fetchData(config);\n            this.createUrlParams(config);\n        }\n    };\n\n    handleOptOut = () => {\n        this.setState({\n            opt_out: !this.state.opt_out,\n            selected: new Set(),\n            page: 1\n        }, this.sendRequest);\n    };\n\n    handleKebabToggle = isKebabOpen => {\n        this.setState({\n            isKebabOpen\n        });\n    };\n\n    handleKebabSelect = () => {\n        this.setState({\n            isKebabOpen: !this.state.isKebabOpen\n        });\n    };\n\n    render() {\n        const { InventoryCmp, filter } = this.state;\n        const { data, meta } = this.props.systems;\n        const items = data.map(item => {\n            const { cve_count, ...rest } = item.attributes;\n            return {\n                cve_count: (meta.opt_out && 'Excluded') || cve_count,\n                id: item.attributes.inventory_id,\n                ...rest\n            };\n        });\n\n        const kebabOptions = [\n            kebabItemExcludeSystemAnalysis(this.doOptOut, this.state.opt_out, {\n                isDisabled: !this.getSelected().size\n            }),\n            kebabItemToggleExcludeSystemDisplay(this.handleOptOut, this.state.opt_out),\n            kebabItemDownloadJSON(this.downloadReport),\n            kebabItemDownloadCSV(this.downloadReport)\n        ];\n        return (\n            <Page>\n                <VulnerabilityHeader showBreadcrumb={false} />\n                <Main>\n                    <InventoryCmp\n                        hasCheckbox={data.length !== 0}\n                        page={meta.page}\n                        total={meta.total_items}\n                        perPage={meta.page_size}\n                        onRefresh={this.handleRefresh}\n                        items={items}\n                    >\n\n                        <ToolbarGroup className=\"systems-toolbar\">\n                            <ToolbarItem>\n                                <SelectAllCheckbox\n                                    selectedItems={this.state.selected}\n                                    selectorHandler={this.props.selectRows}\n                                    items={this.props.systems}\n                                    fetchResource={ops => fetchSystems({ ...this.params(), ...ops })}\n                                />\n                            </ToolbarItem>\n\n                            <ToolbarItem>\n                                <SearchFilter\n                                    placeholder=\"Filter by name\"\n                                    value={filter}\n                                    apply={this.apply}\n                                />\n                            </ToolbarItem>\n\n                            <ToolbarItem>\n                                <BaseKebab dropdownItems={kebabOptions} disabled={data.length === 0} />\n                            </ToolbarItem>\n                        </ToolbarGroup>\n                        <TableToolbar className=\"pf-u-pl-0 system-filter-chips\">\n                            <ToolbarGroup>\n                                <ToolbarItem>\n                                    <FilterChips\n                                        filterValues={this.params()}\n                                        filterCategories={[filterSystemName]}\n                                        apply={this.apply}\n                                    />\n                                </ToolbarItem>\n                            </ToolbarGroup>\n                        </TableToolbar>\n                    </InventoryCmp>\n                </Main>\n            </Page>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        systems: sAllSystems(state)\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setHeader: header => dispatch(setHeader(header)),\n        fetchData: options => dispatch(fetchSystems(options)),\n        optOutSystems: (systems, status) => dispatch(optOutSystemsAction(systems, status)),\n        addNotification: notification => dispatch(addNotification(notification)),\n        selectRows: (value, ids) => dispatch(selectEntities(value, ids)),\n        selectMultiple: () => dispatch({ type: 'SELECT_MULTIPLE_ENTITIES' })\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Systems)\n);\n","// extracted by mini-css-extract-plugin","// Initial State\nexport const init = {\n    columns: [],\n    rows: [],\n    entities: []\n};\n// Reducer\n\nfunction modifyInventory(columns, state, getSelectedFunc) {\n    // If a system does not have insights_id, it means it was deleted from inventory but somehow survived in Vuln backend\n    if (state.loaded) {\n        const selected = getSelectedFunc();\n        const lastSeenColumn = state.columns.filter(({ key }) => key === 'updated');\n        return {\n            ...state,\n            rows: state.rows.filter(item => item.insights_id).map(item => ({ ...item, selected: selected.has(item.id) })),\n            columns: [\n                ...columns || [],\n                ...lastSeenColumn || []\n            ]\n        };\n    }\n\n    return state;\n}\n\nfunction selectEntities(state, getSelectedFunc) {\n    const selected = getSelectedFunc();\n    const myRows = state.rows.slice();\n    const retval = {\n        ...state,\n        rows: myRows\n        .map(item => {\n            const newValue =  { ...item, selected: selected.has(item.id) };\n            return newValue;\n        })\n    };\n    return retval;\n}\n\nexport const inventoryEntitiesReducer = (columns, selected) => (state = init, action) => {\n    switch (action.type) {\n        case 'LOAD_ENTITIES_FULFILLED':\n            return modifyInventory(columns, state, selected);\n        case 'SELECT_MULTIPLE_ENTITIES':\n            return selectEntities(state, selected);\n\n        default:\n            return state;\n    }\n};\n","import { createSelector } from 'reselect';\nimport { createCveDetailsPage, createExposedSystemsTable } from '../../Helpers/CVEHelper';\n\nconst cveListWithSystemsSelector = (state, cve) => ({ ...state.CVEStore.affectedSystemsByCVE, cve });\nconst systemsListAllSelector = state => state.SystemsStore;\nconst cveDetailsPageSelector = state => state.CVEStore.cveDetails;\n\nexport const sCveDetailsPage = createSelector(\n    [cveDetailsPageSelector],\n    createCveDetailsPage\n);\nexport const sExposedSystemsTable = createSelector(\n    [cveListWithSystemsSelector],\n    createExposedSystemsTable\n);\n\nexport const sAllSystems = createSelector(\n    [systemsListAllSelector],\n    createExposedSystemsTable\n);\n"],"sourceRoot":""}