{"version":3,"sources":["webpack:///./src/Store/Selectors/CVESelectors.js","webpack:///./src/Store/Reducers/InventoryEntitiesReducer.js","webpack:///./src/Components/SmartComponents/Systems/Systems.js","webpack:///./src/Components/SmartComponents/Systems/Systems.scss?4fb1","webpack:///./src/Components/SmartComponents/Systems/Systems.scss"],"names":["sCveDetailsPage","createSelector","state","CVEStore","cveDetails","createCveDetailsPage","sExposedSystemsTable","cve","affectedSystemsByCVE","createExposedSystemsTable","sAllSystems","SystemsStore","createSystemsListTable","init","columns","rows","entities","modifyInventory","getSelectedFunc","loaded","selected","lastSeenColumn","filter","key","item","insights_id","map","has","id","selectEntities","myRows","slice","inventoryEntitiesReducer","action","type","Systems","props","downloadReport","format","opt_out","payload","fetchSystems","data_format","page","page_size","Number","MAX_SAFE_INTEGER","then","response","data","JSON","stringify","downloadFile","Date","toISOString","apply","config","setState","sendRequest","fetchData","createUrlParams","allParams","params","allowedParams","Object","keys","forEach","undefined","includes","queryString","qs","history","push","addFilter","param","value","newFilter","doOptOut","size","optOutSystems","addNotification","variant","title","intl","formatMessage","messages","systemsExcludedNotification","systemsResumedNotificationTitle","description","systemsResumedNotificationBody","Set","onSelect","Array","isArray","add","selectMultiple","getSelected","handleFilterChange","debounce","systems","meta","handleRefresh","perPage","per_page","total_items","inventory","current","onRefreshData","handleOptOut","handleKebabToggle","isKebabOpen","handleKebabSelect","React","createRef","InventoryCmp","removeListener","systemsColumnHeaderName","composed","systemsColumnHeaderCveCount","selectListener","middlewareListener","addNew","on","callback","selectAllListener","queryObject","parse","this","location","search","show_irrelevant","show_all","fetchInventory","nextProps","isLoading","insights","loadInventory","react","reactRouterDom","reactCore","reactIcons","pfReactTable","inventoryConnector","mergeWithEntities","mergeWithDetail","ReducerRegistry","register","getStore","InventoryTable","items","attributes","cve_count","rest","inventory_id","kebabOptions","kebabItemExcludeSystemAnalysis","isDisabled","kebabItemToggleExcludeSystemDisplay","kebabItemDownloadJSON","kebabItemDownloadCSV","showBreadcrumb","ref","hasCheckbox","length","total","onRefresh","className","selectedItems","selectorHandler","selectRows","fetchResource","ops","placeholder","searchFilterByName","dropdownItems","disabled","filterValues","filterCategories","filterSystemName","Component","propTypes","func","dataShape","object","any","injectIntl","withRouter","connect","dispatch","setHeader","header","options","status","optOutSystemsAction","notification","ids","content","module","i","transform","locals","exports"],"mappings":"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","file":"js/Systems.js","sourcesContent":["import { createSelector } from 'reselect';\nimport { createCveDetailsPage, createExposedSystemsTable, createSystemsListTable } from '../../Helpers/CVEHelper';\n\nconst cveListWithSystemsSelector = (state, cve) => ({ ...state.CVEStore.affectedSystemsByCVE, cve });\nconst systemsListAllSelector = state => state.SystemsStore;\nconst cveDetailsPageSelector = state => state.CVEStore.cveDetails;\n\nexport const sCveDetailsPage = createSelector(\n    [cveDetailsPageSelector],\n    createCveDetailsPage\n);\nexport const sExposedSystemsTable = createSelector(\n    [cveListWithSystemsSelector],\n    createExposedSystemsTable\n);\n\nexport const sAllSystems = createSelector(\n    [systemsListAllSelector],\n    createSystemsListTable\n);\n","// Initial State\nexport const init = {\n    columns: [],\n    rows: [],\n    entities: []\n};\n// Reducer\n\nfunction modifyInventory(columns, state, getSelectedFunc) {\n    // If a system does not have insights_id, it means it was deleted from inventory but somehow survived in Vuln backend\n    if (state.loaded) {\n        const selected = getSelectedFunc();\n        const lastSeenColumn = state.columns.filter(({ key }) => key === 'updated');\n        return {\n            ...state,\n            rows: state.rows.filter(item => item.insights_id).map(item => ({ ...item, selected: selected.has(item.id) })),\n            columns: [\n                ...columns || [],\n                ...lastSeenColumn || []\n            ]\n        };\n    }\n\n    return state;\n}\n\nfunction selectEntities(state, getSelectedFunc) {\n    const selected = getSelectedFunc();\n    const myRows = state.rows.slice();\n    const retval = {\n        ...state,\n        rows: myRows\n        .map(item => {\n            const newValue =  { ...item, selected: selected.has(item.id) };\n            return newValue;\n        })\n    };\n    return retval;\n}\n\nexport const inventoryEntitiesReducer = (columns, selected) => (state = init, action) => {\n    switch (action.type) {\n        case 'LOAD_ENTITIES_FULFILLED':\n            return modifyInventory(columns, state, selected);\n        case 'SELECT_MULTIPLE_ENTITIES':\n            return selectEntities(state, selected);\n\n        default:\n            return state;\n    }\n};\n","import * as reactCore from '@patternfly/react-core';\nimport { Page, ToolbarGroup, ToolbarItem } from '@patternfly/react-core';\nimport * as reactIcons from '@patternfly/react-icons';\nimport * as pfReactTable from '@patternfly/react-table';\nimport { Main, TableToolbar } from '@redhat-cloud-services/frontend-components';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport debounce from 'lodash/debounce';\nimport propTypes from 'prop-types';\nimport qs from 'query-string';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as reactRouterDom from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport { dataShape } from '../../../Helpers/MiscHelper';\nimport { fetchSystems, optOutSystemsAction, setHeader, selectEntities } from '../../../Store/Actions/Actions';\nimport { inventoryEntitiesReducer } from '../../../Store/Reducers/InventoryEntitiesReducer';\nimport { sAllSystems } from '../../../Store/Selectors/CVESelectors';\nimport ReducerRegistry, { middlewareListener } from '../../../Utilities/ReducerRegistry';\nimport VulnerabilityHeader from '../VulnerabilityHeader/VulnerabilityHeader';\nimport BaseKebab from '../../PresentationalComponents/DownloadReportKebab/BaseKebab';\nimport {\n    kebabItemDownloadCSV,\n    kebabItemDownloadJSON,\n    kebabItemToggleExcludeSystemDisplay,\n    kebabItemExcludeSystemAnalysis\n} from '../../PresentationalComponents/DownloadReportKebab/KebabItems';\nimport './Systems.scss';\nimport SelectAllCheckbox from '../../PresentationalComponents/SelectAllCheckbox';\nimport { filterSystemName } from '../../../Helpers/constants';\nimport FilterChips  from '../../PresentationalComponents/Filters/FilterChips';\nimport SearchFilter  from '../../PresentationalComponents/Filters/SearchFilter';\nimport messages from '../../../Messages';\nimport { injectIntl } from 'react-intl';\n/*eslint camelcase: 0*/\n\nclass Systems extends React.Component {\n    static propTypes = {\n        fetchData: propTypes.func,\n        systems: dataShape,\n        optOutSystems: propTypes.func,\n        addNotification: propTypes.func,\n        selectRows: propTypes.func,\n        selectMultiple: propTypes.func,\n        history: propTypes.object,\n        location: propTypes.object,\n        intl: propTypes.any\n    };\n\n    constructor(props) {\n        super(props);\n        this.inventory = React.createRef();\n        this.state = {\n            InventoryCmp: () => <div>Loading...</div>,\n            filter: undefined,\n            removeListener: () => { },\n            columns: [\n                {\n                    key: 'display_name',\n                    title: this.props.intl.formatMessage(messages.systemsColumnHeaderName),\n                    composed: ['facts.os_release', 'display_name']\n                },\n                {\n                    key: 'cve_count',\n                    title: this.props.intl.formatMessage(messages.systemsColumnHeaderCveCount)\n                }\n            ],\n            opt_out: false,\n            isKebabOpen: false,\n            selectListener: middlewareListener.addNew({\n                on: 'SELECT_ENTITY',\n                callback: payload => this.onSelect(payload)\n            }),\n            selectAllListener: middlewareListener.addNew({\n                on: 'SELECT_ENTITIES',\n                callback: payload => this.onSelect(payload)\n            }),\n            selected: new Set()\n        };\n    }\n\n    componentDidMount() {\n\n        const queryObject = qs.parse(this.props.location.search);\n        queryObject.show_irrelevant = queryObject.show_irrelevant === 'true';\n        if (queryObject.show_irrelevant) {\n            queryObject.show_all = undefined;\n        }\n\n        this.fetchInventory();\n        this.apply({ ...queryObject });\n    }\n\n    shouldComponentUpdate(nextProps) {\n        return !nextProps.systems.isLoading;\n    }\n\n    downloadReport = format => {\n        const { opt_out, filter } = this.state;\n        const { payload } = fetchSystems({\n            opt_out,\n            filter,\n            data_format: format,\n            page: 1,\n            page_size: Number.MAX_SAFE_INTEGER\n        });\n        payload &&\n            payload.then(({ data: response }) => {\n                const data = format === 'json' ? JSON.stringify(response) : response;\n                return downloadFile(data, `systems-${new Date().toISOString()}`, format);\n            });\n    };\n\n    async fetchInventory() {\n        const { inventoryConnector, mergeWithEntities, mergeWithDetail } = await insights.loadInventory({\n            react: React,\n            reactRouterDom,\n            reactCore,\n            reactIcons,\n            pfReactTable\n        });\n        ReducerRegistry.register({\n            ...mergeWithEntities(inventoryEntitiesReducer(this.state.columns, this.getSelected)),\n            ...mergeWithDetail()\n        });\n\n        this.setState({\n            InventoryCmp: inventoryConnector(ReducerRegistry.getStore()).InventoryTable\n        });\n        this.state.removeListener();\n    }\n\n    apply = (config = {}) => {\n        this.setState({ ...this.state, ...config }, this.sendRequest);\n    };\n\n    sendRequest = () => {\n        const { fetchData } = this.props;\n        fetchData({ ...this.state });\n        this.createUrlParams(this.state);\n    }\n\n    createUrlParams = allParams => {\n        const params = { ...allParams };\n        const allowedParams = ['filter', 'page', 'page_size'];\n        Object.keys(allParams).forEach(\n            key =>\n                (params[key] === undefined || params[key] === '' || !allowedParams.includes(key) || params[key] === false) &&\n                delete params[key]\n        );\n        const queryString = qs.stringify(params);\n        this.props.history.push('?' + queryString);\n    };\n\n    addFilter = (param, value, type) => {\n        let newFilter;\n        if (type === 'radio' || param === 'show_all') {\n            newFilter = { [param]: value };\n        } else {\n            newFilter = this.state[param] ? { [param]: `${this.state[param]},${value}` } : { [param]: value };\n        }\n\n        this.apply({ ...newFilter, page: 1 });\n    };\n\n    doOptOut = () => {\n        if (this.state.selected.size > 0) {\n            this.props.optOutSystems(this.state.selected, !this.state.opt_out).then(() => {\n                this.props.fetchData({ ...this.params(), page: 1 });\n                this.state.opt_out === false\n                    ? this.props.addNotification({\n                        variant: 'success',\n                        title: this.state.selected.size + this.props.intl.formatMessage(messages.systemsExcludedNotification)\n                    })\n                    : this.props.addNotification({\n                        variant: 'success',\n                        title: this.state.selected.size + this.props.intl.formatMessage(messages.systemsResumedNotificationTitle),\n                        description: this.props.intl.formatMessage(messages.systemsResumedNotificationBody)\n                    });\n                this.setState({ selected: new Set() });\n            });\n        }\n    };\n\n    onSelect = (payload) => {\n        let selected;\n        if (!payload.data || Array.isArray(payload.data)) {\n            selected = new Set(payload.data);\n        } else {\n            selected = this.state.selected;\n            payload.data.selected ? selected.add(payload.data.id) : selected.delete(payload.data.id);\n        }\n\n        this.setState({ selected }, this.props.selectMultiple);\n    };\n\n    getSelected = () => {\n        return this.state.selected;\n    };\n\n    params = () => {\n        const { filter, opt_out, page, page_size } = this.state;\n        return { filter, opt_out, page, page_size };\n    };\n\n    handleFilterChange = debounce(value => {\n        const { meta } = this.props.systems;\n        const { page_size } = meta;\n        this.apply({ filter: value, page_size, page: 1 });\n    }, 400);\n\n    handleRefresh = ({ page, per_page: perPage }) => {\n        const { meta } = this.props.systems;\n        const { fetchData } = this.props;\n        if (meta.page !== page || meta.page_size !== perPage) {\n            const config = {\n                page,\n                page_size: perPage || meta.page_size,\n                filter: this.state.filter,\n                opt_out: this.state.opt_out\n            };\n            fetchData(config);\n            this.createUrlParams(config);\n        }\n\n        if (meta.total_items <= perPage && this.inventory.current) {\n            this.inventory.current.onRefreshData({ page, per_page: perPage, perPage });\n        }\n    };\n\n    handleOptOut = () => {\n        this.setState({\n            opt_out: !this.state.opt_out,\n            selected: new Set(),\n            page: 1\n        }, this.sendRequest);\n    };\n\n    handleKebabToggle = isKebabOpen => {\n        this.setState({\n            isKebabOpen\n        });\n    };\n\n    handleKebabSelect = () => {\n        this.setState({\n            isKebabOpen: !this.state.isKebabOpen\n        });\n    };\n\n    render() {\n        const { InventoryCmp, filter } = this.state;\n        const { data, meta } = this.props.systems;\n        const items = data.map(item => {\n            const { cve_count, ...rest } = item.attributes;\n            return {\n                cve_count: (meta.opt_out && 'Excluded') || cve_count,\n                id: item.attributes.inventory_id,\n                ...rest\n            };\n        });\n\n        const kebabOptions = [\n            kebabItemExcludeSystemAnalysis(this.doOptOut, this.state.opt_out, {\n                isDisabled: !this.getSelected().size\n            }),\n            kebabItemToggleExcludeSystemDisplay(this.handleOptOut, this.state.opt_out),\n            kebabItemDownloadJSON(this.downloadReport),\n            kebabItemDownloadCSV(this.downloadReport)\n        ];\n        return (\n            <Page>\n                <VulnerabilityHeader showBreadcrumb={false} />\n                <Main>\n                    <InventoryCmp\n                        ref={this.inventory}\n                        hasCheckbox={data.length !== 0}\n                        page={meta.page}\n                        total={meta.total_items}\n                        perPage={meta.page_size}\n                        onRefresh={this.handleRefresh}\n                        items={items}\n                    >\n\n                        <ToolbarGroup className=\"systems-toolbar\">\n                            <ToolbarItem>\n                                <SelectAllCheckbox\n                                    selectedItems={this.state.selected}\n                                    selectorHandler={this.props.selectRows}\n                                    items={this.props.systems}\n                                    fetchResource={ops => fetchSystems({ ...this.params(), ...ops })}\n                                />\n                            </ToolbarItem>\n\n                            <ToolbarItem>\n                                <SearchFilter\n                                    placeholder={this.props.intl.formatMessage(messages.searchFilterByName)}\n                                    value={filter}\n                                    apply={this.apply}\n                                />\n                            </ToolbarItem>\n\n                            <ToolbarItem>\n                                <BaseKebab dropdownItems={kebabOptions} disabled={data.length === 0} />\n                            </ToolbarItem>\n                        </ToolbarGroup>\n                        <TableToolbar className=\"pf-u-pl-0 system-filter-chips\">\n                            <ToolbarGroup>\n                                <ToolbarItem>\n                                    <FilterChips\n                                        filterValues={this.params()}\n                                        filterCategories={[filterSystemName]}\n                                        apply={this.apply}\n                                    />\n                                </ToolbarItem>\n                            </ToolbarGroup>\n                        </TableToolbar>\n                    </InventoryCmp>\n                </Main>\n            </Page>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        systems: sAllSystems(state)\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setHeader: header => dispatch(setHeader(header)),\n        fetchData: options => dispatch(fetchSystems(options)),\n        optOutSystems: (systems, status) => dispatch(optOutSystemsAction(systems, status)),\n        addNotification: notification => dispatch(addNotification(notification)),\n        selectRows: (value, ids) => dispatch(selectEntities(value, ids)),\n        selectMultiple: () => dispatch({ type: 'SELECT_MULTIPLE_ENTITIES' })\n    };\n};\n\nexport default injectIntl(\n    withRouter(\n        connect(\n            mapStateToProps,\n            mapDispatchToProps\n        )(Systems)\n    )\n);\n\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./Systems.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./Systems.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./Systems.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".systems-toolbar > div {\\n  margin-right: var(--pf-global--spacer--sm); }\\n\\n.space-between-toolbar-items {\\n  justify-content: space-between;\\n  flex-wrap: nowrap; }\\n  .space-between-toolbar-items > div {\\n    flex-wrap: nowrap; }\\n\\n.vulnerability-toolbar-spacing {\\n  justify-content: flex-start; }\\n  .vulnerability-toolbar-spacing > div:not(:last-child) {\\n    margin-right: var(--pf-global--spacer--sm); }\\n\\n.system-filter-chips {\\n  order: 6;\\n  flex-basis: 100%; }\\n\", \"\"]);\n\n// exports\n"],"sourceRoot":""}