{"version":3,"sources":["webpack:///./src/Components/SmartComponents/Systems/Systems.js","webpack:///./src/Components/SmartComponents/Systems/Systems.scss?4fb1","webpack:///./src/Components/SmartComponents/Systems/Systems.scss","webpack:///./src/Store/Selectors/CVESelectors.js","webpack:///./node_modules/reselect/lib/index.js","webpack:///./src/Store/Reducers/InventoryEntitiesReducer.js"],"names":["Systems","props","downloadReport","format","state","opt_out","filter","payload","fetchSystems","data_format","page","page_size","Number","MAX_SAFE_INTEGER","then","response","data","JSON","stringify","downloadFile","Date","toISOString","apply","config","setState","sendRequest","fetchData","createUrlParams","allParams","params","allowedParams","Object","keys","forEach","key","undefined","includes","queryString","qs","history","push","addFilter","param","value","type","newFilter","doOptOut","selected","size","optOutSystems","addNotification","variant","title","description","Set","onSelect","Array","isArray","add","id","selectMultiple","getSelected","handleFilterChange","debounce","systems","meta","handleRefresh","perPage","per_page","handleOptOut","handleKebabToggle","isKebabOpen","handleKebabSelect","InventoryCmp","removeListener","columns","composed","isTime","selectListener","middlewareListener","addNew","on","callback","selectAllListener","queryObject","parse","this","location","search","show_irrelevant","show_all","fetchInventory","nextProps","isLoading","insights","loadInventory","react","React","reactRouterDom","reactCore","reactIcons","pfReactTable","inventoryConnector","mergeWithEntities","mergeWithDetail","ReducerRegistry","register","inventoryEntitiesReducer","InventoryTable","items","map","item","attributes","cve_count","rest","inventory_id","kebabOptions","kebabItemExcludeSystemAnalysis","isDisabled","kebabItemToggleExcludeSystemDisplay","kebabItemDownloadJSON","kebabItemDownloadCSV","showBreadcrumb","hasCheckbox","length","total","total_items","onRefresh","className","selectedItems","selectorHandler","selectRows","fetchResource","ops","placeholder","dropdownItems","filterValues","filterCategories","filterSystemName","Component","propTypes","func","dataShape","object","withRouter","connect","sAllSystems","dispatch","setHeader","header","options","status","optOutSystemsAction","notification","ids","selectEntities","content","module","i","transform","locals","exports","sCveDetailsPage","createSelector","CVEStore","cveDetails","createCveDetailsPage","sExposedSystemsTable","cve","affectedSystemsByCVE","createExposedSystemsTable","SystemsStore","defaultEqualityCheck","a","b","areArgumentsShallowlyEqual","equalityCheck","prev","next","defaultMemoize","arguments","lastArgs","lastResult","getDependencies","funcs","dependencies","every","dep","dependencyTypes","join","Error","createSelectorCreator","memoize","_len","memoizeOptions","_key","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","concat","selector","resetRecomputations","__esModule","createStructuredSelector","selectors","selectorCreator","objectKeys","_len3","values","_key3","reduce","composition","index","init","rows","entities","modifyInventory","getSelectedFunc","loaded","insights_id","has","myRows","slice","action"],"mappings":"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","file":"js/Systems.js","sourcesContent":["import * as reactCore from '@patternfly/react-core';\nimport { Page, ToolbarGroup, ToolbarItem } from '@patternfly/react-core';\nimport * as reactIcons from '@patternfly/react-icons';\nimport * as pfReactTable from '@patternfly/react-table';\nimport { Main, TableToolbar } from '@redhat-cloud-services/frontend-components';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport debounce from 'lodash/debounce';\nimport propTypes from 'prop-types';\nimport qs from 'query-string';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as reactRouterDom from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport { dataShape } from '../../../Helpers/MiscHelper';\nimport { fetchSystems, optOutSystemsAction, setHeader, selectEntities } from '../../../Store/Actions/Actions';\nimport { inventoryEntitiesReducer } from '../../../Store/Reducers/InventoryEntitiesReducer';\nimport { sAllSystems } from '../../../Store/Selectors/CVESelectors';\nimport ReducerRegistry, { middlewareListener } from '../../../Utilities/ReducerRegistry';\nimport VulnerabilityHeader from '../VulnerabilityHeader/VulnerabilityHeader';\nimport BaseKebab from '../../PresentationalComponents/DownloadReportKebab/BaseKebab';\nimport {\n    kebabItemDownloadCSV,\n    kebabItemDownloadJSON,\n    kebabItemToggleExcludeSystemDisplay,\n    kebabItemExcludeSystemAnalysis\n} from '../../PresentationalComponents/DownloadReportKebab/KebabItems';\nimport './Systems.scss';\nimport SelectAllCheckbox from '../../PresentationalComponents/SelectAllCheckbox';\nimport { filterSystemName } from '../../../Helpers/constants';\nimport FilterChips  from '../../PresentationalComponents/Filters/FilterChips';\nimport SearchFilter  from '../../PresentationalComponents/Filters/SearchFilter';\n\n/*eslint camelcase: 0*/\n\nclass Systems extends React.Component {\n    static propTypes = {\n        fetchData: propTypes.func,\n        systems: dataShape,\n        optOutSystems: propTypes.func,\n        addNotification: propTypes.func,\n        selectRows: propTypes.func,\n        selectMultiple: propTypes.func,\n        history: propTypes.object,\n        location: propTypes.object\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            InventoryCmp: () => <div>Loading...</div>,\n            filter: undefined,\n            removeListener: () => {},\n            columns: [\n                {\n                    key: 'display_name',\n                    title: 'Name',\n                    composed: ['facts.os_release', 'display_name']\n                },\n                {\n                    key: 'cve_count',\n                    title: 'Applicable CVEs'\n                },\n                {\n                    key: 'updated',\n                    title: 'Last seen',\n                    isTime: true\n                }\n            ],\n            opt_out: false,\n            isKebabOpen: false,\n            selectListener: middlewareListener.addNew({\n                on: 'SELECT_ENTITY',\n                callback: payload => this.onSelect(payload)\n            }),\n            selectAllListener: middlewareListener.addNew({\n                on: 'SELECT_ENTITIES',\n                callback: payload => this.onSelect(payload)\n            }),\n            selected: new Set()\n        };\n    }\n\n    componentDidMount() {\n\n        const queryObject = qs.parse(this.props.location.search);\n        queryObject.show_irrelevant = queryObject.show_irrelevant === 'true';\n        if (queryObject.show_irrelevant) {\n            queryObject.show_all = undefined;\n        }\n\n        this.fetchInventory();\n        this.apply({ ...queryObject });\n    }\n\n    shouldComponentUpdate(nextProps) {\n        return !nextProps.systems.isLoading;\n    }\n\n    downloadReport = format => {\n        const { opt_out, filter } = this.state;\n        const { payload } = fetchSystems({\n            opt_out,\n            filter,\n            data_format: format,\n            page: 1,\n            page_size: Number.MAX_SAFE_INTEGER\n        });\n        payload &&\n            payload.then(({ data: response }) => {\n                const data = format === 'json' ? JSON.stringify(response) : response;\n                return downloadFile(data, `systems-${new Date().toISOString()}`, format);\n            });\n    };\n\n    async fetchInventory() {\n        const { inventoryConnector, mergeWithEntities, mergeWithDetail } = await insights.loadInventory({\n            react: React,\n            reactRouterDom,\n            reactCore,\n            reactIcons,\n            pfReactTable\n        });\n        ReducerRegistry.register({\n            ...mergeWithEntities(inventoryEntitiesReducer(this.state.columns, this.getSelected)),\n            ...mergeWithDetail()\n        });\n\n        this.setState({\n            InventoryCmp: inventoryConnector().InventoryTable\n        });\n        this.state.removeListener();\n    }\n\n    apply = (config = {}) => {\n        this.setState({ ...this.state, ...config }, this.sendRequest);\n    };\n\n    sendRequest = () => {\n        const { fetchData } = this.props;\n        fetchData({ ...this.state });\n        this.createUrlParams(this.state);\n    }\n\n    createUrlParams = allParams => {\n        const params = { ...allParams };\n        const allowedParams = ['filter', 'page', 'page_size'];\n        Object.keys(allParams).forEach(\n            key =>\n                (params[key] === undefined || params[key] === '' || !allowedParams.includes(key) || params[key] === false) &&\n                delete params[key]\n        );\n        const queryString = qs.stringify(params);\n        this.props.history.push('?' + queryString);\n    };\n\n    addFilter = (param, value, type) => {\n        let newFilter;\n        if (type === 'radio' || param === 'show_all') {\n            newFilter = { [param]: value };\n        } else {\n            newFilter = this.state[param] ? { [param]: `${this.state[param]},${value}` } : { [param]: value };\n        }\n\n        this.apply({ ...newFilter, page: 1 });\n    };\n\n    doOptOut = () => {\n        if (this.state.selected.size > 0) {\n            this.props.optOutSystems(this.state.selected, !this.state.opt_out).then(() => {\n                this.props.fetchData({ ...this.params(), page: 1 });\n                this.state.opt_out === false\n                    ? this.props.addNotification({\n                        variant: 'success',\n                        title: this.state.selected.size + ' systems successfully excluded from vulnerability analysis'\n                    })\n                    : this.props.addNotification({\n                        variant: 'success',\n                        title: this.state.selected.size + ' systems successfully resumed vulnerability analysis',\n                        description: 'There may be 24 hours before data is available'\n                    });\n                this.setState({ selected: new Set() });\n            });\n        }\n    };\n\n    onSelect = (payload) => {\n        let selected;\n        if (!payload.data || Array.isArray(payload.data)) {\n            selected = new Set(payload.data);\n        } else {\n            selected = this.state.selected;\n            payload.data.selected ? selected.add(payload.data.id) : selected.delete(payload.data.id);\n        }\n\n        this.setState({ selected }, this.props.selectMultiple);\n    };\n\n    getSelected = () => {\n        return this.state.selected;\n    };\n\n    params = () => {\n        const { filter, opt_out, page, page_size } = this.state;\n        return { filter, opt_out, page, page_size };\n    };\n\n    handleFilterChange = debounce(value => {\n        const { meta } = this.props.systems;\n        const { page_size } = meta;\n        this.apply({ filter: value, page_size, page: 1 });\n    }, 400);\n\n    handleRefresh = ({ page, per_page: perPage }) => {\n        const { meta } = this.props.systems;\n        const { fetchData } = this.props;\n        if (meta.page !== page || meta.page_size !== perPage) {\n            const config = {\n                page,\n                page_size: perPage || meta.page_size,\n                filter: this.state.filter,\n                opt_out: this.state.opt_out\n            };\n            fetchData(config);\n            this.createUrlParams(config);\n        }\n    };\n\n    handleOptOut = () => {\n        this.setState({\n            opt_out: !this.state.opt_out,\n            selected: new Set(),\n            page: 1\n        }, this.sendRequest);\n    };\n\n    handleKebabToggle = isKebabOpen => {\n        this.setState({\n            isKebabOpen\n        });\n    };\n\n    handleKebabSelect = () => {\n        this.setState({\n            isKebabOpen: !this.state.isKebabOpen\n        });\n    };\n\n    render() {\n        const { InventoryCmp, filter } = this.state;\n        const { data, meta } = this.props.systems;\n        const items = data.map(item => {\n            const { cve_count, ...rest } = item.attributes;\n            return {\n                cve_count: (meta.opt_out && 'Excluded') || cve_count,\n                id: item.attributes.inventory_id,\n                ...rest\n            };\n        });\n\n        const kebabOptions = [\n            kebabItemExcludeSystemAnalysis(this.doOptOut, this.state.opt_out, {\n                isDisabled: !this.getSelected().size\n            }),\n            kebabItemToggleExcludeSystemDisplay(this.handleOptOut, this.state.opt_out),\n            kebabItemDownloadJSON(this.downloadReport),\n            kebabItemDownloadCSV(this.downloadReport)\n        ];\n        return (\n            <Page>\n                <VulnerabilityHeader showBreadcrumb={false} />\n                <Main>\n                    <InventoryCmp\n                        hasCheckbox={data.length !== 0}\n                        page={meta.page}\n                        total={meta.total_items}\n                        perPage={meta.page_size}\n                        onRefresh={this.handleRefresh}\n                        items={items}\n                    >\n\n                        <ToolbarGroup className=\"systems-toolbar\">\n                            <ToolbarItem>\n                                <SelectAllCheckbox\n                                    selectedItems={this.state.selected}\n                                    selectorHandler={this.props.selectRows}\n                                    items={this.props.systems}\n                                    fetchResource={ops => fetchSystems({ ...this.params(), ...ops })}\n                                />\n                            </ToolbarItem>\n\n                            <ToolbarItem>\n                                <SearchFilter\n                                    placeholder=\"Filter by name\"\n                                    value={filter}\n                                    apply={this.apply}\n                                />\n                            </ToolbarItem>\n\n                            <ToolbarItem>\n                                <BaseKebab dropdownItems={kebabOptions} />\n                            </ToolbarItem>\n                        </ToolbarGroup>\n                        <TableToolbar className=\"pf-u-pl-0 system-filter-chips\">\n                            <ToolbarGroup>\n                                <ToolbarItem>\n                                    <FilterChips\n                                        filterValues={this.params()}\n                                        filterCategories={[filterSystemName]}\n                                        apply={this.apply}\n                                    />\n                                </ToolbarItem>\n                            </ToolbarGroup>\n                        </TableToolbar>\n                    </InventoryCmp>\n                </Main>\n            </Page>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        systems: sAllSystems(state)\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setHeader: header => dispatch(setHeader(header)),\n        fetchData: options => dispatch(fetchSystems(options)),\n        optOutSystems: (systems, status) => dispatch(optOutSystemsAction(systems, status)),\n        addNotification: notification => dispatch(addNotification(notification)),\n        selectRows: (value, ids) => dispatch(selectEntities(value, ids)),\n        selectMultiple: () => dispatch({ type: 'SELECT_MULTIPLE_ENTITIES' })\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Systems)\n);\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./Systems.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./Systems.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./Systems.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".systems-toolbar > div {\\n  margin-right: var(--pf-global--spacer--sm); }\\n\\n.space-between-toolbar-items {\\n  justify-content: space-between;\\n  flex-wrap: nowrap; }\\n  .space-between-toolbar-items > div {\\n    flex-wrap: nowrap; }\\n\\n.vulnerability-toolbar-spacing {\\n  justify-content: flex-start; }\\n  .vulnerability-toolbar-spacing > div:not(:last-child) {\\n    margin-right: var(--pf-global--spacer--sm); }\\n\\n.system-filter-chips {\\n  order: 6;\\n  flex-basis: 100%; }\\n\", \"\"]);\n\n// exports\n","import { createSelector } from 'reselect';\nimport { createCveDetailsPage, createExposedSystemsTable } from '../../Helpers/CVEHelper';\n\nconst cveListWithSystemsSelector = (state, cve) => ({ ...state.CVEStore.affectedSystemsByCVE, cve });\nconst systemsListAllSelector = state => state.SystemsStore;\nconst cveDetailsPageSelector = state => state.CVEStore.cveDetails;\n\nexport const sCveDetailsPage = createSelector(\n    [cveDetailsPageSelector],\n    createCveDetailsPage\n);\nexport const sExposedSystemsTable = createSelector(\n    [cveListWithSystemsSelector],\n    createExposedSystemsTable\n);\n\nexport const sAllSystems = createSelector(\n    [systemsListAllSelector],\n    createExposedSystemsTable\n);\n","'use strict';\n\nexports.__esModule = true;\nexports.defaultMemoize = defaultMemoize;\nexports.createSelectorCreator = createSelectorCreator;\nexports.createStructuredSelector = createStructuredSelector;\nfunction defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nfunction createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = defaultMemoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nvar createSelector = exports.createSelector = createSelectorCreator(defaultMemoize);\n\nfunction createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","// Initial State\nexport const init = {\n    columns: [],\n    rows: [],\n    entities: []\n};\n// Reducer\n\nfunction modifyInventory(columns, state, getSelectedFunc) {\n    // If a system does not have insights_id, it means it was deleted from inventory but somehow survived in Vuln backend\n    if (state.loaded) {\n        const selected = getSelectedFunc();\n        return {\n            ...state,\n            rows: state.rows.filter(item => item.insights_id).map(item => ({ ...item, selected: selected.has(item.id) })),\n            columns\n        };\n    }\n\n    return state;\n}\n\nfunction selectEntities(state, getSelectedFunc) {\n    const selected = getSelectedFunc();\n    const myRows = state.rows.slice();\n    const retval = {\n        ...state,\n        rows: myRows\n        .map(item => {\n            const newValue =  { ...item, selected: selected.has(item.id) };\n            return newValue;\n        })\n    };\n    return retval;\n}\n\nexport const inventoryEntitiesReducer = (columns, selected) => (state = init, action) => {\n    switch (action.type) {\n        case 'LOAD_ENTITIES_FULFILLED':\n            return modifyInventory(columns, state, selected);\n        case 'SELECT_MULTIPLE_ENTITIES':\n            return selectEntities(state, selected);\n\n        default:\n            return state;\n    }\n};\n"],"sourceRoot":""}