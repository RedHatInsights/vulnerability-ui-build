{"version":3,"sources":["webpack:///./src/Components/SmartComponents/Systems/Systems.js","webpack:///./src/Components/SmartComponents/Systems/Systems.scss?4fb1","webpack:///./src/Components/SmartComponents/Systems/Systems.scss"],"names":["Systems","props","downloadReport","format","state","opt_out","filter","payload","fetchSystems","data_format","page","page_size","Number","MAX_SAFE_INTEGER","then","response","data","JSON","stringify","downloadFile","Date","toISOString","apply","config","setState","params","omit","fetchData","addFilter","param","value","type","newFilter","handleFilterChange","debounce","systems","meta","handleRefresh","perPage","per_page","handleOptOut","handleKebabToggle","isKebabOpen","handleKebabSelect","InventoryCmp","removeListener","columns","key","title","composed","isTime","this","fetchInventory","insights","loadInventory","react","React","reactRouterDom","reactCore","reactIcons","pfReactTable","inventoryConnector","mergeWithEntities","mergeWithDetail","ReducerRegistry","register","inventoryEntitiesReducer","InventoryTable","items","map","item","attributes","cve_count","rest","id","inventory_id","hasCheckbox","total","total_items","onRefresh","className","onFilterChange","buttonTitle","placeholder","onSelect","toggle","onToggle","isOpen","isPlain","dropdownItems","component","onClick","Component","propTypes","func","dataShape","withRouter","connect","sAllSystems","setHeader","header","dispatchAction","options","content","module","i","transform","undefined","locals","exports","push"],"mappings":"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","file":"js/Systems.js","sourcesContent":["import * as reactCore from '@patternfly/react-core';\nimport { Dropdown, DropdownItem, KebabToggle, Page, ToolbarGroup } from '@patternfly/react-core';\nimport * as reactIcons from '@patternfly/react-icons';\nimport * as pfReactTable from '@patternfly/react-table';\nimport { Main, SimpleTableFilter } from '@redhat-cloud-services/frontend-components';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport debounce from 'lodash/debounce';\nimport omit from 'lodash/omit';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as reactRouterDom from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport { dispatchAction } from '../../../Helpers/Dispatcher';\nimport { dataShape } from '../../../Helpers/MiscHelper';\nimport { fetchSystems, setHeader } from '../../../Store/Actions/Actions';\nimport { inventoryEntitiesReducer } from '../../../Store/Reducers/InventoryEntitiesReducer';\nimport { sAllSystems } from '../../../Store/Selectors/CVESelectors';\nimport ReducerRegistry from '../../../Utilities/ReducerRegistry';\nimport VulnerabilityHeader from '../VulnerabilityHeader/VulnerabilityHeader';\nimport './Systems.scss';\n\n/*eslint camelcase: 0*/\n\nclass Systems extends React.Component {\n    static propTypes = {\n        fetchData: propTypes.func,\n        systems: dataShape\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            InventoryCmp: () => <div>Loading...</div>,\n            filter: '',\n            removeListener: () => {},\n            columns: [\n                {\n                    key: 'display_name',\n                    title: 'Name',\n                    composed: ['facts.os_release', 'display_name']\n                },\n                {\n                    key: 'cve_count',\n                    title: 'Number of CVEs'\n                },\n                {\n                    key: 'updated',\n                    title: 'Last Seen',\n                    isTime: true\n                }\n            ],\n            opt_out: false,\n            isKebabOpen: false\n        };\n    }\n\n    componentDidMount() {\n        this.props.fetchData();\n        this.fetchInventory();\n    }\n\n    downloadReport = format => {\n        const { opt_out, filter } = this.state;\n        const { payload } =\n            fetchSystems({\n                opt_out,\n                filter,\n                data_format: format,\n                page: 1,\n                page_size: Number.MAX_SAFE_INTEGER\n            });\n        payload &&\n            payload.then(({ data: response }) => {\n                const data = format === 'json' ? JSON.stringify(response) : response;\n                return downloadFile(data, `systems-${new Date().toISOString()}`, format);\n            });\n    };\n\n    async fetchInventory() {\n        const { inventoryConnector, mergeWithEntities, mergeWithDetail } = await insights.loadInventory({\n            react: React,\n            reactRouterDom,\n            reactCore,\n            reactIcons,\n            pfReactTable\n        });\n        ReducerRegistry.register({\n            ...mergeWithEntities(inventoryEntitiesReducer(this.state.columns)),\n            ...mergeWithDetail()\n        });\n\n        this.setState({\n            InventoryCmp: inventoryConnector().InventoryTable\n        });\n        this.state.removeListener();\n    }\n\n    apply = (config = {}) => {\n        this.setState({ ...this.state, ...config }, () => {\n            const params = omit(this.state, ['InventoryCmp', 'columns', 'removeListener']);\n            this.props.fetchData(params);\n        });\n    };\n\n    addFilter = (param, value, type) => {\n        let newFilter;\n        if (type === 'radio' || param === 'show_all') {\n            newFilter = { [param]: value };\n        } else {\n            newFilter = this.state[param] ? { [param]: `${this.state[param]},${value}` } : { [param]: value };\n        }\n\n        this.apply({ ...newFilter, page: 1 });\n    };\n\n    handleFilterChange = debounce(value => {\n        const { meta } = this.props.systems;\n        const { page_size } = meta;\n        this.apply({ filter: value, page_size });\n    }, 400);\n\n    handleRefresh = ({ page, per_page: perPage }) => {\n        const { meta } = this.props.systems;\n        if (meta.page !== page || meta.page_size !== perPage) {\n            this.apply({\n                page: meta.page_size !== perPage ? 1 : page,\n                page_size: perPage,\n                filter: this.state.filter\n            });\n        }\n    };\n\n    handleOptOut = () => {\n        this.setState({\n            opt_out: !this.state.opt_out\n        });\n        this.handleFilterChange(this.state.filter);\n    };\n\n    handleKebabToggle = isKebabOpen => {\n        this.setState({\n            isKebabOpen\n        });\n    };\n\n    handleKebabSelect = () => {\n        this.setState({\n            isKebabOpen: !this.state.isKebabOpen\n        });\n    };\n\n    render() {\n        const { InventoryCmp } = this.state;\n        const { data, meta } = this.props.systems;\n        const items = data.map(item => {\n            const { cve_count, ...rest } = item.attributes;\n            return {\n                cve_count: (meta.opt_out && 'Excluded') || cve_count,\n                id: item.attributes.inventory_id,\n                ...rest\n            };\n        });\n        return (\n            <Page>\n                <VulnerabilityHeader />\n                <Main>\n                    <InventoryCmp\n                        hasCheckbox={false}\n                        page={meta.page}\n                        total={meta.total_items}\n                        perPage={meta.page_size}\n                        onRefresh={this.handleRefresh}\n                        items={items}\n                    >\n                        <ToolbarGroup className=\"systems-toolbar\">\n                            <div>\n                                <SimpleTableFilter\n                                    onFilterChange={this.handleFilterChange}\n                                    buttonTitle={null}\n                                    placeholder=\"Find a system by UUID\"\n                                />\n                            </div>\n                            <div>\n                                <Dropdown\n                                    onSelect={this.handleKebabSelect}\n                                    toggle={<KebabToggle onToggle={this.handleKebabToggle} />}\n                                    isOpen={this.state.isKebabOpen}\n                                    isPlain\n                                    dropdownItems={[\n                                        <DropdownItem key=\"opt_out\" component=\"button\" onClick={() => this.handleOptOut()}>\n                                            {this.state.opt_out\n                                                ? 'Hide systems excluded from analysis'\n                                                : 'Show systems excluded from analysis'}\n                                        </DropdownItem>,\n                                        <DropdownItem key=\"csv\" component=\"button\" onClick={() => this.downloadReport('csv')}>\n                                            Export as CSV\n                                        </DropdownItem>,\n                                        <DropdownItem key=\"json\" component=\"button\" onClick={() => this.downloadReport('json')}>\n                                            Export as JSON\n                                        </DropdownItem>\n                                    ]}\n                                />\n                            </div>\n                        </ToolbarGroup>\n                    </InventoryCmp>\n                </Main>\n            </Page>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        systems: sAllSystems(state)\n    };\n}\n\nconst mapDispatchToProps = () => {\n    return {\n        setHeader: header => dispatchAction(setHeader(header)),\n        fetchData: options => dispatchAction(fetchSystems(options))\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Systems)\n);\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./Systems.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./Systems.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./Systems.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".systems-toolbar > div {\\n  margin-right: var(--pf-global--spacer--sm); }\\n\\n.space-between-toolbar-items {\\n  justify-content: space-between;\\n  flex-wrap: nowrap; }\\n  .space-between-toolbar-items > div {\\n    flex-wrap: nowrap; }\\n\\n.vulnerability-toolbar-spacing {\\n  justify-content: flex-start; }\\n  .vulnerability-toolbar-spacing > div:not(:last-child) {\\n    margin-right: var(--pf-global--spacer--sm); }\\n\", \"\"]);\n\n// exports\n"],"sourceRoot":""}