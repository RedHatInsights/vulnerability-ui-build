{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/objectSpread.js","webpack:///./src/Helpers/CVEHelper.js","webpack:///./src/Store/Selectors/CVESelectors.js","webpack:///./node_modules/reselect/lib/index.js","webpack:///./src/Store/Reducers/InventoryEntitiesReducer.js","webpack:///./src/Components/SmartComponents/Systems/Systems.js"],"names":["defineProperty","__webpack_require__","module","exports","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","createExposedSystemsTable","affectedSystems","isLoading","payload","asMutable","data","meta","createMitreLink","item","react_default","a","createElement","href","d","__webpack_exports__","sCveDetailsPage","sExposedSystemsTable","sAllSystems","createSelector","state","CVEStore","cveDetails","cves","impact","attributes","public_date","MiscHelper","description","synopsis","package_list","map","rh_link","mitre_link","cvss3_score","affectedSystemsByCVE","SystemsStore","defaultEqualityCheck","b","defaultMemoize","func","equalityCheck","undefined","lastArgs","lastResult","prev","next","areArgumentsShallowlyEqual","apply","createSelectorCreator","memoize","_len","memoizeOptions","Array","_key","_len2","funcs","_key2","recomputations","resultFunc","pop","dependencies","isArray","every","dep","dependencyTypes","join","Error","getDependencies","memoizedResultFunc","selector","params","push","resetRecomputations","__esModule","createStructuredSelector","selectors","selectorCreator","objectKeys","_len3","values","_key3","reduce","composition","value","index","init","columns","rows","entities","inventoryEntitiesReducer","type","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","modifyInventory","Systems","props","_this","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3___default","this","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default","call","checkItem","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8___default","onRefresh","InventoryCmp","react__WEBPACK_IMPORTED_MODULE_13___default","removeListener","title","composed","isTime","_this2","setHeader","breadcrumbs","to","paths","vulnerabilities","isActive","fetchData","setState","middlewareListener","addNew","on","callback","fetchInventory","insights","loadInventory","react","React","reactRouterDom","reactCore","reactIcons","pfReact","PaginationRow","inventoryConnector","mergeWithEntities","mergeWithDetail","ReducerRegistry","register","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_1___default","InventoryTable","newList","systemList","selected","page","_ref2","perPage","per_page","systems","page_size","_this$props$systems","hasCheckbox","total","total_items","items","id","inventory_id","Component","propTypes","dataShape","withRouter","connect","header","dispatchAction","options","fetchSystems"],"mappings":"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","file":"js/Systems.js","sourcesContent":["var defineProperty = require(\"./defineProperty\");\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread;","import React from 'react';\nimport { createApiCall } from './APIHelper';\nimport * as MiscHelper from './MiscHelper';\n\nexport function getCveDetails(synopsis) {\n    let endpoint = '/cves/' + synopsis + '/details/';\n    let result = createApiCall(endpoint, 'get');\n    return result;\n}\n\nexport function getAffectedSystemsByCVE(synopsis) {\n    let endpoint = '/cves/' + synopsis + '/affectedsystems/';\n    let result = createApiCall(endpoint, 'get');\n    return result;\n}\n\nexport function createExposedSystemsTable(affectedSystems) {\n    // TODO: Use correct API format instead this one\n    let isLoading = affectedSystems.isLoading;\n    if (!isLoading) {\n        let payload = affectedSystems.payload.asMutable();\n        let { data, meta } = payload;\n        return { data, meta, isLoading };\n    }\n\n    return { data: [], meta: {}, isLoading };\n}\n\nexport function createCveDetailsPage(cves) {\n    let isLoading = cves.isLoading;\n    if (!isLoading) {\n        let payload = cves.payload.asMutable();\n        let { data, meta } = payload;\n\n        data = {\n            impact: data.attributes.impact,\n            public_date: MiscHelper.processDate(data.attributes.public_date),\n            description: data.attributes.description,\n            synopsis: data.attributes.synopsis,\n            package_list: data.attributes.package_list.map(item => <li key={item}>{item}</li>),\n            rh_link: createRHDBLink(data.attributes.synopsis),\n            mitre_link: createMitreLink(data.attributes.synopsis),\n            cvss3_score: data.attributes.cvss3_score\n        };\n        return { data, meta, isLoading };\n    }\n\n    return { data: [], meta: {}, isLoading };\n}\n\nfunction createRHDBLink(item) {\n    return <a href={'https://access.redhat.com/security/cve/' + item}>Red Hat CVE Database</a>;\n}\n\nfunction createMitreLink(item) {\n    return <a href={'https://cve.mitre.org/cgi-bin/cvename.cgi?name=' + item}>MITRE Database</a>;\n}\n","import { createSelector } from 'reselect';\nimport { createCveDetailsPage, createExposedSystemsTable } from '../../Helpers/CVEHelper';\n\nconst cveListWithSystemsSelector = state => state.CVEStore.affectedSystemsByCVE;\nconst systemsListAllSelector = state => state.SystemsStore;\nconst cveDetailsPageSelector = state => state.CVEStore.cveDetails;\n\nexport const sCveDetailsPage = createSelector(\n    [cveDetailsPageSelector],\n    createCveDetailsPage\n);\nexport const sExposedSystemsTable = createSelector(\n    [cveListWithSystemsSelector],\n    createExposedSystemsTable\n);\n\nexport const sAllSystems = createSelector(\n    [systemsListAllSelector],\n    createExposedSystemsTable\n);\n","'use strict';\n\nexports.__esModule = true;\nexports.defaultMemoize = defaultMemoize;\nexports.createSelectorCreator = createSelectorCreator;\nexports.createStructuredSelector = createStructuredSelector;\nfunction defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nfunction createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = defaultMemoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nvar createSelector = exports.createSelector = createSelectorCreator(defaultMemoize);\n\nfunction createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","// Initial State\nconst init = {\n    columns: [],\n    rows: [],\n    entities: []\n};\n// Reducer\n\nfunction modifyInventory(columns, state) {\n    return { ...state, columns };\n}\n\nexport const inventoryEntitiesReducer = columns => (state = init, action) => {\n    switch (action.type) {\n        case 'LOAD_ENTITIES_FULFILLED':\n            return modifyInventory(columns, state);\n\n        default:\n            return state;\n    }\n};\n","import * as reactCore from '@patternfly/react-core';\nimport * as reactIcons from '@patternfly/react-icons';\nimport { PaginationRow } from 'patternfly-react';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as reactRouterDom from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport { dispatchAction } from '../../../Helpers/Dispatcher';\nimport { dataShape } from '../../../Helpers/MiscHelper';\nimport { fetchSystems, setHeader } from '../../../Store/Actions/Actions';\nimport { inventoryEntitiesReducer } from '../../../Store/Reducers/InventoryEntitiesReducer';\nimport { sAllSystems } from '../../../Store/Selectors/CVESelectors';\nimport ReducerRegistry, { middlewareListener } from '../../../Utilities/ReducerRegistry';\nimport { paths } from '../../../Utilities/Routes';\n\nclass Systems extends React.Component {\n    constructor(props) {\n        super(props);\n        this.checkItem = this.checkItem.bind(this);\n        this.onRefresh = this.onRefresh.bind(this);\n        this.state = {\n            InventoryCmp: () => <div>Loading...</div>,\n            removeListener: () => {},\n            columns: [\n                { key: 'display_name', title: 'Name', composed: ['facts.os_release', 'fqdn'] },\n                { key: 'cve_count', title: 'CVEs' },\n                { key: 'updated', title: 'Last Seen', isTime: true }\n            ]\n        };\n    }\n\n    componentDidMount() {\n        this.props.setHeader({\n            title: 'Systems',\n            breadcrumbs: [{ title: 'Vulnerability', to: paths.vulnerabilities }, { title: 'Systems', isActive: true }]\n        });\n        this.props.fetchData();\n        this.setState({\n            removeListener: middlewareListener.addNew({\n                on: 'SYSTEMS_ALL_FULFILLED',\n                callback: () => this.fetchInventory()\n            })\n        });\n    }\n\n    async fetchInventory() {\n        const { inventoryConnector, mergeWithEntities, mergeWithDetail } = await insights.loadInventory({\n            react: React,\n            reactRouterDom,\n            reactCore,\n            reactIcons,\n            pfReact: { PaginationRow }\n        });\n        ReducerRegistry.register({\n            ...mergeWithEntities(inventoryEntitiesReducer(this.state.columns)),\n            ...mergeWithDetail()\n        });\n\n        this.setState({\n            InventoryCmp: inventoryConnector().InventoryTable\n        });\n        this.state.removeListener();\n    }\n\n    checkItem(key, value) {\n        let newList = this.state.systemList;\n        newList[key].selected = value;\n        this.setState({ systemList: newList });\n    }\n\n    onRefresh({ page, per_page: perPage }) {\n        const { meta } = this.props.systems;\n        if (meta.page !== page || meta.page_size !== perPage) {\n            this.props.fetchData({\n                page: meta.page_size !== perPage ? 1 : page,\n                page_size: perPage\n            });\n        }\n    }\n\n    render() {\n        const { InventoryCmp } = this.state;\n        const { data, meta } = this.props.systems;\n        return (\n            <InventoryCmp\n                hasCheckbox={false}\n                page={meta.page}\n                total={meta.total_items}\n                perPage={meta.page_size}\n                onRefresh={this.onRefresh}\n                items={data.map(item => ({\n                    id: item.attributes.inventory_id,\n                    ...item.attributes\n                }))}\n            />\n        );\n    }\n}\n\nSystems.propTypes = {\n    fetchData: propTypes.func,\n    setHeader: propTypes.func,\n    systems: dataShape\n};\n\nfunction mapStateToProps(state) {\n    return {\n        systems: sAllSystems(state)\n    };\n}\n\nconst mapDispatchToProps = () => {\n    return {\n        setHeader: header => dispatchAction(setHeader(header)),\n        fetchData: (options) => dispatchAction(fetchSystems(options))\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(Systems)\n);\n"],"sourceRoot":""}