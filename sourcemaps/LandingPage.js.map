{"version":3,"sources":["webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/SecurityRuleFilter.js","webpack:///./node_modules/lodash/unionWith.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/StatusFilter.js","webpack:///./src/Components/SmartComponents/Modals/BusinessRiskModal.js","webpack:///./src/Components/SmartComponents/Modals/CveStatusModal.js","webpack:///./src/Components/PresentationalComponents/PaginationWrapper/PaginationWrapper.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/PublishDateFilter.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/CvssBaseScoreFilter.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/ImpactFilter.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/BusinessRiskFilter.js","webpack:///./src/Components/SmartComponents/CVEs/CVEsTable.js","webpack:///./src/Components/SmartComponents/CVEs/CVEsTableToolbar.js","webpack:///./src/Components/SmartComponents/CVEs/CVEs.js","webpack:///./src/Components/SmartComponents/LandingPage/LandingPage.js","webpack:///./node_modules/dot/doT.js","webpack:///./src/Store/ActionTypes.js","webpack:///./src/Helpers/MiscHelper.js","webpack:///./src/Utilities/interceptors.js","webpack:///./src/Helpers/APIHelper.js","webpack:///./src/Store/Reducers/BreadcrumbStore.js","webpack:///./src/Store/Reducers/CVEDetailsPageStore.js","webpack:///./src/Store/Reducers/SystemCvesStore.js","webpack:///./src/Store/Reducers/SystemsPageStore.js","webpack:///./src/Store/Reducers/CVEsStore.js","webpack:///./src/Store/Actions/Actions.js","webpack:///./node_modules/seamless-immutable/seamless-immutable.development.js","webpack:///./src/Components/SmartComponents/Modals/BaseModal.js","webpack:///./src/Components/SmartComponents/InsightsSystemRule/InsightsSystemRule.js","webpack:///./src/Helpers/CVEHelper.js","webpack:///./src/Helpers/selectAllCheckboxHelper.js","webpack:///./node_modules/lodash/union.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/SearchFilter.js","webpack:///./src/Helpers/TableToolbarHelper.js","webpack:///./src/Helpers/DownloadReport.js","webpack:///./src/Components/PresentationalComponents/EmptyStates/EmptyStates.js"],"names":["securityRuleFilter","apply","currentFilter","dynamicFilters","currentValue","security_rule","filterBySecurityRule","values","page","label","intl","formatMessage","messages","securityRules","type","conditionalFilterType","radio","urlParam","filterValues","onChange","event","value","items","unionWith","SECURITY_RULE_OPTIONS","isEqual","map","item","baseFlatten","baseRest","baseUniq","isArrayLikeObject","last","arrays","comparator","undefined","module","exports","statusFilter","status_id","filterByStatus","length","filter","join","status","checkbox","STATUS_OPTIONS","split","BusinessRiskModal","cves","updateRef","useState","cveList","businessRiskId","setBusinessRiskId","setLabel","getDefaultLabel","useCallback","justification","useEffect","business_risk_id","toString","handleOnRadioChange","_","currentTarget","successNotification","variant","title","businessRiskUpdateSuccessful","count","onSave","setBusinessRisk","parseInt","cve","id","business_risk_text","then","onSuccessNotification","businessRiskModalTitle","hasGutter","businessRiskModalInfo","businessRiskLabel","fieldId","BUSINESS_RISK_OPTIONS","className","isChecked","key","name","aria-label","justificationLabel","resizeOrientation","propTypes","array","func","any","injectIntl","CveStatusModal","useStatusSelect","StatusSelect","statusId","useJustificationInput","JustificationInput","checkboxState","setCheckboxState","cveStatusModalUpdateSuccessful","cveStatusModalTitle","cveIds","setCveStatus","status_text","setSystemCveStatus","cveStatusModalSelected","cveId","b","chunks","fontSize","color","cveStatusModalInfo","trigger","content","cveStatusModalInfoTooltip","Fragment","style","verticalAlign","cveStatusModalOverwriteCheckbox","checked","cveStatusModalOverwriteTooltip","PaginationWrapper","handleChangePage","_event","pageNumber","props","handleSetPageSize","perPage","page_size","nextProps","meta","this","totalItems","total_items","pageSize","itemCount","DEFAULT_PAGE_SIZE","onSetPage","onPerPageSelect","PaginationVariant","Component","object","string","defaultProps","publishDateFilter","publish_date","filterByPublishDate","publishDate","PUBLIC_DATE_OPTIONS","cvssBaseScoreFilter","cvss_filter","filterByCvssScore","cvssBaseScore","CVSS_OPTIONS","impactFilter","impact","filterByImpact","IMPACT_OPTIONS","hasIcon","iconColor","businessRiskFilter","filterByBusinessRisk","businessRisk","CVEsTableWithContext","context","header","entity","methods","selectedCves","openedCves","isEmpty","data","rows","includes","selected","index","isOpen","isLoading","SkeletonTable","colSize","rowSize","Table","canSelectAll","cells","heightAuto","colSpan","Object","prototype","hasOwnProperty","call","FilterNotFoundForCVE","EmptyCVEListForSystem","EmptyCVEList","noCves","onSelect","isSelected","rowId","cveName","selectCves","onCollapse","rowKey","openCves","actionResolver","rowData","rowIndex","cveTableRowActions","sortBy","createSortBy","sort","onSort","direction","handleSortColumn","gridBreakPoint","TableToolbar","CVEsTable","CVETableContext","Consumer","CVEsTableToolbarWithContext","params","expandCveDescription","selectedCvesCount","selectOptions","selectAllCheckbox","selectedItems","selectorHandler","fetchResource","ops","fetchCvesIds","multiRow","actions","editBusinessRisk","onClick","showBusinessRiskModal","isDisabled","editStatus","showStatusModal","show_all","hideCvesNoEffecting","showCvesAffecting","kebabCollapseCves","kebabExpandCves","PrimaryToolbar","pagination","actionsConfig","kebabToggleProps","bulkSelect","Boolean","handleOnCheckboxChange","filterConfig","searchFilter","searchFilterByCveID","activeFiltersConfig","filters","buildActiveFilters","onDelete","e","i","removeFilters","exportConfig","totalNumber","downloadReport","React","createContext","CVEs","dispatch","useDispatch","setStatusModal","CveBusinessRiskModal","setBusinessRiskModal","urlParamsAllowed","setUrlParamsAllowed","isFirstLoad","setIsFirstLoad","useSelector","CVEsStore","parameters","useMemo","createCveListByAccount","useCreateUrlParams","CVES_ALLOWED_PARAMS","createUrlParams","urlParameters","filterParams","constructFilterParameters","changeCveListParameters","fetchCveListByAccount","clearCVEsStore","errors","GenericError","Provider","format","DownloadReport","exec","cveNames","selectCve","cvesList","expandCve","Stack","StackItem","showAllCheckbox","VULNERABILITIES_HEADER","LandingPage","VulnerabilityHeader","showBreadcrumb","Main","_globals","doT","version","templateSettings","evaluate","interpolate","encode","use","useParams","define","defineParams","conditional","iterate","varname","strip","append","selfcontained","doNotSkipEncoded","template","compile","log","encodeHTMLSource","encodeHTMLRules","matchHTML","code","replace","m","eval","startend","start","end","startencode","skip","unescape","tmpl","c","def","needhtmlencode","indv","cse","sid","str","resolveDefs","block","assign","indexOf","substring","param","v","arg","text","Function","s","d","rw","__exp","RegExp","elsecase","vname","iname","_encodeHTML","console","FETCH_CVE_LIST","FETCH_CVE_DETAILS","HANDLE_CVE_DETAILS_ERROR","FETCH_SYSTEM_DETAILS","FETCH_AFFECTED_SYSTEMS_BY_CVE","FETCH_SYSTEMS","SET_HEADER","SYSTEM_OPT_OUT","FETCH_SYSTEM_CVE_LIST","CHANGE_SYSTEM_CVE_STATUS","CHANGE_EXPOSED_SYSTEMS_PARAMETERS","CHANGE_CVE_LIST_PARAMETERS","SELECT_CVE","SELECT_SYSTEM_CVE","SELECT_ENTITIES","SELECT_MULTIPLE_ENTITIES","EXPAND_CVE","EXPAND_ROW","EXPAND_SYSTEM_CVE","CHANGE_SYSTEMS_PARAMS","CHANGE_SYSTEM_CVE_LIST_PARAMETERS","CLEAR_SYSTEMS_STORE","CLEAR_SYSTEM_CVES_STORE","CLEAR_CVE_STORE","CLEAR_INVENTORY_STORE","CLEAR_CVES_STORE","FETCH_AFFECTED_SYSTEM_IDS_BY_CVE","FETCH_SYSTEMS_IDS","FETCH_CVE_LIST_IDS","FETCH_SYTEM_DETAILS_IDS","dataShape","shape","oneOfType","bool","constructParameters","apiProps","allowedParams","keys","forEach","constructURLParameters","urlParams","formatDate","date","Date","prepend","number","toFormat","isNaN","year","getFullYear","month","getMonth","day","getDate","cvssEntry","find","parseFloat","from","to","cvss_from","cvss_to","publicEntry","public_from","public_to","getImpactDetails","impactList","titleContent","size","impactColorList","unknown","SortByDirection","desc","asc","findIndex","currentSort","columnName","useDefault","substr","window","history","pushState","location","pathname","qs","stringify","parse","search","pages","cvesCount","instance","axios","create","interceptors","request","authInterceptor","response","responseDataInterceptor","interceptor401","error","ReadOnlyNotification","err","isCancel","errObject","api","GitApi","getCveDetails","synopsis","getSystemDetails","system","getAffectedSystemsByCVE","parameterArray","getAffectedSystemsByCve","getSystems","getSystemsList","getCveListByAccount","getCveList","optOutSystem","setSystemOptOut","getCveListBySystem","setStatus","optOutSystems","systems","optOut","opt_out","inventory_id","Array","setSystemsOptOut","setCveBusinessRisk","getExecutiveReport","getAffectedSystemsIdsByCve","getSystemsIds","getCveIdsList","getCveIdsBySystem","initialState","Immutable","breadcrumbs","affectedSystemsByCVE","openedRows","payload","selectedHosts","cveDetails","SystemCvesStore","applyReducerHash","state","timestamp","action","newState","slice","isArray","splice","push","element","metadata","limit","offet","isValid","stateTimestamp","actionTimestamp","ReducerRegistry","register","CVEDetailsPageStore","ActionTypes","setIn","SystemsPageStore","BreadcrumbStore","set","setHeader","Promise","resolve","HeaderHelper","result","fetchAffectedSystemsByCVE","APIHelper","fetchSystems","options","fetchCveDetails","handleCveDetailsError","fetchSystemDetails","noError","optOutSystemAction","fetchCveListBySystem","optOutSystemsAction","changeExposedSystemsParameters","changeSystemCVEsParameters","selectSystemCve","expandSystemCve","expandRow","selectMultipleEntities","changeSystemsParams","clearSystemStore","clearSystemCvesStore","clearCveStore","fetchAffectedSystemsIdsByCve","fetchSystemsIds","fetchSystemDetailsIds","clearInventoryStore","immutableInit","config","REACT_ELEMENT_TYPE","Symbol","for","globalConfig","use_static","instantiateEmptyObject","obj","getPrototypeOf","addPropertyTo","target","methodName","defineProperty","enumerable","configurable","writable","banProperty","ImmutableError","isImmutable","getOwnPropertyDescriptor","a","isMergableObject","mutatingObjectMethods","mutatingArrayMethods","concat","nonMutatingArrayMethods","mutatingDateMethods","message","stack","Error","makeImmutable","bannedMethods","freeze","makeMethodReturnImmutable","currentMethod","arguments","arraySet","idx","deep","merge","mode","mutable","asMutableArray","makeImmutableArray","constructor","immutableEmptyArray","arraySetIn","pth","head","newValue","tail","thisHead","nextHead","isFinite","objectSetIn","immutableEmptyObject","flatMap","asObject","update","updateIn","getIn","asMutableDate","getTime","iterator","iteratorResult","without","remove","keysToRemoveArray","el","arr","val","makeImmutableObject","opts","asDeepMutable","pair","asMutable","quickCopy","src","dest","other","TypeError","JSON","receivedArray","merger","addToResult","currentObj","otherObj","immutableValue","mergerResult","clearDroppedKeys","otherFromArray","objectReplace","fnObject","fnArray","fnDate","path","objectSet","property","updater","restArgs","initialVal","getInPath","l","defaultValue","asMutableObject","instantiatePlainObject","stackRemaining","$$typeof","isReactElement","File","isFileObject","Blob","isBlobObject","isError","isPromise","clone","toStatic","fn","args","self","shift","toStaticObjectOrArray","static","initialValue","setStatusId","setProps","statusLabel","selection","setJustification","BaseModal","targetItems","setTargetItems","handleClose","clearNotifications","onClose","notification","addNotification","save","cancel","children","connect","InsightsSystemRule","rule","TextContent","Text","component","TextVariants","h3","paddingLeft","Label","Tooltip","rulesIconTooltip","CSAwIcon","description","rule_id","InsightsReportCard","report","PropType","details","resulotion","isRequired","InsightsNoSystemRule","p","exposedSystemNoRules","exposedSystemNoRulesInfo","rel","href","exposedSystemNoRulesInfoLink","createExposedSystemsTable","attributes","status_name","createSystemsListTable","affectedSystems","cve_status_id","onlyThisSystemCvePair","option","createCveDetailsPage","public_date","processDate","rh_link","RHDBLink","mitre_link","createMitreLink","cvss3_score","cvss2_score","cvss2_metrics","cvss3_metrics","business_risk","business_risk_justification","status_justification","systems_status_detail","systems_status_divergent","rules","MITRELink","systemCveTableRowActions","display_name","cve_justification","cve_status_justification","systemExposedTableRowActions","systemTableRowActions","isOptOut","kebabResumeAnalysis","kebabExcludeAnalysis","selectedItemsArray","selectedItemsCount","selectPageNumber","handleUnselectAll","handleSelectAll","selectNone","selectPage","collectedItems","union","selectAll","SearchFilter","placeholder","searchValue","setSearchValue","debounce","handleSearch","fileType","currentFilters","filterRulevalues","buildChip","parameter","FILTERS","reduce","filteredRule","buildChips","paramValues","filterChips","multiValue","filteredValues","category","chips","searchLabel","some","chip","filename","defaultParams","checkTypes","fetchData","formats","data_format","downloadFile","Number","MAX_SAFE_INTEGER","toISOString","height","EmptyStateVariant","large","headingLevel","emptyStateNoMatchingCves","whiteSpace","emptyStateMaybeFollowing","emptyStateNoCveReported","emptyStateForMoreInfo","emptyStateForMoreLink","FilterNotFoundForSystem","emptyStateNoCvesReported","emptyStateIfCveForSystem","emptyStateNoReportedSystem","emptyStateNoCveAffects","EmptyExcludedSystem","buttonAction","icon","SecurityIcon","emptyStateSystemExcludedTitle","emptyStateSystemExcludedBody","emptyStateSystemResumeAnalysis","emptyStateIfCveForSystems","EmptyVulnerabilityData","CubesIcon","emptyStateNoData","emptyStateActivateInsights","emptyStateLearnInsights","errorReload"],"mappings":"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","file":"js/LandingPage.js","sourcesContent":["\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components';\nimport { SECURITY_RULE_OPTIONS } from '../../../../Helpers/constants';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\nimport unionWith from 'lodash/unionWith';\nimport isEqual from 'lodash/isEqual';\n\nconst securityRuleFilter = (apply, currentFilter = {}, dynamicFilters = []) => {\n    let { security_rule: currentValue } = currentFilter;\n    if (currentValue === '' || !currentValue) {\n        currentValue = 'all';\n    }\n\n    const filterBySecurityRule = values => {\n        apply({ security_rule: values === 'all' ? '' : values, page: 1 });\n    };\n\n    return {\n        label: intl.formatMessage(messages.securityRules),\n        type: conditionalFilterType.radio,\n        urlParam: 'security_rule',\n        filterValues: {\n            onChange: (event, value) => {\n                filterBySecurityRule(value);\n            },\n            items:\n                unionWith(SECURITY_RULE_OPTIONS, dynamicFilters, isEqual).map(item => ({ label: item.label, value: item.value })),\n            value: currentValue\n        }\n    };\n};\n\nexport default securityRuleFilter;\n","var baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    baseUniq = require('./_baseUniq'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    last = require('./last');\n\n/**\n * This method is like `_.union` except that it accepts `comparator` which\n * is invoked to compare elements of `arrays`. Result values are chosen from\n * the first array in which the value occurs. The comparator is invoked\n * with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.unionWith(objects, others, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n */\nvar unionWith = baseRest(function(arrays) {\n  var comparator = last(arrays);\n  comparator = typeof comparator == 'function' ? comparator : undefined;\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n});\n\nmodule.exports = unionWith;\n","\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components';\nimport { STATUS_OPTIONS } from '../../../../Helpers/constants';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\n\nconst statusFilter = (apply, currentFilter = {}) => {\n\n    let { status_id: currentValue } = currentFilter;\n\n    const filterByStatus = values => {\n        apply({ status_id: (values.length > '0' && values.filter(value => value !== ',').join(',')) || '', page: 1 });\n    };\n\n    return {\n        label: intl.formatMessage(messages.status),\n        type: conditionalFilterType.checkbox,\n        filterValues: {\n            onChange: (event, value) => {\n                filterByStatus(value);\n            },\n            items: STATUS_OPTIONS.map(item => ({ label: item.label, value: item.value })),\n            value: (currentValue ? currentValue.split(',') : [])\n        }\n    };\n};\n\nexport default statusFilter;\n","import { Form, FormGroup, Radio, Stack, StackItem, TextArea } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { setBusinessRisk } from '../../../Helpers/APIHelper';\nimport { BUSINESS_RISK_OPTIONS } from '../../../Helpers/constants';\nimport BaseModal from './BaseModal';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nexport const BusinessRiskModal = ({ cves, updateRef, intl }) => {\n    const [cveList] = useState(cves);\n    const [businessRiskId, setBusinessRiskId] = useState('0');\n    const [label, setLabel] = useState();\n\n    const getDefaultLabel = useCallback(() => {\n        setLabel((cveList && cveList.length === 1 && cveList[0].justification) || '');\n    }, [cveList]);\n\n    useEffect(() => {\n        const getDefaultBusinessRisk = () => {\n            setBusinessRiskId((cveList && cveList.length === 1 && cveList[0].business_risk_id.toString()) || '0');\n        };\n\n        getDefaultBusinessRisk();\n        getDefaultLabel();\n    }, [cves, getDefaultLabel, cveList]);\n\n    useEffect(getDefaultLabel, [cves]);\n\n    const handleOnRadioChange = (_, event) => {\n        const { value } = event.currentTarget;\n        setBusinessRiskId(value);\n    };\n\n    const handleOnLabelChange = value => {\n        setLabel(value);\n    };\n\n    const handleSave = () => {\n        return setBusinessRisk({\n            business_risk_id: parseInt(businessRiskId),\n            cve: cveList.map(item => item.id),\n            business_risk_text: label\n        }).then(updateRef);\n    };\n\n    const successNotification = {\n        variant: 'success',\n        title: intl.formatMessage(messages.businessRiskUpdateSuccessful, { count: cveList.length || 0 })\n    };\n\n    return (\n        <BaseModal\n            items={cveList}\n            onSave={handleSave}\n            onSuccessNotification={successNotification}\n            title={intl.formatMessage(messages.businessRiskModalTitle)}\n        >\n            <Stack hasGutter>\n                <StackItem>\n                    {intl.formatMessage(messages.businessRiskModalInfo)}\n                </StackItem>\n                <StackItem>\n                    <Form>\n                        <FormGroup label={intl.formatMessage(messages.businessRiskLabel)} fieldId={'businessRiskId'}>\n                            {BUSINESS_RISK_OPTIONS.map(item => (\n                                <Radio\n                                    className={'business-risk-radio'}\n                                    value={item.value}\n                                    isChecked={businessRiskId === item.value}\n                                    onChange={handleOnRadioChange}\n                                    label={item.label}\n                                    key={item.value}\n                                    id={item.value}\n                                    name={item.label}\n                                    aria-label={item.label}\n                                />\n                            ))}\n                        </FormGroup>\n                        <FormGroup label={intl.formatMessage(messages.justificationLabel)} fieldId={'label'}>\n                            <TextArea\n                                type=\"text\"\n                                onChange={handleOnLabelChange}\n                                value={label}\n                                resizeOrientation='vertical'\n                                aria-label={'justification'}\n                            />\n                        </FormGroup>\n                    </Form>\n                </StackItem>\n            </Stack>\n        </BaseModal>\n    );\n};\n\nBusinessRiskModal.propTypes = {\n    cves: propTypes.array,\n    updateRef: propTypes.func,\n    intl: propTypes.any\n};\n\nexport default injectIntl(BusinessRiskModal);\n","import { Checkbox, Form, FormGroup, Split, SplitItem, Stack, StackItem, Tooltip } from '@patternfly/react-core';\nimport { InfoCircleIcon, OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport propTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { setCveStatus, setSystemCveStatus } from '../../../Helpers/APIHelper';\nimport BaseModal, { useJustificationInput, useStatusSelect } from './BaseModal';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nexport const CveStatusModal = ({ cves, updateRef, intl }) => {\n    const [cveList] = useState(cves);\n    const { StatusSelect, statusId } = useStatusSelect(getDefaultStatus());\n    const { JustificationInput, justification } = useJustificationInput(getDefaultLabel());\n    const [checkboxState, setCheckboxState] = useState(false);\n\n    const handleSave = () => {\n        const cveIds = cveList.map(item => item.id);\n        return setCveStatus({\n            status_id: parseInt(statusId),\n            cve: cveIds,\n            status_text: justification\n        })\n        .then(() => !checkboxState && setSystemCveStatus({ cve: cveIds }))\n        .then(updateRef);\n    };\n\n    function getDefaultStatus() {\n        return (cveList && cveList.length === 1 && cveList[0].status_id.toString()) || '0';\n    }\n\n    function getDefaultLabel() {\n        return (cveList && cveList.length === 1 && cveList[0].justification) || '';\n    }\n\n    const successNotification = {\n        variant: 'success',\n        title: intl.formatMessage(messages.cveStatusModalUpdateSuccessful, { count: cveList.length || 0 })\n    };\n    const title = intl.formatMessage(messages.cveStatusModalTitle, { count: cveList.length || 0 });\n\n    return (\n        <BaseModal items={cveList} onSave={handleSave} onSuccessNotification={successNotification} title={title}>\n            <Stack hasGutter>\n                <StackItem>\n                    {intl.formatMessage(\n                        messages.cveStatusModalSelected,\n                        {\n                            count: cveList.length || 0,\n                            cveId: cveList[0].id, // only used when length is 1\n                            b: (...chunks) => <b>{chunks}</b> // explicitly specifying what is wrapped <b> should be bold\n                        }\n                    )}\n                </StackItem>\n                <StackItem>\n                    <InfoCircleIcon\n                        className=\"pf-u-mr-xs\"\n                        fontSize=\"var(--pf-global--FontSize--md)\"\n                        color=\"var(--pf-global--active-color--300)\"\n                    />\n                    {intl.formatMessage(messages.cveStatusModalInfo, { count: cveList.length || 0 })}\n                    <Tooltip\n                        trigger='mouseenter focus click'\n                        content={intl.formatMessage(messages.cveStatusModalInfoTooltip)}\n                    >\n                        <React.Fragment>\n                            <OutlinedQuestionCircleIcon\n                                className=\"pf-u-ml-xs\"\n                                color=\"var(--pf-global--Color--200)\"\n                                style={{ verticalAlign: '-0.125em' }}\n                            />\n                        </React.Fragment>\n                    </Tooltip>\n                </StackItem>\n                <StackItem>\n                    <Form key=\"key\">\n                        {StatusSelect}\n                        {JustificationInput}\n                        <FormGroup fieldId={'overwrite'}>\n                            <Split>\n                                <SplitItem>\n                                    <Checkbox\n                                        label={intl.formatMessage(messages.cveStatusModalOverwriteCheckbox)}\n                                        id=\"alt-form-checkbox-1\"\n                                        name=\"alt-form-checkbox-1\"\n                                        isChecked={checkboxState}\n                                        onChange={checked => setCheckboxState(checked)}\n                                    />\n                                </SplitItem>\n                                <SplitItem>\n                                    <Tooltip\n                                        trigger='mouseenter focus click'\n                                        content={intl.formatMessage(messages.cveStatusModalOverwriteTooltip)}\n                                    >\n                                        <OutlinedQuestionCircleIcon\n                                            className=\"pf-u-ml-xs\"\n                                            color=\"var(--pf-global--Color--200)\"\n                                            style={{ verticalAlign: '0' }}\n                                        />\n                                    </Tooltip>\n                                </SplitItem>\n                            </Split>\n                        </FormGroup>\n                    </Form>\n                </StackItem>\n            </Stack>\n        </BaseModal>\n    );\n};\n\nCveStatusModal.propTypes = {\n    cves: propTypes.array,\n    updateRef: propTypes.func,\n    intl: propTypes.any\n};\n\nexport default injectIntl(CveStatusModal);\n","\nimport { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { DEFAULT_PAGE_SIZE } from '../../../Helpers/constants';\n\nclass PaginationWrapper extends Component {\n    static propTypes = {\n        apply: propTypes.func,\n        meta: propTypes.object,\n        variant: propTypes.string\n    };\n\n    static defaultProps = {\n        variant: 'top'\n    };\n    shouldComponentUpdate(nextProps) {\n        if (nextProps.meta === this.props.meta) {\n            return false;\n        }\n\n        return true;\n    }\n    handleChangePage = (_event, pageNumber) => this.props.apply({ page: pageNumber });\n\n    handleSetPageSize = (_event, perPage) => this.props.apply({ page_size: perPage, page: 1 });\n\n    render() {\n        const { meta, variant } = this.props;\n        const { page, total_items: totalItems, page_size: pageSize } = meta;\n        return (\n            <React.Fragment>\n                <Pagination\n                    page={page || 1}\n                    itemCount={totalItems || 0}\n                    perPage={pageSize || DEFAULT_PAGE_SIZE}\n                    onSetPage={this.handleChangePage}\n                    onPerPageSelect={this.handleSetPageSize}\n                    variant={PaginationVariant[variant]}\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default PaginationWrapper;\n","\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components';\nimport { PUBLIC_DATE_OPTIONS } from '../../../../Helpers/constants';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\n\nconst publishDateFilter = (apply, currentFilter = {}) => {\n    let { publish_date: currentValue } = currentFilter;\n\n    // Empty string value is not supported by PF Radio at the moment\n    if (currentValue === '' || !currentValue) {\n        currentValue = '0';\n    }\n\n    const filterByPublishDate = value => {\n        apply({ publish_date: (value !== '0' && value) || '', page: 1 });\n    };\n\n    return {\n        label: intl.formatMessage(messages.publishDate),\n        type: conditionalFilterType.radio,\n        urlParam: 'publish_date',\n        filterValues: {\n            onChange: (event, value) => {\n                filterByPublishDate(value);\n            },\n            items: PUBLIC_DATE_OPTIONS.map(item => ({ label: item.label, value: item.value })),\n            value: currentValue\n        }\n    };\n};\n\nexport default publishDateFilter;\n","\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components';\nimport { CVSS_OPTIONS } from '../../../../Helpers/constants';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\n\nconst cvssBaseScoreFilter = (apply, currentFilter = {}) => {\n    let { cvss_filter: currentValue } = currentFilter;\n\n    // Empty string value is not supported by PF Radio at the moment\n    if (currentValue === '' || !currentValue) {\n        currentValue = '0';\n    }\n\n    const filterByCvssScore = value => {\n        apply({ cvss_filter: (value !== '0' && value) || '', page: 1 });\n    };\n\n    return {\n        label: intl.formatMessage(messages.cvssBaseScore),\n        type: conditionalFilterType.radio,\n        urlParam: 'cvss_filter',\n        filterValues: {\n            onChange: (event, value) => {\n                filterByCvssScore(value);\n            },\n            items: CVSS_OPTIONS.map(item => ({ label: item.label, value: item.value })),\n            value: currentValue\n        }\n    };\n};\n\nexport default cvssBaseScoreFilter;\n","\nimport React from 'react';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components';\nimport { IMPACT_OPTIONS } from '../../../../Helpers/constants';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\nimport { SecurityIcon } from '@patternfly/react-icons';\n\nconst impactFilter = (apply, currentFilter = {}) => {\n    let { impact: currentValue } = currentFilter;\n\n    const filterByImpact = values => {\n        apply({ impact: (values.length > '0' && values.filter(value => value !== ',').join(',')) || '', page: 1 });\n    };\n\n    return {\n        label: intl.formatMessage(messages.impact),\n        type: conditionalFilterType.checkbox,\n        urlParam: 'impact',\n        filterValues: {\n            onChange: (event, value) => {\n                filterByImpact(value);\n            },\n            items: IMPACT_OPTIONS.map(item => ({\n                label: (\n                    <React.Fragment>\n                        { item.hasIcon && <SecurityIcon className=\"pf-u-mr-xs\" color={item.iconColor}/> }\n                        {item.label}\n                    </React.Fragment>\n                ),\n                value: item.value\n            })),\n            value: (currentValue ? currentValue.split(',') : [])\n        }\n    };\n};\n\nexport default impactFilter;\n","\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components';\nimport { BUSINESS_RISK_OPTIONS } from '../../../../Helpers/constants';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\n\nconst businessRiskFilter = (apply, currentFilter = {}) => {\n    let { business_risk_id: currentValue } = currentFilter;\n\n    const filterByBusinessRisk = values => {\n        apply({ business_risk_id: (values.length > '0' && values.filter(value => value !== ',').join(',')) || '', page: 1 });\n    };\n\n    return {\n        label: intl.formatMessage(messages.businessRisk),\n        type: conditionalFilterType.checkbox,\n        urlParam: 'business_risk_id',\n        filterValues: {\n            onChange: (event, value) => {\n                filterByBusinessRisk(value);\n            },\n            items: BUSINESS_RISK_OPTIONS.map(item => ({ label: item.label, value: item.value })),\n            value: (currentValue ? currentValue.split(',') : [])\n        }\n    };\n};\n\nexport default businessRiskFilter;\n","import React, { Fragment } from 'react';\nimport propTypes from 'prop-types';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { SkeletonTable, TableToolbar } from '@redhat-cloud-services/frontend-components';\nimport { cveTableRowActions } from '../../../Helpers/CVEHelper';\nimport { createSortBy, handleSortColumn } from '../../../Helpers/MiscHelper';\nimport PaginationWrapper from '../../PresentationalComponents/PaginationWrapper/PaginationWrapper';\nimport {\n    FilterNotFoundForCVE,\n    EmptyCVEListForSystem,\n    EmptyCVEList\n} from '../../PresentationalComponents/EmptyStates/EmptyStates';\nimport { CVETableContext } from './CVEs';\n\nconst CVEsTableWithContext = ({ context, header, entity }) => {\n\n    const noCves = () => {\n        const { cves } = context;\n        const filterFields = ['filter', 'cvss_from', 'cvss_to', 'public_from', 'public_to', 'impact', 'status_id'].filter(\n            item => Object.prototype.hasOwnProperty.call(cves.meta, item) && cves.meta[item]\n        );\n\n        let emptyComponent = filterFields.length !== 0\n            ? FilterNotFoundForCVE\n            : entity\n                ? EmptyCVEListForSystem\n                : cves.data.length === 0\n                    && EmptyCVEList;\n\n        return ([{\n            heightAuto: true,\n            cells: [\n                {\n                    props: { colSpan: 8 },\n                    title: (\n                        emptyComponent\n                    )\n                }\n            ]\n        }]);\n    };\n\n    const handleOnSelect = (event, isSelected, rowId) => {\n        const { cves, methods } = context;\n        const cveName = cves.data[rowId] && cves.data[rowId].id;\n        methods.selectCves(isSelected, cveName);\n    };\n\n    const { cves, methods, selectedCves, openedCves } = context;\n    const isEmpty = cves.data.length === 0;\n\n    const rows = cves.data\n    .map(cve => (selectedCves.includes(cve.id) && { ...cve, selected: true }) || cve)\n    .map((cve, index) => {\n        const current = index % 2 === 0 ? openedCves.includes(cve.id) : undefined;\n        return ({ ...cve, isOpen: current });\n    });\n\n    return (\n        <Fragment>\n            {!cves.isLoading ? (\n                <Fragment>\n                    <Table\n                        canSelectAll={false}\n                        aria-label={'Vulnerability CVE table'}\n                        cells={header}\n\n                        rows={isEmpty ? noCves() : rows}\n                        onSelect={!isEmpty ? handleOnSelect : undefined}\n                        onCollapse={!isEmpty ?  (event, rowKey) => methods.openCves(rowKey) : undefined}\n                        actionResolver={!(cves.data.length === 0) ?\n                            (rowData, rowIndex) => cveTableRowActions(methods, rowIndex.rowIndex) : undefined}\n                        sortBy={!isEmpty ?\n                            createSortBy([{ key: 'collapse' }, { key: 'checkbox' }, ...header], cves.meta.sort) : undefined}\n                        onSort={!isEmpty ?\n                            (event, key, direction) =>\n                                handleSortColumn(\n                                    key,\n                                    direction,\n                                    [{ key: 'collapse' }, { key: 'checkbox' }, ...header],\n                                    cves.meta.sort,\n                                    methods.apply\n                                ) : undefined\n                        }\n                        gridBreakPoint={'grid-lg'}\n                    >\n                        <Fragment>\n                            <TableHeader />\n                            <TableBody />\n                        </Fragment>\n                    </Table>\n                    <TableToolbar>\n                        <PaginationWrapper meta={cves.meta} apply={methods.apply} />\n                    </TableToolbar>\n                </Fragment>\n            ) : (\n                <SkeletonTable colSize={6} rowSize={20} />\n            )}\n        </Fragment>\n    );\n\n};\n\nCVEsTableWithContext.propTypes = {\n    context: propTypes.any,\n    header: propTypes.array,\n    entity: propTypes.object\n};\n\nconst CVEsTable = props => (\n    <CVETableContext.Consumer>\n        {context => <CVEsTableWithContext context={context} {...props} />}\n    </CVETableContext.Consumer>\n);\n\nexport default CVEsTable;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport { CVETableContext } from './CVEs';\nimport { fetchCvesIds } from '../../../Store/Actions/Actions';\nimport selectAllCheckbox from '../../../Helpers/selectAllCheckboxHelper';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/cjs/PrimaryToolbar';\nimport publishDateFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/PublishDateFilter';\nimport cvssBaseScoreFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/CvssBaseScoreFilter';\nimport impactFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/ImpactFilter';\nimport searchFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/SearchFilter';\nimport securityRuleFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/SecurityRuleFilter';\nimport businessRiskFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/BusinessRiskFilter';\nimport statusFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/StatusFilter';\nimport {\n    handleChangePage,\n    handleSetPageSize,\n    exportConfig,\n    buildActiveFilters,\n    removeFilters\n} from '../../../Helpers/TableToolbarHelper';\n\nconst CVEsTableToolbarWithContext = (props) => {\n    const handleCveDescription = () => {\n        const { context } = props;\n        const { cves, methods, expandCveDescription } = context;\n\n        const openedCves = !expandCveDescription ? cves.data.filter(cve => cve.id).map(cve => cve.id) : [];\n        methods.openCves(openedCves);\n    };\n\n    const { context } = props;\n    const { cves, params, methods, selectedCves, expandCveDescription } = context;\n    const { filter } = params;\n    const selectedCvesCount = selectedCves && selectedCves.length;\n\n    const selectOptions  = selectAllCheckbox({\n        selectedItems: selectedCves,\n        selectorHandler: methods.selectCves,\n        items: cves,\n        fetchResource: ops => fetchCvesIds({ ...params, ...ops }),\n        multiRow: true\n    });\n\n    const actions = [\n        '', // #NOTE empty intentionally, Remediation holder\n        {\n            label: props.intl.formatMessage(messages.editBusinessRisk),\n            onClick: () => methods.showBusinessRiskModal(selectedCves.map(item => ({ id: item, business_risk_id: '0' }))),\n            props: { isDisabled: !selectedCvesCount }\n        },\n        {\n            label: props.intl.formatMessage(messages.editStatus),\n            onClick: () => methods.showStatusModal(selectedCves.map(item => ({ id: item, status_id: '0' }), [])),\n            props: { isDisabled: !selectedCvesCount }\n        },\n        {\n            label: cves.meta.show_all\n                ? props.intl.formatMessage(messages.hideCvesNoEffecting)\n                : props.intl.formatMessage(messages.showCvesAffecting),\n            onClick: () => methods.apply({ show_all: !cves.meta.show_all, page: 1 })\n        },\n        {\n            label: expandCveDescription ? props.intl.formatMessage(messages.kebabCollapseCves)\n                : props.intl.formatMessage(messages.kebabExpandCves),\n            onClick: handleCveDescription,\n            props: { isDisabled: cves.meta.total_items === 0 }\n        }\n    ];\n\n    return (\n        <React.Fragment>\n            <PrimaryToolbar\n                pagination={{\n                    itemCount: cves.meta.total_items || 0,\n                    page: cves.meta.page || 1,\n                    perPage: cves.meta.page_size || 1,\n                    onSetPage: (_event, page) => handleChangePage(_event, page, methods.apply),\n                    onPerPageSelect: (_event, perPage) => handleSetPageSize(_event, perPage, methods.apply)\n                }}\n                actionsConfig={{\n                    actions,\n                    kebabToggleProps: { isDisabled: !selectedCvesCount && cves.meta.total_items === 0 }\n                } }\n                bulkSelect={{\n                    count: selectedCvesCount,\n                    items: selectOptions.items,\n                    isDisabled: cves.meta.total_items === 0 && selectedCvesCount === 0,\n                    checked: Boolean(selectedCvesCount),\n                    onSelect: ()=> selectOptions.handleOnCheckboxChange()\n                }}\n                filterConfig={{\n                    items: [\n                        searchFilter(messages.cve, messages.searchFilterByCveID, filter, methods.apply),\n                        securityRuleFilter(methods.apply, params),\n                        impactFilter(methods.apply, params),\n                        cvssBaseScoreFilter(methods.apply, params),\n                        businessRiskFilter(methods.apply, params),\n                        statusFilter(methods.apply, params),\n                        publishDateFilter(methods.apply, params)\n                    ]\n                }}\n                activeFiltersConfig={{\n                    filters: buildActiveFilters(params),\n                    onDelete: (e, i) => removeFilters(i, methods.apply)\n                }}\n                exportConfig = {{\n                    isDisabled: cves.meta.total_items === 0,\n                    ...exportConfig(methods)\n                }}\n            />\n\n        </React.Fragment>\n    );\n};\n\nCVEsTableToolbarWithContext.propTypes = {\n    context: propTypes.object,\n    intl: propTypes.object\n};\n\nCVEsTableToolbarWithContext.defaultProps = {\n    totalNumber: 0,\n    apply: () => undefined,\n    downloadReport: () => undefined\n};\n\nconst CVEsTableToolbar = props => (\n    <CVETableContext.Consumer>\n        {context => <CVEsTableToolbarWithContext context={context} {...props} />}\n    </CVETableContext.Consumer>\n);\nexport default injectIntl(CVEsTableToolbar);\n","import React, { useMemo, useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Stack, StackItem } from '@patternfly/react-core';\nimport { VULNERABILITIES_HEADER, CVES_ALLOWED_PARAMS } from '../../../Helpers/constants';\nimport { GenericError } from '../../PresentationalComponents/EmptyStates/EmptyStates';\nimport { createCveListByAccount } from '../../../Helpers/VulnerabilityHelper';\nimport { constructFilterParameters, updateRef, useCreateUrlParams } from '../../../Helpers/MiscHelper';\nimport BusinessRiskModal from '../Modals/BusinessRiskModal';\nimport StatusModal from '../Modals/CveStatusModal';\nimport SystemCveTable from './CVEsTable';\nimport SystemCveTableToolbar from './CVEsTableToolbar';\nimport DownloadReport from '../../../Helpers/DownloadReport';\nimport {\n    changeCveListParameters,\n    fetchCveListByAccount,\n    selectCve,\n    expandCve,\n    clearCVEsStore\n} from '../../../Store/Actions/Actions';\n\nexport const CVETableContext = React.createContext({});\n\nexport const CVEs = () => {\n    const dispatch = useDispatch();\n    const [CveStatusModal, setStatusModal] = useState(() => () => null);\n    const [CveBusinessRiskModal, setBusinessRiskModal] = useState(() => () => null);\n    const [urlParamsAllowed, setUrlParamsAllowed] = useState(false);\n    const [isFirstLoad, setIsFirstLoad] = useState(true);\n\n    const cveList = useSelector(\n        ({ CVEsStore }) =>  CVEsStore.cveList\n    );\n    const parameters = useSelector(\n        ({ CVEsStore }) => CVEsStore.parameters\n    );\n    const selectedCves = useSelector(\n        ({ CVEsStore }) => CVEsStore.selectedCves\n    );\n    const openedCves = useSelector(\n        ({ CVEsStore }) => CVEsStore.openedCves\n    );\n    const expandCveDescription = useSelector(\n        ({ CVEsStore }) => CVEsStore.expandCveDescription\n    );\n\n    const cves = useMemo(() => createCveListByAccount(cveList), [cveList]);\n    const [createUrlParams, urlParameters] = useCreateUrlParams(['show_irrelevant', ...CVES_ALLOWED_PARAMS]);\n\n    const apply = (filterParams = {}) => {\n        const params = constructFilterParameters(filterParams);\n        dispatch(changeCveListParameters(params));\n    };\n\n    useEffect(() => {\n        if (isFirstLoad) {\n            apply(urlParameters);\n            setIsFirstLoad(false);\n        }\n        else {\n            dispatch(fetchCveListByAccount(parameters));\n            urlParamsAllowed\n                && createUrlParams({ ...parameters })\n                || setUrlParamsAllowed(true);\n        }\n    }, [parameters]);\n\n    useEffect(() => {\n        return () => {\n            dispatch(clearCVEsStore());\n        };\n    }, []);\n\n    const processError = () => {\n        return GenericError;\n    };\n\n    const handleCveSelect = (isSelected, cveNames) => {\n        dispatch(selectCve(cveNames || []));\n    };\n\n    const downloadReport = format => {\n        DownloadReport.exec(fetchCveListByAccount, parameters, format, 'cves');\n    };\n\n    const showBusinessRiskModal = cvesList => {\n        const  { meta } = cves;\n        setBusinessRiskModal(() => () =>\n            (<BusinessRiskModal cves={cvesList} updateRef={() => updateRef(meta, apply)} />)\n        );\n    };\n\n    const showStatusModal = cvesList => {\n        const  { meta } = cves;\n        setStatusModal(() => () =>\n            (<StatusModal cves={cvesList} updateRef={() => updateRef(meta, apply)} />)\n        );\n    };\n\n    const openCves = (cves) => {\n        dispatch(expandCve(cves));\n    };\n\n    if (!cves.errors) {\n        return (\n            <CVETableContext.Provider\n                value={{\n                    cves,\n                    params: parameters,\n                    selectedCves,\n                    openedCves,\n                    expandCveDescription,\n                    methods: {\n                        apply,\n                        downloadReport,\n                        selectCves: handleCveSelect,\n                        showBusinessRiskModal,\n                        showStatusModal,\n                        openCves\n                    }\n                }}\n            >\n                <CveBusinessRiskModal />\n                <CveStatusModal />\n\n                <Stack>\n                    <StackItem>\n                        <SystemCveTableToolbar showAllCheckbox />\n                    </StackItem>\n                    <StackItem>\n                        <SystemCveTable header={VULNERABILITIES_HEADER} showAllCheckbox />\n                    </StackItem>\n                </Stack>\n            </CVETableContext.Provider>\n        );\n    } else {\n        return processError(cves.errors);\n    }\n\n};\n\nexport default CVEs;\n","import React, { Fragment } from 'react';\nimport { Main } from '@redhat-cloud-services/frontend-components';\nimport VulnerabilityHeader from '../VulnerabilityHeader/VulnerabilityHeader';\nimport CVEs from '../CVEs/CVEs';\n\nconst LandingPage = () => {\n\n    return (\n        <Fragment>\n            <VulnerabilityHeader showBreadcrumb={false} />\n            <Main>\n                <CVEs/>\n            </Main>\n        </Fragment>\n    );\n};\n\nexport default LandingPage;\n","// doT.js\n// 2011-2014, Laura Doktorova, https://github.com/olado/doT\n// Licensed under the MIT license.\n\n(function () {\n\t\"use strict\";\n\n\tvar doT = {\n\t\tname: \"doT\",\n\t\tversion: \"1.1.1\",\n\t\ttemplateSettings: {\n\t\t\tevaluate:    /\\{\\{([\\s\\S]+?(\\}?)+)\\}\\}/g,\n\t\t\tinterpolate: /\\{\\{=([\\s\\S]+?)\\}\\}/g,\n\t\t\tencode:      /\\{\\{!([\\s\\S]+?)\\}\\}/g,\n\t\t\tuse:         /\\{\\{#([\\s\\S]+?)\\}\\}/g,\n\t\t\tuseParams:   /(^|[^\\w$])def(?:\\.|\\[[\\'\\\"])([\\w$\\.]+)(?:[\\'\\\"]\\])?\\s*\\:\\s*([\\w$\\.]+|\\\"[^\\\"]+\\\"|\\'[^\\']+\\'|\\{[^\\}]+\\})/g,\n\t\t\tdefine:      /\\{\\{##\\s*([\\w\\.$]+)\\s*(\\:|=)([\\s\\S]+?)#\\}\\}/g,\n\t\t\tdefineParams:/^\\s*([\\w$]+):([\\s\\S]+)/,\n\t\t\tconditional: /\\{\\{\\?(\\?)?\\s*([\\s\\S]*?)\\s*\\}\\}/g,\n\t\t\titerate:     /\\{\\{~\\s*(?:\\}\\}|([\\s\\S]+?)\\s*\\:\\s*([\\w$]+)\\s*(?:\\:\\s*([\\w$]+))?\\s*\\}\\})/g,\n\t\t\tvarname:\t\"it\",\n\t\t\tstrip:\t\ttrue,\n\t\t\tappend:\t\ttrue,\n\t\t\tselfcontained: false,\n\t\t\tdoNotSkipEncoded: false\n\t\t},\n\t\ttemplate: undefined, //fn, compile template\n\t\tcompile:  undefined, //fn, for express\n\t\tlog: true\n\t}, _globals;\n\n\tdoT.encodeHTMLSource = function(doNotSkipEncoded) {\n\t\tvar encodeHTMLRules = { \"&\": \"&#38;\", \"<\": \"&#60;\", \">\": \"&#62;\", '\"': \"&#34;\", \"'\": \"&#39;\", \"/\": \"&#47;\" },\n\t\t\tmatchHTML = doNotSkipEncoded ? /[&<>\"'\\/]/g : /&(?!#?\\w+;)|<|>|\"|'|\\//g;\n\t\treturn function(code) {\n\t\t\treturn code ? code.toString().replace(matchHTML, function(m) {return encodeHTMLRules[m] || m;}) : \"\";\n\t\t};\n\t};\n\n\t_globals = (function(){ return this || (0,eval)(\"this\"); }());\n\n\t/* istanbul ignore else */\n\tif (typeof module !== \"undefined\" && module.exports) {\n\t\tmodule.exports = doT;\n\t} else if (typeof define === \"function\" && define.amd) {\n\t\tdefine(function(){return doT;});\n\t} else {\n\t\t_globals.doT = doT;\n\t}\n\n\tvar startend = {\n\t\tappend: { start: \"'+(\",      end: \")+'\",      startencode: \"'+encodeHTML(\" },\n\t\tsplit:  { start: \"';out+=(\", end: \");out+='\", startencode: \"';out+=encodeHTML(\" }\n\t}, skip = /$^/;\n\n\tfunction resolveDefs(c, block, def) {\n\t\treturn ((typeof block === \"string\") ? block : block.toString())\n\t\t.replace(c.define || skip, function(m, code, assign, value) {\n\t\t\tif (code.indexOf(\"def.\") === 0) {\n\t\t\t\tcode = code.substring(4);\n\t\t\t}\n\t\t\tif (!(code in def)) {\n\t\t\t\tif (assign === \":\") {\n\t\t\t\t\tif (c.defineParams) value.replace(c.defineParams, function(m, param, v) {\n\t\t\t\t\t\tdef[code] = {arg: param, text: v};\n\t\t\t\t\t});\n\t\t\t\t\tif (!(code in def)) def[code]= value;\n\t\t\t\t} else {\n\t\t\t\t\tnew Function(\"def\", \"def['\"+code+\"']=\" + value)(def);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn \"\";\n\t\t})\n\t\t.replace(c.use || skip, function(m, code) {\n\t\t\tif (c.useParams) code = code.replace(c.useParams, function(m, s, d, param) {\n\t\t\t\tif (def[d] && def[d].arg && param) {\n\t\t\t\t\tvar rw = (d+\":\"+param).replace(/'|\\\\/g, \"_\");\n\t\t\t\t\tdef.__exp = def.__exp || {};\n\t\t\t\t\tdef.__exp[rw] = def[d].text.replace(new RegExp(\"(^|[^\\\\w$])\" + def[d].arg + \"([^\\\\w$])\", \"g\"), \"$1\" + param + \"$2\");\n\t\t\t\t\treturn s + \"def.__exp['\"+rw+\"']\";\n\t\t\t\t}\n\t\t\t});\n\t\t\tvar v = new Function(\"def\", \"return \" + code)(def);\n\t\t\treturn v ? resolveDefs(c, v, def) : v;\n\t\t});\n\t}\n\n\tfunction unescape(code) {\n\t\treturn code.replace(/\\\\('|\\\\)/g, \"$1\").replace(/[\\r\\t\\n]/g, \" \");\n\t}\n\n\tdoT.template = function(tmpl, c, def) {\n\t\tc = c || doT.templateSettings;\n\t\tvar cse = c.append ? startend.append : startend.split, needhtmlencode, sid = 0, indv,\n\t\t\tstr  = (c.use || c.define) ? resolveDefs(c, tmpl, def || {}) : tmpl;\n\n\t\tstr = (\"var out='\" + (c.strip ? str.replace(/(^|\\r|\\n)\\t* +| +\\t*(\\r|\\n|$)/g,\" \")\n\t\t\t\t\t.replace(/\\r|\\n|\\t|\\/\\*[\\s\\S]*?\\*\\//g,\"\"): str)\n\t\t\t.replace(/'|\\\\/g, \"\\\\$&\")\n\t\t\t.replace(c.interpolate || skip, function(m, code) {\n\t\t\t\treturn cse.start + unescape(code) + cse.end;\n\t\t\t})\n\t\t\t.replace(c.encode || skip, function(m, code) {\n\t\t\t\tneedhtmlencode = true;\n\t\t\t\treturn cse.startencode + unescape(code) + cse.end;\n\t\t\t})\n\t\t\t.replace(c.conditional || skip, function(m, elsecase, code) {\n\t\t\t\treturn elsecase ?\n\t\t\t\t\t(code ? \"';}else if(\" + unescape(code) + \"){out+='\" : \"';}else{out+='\") :\n\t\t\t\t\t(code ? \"';if(\" + unescape(code) + \"){out+='\" : \"';}out+='\");\n\t\t\t})\n\t\t\t.replace(c.iterate || skip, function(m, iterate, vname, iname) {\n\t\t\t\tif (!iterate) return \"';} } out+='\";\n\t\t\t\tsid+=1; indv=iname || \"i\"+sid; iterate=unescape(iterate);\n\t\t\t\treturn \"';var arr\"+sid+\"=\"+iterate+\";if(arr\"+sid+\"){var \"+vname+\",\"+indv+\"=-1,l\"+sid+\"=arr\"+sid+\".length-1;while(\"+indv+\"<l\"+sid+\"){\"\n\t\t\t\t\t+vname+\"=arr\"+sid+\"[\"+indv+\"+=1];out+='\";\n\t\t\t})\n\t\t\t.replace(c.evaluate || skip, function(m, code) {\n\t\t\t\treturn \"';\" + unescape(code) + \"out+='\";\n\t\t\t})\n\t\t\t+ \"';return out;\")\n\t\t\t.replace(/\\n/g, \"\\\\n\").replace(/\\t/g, '\\\\t').replace(/\\r/g, \"\\\\r\")\n\t\t\t.replace(/(\\s|;|\\}|^|\\{)out\\+='';/g, '$1').replace(/\\+''/g, \"\");\n\t\t\t//.replace(/(\\s|;|\\}|^|\\{)out\\+=''\\+/g,'$1out+=');\n\n\t\tif (needhtmlencode) {\n\t\t\tif (!c.selfcontained && _globals && !_globals._encodeHTML) _globals._encodeHTML = doT.encodeHTMLSource(c.doNotSkipEncoded);\n\t\t\tstr = \"var encodeHTML = typeof _encodeHTML !== 'undefined' ? _encodeHTML : (\"\n\t\t\t\t+ doT.encodeHTMLSource.toString() + \"(\" + (c.doNotSkipEncoded || '') + \"));\"\n\t\t\t\t+ str;\n\t\t}\n\t\ttry {\n\t\t\treturn new Function(c.varname, str);\n\t\t} catch (e) {\n\t\t\t/* istanbul ignore else */\n\t\t\tif (typeof console !== \"undefined\") console.log(\"Could not create a template function: \" + str);\n\t\t\tthrow e;\n\t\t}\n\t};\n\n\tdoT.compile = function(tmpl, def) {\n\t\treturn doT.template(tmpl, null, def);\n\t};\n}());\n","export const FETCH_CVE_LIST = 'FETCH_CVE_LIST';\nexport const EMPTY_CVE_LIST = 'EMPTY_CVE_LIST';\nexport const FETCH_CVE_DETAILS = 'FETCH_CVE_DETAILS';\nexport const HANDLE_CVE_DETAILS_ERROR = 'HANDLE_CVE_DETAILS_ERROR';\nexport const FETCH_SYSTEM_DETAILS = 'FETCH_SYSTEM_DETAILS';\nexport const FETCH_AFFECTED_SYSTEMS_BY_CVE = 'FETCH_AFFECTED_SYSTEMS_BY_CVE';\nexport const FETCH_SYSTEMS = 'FETCH_SYSTEMS';\nexport const SET_HEADER = 'SET_HEADER';\nexport const SYSTEM_OPT_OUT = 'SYSTEM_OPT_OUT';\nexport const FETCH_SYSTEM_CVE_LIST = 'FETCH_SYSTEM_CVE_LIST';\nexport const CHANGE_SYSTEM_CVE_STATUS = 'CHANGE_SYSTEM_CVE_STATUS';\nexport const CHANGE_EXPOSED_SYSTEMS_PARAMETERS = 'CHANGE_EXPOSED_SYSTEMS_PARAMETERS';\nexport const CHANGE_CVE_LIST_PARAMETERS = 'CHANGE_CVE_LIST_PARAMETERS';\nexport const SELECT_CVE = 'SELECT_CVE';\nexport const SELECT_SYSTEM_CVE = 'SELECT_SYSTEM_CVE';\nexport const SELECT_ENTITIES = 'SELECT_ENTITIES';\nexport const SELECT_MULTIPLE_ENTITIES = 'SELECT_MULTIPLE_ENTITIES';\nexport const EXPAND_CVE = 'EXPAND_CVE';\nexport const EXPAND_ROW = 'EXPAND_ROW'; //TODO unify it with EXPAND_CVE action\nexport const EXPAND_SYSTEM_CVE = 'EXPAND_SYSTEM_CVE';\nexport const FETCH_INSIGHTS_SYSTEM_RULES = 'FETCH_INSIGHTS_SYSTEM_RULES';\nexport const CHANGE_SYSTEMS_PARAMS = 'CHANGE_SYSTEMS_PARAMS';\nexport const CHANGE_SYSTEM_CVE_LIST_PARAMETERS = 'CHANGE_SYSTEM_CVE_LIST_PARAMETERS';\nexport const CLEAR_SYSTEMS_STORE = 'CLEAR_SYSTEMS_STORE';\nexport const CLEAR_SYSTEM_CVES_STORE = 'CLEAR_SYSTEM_CVES_STORE';\nexport const CLEAR_CVE_STORE = 'CLEAR_CVE_STORE';\nexport const CLEAR_INVENTORY_STORE = 'CLEAR_INVENTORY_STORE';\nexport const CLEAR_CVES_STORE = 'CLEAR_CVEs_STORE';\nexport const FETCH_AFFECTED_SYSTEM_IDS_BY_CVE = 'FETCH_AFFECTED_SYSTEM_IDS_BY_CVE';\nexport const FETCH_SYSTEMS_IDS = 'FETCH_SYSTEMS_IDS';\nexport const FETCH_CVE_LIST_IDS = 'FETCH_CVE_LIST_IDS';\nexport const FETCH_SYTEM_DETAILS_IDS = 'FETCH_SYTEM_DETAILS_IDS';\n","import { SecurityIcon, UnknownIcon } from '@patternfly/react-icons';\nimport { SortByDirection } from '@patternfly/react-table';\nimport findIndex from 'lodash/findIndex';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { impactColorList, impactList, CVSS_OPTIONS, PUBLIC_DATE_OPTIONS } from './constants';\nimport qs from 'query-string';\nimport { IntlProvider } from '@redhat-cloud-services/frontend-components-translations';\n\nexport const dataShape = propTypes.shape({\n    data: propTypes.oneOfType([propTypes.object, propTypes.array]),\n    meta: propTypes.object,\n    isLoading: propTypes.bool\n});\n\n/**\n * Based on the  allowedParams it will construct the arguments for the API call\n * which is defined in the vulnerabilities-client. vulnerabilities-client is written is typescript\n * so we need to define and pass every single parameter. Order in allowedParams is important\n *\n * @param {Object} apiProps\n * @param {Array} allowedParams - order should align with the params in the vulnerabilities-client\n */\nexport function constructParameters(apiProps, allowedParams) {\n    if (apiProps) {\n        Object.keys(apiProps).forEach(\n            key => (\n                apiProps[key] === undefined\n                || apiProps[key] === ''\n            )\n            && delete apiProps[key]\n        );\n\n        const params = allowedParams.map(item => apiProps[item]);\n\n        return params;\n    }\n\n    return [];\n}\n\n// TODO DRY:similar to constructParameters\nexport function constructURLParameters(urlParams, allowedParams) {\n    if (urlParams) {\n        const params = { ...urlParams };\n        Object.keys(urlParams).forEach(\n            key => (\n                params[key] === undefined\n                || params[key] === ''\n                || !allowedParams.includes(key)\n                || params[key] === false\n            )\n            && delete params[key]\n\n        );\n        return params;\n    }\n}\n\nexport function formatDate(date = new Date()) {\n    const prepend = (number) => `${`${number}`.length === 1 ? '0' : ''}${number}`;\n    const toFormat = new Date(date);\n    if (toFormat instanceof Date && !isNaN(toFormat)) {\n        const year = toFormat.getFullYear();\n        const month = toFormat.getMonth();\n        const day = toFormat.getDate();\n        return `${year}-${prepend(month)}-${prepend(day)}`;\n    }\n\n    return toFormat;\n}\n\n/**\n * Contructs the filters which have more than one parameter that needs to be passed\n * and resets all the parameteres when it's needed\n *\n * @param {Object} filterParams\n * @return {Object}\n */\nexport function constructFilterParameters(filterParams) {\n    if (Object.prototype.hasOwnProperty.call(filterParams, 'cvss_filter')) {\n        let cvssEntry = CVSS_OPTIONS.find(({ value }) => value === filterParams.cvss_filter);\n\n        if (typeof cvssEntry === 'undefined' && typeof filterParams.cvss_filter !== 'undefined') {\n            let values = filterParams.cvss_filter.split(/[^0-9]+/).filter(item => parseFloat(item));\n            let [from, to] = values;\n            cvssEntry = { from, to };\n        } else if (typeof cvssEntry === 'undefined' && typeof filterParams.cvss_filter === 'undefined') {\n            cvssEntry = { from: undefined, to: undefined };\n        } else if ((cvssEntry && cvssEntry.label === 'N/A') && filterParams.cvss_filter === 'from-1to-1') {\n            cvssEntry = { from: -1, to: -1 };\n        }\n\n        filterParams.cvss_from = cvssEntry.from;\n        filterParams.cvss_to = cvssEntry.to;\n    }\n\n    if (Object.prototype.hasOwnProperty.call(filterParams, 'publish_date')) {\n        let publicEntry = PUBLIC_DATE_OPTIONS.find(item => item.value === filterParams.publish_date);\n\n        if (typeof publicEntry !== 'undefined') {\n            filterParams.public_from = publicEntry.from && formatDate(publicEntry.from);\n            filterParams.public_to = publicEntry.to && formatDate(publicEntry.to);\n        } else {\n            filterParams.public_from = undefined;\n            filterParams.public_to = undefined;\n            filterParams.publish_date = undefined;\n        }\n    }\n\n    return filterParams;\n}\n\nexport function getImpactDetails(impact) {\n    if (Object.keys(impactList).includes(impact)) {\n        return {\n            title: impactList[impact].title,\n            color: impactList[impact].color,\n            text: impactList[impact].text,\n            titleContent: (\n                <SecurityIcon size=\"lg\" />\n            )\n        };\n    } else {\n        return {\n            title: 'Unknown',\n            color: impactColorList.unknown,\n            text: '',\n            titleContent: (\n                <UnknownIcon size=\"lg\" />\n            )\n        };\n    }\n}\n\nexport const createSortBy = (header, value) => {\n    if (value) {\n        let direction = value.indexOf('-') === 0 ? SortByDirection.desc : SortByDirection.asc;\n        value = value.replace(/^(-|\\+)/, '');\n        const index = findIndex(header, item => item.key === value);\n        let sort = {\n            index,\n            direction\n        };\n        return sort;\n    }\n\n    return {};\n};\n\nexport const handleSortColumn = (key, direction, header, currentSort, apply) => {\n    let columnName = header[key].key;\n    const useDefault = currentSort && currentSort.substr(1) !== columnName;\n    if (direction === SortByDirection.desc || useDefault) {\n        columnName = '-' + columnName;\n    }\n\n    apply({ sort: columnName });\n};\n\nexport const updateStateSet = (stateSet, names, value) => {\n    [].concat(names).forEach(name => {\n        value ? stateSet.add(name) : stateSet.delete(name);\n    });\n    return stateSet;\n};\n\nexport const useCreateUrlParams = (allowedParams) => {\n    const urlParams = qs.parse(window.location.search);\n\n    const createUrlParams = (parameters) => {\n        window.history.pushState(\n            {},\n            '',\n            `${\n                window.location.pathname\n            }?${\n                qs.stringify(constructURLParameters(parameters, allowedParams))\n            }`\n        );\n    };\n\n    return [createUrlParams, urlParams];\n};\n\nexport const updateRef = (meta, apply) => {\n    const pages = parseInt(meta.pages);\n    const page = parseInt(meta.page);\n    const cvesCount = parseInt(meta.cvesCount);\n    const goTo = (pages === page && page > 1 && cvesCount === 1) ? (pages - 1) : page;\n\n    apply({ page: goTo });\n};\n\nexport const mountWithIntl = (Component) => {\n    const wrapper = mount(Component, {\n        wrappingComponent: IntlProvider\n    });\n    const provider = wrapper.getWrappingComponent();\n    provider.setProps({ locale: 'en' });\n\n    return wrapper;\n};\n","import {\n    authInterceptor,\n    interceptor401,\n    responseDataInterceptor\n} from '@redhat-cloud-services/frontend-components-utilities/files/interceptors';\nimport axios from 'axios';\nimport { ReadOnlyNotification } from '../Helpers/constants';\nconst instance = axios.create();\n\nexport function errorInterceptor(err) {\n    if (!axios.isCancel(err)) {\n        const errObject = { ...err };\n\n        if (errObject.response && errObject.response.data && errObject.response.data.errors) {\n            const data = errObject.response.data.errors[0];\n            throw data;\n        }\n\n        throw err;\n    }\n}\n\nexport function readOnlyInterceptor(error) {\n    if (error.response && error.response.status === 503) {\n        const data = ReadOnlyNotification;\n        throw data;\n    }\n\n    throw error;\n}\n\ninstance.interceptors.request.use(authInterceptor);\ninstance.interceptors.response.use(responseDataInterceptor);\ninstance.interceptors.response.use(null, interceptor401);\ninstance.interceptors.response.use(null, readOnlyInterceptor);\ninstance.interceptors.response.use(null, errorInterceptor);\n\nexport default instance;\n","let BASE_ROUTE = '/api/vulnerability/';\nimport { GitApi } from '@redhat-cloud-services/vulnerabilities-client';\nimport instance from '../Utilities/interceptors';\nimport { constructParameters } from './MiscHelper';\n\nlet api = new GitApi(undefined, BASE_ROUTE, instance);\n\nexport function getCveDetails(synopsis) {\n    const result = api.getCveDetails(synopsis);\n    return result;\n}\n\nexport function getSystemDetails(system) {\n    const result = api.getSystemDetails(system);\n    return result;\n}\n\nexport function getAffectedSystemsByCVE(synopsis, apiProps) {\n    let parameterNames = [\n        'filter',\n        'limit',\n        'offset',\n        'page',\n        'page_size',\n        'sort',\n        'status_id',\n        'data_format',\n        'security_rule',\n        'rule_name'\n    ];\n    let parameterArray = constructParameters(apiProps, parameterNames);\n    let result = api.getAffectedSystemsByCve(synopsis, ...parameterArray);\n    return result;\n}\n\nexport function getSystems(apiProps) {\n    let parameterNames = ['filter', 'limit', 'offset', 'page', 'page_size', 'sort', 'data_format', 'stale', 'uuid', 'opt_out'];\n    let parameterArray = constructParameters(apiProps, parameterNames);\n    let result = api.getSystemsList(...parameterArray);\n    return result;\n}\n\nexport function getCveListByAccount(apiProps) {\n    let parameterNames = [\n        'filter',\n        'limit',\n        'offset',\n        'page',\n        'page_size',\n        'sort',\n        'cvss_from',\n        'cvss_to',\n        'public_from',\n        'public_to',\n        'impact',\n        'data_format',\n        'business_risk_id',\n        'status_id',\n        'security_rule',\n        'show_all'\n    ];\n    let parameterArray = constructParameters(apiProps, parameterNames);\n    let result = api.getCveList(...parameterArray);\n    return result;\n}\n\nexport function optOutSystem(system, status) {\n    let result = api.setSystemOptOut(system, status);\n    return result;\n}\n\nexport function getCveListBySystem(apiProps) {\n    const { system } = apiProps;\n    let parameterNames = [\n        'filter',\n        'limit',\n        'offset',\n        'page',\n        'page_size',\n        'sort',\n        'cvss_from',\n        'cvss_to',\n        'public_from',\n        'public_to',\n        'impact',\n        'status_id',\n        'data_format',\n        'business_risk_id',\n        'security_rule'\n    ];\n    if (apiProps && system) {\n        Object.keys(apiProps).forEach(key => (apiProps[key] === undefined || apiProps[key] === '') && delete apiProps[key]);\n        const params = parameterNames.map(item => apiProps[item]);\n        return api.getCveListBySystem(system, ...params).catch(err => {\n            if (err && err.status === '404') {\n                return { errors: err };\n            }\n\n            throw err;\n        });\n    }\n}\n\nexport function setSystemCveStatus(params) {\n    let result = api.setStatus(params);\n    return result;\n}\n\nexport function optOutSystems(systems, optOut) {\n    const data = { opt_out: optOut, inventory_id: new Array(...systems) };\n    let result = api.setSystemsOptOut(data);\n    return result;\n}\n\nexport function setBusinessRisk(params) {\n    let result = api.setCveBusinessRisk(params);\n    return result;\n}\n\nexport function setCveStatus(params) {\n    let result = api.setCveStatus(params);\n    return result;\n}\n\nexport function getExecutiveReport() {\n    let result = api.getExecutiveReport();\n    return result;\n}\n\nexport function getAffectedSystemsIdsByCve(synopsis, apiProps) {\n    //TODO: Once all new endpoints for selecting IDs are introduced optimize all parameterNames arrays in this page\n    let parameterNames = [\n        'filter',\n        'limit',\n        'offset',\n        'page',\n        'page_size',\n        'sort',\n        'status_id',\n        'data_format',\n        'security_rule'\n    ];\n    let parameterArray = constructParameters(apiProps, parameterNames);\n    let result = api.getAffectedSystemsIdsByCve(synopsis, ...parameterArray);\n    return result;\n}\n\nexport function getSystemsIds(apiProps) {\n    let parameterNames = ['filter', 'limit', 'offset', 'page', 'page_size', 'sort', 'data_format', 'stale', 'uuid', 'opt_out'];\n    let parameterArray = constructParameters(apiProps, parameterNames);\n    let result = api.getSystemsIds(...parameterArray);\n    return result;\n}\n\nexport function getCveIdsList(apiProps) {\n    let parameterNames = [\n        'filter',\n        'limit',\n        'offset',\n        'page',\n        'page_size',\n        'sort',\n        'cvss_from',\n        'cvss_to',\n        'public_from',\n        'public_to',\n        'impact',\n        'data_format',\n        'business_risk_id',\n        'status_id',\n        'security_rule',\n        'show_all'\n    ];\n    let parameterArray = constructParameters(apiProps, parameterNames);\n    let result = api.getCveIdsList(...parameterArray);\n    return result;\n}\n\nexport function getCveIdsBySystem(apiProps) {\n    const { system } = apiProps;\n    let parameterNames = [\n        'filter',\n        'limit',\n        'offset',\n        'page',\n        'page_size',\n        'sort',\n        'cvss_from',\n        'cvss_to',\n        'public_from',\n        'public_to',\n        'impact',\n        'status_id',\n        'data_format',\n        'business_risk_id',\n        'security_rule'\n    ];\n    if (apiProps && system) {\n        Object.keys(apiProps).forEach(key => (apiProps[key] === undefined || apiProps[key] === '') && delete apiProps[key]);\n        const params = parameterNames.map(item => apiProps[item]);\n        return api.getCveIdsBySystem(system, ...params);\n    }\n}\n","import Immutable from 'seamless-immutable';\nimport * as ActionTypes from '../ActionTypes';\n\n// Initial State\nexport const initialState = Immutable({\n    title: 'Vulnerability',\n    breadcrumbs: []\n});\n\n// Reducer\nexport const BreadcrumbStore = (state = initialState, action) => {\n    let newState;\n    switch (action.type) {\n        case ActionTypes.SET_HEADER + '_FULFILLED':\n            newState = state.set('title', (action.payload && action.payload.title) || initialState.title);\n            newState = newState.set('breadcrumbs', (action.payload && action.payload.breadcrumbs) || initialState.breadcrumbs);\n            return newState;\n\n        default:\n            return state;\n    }\n};\n","import Immutable from 'seamless-immutable';\nimport * as ActionTypes from '../ActionTypes';\n\n// Initial State\nexport const initialState = Immutable({\n    affectedSystemsByCVE: {\n        isLoading: true,\n        openedRows: [],\n        payload: {\n            meta: {\n                total_items: 0,\n                page: 1,\n                page_size: 20\n            }\n        }\n    },\n    parameters: {\n        page: 1,\n        page_size: 20,\n        selectedHosts: [],\n        security_rule: undefined,\n        status_id: undefined\n    },\n    cveDetails: {\n        isLoading: true,\n        payload: {},\n        error: false\n    }\n});\n\n// Reducer\nexport const CVEDetailsPageStore = (state = initialState, action) => {\n    let newState;\n    switch (action.type) {\n        case ActionTypes.HANDLE_CVE_DETAILS_ERROR:\n            newState = state.setIn(['cveDetails', 'error'], action.payload.error);\n            newState = newState.setIn(['cveDetails', 'isLoading'], false);\n            return newState;\n        case ActionTypes.FETCH_CVE_DETAILS + '_PENDING':\n            newState = state.setIn(['cveDetails', 'isLoading'], true);\n            return newState;\n\n        case ActionTypes.FETCH_CVE_DETAILS + '_FULFILLED':\n            newState = state.setIn(['cveDetails', 'payload'], action.payload);\n            newState = newState.setIn(['cveDetails', 'isLoading'], false);\n            return newState;\n\n        case ActionTypes.FETCH_AFFECTED_SYSTEMS_BY_CVE + '_PENDING':\n            newState = state.setIn(['affectedSystemsByCVE', 'isLoading'], true);\n            return newState;\n\n        case ActionTypes.FETCH_AFFECTED_SYSTEMS_BY_CVE + '_FULFILLED':\n            newState = state.setIn(['affectedSystemsByCVE', 'payload'], action.payload);\n            newState = newState.setIn(['affectedSystemsByCVE', 'isLoading'], false);\n            return newState;\n        case ActionTypes.CHANGE_EXPOSED_SYSTEMS_PARAMETERS:\n            newState = state.setIn(['parameters'], {\n                ...state.parameters,\n                ...action.payload,\n                page_size: action.payload.page_size || state.parameters.page_size\n            });\n            return newState;\n        case ActionTypes.CLEAR_CVE_STORE:\n            return initialState;\n        default:\n            return state;\n    }\n};\n\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/files/esm/ReducerRegistry';\nimport { FETCH_SYSTEM_CVE_LIST } from '../ActionTypes';\n\nexport const initialState = {\n    parameters: {\n        page: 1,\n        page_size: 20\n    },\n    cveList: {\n        isLoading: true,\n        payload: [],\n        meta: new Date(),\n        error: false\n    },\n    openedCves: [],\n    selectedCves: [],\n    expandCveDescription: false\n};\n\nfunction pendingVulnerabilities(state, { meta }) {\n    return {\n        ...state,\n        timestamp: meta,\n        cveList: {\n            ...state.cveList,\n            isLoading: true\n        }\n    };\n}\n\nfunction rejectedVulnerabilities(state, { meta, payload }) {\n    return {\n        ...state,\n        timestamp: meta,\n        cveList: {\n            payload: { errors: payload },\n            isLoading: false\n        }\n    };\n}\n\nfunction fulfilledVulnerabilities(state, action) {\n    const { payload, meta } = action;\n    if (meta >= state.timestamp) {\n        return {\n            ...state,\n            timestamp: meta,\n            cveList: {\n                payload,\n                isLoading: false\n            }\n        };\n    }\n\n    return state;\n}\n\nfunction selectEntity(state, action) {\n    let newState = state;\n    let selectedCves = newState.selectedCves.slice();\n    if (Array.isArray(action.payload)) {\n        selectedCves = action.payload;\n    } else {\n        (selectedCves.includes(action.payload) && selectedCves.splice(selectedCves.indexOf(action.payload), 1)) ||\n            selectedCves.push(action.payload);\n    }\n\n    return { ...newState, selectedCves };\n}\n\nfunction expandCve(state, action) {\n    let newState = state;\n    const { isOpen, cves, expandCveDescription } = action.payload;\n    let openedCves = newState.openedCves.slice();\n\n    if (cves.length > 0) {\n        cves.map(cve =>{\n            const index = openedCves.findIndex(element => element.id === cve);\n            if (index > -1) { openedCves[index] = ({ id: cve, isOpen });}\n            else {openedCves.push({ id: cve, isOpen });}\n        });\n    }\n    else {\n        openedCves = openedCves.map(cve => ({ id: cve.id, isOpen: false }));\n    }\n\n    return { ...newState, openedCves, expandCveDescription };\n}\n\nfunction changeParameters(state, action) {\n    let newState = state;\n    newState.parameters = { ...state.parameters, ...action.payload };\n    return newState;\n}\n\nfunction clearSystemCvesStore(state) {\n    let newState = state;\n    newState.selectedCves = [];\n    newState.openedCves = [];\n    newState.parameters = {\n        page: 1,\n        page_size: 20\n    };\n    return newState;\n}\n\nexport const SystemCvesStore = applyReducerHash(\n    {\n        [`${FETCH_SYSTEM_CVE_LIST}_PENDING`]: pendingVulnerabilities,\n        [`${FETCH_SYSTEM_CVE_LIST}_REJECTED`]: rejectedVulnerabilities,\n        [`${FETCH_SYSTEM_CVE_LIST}_FULFILLED`]: fulfilledVulnerabilities,\n        ['CHANGE_SYSTEM_CVE_LIST_PARAMETERS']: changeParameters,\n        ['SELECT_SYSTEM_CVE']: selectEntity,\n        ['EXPAND_SYSTEM_CVE']: expandCve,\n        ['CLEAR_SYSTEM_CVES_STORE']: clearSystemCvesStore\n    },\n    initialState\n);\n","import * as ActionTypes from '../ActionTypes';\n\nexport const initialState = {\n    isLoading: true,\n    payload: {},\n    metadata: {\n        page: 1,\n        limit: 20,\n        offet: 0,\n        total_items: 0\n    },\n    params: {\n        filter: undefined,\n        opt_out: false,\n        page: 1,\n        page_size: 20,\n        sort: '-last_upload'\n    }\n};\n\nexport const SystemsPageStore = (state = initialState, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case ActionTypes.FETCH_SYSTEMS + '_PENDING':\n            newState.isLoading = true;\n            return newState;\n\n        case ActionTypes.FETCH_SYSTEMS + '_FULFILLED':\n            newState.payload = action.payload;\n            newState.metadata = action.payload.meta;\n            newState.isLoading = false;\n            return newState;\n        case ActionTypes.CHANGE_SYSTEMS_PARAMS:\n            newState.params = {\n                ...newState.params,\n                ...action.payload,\n                page_size: action.payload.page_size || newState.params.page_size\n            };\n            return newState;\n        case ActionTypes.CLEAR_SYSTEMS_STORE:\n            return initialState;\n        default:\n            return state;\n    }\n};\n","import * as ActionTypes from '../ActionTypes';\n\n// Initial State\nexport const initialState = {\n    cveList: {\n        isLoading: true,\n        payload: [],\n        timestamp: new Date()\n    },\n    parameters: {\n        show_all: false,\n        sort: '-public_date'\n    },\n    selectedCves: [],\n    openedCves: [],\n    expandCveDescription: false\n};\n\nfunction isValid(stateTimestamp, actionTimestamp) {\n    return actionTimestamp >= stateTimestamp;\n}\n\n// Reducer\nexport const CVEsStore = (state = initialState, action) => {\n    let newState = { ...state };\n\n    switch (action.type) {\n        case ActionTypes.FETCH_CVE_LIST + '_PENDING':\n            newState.cveList = {\n                timestamp: action.meta,\n                isLoading: true\n            };\n            return newState;\n\n        case ActionTypes.FETCH_CVE_LIST + '_REJECTED':\n            newState.cveList = {\n                isLoading: false,\n                payload: { errors: action.payload }\n            };\n            return newState;\n\n        case ActionTypes.FETCH_CVE_LIST + '_FULFILLED':\n            if (isValid(state.cveList.timestamp, action.meta)) {\n                newState.cveList = {\n                    payload: action.payload,\n                    isLoading: false\n                };\n\n                return newState;\n            }\n\n            return state;\n\n        case ActionTypes.CHANGE_CVE_LIST_PARAMETERS + '_FULFILLED':\n            newState.parameters = { ...newState.parameters, ...action.payload };\n            return newState;\n\n        case ActionTypes.SELECT_CVE: {\n            let selectedCves = newState.selectedCves.slice();\n            if (Array.isArray(action.payload)) {\n                selectedCves = action.payload;\n            } else {\n                (selectedCves.includes(action.payload) && selectedCves.splice(selectedCves.indexOf(action.payload), 1)) ||\n                    selectedCves.push(action.payload);\n            }\n\n            return { ...newState, selectedCves  };\n        }\n\n        case ActionTypes.EXPAND_CVE: {\n            if (Array.isArray(action.payload)) {\n                const openedCves = action.payload;\n                const expandCveDescription = action.payload.length === 0 ? false : true;\n                return { ...newState,  openedCves, expandCveDescription };\n            }\n\n            const cveName = newState.cveList.payload.data[action.payload / 2].id;\n            const openedCves = newState.openedCves.slice();\n            (openedCves.includes(cveName) && openedCves.splice(openedCves.indexOf(cveName), 1)) || openedCves.push(cveName);\n\n            const expandCveDescription = (openedCves.length === newState.cveList.payload.data.length);\n\n            return { ...newState, openedCves, expandCveDescription };\n        }\n\n        case ActionTypes.CLEAR_CVES_STORE: {\n            return initialState;\n        }\n\n        default:\n            return state;\n    }\n};\n","import * as APIHelper from '../../Helpers/APIHelper';\nimport * as HeaderHelper from '../../Helpers/HeaderHelper';\nimport ReducerRegistry from '../../Utilities/ReducerRegistry';\nimport * as ActionTypes from '../ActionTypes';\nimport { BreadcrumbStore } from '../Reducers/BreadcrumbStore';\nimport { CVEDetailsPageStore } from '../Reducers/CVEDetailsPageStore';\nimport { SystemCvesStore } from '../Reducers/SystemCvesStore';\nimport { SystemsPageStore } from '../Reducers/SystemsPageStore';\nimport { CVEsStore } from '../Reducers/CVEsStore';\n\nReducerRegistry.register({ CVEDetailsPageStore });\nReducerRegistry.register({ CVEsStore });\nReducerRegistry.register({ SystemsPageStore });\nReducerRegistry.register({ BreadcrumbStore });\nReducerRegistry.register({ SystemCvesStore });\n\nexport const setHeader = props => ({\n    type: ActionTypes.SET_HEADER,\n    payload: new Promise(resolve => {\n        resolve(HeaderHelper.setHeader(props));\n    }).then(result => result)\n});\n\nexport const fetchAffectedSystemsByCVE = (cve, apiProps) =>({\n    type: ActionTypes.FETCH_AFFECTED_SYSTEMS_BY_CVE,\n    payload: new Promise(resolve => {\n        resolve(APIHelper.getAffectedSystemsByCVE(cve, apiProps));\n    }).then(result => result)\n});\n\nexport const fetchSystems = options => ({\n    type: ActionTypes.FETCH_SYSTEMS,\n    payload: new Promise(resolve => {\n        resolve(APIHelper.getSystems(options));\n    }).then(result => result)\n});\n\nexport const fetchCveDetails = synopsis => ({\n    type: ActionTypes.FETCH_CVE_DETAILS,\n    payload: new Promise(resolve => {\n        resolve(APIHelper.getCveDetails(synopsis));\n    }).then(result => result)\n});\n\nexport const handleCveDetailsError = () => ({\n    type: ActionTypes.HANDLE_CVE_DETAILS_ERROR,\n    payload: { error: true }\n});\n\nexport const fetchSystemDetails = system => ({\n    type: ActionTypes.FETCH_SYSTEM_DETAILS,\n    meta: { noError: true },\n    payload: new Promise(resolve => {\n        resolve(APIHelper.getSystemDetails(system));\n    }).then(result => result)\n});\n\nexport const fetchCveListByAccount = apiProps => ({\n    type: ActionTypes.FETCH_CVE_LIST,\n    meta: new Date(),\n    payload: APIHelper.getCveListByAccount(apiProps)\n});\n\nexport const optOutSystemAction = (system, status) => ({\n    type: ActionTypes.SYSTEM_OPT_OUT,\n    payload: new Promise(resolve => {\n        resolve(APIHelper.optOutSystem(system, status));\n    }).then(result => result)\n});\n\nexport const fetchCveListBySystem = apiProps => ({\n    type: ActionTypes.FETCH_SYSTEM_CVE_LIST,\n    meta: new Date(),\n    payload: APIHelper.getCveListBySystem(apiProps)\n});\n\nexport const changeSystemCveStatusAction = (inventoryId, cve, statusId, callback) => ({\n    type: ActionTypes.CHANGE_SYSTEM_CVE_STATUS,\n    payload: APIHelper.setSystemCveStatus(inventoryId, cve, statusId, callback)\n});\n\nexport const optOutSystemsAction = (system, status) => ({\n    type: ActionTypes.SYSTEM_OPT_OUT,\n    payload: new Promise(resolve => {\n        resolve(APIHelper.optOutSystems(system, status));\n    }).then(result => result)\n});\n\nexport const changeCveListParameters = apiProps => ({\n    type: ActionTypes.CHANGE_CVE_LIST_PARAMETERS,\n    payload: new Promise(resolve => {\n        resolve(apiProps);\n    }).then(result => result)\n});\n\nexport const changeExposedSystemsParameters = (params) => ({\n    type: ActionTypes.CHANGE_EXPOSED_SYSTEMS_PARAMETERS,\n    payload: params\n});\n\nexport const changeSystemCVEsParameters = (params) => ({\n    type: ActionTypes.CHANGE_SYSTEM_CVE_LIST_PARAMETERS,\n    payload: params\n});\n\nexport const selectCve = apiProps => ({\n    type: ActionTypes.SELECT_CVE,\n    payload: apiProps\n});\n\nexport const expandCve = apiProps => ({\n    type: ActionTypes.EXPAND_CVE,\n    payload: apiProps\n});\n\nexport const selectSystemCve = apiProps => ({\n    type: ActionTypes.SELECT_SYSTEM_CVE,\n    payload: apiProps\n});\n\nexport const expandSystemCve = apiProps => ({\n    type: ActionTypes.EXPAND_SYSTEM_CVE,\n    payload: apiProps\n});\n\nexport const expandRow = (id, isOpen) => ({\n    type: ActionTypes.EXPAND_ROW,\n    payload: { id, isOpen }\n});\n\nexport const selectEntities = (value, ids) => ({\n    type: ActionTypes.SELECT_ENTITIES,\n    payload: ids\n});\n\nexport const selectMultipleEntities = (selectedHosts) => ({\n    type: ActionTypes.SELECT_MULTIPLE_ENTITIES,\n    payload: selectedHosts\n});\n\nexport const changeSystemsParams = (params) => ({\n    type: ActionTypes.CHANGE_SYSTEMS_PARAMS,\n    payload: params\n});\n\nexport const clearSystemStore = () => ({\n    type: ActionTypes.CLEAR_SYSTEMS_STORE,\n    payload: []\n});\n\nexport const clearSystemCvesStore = () => ({\n    type: ActionTypes.CLEAR_SYSTEM_CVES_STORE,\n    payload: []\n});\n\nexport const clearCveStore = () => ({\n    type: ActionTypes.CLEAR_CVE_STORE,\n    payload: []\n});\n\nexport const fetchAffectedSystemsIdsByCve = (cve, apiProps) => ({\n    type: ActionTypes.FETCH_AFFECTED_SYSTEM_IDS_BY_CVE,\n    payload: APIHelper.getAffectedSystemsIdsByCve(cve, apiProps)\n});\n\nexport const fetchSystemsIds = (apiProps) => ({\n    type: ActionTypes.FETCH_SYSTEMS_IDS,\n    payload: APIHelper.getSystemsIds(apiProps)\n});\n\nexport const fetchCvesIds = (apiProps) => ({\n    type: ActionTypes.FETCH_CVE_LIST_IDS,\n    payload: APIHelper.getCveIdsList(apiProps)\n});\n\nexport const fetchSystemDetailsIds = (apiProps) =>({\n    type: ActionTypes.FETCH_SYTEM_DETAILS_IDS,\n    payload: APIHelper.getCveIdsBySystem(apiProps)\n});\n\nexport const clearInventoryStore = () =>({\n    type: ActionTypes.CLEAR_INVENTORY_STORE,\n    payload: []\n});\n\nexport const clearCVEsStore = () =>({\n    type: ActionTypes.CLEAR_CVES_STORE,\n    payload: []\n});\n","(function() {\n  \"use strict\";\n\nfunction immutableInit(config) {\n\n  // https://github.com/facebook/react/blob/v15.0.1/src/isomorphic/classic/element/ReactElement.js#L21\n  var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol.for && Symbol.for('react.element');\n  var REACT_ELEMENT_TYPE_FALLBACK = 0xeac7;\n\n  var globalConfig = {\n    use_static: false\n  };\n  if (isObject(config)) {\n      if (config.use_static !== undefined) {\n          globalConfig.use_static = Boolean(config.use_static);\n      }\n  }\n\n  function isObject(data) {\n    return (\n      typeof data === 'object' &&\n      !Array.isArray(data) &&\n      data !== null\n    );\n  }\n\n  function instantiateEmptyObject(obj) {\n      var prototype = Object.getPrototypeOf(obj);\n      if (!prototype) {\n          return {};\n      } else {\n          return Object.create(prototype);\n      }\n  }\n\n  function addPropertyTo(target, methodName, value) {\n    Object.defineProperty(target, methodName, {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: value\n    });\n  }\n\n  function banProperty(target, methodName) {\n    addPropertyTo(target, methodName, function() {\n      throw new ImmutableError(\"The \" + methodName +\n        \" method cannot be invoked on an Immutable data structure.\");\n    });\n  }\n\n  var immutabilityTag = \"__immutable_invariants_hold\";\n\n  function addImmutabilityTag(target) {\n    addPropertyTo(target, immutabilityTag, true);\n  }\n\n  function isImmutable(target) {\n    if (typeof target === \"object\") {\n      return target === null || Boolean(\n        Object.getOwnPropertyDescriptor(target, immutabilityTag)\n      );\n    } else {\n      // In JavaScript, only objects are even potentially mutable.\n      // strings, numbers, null, and undefined are all naturally immutable.\n      return true;\n    }\n  }\n\n  function isEqual(a, b) {\n    // Avoid false positives due to (NaN !== NaN) evaluating to true\n    return (a === b || (a !== a && b !== b));\n  }\n\n  function isMergableObject(target) {\n    return target !== null && typeof target === \"object\" && !(Array.isArray(target)) && !(target instanceof Date);\n  }\n\n  var mutatingObjectMethods = [\n    \"setPrototypeOf\"\n  ];\n\n  var nonMutatingObjectMethods = [\n    \"keys\"\n  ];\n\n  var mutatingArrayMethods = mutatingObjectMethods.concat([\n    \"push\", \"pop\", \"sort\", \"splice\", \"shift\", \"unshift\", \"reverse\"\n  ]);\n\n  var nonMutatingArrayMethods = nonMutatingObjectMethods.concat([\n    \"map\", \"filter\", \"slice\", \"concat\", \"reduce\", \"reduceRight\"\n  ]);\n\n  var mutatingDateMethods = mutatingObjectMethods.concat([\n    \"setDate\", \"setFullYear\", \"setHours\", \"setMilliseconds\", \"setMinutes\", \"setMonth\", \"setSeconds\",\n    \"setTime\", \"setUTCDate\", \"setUTCFullYear\", \"setUTCHours\", \"setUTCMilliseconds\", \"setUTCMinutes\",\n    \"setUTCMonth\", \"setUTCSeconds\", \"setYear\"\n  ]);\n\n  function ImmutableError(message) {\n    this.name = 'MyError';\n    this.message = message;\n    this.stack = (new Error()).stack;\n  }\n  ImmutableError.prototype = new Error();\n  ImmutableError.prototype.constructor = Error;\n\n  function makeImmutable(obj, bannedMethods) {\n    // Tag it so we can quickly tell it's immutable later.\n    addImmutabilityTag(obj);\n\n    if (\"development\" !== \"production\") {\n      // Make all mutating methods throw exceptions.\n      for (var index in bannedMethods) {\n        if (bannedMethods.hasOwnProperty(index)) {\n          banProperty(obj, bannedMethods[index]);\n        }\n      }\n\n      // Freeze it and return it.\n      Object.freeze(obj);\n    }\n\n    return obj;\n  }\n\n  function makeMethodReturnImmutable(obj, methodName) {\n    var currentMethod = obj[methodName];\n\n    addPropertyTo(obj, methodName, function() {\n      return Immutable(currentMethod.apply(obj, arguments));\n    });\n  }\n\n  function arraySet(idx, value, config) {\n    var deep          = config && config.deep;\n\n    if (idx in this) {\n      if (deep && this[idx] !== value && isMergableObject(value) && isMergableObject(this[idx])) {\n        value = Immutable.merge(this[idx], value, {deep: true, mode: 'replace'});\n      }\n      if (isEqual(this[idx], value)) {\n        return this;\n      }\n    }\n\n    var mutable = asMutableArray.call(this);\n    mutable[idx] = Immutable(value);\n    return makeImmutableArray(mutable);\n  }\n\n  var immutableEmptyArray = Immutable([]);\n\n  function arraySetIn(pth, value, config) {\n    var head = pth[0];\n\n    if (pth.length === 1) {\n      return arraySet.call(this, head, value, config);\n    } else {\n      var tail = pth.slice(1);\n      var thisHead = this[head];\n      var newValue;\n\n      if (typeof(thisHead) === \"object\" && thisHead !== null) {\n        // Might (validly) be object or array\n        newValue = Immutable.setIn(thisHead, tail, value);\n      } else {\n        var nextHead = tail[0];\n        // If the next path part is a number, then we are setting into an array, else an object.\n        if (nextHead !== '' && isFinite(nextHead)) {\n          newValue = arraySetIn.call(immutableEmptyArray, tail, value);\n        } else {\n          newValue = objectSetIn.call(immutableEmptyObject, tail, value);\n        }\n      }\n\n      if (head in this && thisHead === newValue) {\n        return this;\n      }\n\n      var mutable = asMutableArray.call(this);\n      mutable[head] = newValue;\n      return makeImmutableArray(mutable);\n    }\n  }\n\n  function makeImmutableArray(array) {\n    // Don't change their implementations, but wrap these functions to make sure\n    // they always return an immutable value.\n    for (var index in nonMutatingArrayMethods) {\n      if (nonMutatingArrayMethods.hasOwnProperty(index)) {\n        var methodName = nonMutatingArrayMethods[index];\n        makeMethodReturnImmutable(array, methodName);\n      }\n    }\n\n    if (!globalConfig.use_static) {\n      addPropertyTo(array, \"flatMap\",  flatMap);\n      addPropertyTo(array, \"asObject\", asObject);\n      addPropertyTo(array, \"asMutable\", asMutableArray);\n      addPropertyTo(array, \"set\", arraySet);\n      addPropertyTo(array, \"setIn\", arraySetIn);\n      addPropertyTo(array, \"update\", update);\n      addPropertyTo(array, \"updateIn\", updateIn);\n      addPropertyTo(array, \"getIn\", getIn);\n    }\n\n    for(var i = 0, length = array.length; i < length; i++) {\n      array[i] = Immutable(array[i]);\n    }\n\n    return makeImmutable(array, mutatingArrayMethods);\n  }\n\n  function makeImmutableDate(date) {\n    if (!globalConfig.use_static) {\n      addPropertyTo(date, \"asMutable\", asMutableDate);\n    }\n\n    return makeImmutable(date, mutatingDateMethods);\n  }\n\n  function asMutableDate() {\n    return new Date(this.getTime());\n  }\n\n  /**\n   * Effectively performs a map() over the elements in the array, using the\n   * provided iterator, except that whenever the iterator returns an array, that\n   * array's elements are added to the final result instead of the array itself.\n   *\n   * @param {function} iterator - The iterator function that will be invoked on each element in the array. It will receive three arguments: the current value, the current index, and the current object.\n   */\n  function flatMap(iterator) {\n    // Calling .flatMap() with no arguments is a no-op. Don't bother cloning.\n    if (arguments.length === 0) {\n      return this;\n    }\n\n    var result = [],\n        length = this.length,\n        index;\n\n    for (index = 0; index < length; index++) {\n      var iteratorResult = iterator(this[index], index, this);\n\n      if (Array.isArray(iteratorResult)) {\n        // Concatenate Array results into the return value we're building up.\n        result.push.apply(result, iteratorResult);\n      } else {\n        // Handle non-Array results the same way map() does.\n        result.push(iteratorResult);\n      }\n    }\n\n    return makeImmutableArray(result);\n  }\n\n  /**\n   * Returns an Immutable copy of the object without the given keys included.\n   *\n   * @param {array} keysToRemove - A list of strings representing the keys to exclude in the return value. Instead of providing a single array, this method can also be called by passing multiple strings as separate arguments.\n   */\n  function without(remove) {\n    // Calling .without() with no arguments is a no-op. Don't bother cloning.\n    if (typeof remove === \"undefined\" && arguments.length === 0) {\n      return this;\n    }\n\n    if (typeof remove !== \"function\") {\n      // If we weren't given an array, use the arguments list.\n      var keysToRemoveArray = (Array.isArray(remove)) ?\n         remove.slice() : Array.prototype.slice.call(arguments);\n\n      // Convert numeric keys to strings since that's how they'll\n      // come from the enumeration of the object.\n      keysToRemoveArray.forEach(function(el, idx, arr) {\n        if(typeof(el) === \"number\") {\n          arr[idx] = el.toString();\n        }\n      });\n\n      remove = function(val, key) {\n        return keysToRemoveArray.indexOf(key) !== -1;\n      };\n    }\n\n    var result = instantiateEmptyObject(this);\n\n    for (var key in this) {\n      if (this.hasOwnProperty(key) && remove(this[key], key) === false) {\n        result[key] = this[key];\n      }\n    }\n\n    return makeImmutableObject(result);\n  }\n\n  function asMutableArray(opts) {\n    var result = [], i, length;\n\n    if(opts && opts.deep) {\n      for(i = 0, length = this.length; i < length; i++) {\n        result.push(asDeepMutable(this[i]));\n      }\n    } else {\n      for(i = 0, length = this.length; i < length; i++) {\n        result.push(this[i]);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Effectively performs a [map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map) over the elements in the array, expecting that the iterator function\n   * will return an array of two elements - the first representing a key, the other\n   * a value. Then returns an Immutable Object constructed of those keys and values.\n   *\n   * @param {function} iterator - A function which should return an array of two elements - the first representing the desired key, the other the desired value.\n   */\n  function asObject(iterator) {\n    // If no iterator was provided, assume the identity function\n    // (suggesting this array is already a list of key/value pairs.)\n    if (typeof iterator !== \"function\") {\n      iterator = function(value) { return value; };\n    }\n\n    var result = {},\n        length = this.length,\n        index;\n\n    for (index = 0; index < length; index++) {\n      var pair  = iterator(this[index], index, this),\n          key   = pair[0],\n          value = pair[1];\n\n      result[key] = value;\n    }\n\n    return makeImmutableObject(result);\n  }\n\n  function asDeepMutable(obj) {\n    if (\n      (!obj) ||\n      (typeof obj !== 'object') ||\n      (!Object.getOwnPropertyDescriptor(obj, immutabilityTag)) ||\n      (obj instanceof Date)\n    ) { return obj; }\n    return Immutable.asMutable(obj, {deep: true});\n  }\n\n  function quickCopy(src, dest) {\n    for (var key in src) {\n      if (Object.getOwnPropertyDescriptor(src, key)) {\n        dest[key] = src[key];\n      }\n    }\n\n    return dest;\n  }\n\n  /**\n   * Returns an Immutable Object containing the properties and values of both\n   * this object and the provided object, prioritizing the provided object's\n   * values whenever the same key is present in both objects.\n   *\n   * @param {object} other - The other object to merge. Multiple objects can be passed as an array. In such a case, the later an object appears in that list, the higher its priority.\n   * @param {object} config - Optional config object that contains settings. Supported settings are: {deep: true} for deep merge and {merger: mergerFunc} where mergerFunc is a function\n   *                          that takes a property from both objects. If anything is returned it overrides the normal merge behaviour.\n   */\n  function merge(other, config) {\n    // Calling .merge() with no arguments is a no-op. Don't bother cloning.\n    if (arguments.length === 0) {\n      return this;\n    }\n\n    if (other === null || (typeof other !== \"object\")) {\n      throw new TypeError(\"Immutable#merge can only be invoked with objects or arrays, not \" + JSON.stringify(other));\n    }\n\n    var receivedArray = (Array.isArray(other)),\n        deep          = config && config.deep,\n        mode          = config && config.mode || 'merge',\n        merger        = config && config.merger,\n        result;\n\n    // Use the given key to extract a value from the given object, then place\n    // that value in the result object under the same key. If that resulted\n    // in a change from this object's value at that key, set anyChanges = true.\n    function addToResult(currentObj, otherObj, key) {\n      var immutableValue = Immutable(otherObj[key]);\n      var mergerResult = merger && merger(currentObj[key], immutableValue, config);\n      var currentValue = currentObj[key];\n\n      if ((result !== undefined) ||\n        (mergerResult !== undefined) ||\n        (!currentObj.hasOwnProperty(key)) ||\n        !isEqual(immutableValue, currentValue)) {\n\n        var newValue;\n\n        if (mergerResult !== undefined) {\n          newValue = mergerResult;\n        } else if (deep && isMergableObject(currentValue) && isMergableObject(immutableValue)) {\n          newValue = Immutable.merge(currentValue, immutableValue, config);\n        } else {\n          newValue = immutableValue;\n        }\n\n        if (!isEqual(currentValue, newValue) || !currentObj.hasOwnProperty(key)) {\n          if (result === undefined) {\n            // Make a shallow clone of the current object.\n            result = quickCopy(currentObj, instantiateEmptyObject(currentObj));\n          }\n\n          result[key] = newValue;\n        }\n      }\n    }\n\n    function clearDroppedKeys(currentObj, otherObj) {\n      for (var key in currentObj) {\n        if (!otherObj.hasOwnProperty(key)) {\n          if (result === undefined) {\n            // Make a shallow clone of the current object.\n            result = quickCopy(currentObj, instantiateEmptyObject(currentObj));\n          }\n          delete result[key];\n        }\n      }\n    }\n\n    var key;\n\n    // Achieve prioritization by overriding previous values that get in the way.\n    if (!receivedArray) {\n      // The most common use case: just merge one object into the existing one.\n      for (key in other) {\n        if (Object.getOwnPropertyDescriptor(other, key)) {\n          addToResult(this, other, key);\n        }\n      }\n      if (mode === 'replace') {\n        clearDroppedKeys(this, other);\n      }\n    } else {\n      // We also accept an Array\n      for (var index = 0, length = other.length; index < length; index++) {\n        var otherFromArray = other[index];\n\n        for (key in otherFromArray) {\n          if (otherFromArray.hasOwnProperty(key)) {\n            addToResult(result !== undefined ? result : this, otherFromArray, key);\n          }\n        }\n      }\n    }\n\n    if (result === undefined) {\n      return this;\n    } else {\n      return makeImmutableObject(result);\n    }\n  }\n\n  function objectReplace(value, config) {\n    var deep          = config && config.deep;\n\n    // Calling .replace() with no arguments is a no-op. Don't bother cloning.\n    if (arguments.length === 0) {\n      return this;\n    }\n\n    if (value === null || typeof value !== \"object\") {\n      throw new TypeError(\"Immutable#replace can only be invoked with objects or arrays, not \" + JSON.stringify(value));\n    }\n\n    return Immutable.merge(this, value, {deep: deep, mode: 'replace'});\n  }\n\n  var immutableEmptyObject = Immutable({});\n\n  function objectSetIn(path, value, config) {\n    if (!(Array.isArray(path)) || path.length === 0) {\n      throw new TypeError(\"The first argument to Immutable#setIn must be an array containing at least one \\\"key\\\" string.\");\n    }\n\n    var head = path[0];\n    if (path.length === 1) {\n      return objectSet.call(this, head, value, config);\n    }\n\n    var tail = path.slice(1);\n    var newValue;\n    var thisHead = this[head];\n\n    if (this.hasOwnProperty(head) && typeof(thisHead) === \"object\" && thisHead !== null) {\n      // Might (validly) be object or array\n      newValue = Immutable.setIn(thisHead, tail, value);\n    } else {\n      newValue = objectSetIn.call(immutableEmptyObject, tail, value);\n    }\n\n    if (this.hasOwnProperty(head) && thisHead === newValue) {\n      return this;\n    }\n\n    var mutable = quickCopy(this, instantiateEmptyObject(this));\n    mutable[head] = newValue;\n    return makeImmutableObject(mutable);\n  }\n\n  function objectSet(property, value, config) {\n    var deep          = config && config.deep;\n\n    if (this.hasOwnProperty(property)) {\n      if (deep && this[property] !== value && isMergableObject(value) && isMergableObject(this[property])) {\n        value = Immutable.merge(this[property], value, {deep: true, mode: 'replace'});\n      }\n      if (isEqual(this[property], value)) {\n        return this;\n      }\n    }\n\n    var mutable = quickCopy(this, instantiateEmptyObject(this));\n    mutable[property] = Immutable(value);\n    return makeImmutableObject(mutable);\n  }\n\n  function update(property, updater) {\n    var restArgs = Array.prototype.slice.call(arguments, 2);\n    var initialVal = this[property];\n    return Immutable.set(this, property, updater.apply(initialVal, [initialVal].concat(restArgs)));\n  }\n\n  function getInPath(obj, path) {\n    /*jshint eqnull:true */\n    for (var i = 0, l = path.length; obj != null && i < l; i++) {\n      obj = obj[path[i]];\n    }\n\n    return (i && i == l) ? obj : undefined;\n  }\n\n  function updateIn(path, updater) {\n    var restArgs = Array.prototype.slice.call(arguments, 2);\n    var initialVal = getInPath(this, path);\n\n    return Immutable.setIn(this, path, updater.apply(initialVal, [initialVal].concat(restArgs)));\n  }\n\n  function getIn(path, defaultValue) {\n    var value = getInPath(this, path);\n    return value === undefined ? defaultValue : value;\n  }\n\n  function asMutableObject(opts) {\n    var result = instantiateEmptyObject(this), key;\n\n    if(opts && opts.deep) {\n      for (key in this) {\n        if (this.hasOwnProperty(key)) {\n          result[key] = asDeepMutable(this[key]);\n        }\n      }\n    } else {\n      for (key in this) {\n        if (this.hasOwnProperty(key)) {\n          result[key] = this[key];\n        }\n      }\n    }\n\n    return result;\n  }\n\n  // Creates plain object to be used for cloning\n  function instantiatePlainObject() {\n    return {};\n  }\n\n  // Finalizes an object with immutable methods, freezes it, and returns it.\n  function makeImmutableObject(obj) {\n    if (!globalConfig.use_static) {\n      addPropertyTo(obj, \"merge\", merge);\n      addPropertyTo(obj, \"replace\", objectReplace);\n      addPropertyTo(obj, \"without\", without);\n      addPropertyTo(obj, \"asMutable\", asMutableObject);\n      addPropertyTo(obj, \"set\", objectSet);\n      addPropertyTo(obj, \"setIn\", objectSetIn);\n      addPropertyTo(obj, \"update\", update);\n      addPropertyTo(obj, \"updateIn\", updateIn);\n      addPropertyTo(obj, \"getIn\", getIn);\n    }\n\n    return makeImmutable(obj, mutatingObjectMethods);\n  }\n\n  // Returns true if object is a valid react element\n  // https://github.com/facebook/react/blob/v15.0.1/src/isomorphic/classic/element/ReactElement.js#L326\n  function isReactElement(obj) {\n    return typeof obj === 'object' &&\n           obj !== null &&\n           (obj.$$typeof === REACT_ELEMENT_TYPE_FALLBACK || obj.$$typeof === REACT_ELEMENT_TYPE);\n  }\n\n  function isFileObject(obj) {\n    return typeof File !== 'undefined' &&\n           obj instanceof File;\n  }\n\n  function isBlobObject(obj) {\n    return typeof Blob !== 'undefined' &&\n           obj instanceof Blob;\n  }\n\n  function isPromise(obj) {\n    return typeof obj === 'object' &&\n           typeof obj.then === 'function';\n  }\n\n  function isError(obj) {\n    return obj instanceof Error;\n  }\n\n  function Immutable(obj, options, stackRemaining) {\n    if (isImmutable(obj) || isReactElement(obj) || isFileObject(obj) || isBlobObject(obj) || isError(obj)) {\n      return obj;\n    } else if (isPromise(obj)) {\n      return obj.then(Immutable);\n    } else if (Array.isArray(obj)) {\n      return makeImmutableArray(obj.slice());\n    } else if (obj instanceof Date) {\n      return makeImmutableDate(new Date(obj.getTime()));\n    } else {\n      // Don't freeze the object we were given; make a clone and use that.\n      var prototype = options && options.prototype;\n      var instantiateEmptyObject =\n        (!prototype || prototype === Object.prototype) ?\n          instantiatePlainObject : (function() { return Object.create(prototype); });\n      var clone = instantiateEmptyObject();\n\n      if (\"development\" !== \"production\") {\n        /*jshint eqnull:true */\n        if (stackRemaining == null) {\n          stackRemaining = 64;\n        }\n        if (stackRemaining <= 0) {\n          throw new ImmutableError(\"Attempt to construct Immutable from a deeply nested object was detected.\" +\n            \" Have you tried to wrap an object with circular references (e.g. React element)?\" +\n            \" See https://github.com/rtfeldman/seamless-immutable/wiki/Deeply-nested-object-was-detected for details.\");\n        }\n        stackRemaining -= 1;\n      }\n\n      for (var key in obj) {\n        if (Object.getOwnPropertyDescriptor(obj, key)) {\n          clone[key] = Immutable(obj[key], undefined, stackRemaining);\n        }\n      }\n\n      return makeImmutableObject(clone);\n    }\n  }\n\n  // Wrapper to allow the use of object methods as static methods of Immutable.\n  function toStatic(fn) {\n    function staticWrapper() {\n      var args = [].slice.call(arguments);\n      var self = args.shift();\n      return fn.apply(self, args);\n    }\n\n    return staticWrapper;\n  }\n\n  // Wrapper to allow the use of object methods as static methods of Immutable.\n  // with the additional condition of choosing which function to call depending\n  // if argument is an array or an object.\n  function toStaticObjectOrArray(fnObject, fnArray) {\n    function staticWrapper() {\n      var args = [].slice.call(arguments);\n      var self = args.shift();\n      if (Array.isArray(self)) {\n          return fnArray.apply(self, args);\n      } else {\n          return fnObject.apply(self, args);\n      }\n    }\n\n    return staticWrapper;\n  }\n\n  // Wrapper to allow the use of object methods as static methods of Immutable.\n  // with the additional condition of choosing which function to call depending\n  // if argument is an array or an object or a date.\n  function toStaticObjectOrDateOrArray(fnObject, fnArray, fnDate) {\n    function staticWrapper() {\n      var args = [].slice.call(arguments);\n      var self = args.shift();\n      if (Array.isArray(self)) {\n          return fnArray.apply(self, args);\n      } else if (self instanceof Date) {\n          return fnDate.apply(self, args);\n      } else {\n          return fnObject.apply(self, args);\n      }\n    }\n\n    return staticWrapper;\n  }\n\n  // Export the library\n  Immutable.from           = Immutable;\n  Immutable.isImmutable    = isImmutable;\n  Immutable.ImmutableError = ImmutableError;\n  Immutable.merge          = toStatic(merge);\n  Immutable.replace        = toStatic(objectReplace);\n  Immutable.without        = toStatic(without);\n  Immutable.asMutable      = toStaticObjectOrDateOrArray(asMutableObject, asMutableArray, asMutableDate);\n  Immutable.set            = toStaticObjectOrArray(objectSet, arraySet);\n  Immutable.setIn          = toStaticObjectOrArray(objectSetIn, arraySetIn);\n  Immutable.update         = toStatic(update);\n  Immutable.updateIn       = toStatic(updateIn);\n  Immutable.getIn          = toStatic(getIn);\n  Immutable.flatMap        = toStatic(flatMap);\n  Immutable.asObject       = toStatic(asObject);\n  if (!globalConfig.use_static) {\n      Immutable.static = immutableInit({\n          use_static: true\n      });\n  }\n\n  Object.freeze(Immutable);\n\n  return Immutable;\n}\n\n  var Immutable = immutableInit();\n  /* istanbul ignore if */\n  if (typeof define === 'function' && define.amd) {\n    define(function() {\n      return Immutable;\n    });\n  } else if (typeof module === \"object\") {\n    module.exports = Immutable;\n  } else if (typeof exports === \"object\") {\n    exports.Immutable = Immutable;\n  } else if (typeof window === \"object\") {\n    window.Immutable = Immutable;\n  } else if (typeof global === \"object\") {\n    global.Immutable = Immutable;\n  }\n})();\n","import { Button, FormGroup, FormSelect, FormSelectOption, Modal, TextArea } from '@patternfly/react-core';\nimport {\n    addNotification,\n    clearNotifications\n} from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\nimport propTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { STATUS_OPTIONS } from '../../../Helpers/constants';\nimport messages from '../../../Messages';\nimport { FormattedMessage } from 'react-intl';\n\nexport function useStatusSelect(initialValue) {\n    const [statusId, setStatusId] = useState(initialValue);\n    const [props, setProps] = useState({});\n    const StatusSelect = (\n        <FormGroup label={<FormattedMessage {...messages.statusLabel} />} fieldId={'statusId'}>\n            <FormSelect aria-label=\"Select Input\" onChange={selection => setStatusId(selection)} value={statusId} {...props}>\n                {STATUS_OPTIONS.map(({ value, label }) => (\n                    <FormSelectOption key={value} value={value} label={label} />\n                ))}\n            </FormSelect>\n        </FormGroup>\n    );\n    return { StatusSelect, statusId, setStatusId, setProps };\n}\n\nexport function useJustificationInput(initialValue) {\n    const [justification, setJustification] = useState(initialValue);\n    const [props, setProps] = useState({});\n    const JustificationInput = (\n        <FormGroup label={<FormattedMessage {...messages.justificationLabel} />} fieldId={'label'}>\n            <TextArea\n                key=\"input\"\n                type=\"text\"\n                onChange={value => setJustification(value)}\n                value={justification}\n                resizeOrientation='vertical'\n                aria-label={'justification note'}\n                {...props}\n            />\n        </FormGroup>\n    );\n    return { JustificationInput, justification, setJustification, setProps };\n}\n\nexport const BaseModal = ({ items, title, onSave, onSuccessNotification, ...props }) => {\n    const [targetItems, setTargetItems] = useState(items);\n\n    const createNotification = notification => {\n        return props.addNotification(notification);\n    };\n\n    const handleClose = () => {\n        setTargetItems(undefined);\n    };\n\n    const handleSave = () => {\n        onSave().then(() => createNotification(onSuccessNotification));\n        handleClose();\n    };\n\n    useEffect(() => {\n        return () => {\n            props.clearNotifications();\n        };\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Modal\n                variant=\"small\"\n                title={title}\n                isOpen={Boolean(targetItems)}\n                onClose={handleClose}\n                actions={[\n                    <Button key=\"save\" variant=\"primary\" onClick={handleSave}>\n                        {<FormattedMessage {...messages.save} />}\n                    </Button>,\n                    <Button key=\"cancel\" variant=\"secondary\" onClick={handleClose}>\n                        {<FormattedMessage {...messages.cancel} />}\n                    </Button>\n                ]}\n            >\n                {props.children}\n            </Modal>\n        </React.Fragment>\n    );\n};\n\nBaseModal.propTypes = {\n    children: propTypes.any,\n    onClose: propTypes.func,\n    items: propTypes.array,\n    updateRef: propTypes.func,\n    addNotification: propTypes.func,\n    title: propTypes.string,\n    onSave: propTypes.func,\n    onSuccessNotification: propTypes.object,\n    clearNotifications: propTypes.func\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addNotification: data => dispatch(addNotification(data)),\n        clearNotifications: () => dispatch(clearNotifications())\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(BaseModal);\n","import React, { Fragment } from 'react';\nimport { Text, TextContent, TextVariants, Tooltip } from '@patternfly/react-core';\nimport PropType from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport InsightsReportCard from '@redhat-cloud-services/frontend-components-inventory-insights/esm/InsightsReportCard';\nimport { CSAwIcon } from '../../PresentationalComponents/CSAwIcon/CSAwIcon';\nimport Label from '../../PresentationalComponents/Snippets/Label';\nimport messages from '../../../Messages';\n\nexport const InsightsSystemRule = ({ rule, cve }) => {\n    return (\n        <Fragment>\n            { !rule ? <InsightsNoSystemRule cve={cve}/> :\n                <Fragment>\n                    <TextContent className=\"icon-with-label\">\n                        <Text component={TextVariants.h3} style={{ paddingLeft: 'var(--pf-global--spacer--lg)' }}>\n                            <Label>\n                                <Tooltip content={<FormattedMessage {...messages.rulesIconTooltip} />}>\n                                    <CSAwIcon />\n                                </Tooltip>\n                            </Label>\n                            <span className=\"rule-name\">{rule.rule.description || rule.rule.rule_id}</span>\n                        </Text>\n                    </TextContent>\n\n                    <InsightsReportCard report={rule} />\n                </Fragment>\n            }\n        </Fragment>\n\n    );\n};\n\nInsightsSystemRule.propTypes = {\n    rule: PropType.shape({\n        rule: PropType.object,\n        details: PropType.object,\n        resulotion: PropType.object\n    }).isRequired,\n    cve: PropType.string\n};\n\nexport const InsightsNoSystemRule = ({ cve }) => {\n    return (\n        <TextContent className=\"icon-with-label\">\n            <Text component={TextVariants.p}>\n                <FormattedMessage {...messages.exposedSystemNoRules} values={{ cve }} />\n            </Text>\n            <Text component={TextVariants.p} className=\"pf-u-mb-sm\">\n                <FormattedMessage {...messages.exposedSystemNoRulesInfo}/> <CSAwIcon/>\n            </Text>\n            <Text\n                component={TextVariants.a}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://access.redhat.com/articles/2968471\"\n            >\n                <FormattedMessage {...messages.exposedSystemNoRulesInfoLink} />\n            </Text>\n        </TextContent>\n    );\n};\n\nInsightsNoSystemRule.propTypes = {\n    cve: PropType.string\n};\n","import { Tooltip } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon, ServerAltIcon } from '@patternfly/react-icons';\nimport { processDate } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport React from 'react';\nimport { BUSINESS_RISK_OPTIONS, STATUS_OPTIONS } from './constants';\nimport { FormattedMessage } from 'react-intl';\nimport { InsightsSystemRule, InsightsNoSystemRule } from '../Components/SmartComponents/InsightsSystemRule/InsightsSystemRule';\nimport messages from '../Messages';\n\n/**\n * Creates the tables rows for systems exposed table\n *\n * @param {Boolean} isLoading\n * @param {Array} payload fetched data\n * @param {Array} openedRows id of opened(expaned) row\n *\n */\nexport const createExposedSystemsTable = ({ isLoading, payload, openedRows, cve }) => {\n    if (isLoading) {\n        return { data: (payload && payload.data) || [], meta: {}, isLoading };\n    }\n\n    let { data, meta } = payload;\n    const cvesCount = data && data.length;\n    const tableRows = data.map(item => ({\n        ...item.attributes,\n        id: item.id,\n        isOpen: openedRows.includes(item.id),\n        status: item.attributes.status_name,\n        children: item.attributes.rule\n            ? <InsightsSystemRule cve={cve} rule={item.attributes.rule} />\n            : <InsightsNoSystemRule cve={cve}/>\n    }));\n\n    return { data: tableRows, meta: { ...meta, cvesCount },  isLoading };\n\n};\n\nexport function createSystemsListTable(affectedSystems) {\n    let isLoading = affectedSystems.isLoading;\n    if (!isLoading) {\n        let payload = affectedSystems.payload.asMutable();\n        let { data, meta } = payload;\n        const dataWithStatus = data.map(item => ({\n            ...item,\n            attributes: {\n                ...item.attributes,\n                status: (\n                    <span>\n                        {item.attributes.cve_status_id !== item.attributes.status_id ? (\n                            <Tooltip content={<FormattedMessage {...messages.onlyThisSystemCvePair} />}>\n                                <ServerAltIcon />\n                            </Tooltip>\n                        ) : (\n                            ''\n                        )}{' '}\n                        {item.attributes.status_id !== undefined &&\n                            STATUS_OPTIONS.find(option => parseInt(option.value) === item.attributes.status_id).label}\n                    </span>\n                )\n            }\n        }));\n        return { data: dataWithStatus, meta, isLoading };\n    }\n\n    return { data: (affectedSystems.payload && affectedSystems.payload.data) || [], meta: {}, isLoading };\n}\n\nexport function createCveDetailsPage(cves) {\n    let isLoading = cves.isLoading;\n    let error = cves.error;\n    if (!isLoading && !error) {\n        let payload = cves.payload.asMutable();\n        let { data, meta } = payload;\n\n        data = {\n            impact: data.attributes.impact,\n            public_date: processDate(data.attributes.public_date),\n            description: data.attributes.description,\n            synopsis: data.attributes.synopsis,\n            rh_link: createRHDBLink(data.attributes.synopsis),\n            mitre_link: createMitreLink(data.attributes.synopsis),\n            cvss3_score: data.attributes.cvss3_score,\n            cvss2_score: data.attributes.cvss2_score,\n            cvss2_metrics: data.attributes.cvss2_metrics,\n            cvss3_metrics: data.attributes.cvss3_metrics,\n            business_risk: BUSINESS_RISK_OPTIONS.find(\n                option => option.value === data.attributes.business_risk_id.toString()\n            ).label,\n            business_risk_justification: data.attributes.business_risk_text,\n            business_risk_id: data.attributes.business_risk_id,\n            status: STATUS_OPTIONS.find(option => option.value === data.attributes.status_id.toString()).label,\n            status_id: data.attributes.status_id,\n            status_justification: data.attributes.status_text,\n            systems_status_detail: data.attributes.systems_status_detail,\n            systems_status_divergent: data.attributes.systems_status_divergent,\n            rules: data.attributes.rules\n        };\n\n        return { data, meta, isLoading };\n    }\n\n    return { data: [], meta: {}, isLoading, error };\n}\n\nexport function createRHDBLink(item) {\n    return (\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href={'https://access.redhat.com/security/cve/' + item}>\n            {<FormattedMessage {...messages.RHDBLink} />}{<ExternalLinkAltIcon className=\"pf-u-ml-sm\"/>}\n        </a>\n    );\n}\n\nexport function createMitreLink(item) {\n    return (\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href={'https://cve.mitre.org/cgi-bin/cvename.cgi?name=' + item}>\n            {<FormattedMessage {...messages.MITRELink} />}{<ExternalLinkAltIcon />}\n        </a>\n    );\n}\n\nexport const cveTableRowActions = (methods, rowIndex) => {\n    return (rowIndex % 2 === 0) ?\n        [\n            {\n                title: <FormattedMessage {...messages.editBusinessRisk} />,\n                onClick: (event, rowId, rowData) =>\n                    methods.showBusinessRiskModal([\n                        {\n                            id: rowData.id,\n                            business_risk_id: rowData.business_risk_id,\n                            justification: rowData.business_risk_justification\n                        }\n                    ])\n            },\n            {\n                title: <FormattedMessage {...messages.editStatus} />,\n                onClick: (event, rowId, rowData) =>\n                    methods.showStatusModal([\n                        {\n                            id: rowData.id,\n                            status_id: rowData.status_id,\n                            justification: rowData.status_justification\n                        }\n                    ])\n            }\n        ] : null;\n};\n\nexport const systemCveTableRowActions = (methods, entity, rowIndex) => {\n    return (rowIndex % 2 === 0) ?\n        [{\n            title: <FormattedMessage {...messages.editStatus} />,\n            onClick: (event, rowId, rowData) =>\n                methods.showStatusModal([\n                    {\n                        id: rowData.id,\n                        display_name: entity.display_name,\n                        status_id: rowData.status_id,\n                        cve_status_id: rowData.cve_status_id,\n                        justification: rowData.status_justification,\n                        cve_justification: rowData.cve_status_justification\n                    }\n                ],\n                entity\n                )\n        }] : null;\n};\n\nexport const systemExposedTableRowActions = (showStatusModal, cve, rowIndex) => {\n    return (rowIndex % 2 === 0) ?\n        [{\n            title: <FormattedMessage {...messages.editStatus} />,\n            onClick: (event, rowId, rowData) => {\n                showStatusModal(\n                    [{\n                        id: cve.id,\n                        status_id: cve.status_id,\n                        justification: cve.justification\n                    }],\n                    [{\n                        id: rowData.id,\n                        display_name: rowData.display_name,\n                        status_id: rowData.status_id,\n                        justification: rowData.status_text\n                    }]\n                );\n            }\n        }] : null;\n};\n\nexport const systemTableRowActions = (optOut, isOptOut) => [\n    {\n        title: (\n            isOptOut\n                ? <FormattedMessage {...messages.kebabResumeAnalysis} />\n                : <FormattedMessage {...messages.kebabExcludeAnalysis} />\n        ),\n        onClick: (event, rowId, rowData) => {\n            optOut([rowData.id]);\n        }\n    }\n];\n","import union from 'lodash/union';\nimport messages from '../Messages';\nimport { intl } from '../Utilities/IntlProvider';\n\nconst selectAllCheckbox = ({ selectedItems, selectorHandler, items, fetchResource, multiRow = false }) => {\n\n    const selectedItemsArray = Array.from(selectedItems); // we might get array or set and there's no common method for size\n    const selectedItemsCount = selectedItemsArray && selectedItemsArray.length;\n    const { meta, data } = items;\n    const selectPageNumber = data && (((Array.isArray(data) && data.length) && multiRow) ? data.length / 2 : data.length);\n\n    const handleSelectPage = () => {\n        const { data } = items;\n        const collectedItems = union(data.filter(item => item.id).map(item => item.id), selectedItemsArray);\n        selectorHandler(true, collectedItems);\n    };\n\n    const handleUnselectAll = () => {\n        selectorHandler(false, []);\n    };\n\n    const handleSelectAll = () => {\n\n        let { payload } = fetchResource && fetchResource({ page_size: meta.total_items, page: 1 });\n        payload &&\n            payload.then(({ data: response }) => {\n                //TODO: current only one new endpoint is introduced. Once, we have all new endpoints,  get rid of this map\n                const items = response.map(item => item.id && item.id || item);\n                selectorHandler(true, items);\n            });\n    };\n\n    const handleOnCheckboxChange = () => {\n        if (selectedItemsCount === 0) {\n            handleSelectAll();\n        } else {\n            handleUnselectAll();\n        }\n    };\n\n    return ({\n        handleOnCheckboxChange,\n        items: [\n            {\n                title: intl.formatMessage(messages.selectNone),\n                onClick: handleUnselectAll\n            },\n            {\n                title: `${intl.formatMessage(messages.selectPage, { count: selectPageNumber })}`,\n                onClick: handleSelectPage\n            },\n            {\n                title: `${intl.formatMessage(messages.selectAll, { count: meta.total_items ? meta.total_items : 0 })}`,\n                onClick: handleSelectAll\n            }\n        ]\n    }\n\n    );\n};\n\nexport default selectAllCheckbox;\n","var baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    baseUniq = require('./_baseUniq'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array of unique values, in order, from all given arrays using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.union([2], [1, 2]);\n * // => [2, 1]\n */\nvar union = baseRest(function(arrays) {\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n});\n\nmodule.exports = union;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components';\nimport { intl } from '../../../../Utilities/IntlProvider';\n\nimport debounce from 'lodash/debounce';\nimport React from 'react';\n\nconst SearchFilter = (label, placeholder, search, apply) => {\n    const [searchValue, setSearchValue] = React.useState();\n    const [handleSearch] = React.useState(() =>\n        debounce(filter =>  {if (filter !== undefined) { apply({ filter, page: 1 }); }}, 400)\n    );\n\n    React.useEffect(() => setSearchValue(search), [search]);\n\n    return {\n        type: conditionalFilterType.text,\n        label: intl.formatMessage(label),\n        filterValues: {\n            'aria-label': 'search-field',\n            id: `search-${label.id}`,\n            onChange: (event, value) => {\n                setSearchValue(value);\n                handleSearch(value);\n            },\n            placeholder: intl.formatMessage(placeholder),\n            value: searchValue\n        }\n    };\n};\n\nexport default SearchFilter;\n","import messages from '../Messages';\nimport { FILTERS } from './constants';\nimport { intl } from '../Utilities/IntlProvider';\n\nexport const handleChangePage = (_event, page, apply) => apply({ page });\n\nexport const handleSetPageSize = (_event, perPage, apply) => apply({ page_size: perPage, page: 1 });\n\nexport const exportConfig = (methods) => (\n    { onSelect: (_event, fileType) =>   methods.downloadReport(fileType) }\n);\n\nexport const buildActiveFilters = (currentFilters, filterRulevalues = []) => {\n\n    const { filter } = currentFilters;\n\n    const buildChip = (key, parameter) => (\n        FILTERS[key].items.reduce((object, item) => {\n            if (parameter === item.value) {\n                object.name = item.label;\n                object.value = item.value ;\n            }\n            else if (key === 'security_rule' && !['true', 'false'].includes(parameter))\n            {\n                const filteredRule = filterRulevalues.find(({ value }) => value === parameter);\n                object.name = filteredRule && filteredRule.label || parameter ;\n                object.value = parameter;\n            }\n\n            return object;\n        }, {})\n    );\n\n    const buildChips = (paramValues, key) => {\n        return paramValues.reduce((values, parameter) => {\n            values.push(buildChip(key, parameter));\n            return values;\n        }, []);\n    };\n\n    const filterChips = Object.keys(FILTERS).reduce((array, key) => {\n        if (key !== 'show_all' && Object.keys(currentFilters).includes(key) && !['', undefined].includes(currentFilters[key])) {\n\n            const multiValue = typeof currentFilters[key] === 'string' && currentFilters[key].split(',');\n            const filteredValues = (multiValue && multiValue.length > 1)\n                                            && buildChips(multiValue, key)\n                                            || [buildChip(key, currentFilters[key])];\n\n            array.push({ key, multiValue, category: FILTERS[key].title, chips: filteredValues });\n        }\n\n        return array;\n    }, []);\n\n    filter && filterChips.push(\n        { key: 'filter',\n            category: intl.formatMessage(messages.searchLabel),\n            chips: [{ name: filter }]\n        }\n    );\n\n    return filterChips;\n};\n\nexport const removeFilters = (chips, apply) =>{\n    const emptyFilter = chips.reduce((obj, item) =>{\n        if (item.key === 'filter' || (item.multiValue && item.multiValue.length === 1)) {\n            obj[item.key] = '';\n        }\n        else {\n            obj[item.key] = item.multiValue.filter(value => !item.chips.some(chip => chip.value === value)).join(',');\n        }\n\n        return obj;\n    }, {});\n\n    apply(emptyFilter);\n};\n","import { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\n\nclass DownloadReport  {\n    constructor() {\n        this.defaultParams = {\n            page: 1,\n            page_size: Number.MAX_SAFE_INTEGER,\n            date: new Date().toISOString().replace(/[T:]/g, '-').split('.')[0] + '-utc'\n        };\n\n        this.params = {\n            cve: ''\n        };\n\n        this.pages = ['systems-exposed', 'system-cves', 'cves', 'system-list'];\n        this.formats = ['csv', 'json'];\n    }\n\n    filename = (page) => {\n        switch (page) {\n            case 'systems-exposed':\n                return `vulnerability_systems-exposed-${this.params.cve}--${this.defaultParams.date}`;\n            case 'system-list':\n                return `vulnerability_systems--${this.defaultParams.date}`;\n            default:\n                return `vulnerability_cves--${this.defaultParams.date}`;\n\n        }\n    }\n\n    checkTypes = (fetchData, page, format) => {\n        if (typeof fetchData !== 'function') {\n            throw `exec expects the 1st param to be funtion. Received ${typeof fetchData}`;\n        }\n\n        if (!this.pages.includes(page)) {\n            throw `Page ${page} does not exist`;\n        }\n\n        if (!this.formats.includes(format)) {\n            throw `Format ${format} is not supported`;\n        }\n    }\n\n    /**\n     * Execute and download the report\n     *\n     * @param {Function} fetchData - Function to be called in order to fetch data.\n     * @param {Object || Array} params - Object to be sent as request params. If you need to pass extra argument, pass an array.\n     * @param {String} format - Supported formats to download are CSV and JSON.\n     * @param {String} page - Name of the page based on which the filename will be determined.\n     * @returns {void}\n     */\n    exec = async (fetchData, params, format, page) => {\n        this.checkTypes(fetchData, page, format);\n        this.params.cve = Array.isArray(params) ? params[0] : '';\n\n        try {\n            let { payload } = Array.isArray(params)\n                ? await fetchData(this.params.cve, {\n                    ...params[1],\n                    ...this.defaultParams,\n                    data_format: format\n                }) :\n                await fetchData({\n                    ...params,\n                    ...this.defaultParams,\n                    data_format: format\n                });\n\n            let { data: response } = await payload;\n            let data = format === 'json' ? JSON.stringify(response) : response;\n            // downaloads the files\n            downloadFile(data, this.filename(page), format);\n        } catch (error) {\n            throw `${error}`;\n        }\n\n    }\n\n}\n\nexport default new DownloadReport();\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport {\n    Bullseye,\n    Button,\n    Card,\n    CardBody,\n    CardHeader,\n    EmptyStateVariant,\n    EmptyState,\n    EmptyStateBody,\n    EmptyStateIcon,\n    Text,\n    TextVariants,\n    TextContent,\n    Title\n} from '@patternfly/react-core';\n\nimport { CubesIcon, ExternalLinkAltIcon, FrownOpenIcon, SecurityIcon } from '@patternfly/react-icons';\nimport messages from '../../../Messages';\n\n// Reports that no CVEs were found after filtering results\nexport const FilterNotFoundForCVE = (\n    <Bullseye style={{ height: 'auto' }}>\n        <EmptyState variant={EmptyStateVariant.large}>\n            <Title headingLevel=\"h5\" size=\"lg\">\n                <FormattedMessage {...messages.emptyStateNoMatchingCves} />\n            </Title>\n            <TextContent>\n                <EmptyStateBody style={{ whiteSpace: 'normal' }}>\n                    <FormattedMessage {...messages.emptyStateMaybeFollowing} />\n                    <Text>\n                        <FormattedMessage {...messages.emptyStateNoCveReported} />\n                    </Text>\n                    <Text component={TextVariants.p}>\n                        <FormattedMessage {...messages.emptyStateForMoreInfo} />\n                        <a href=\"https://access.redhat.com/security/team/contact/\" target=\"__blank\" rel=\"noopener noreferrer\">\n                            <FormattedMessage {...messages.emptyStateForMoreLink} />  <ExternalLinkAltIcon />\n                        </a>\n                    </Text>\n                </EmptyStateBody>\n            </TextContent>\n        </EmptyState>\n    </Bullseye>\n);\n\nexport const FilterNotFoundForSystem = (\n    <Bullseye style={{ height: 'auto' }}>\n        <EmptyState variant={EmptyStateVariant.large}>\n            <Title headingLevel=\"h5\" size=\"lg\">\n                <FormattedMessage {...messages.emptyStateNoCvesReported} />\n            </Title>\n            <TextContent>\n                <EmptyStateBody style={{ whiteSpace: 'normal' }}>\n                    <Text>\n                        <FormattedMessage {...messages.emptyStateNoCveReported} />\n                    </Text>\n                    <Text component={TextVariants.p}>\n                        <FormattedMessage {...messages.emptyStateIfCveForSystem} />\n                        <a href=\"https://access.redhat.com/security/team/contact/\" target=\"__blank\" rel=\"noopener noreferrer\">\n                            <FormattedMessage {...messages.emptyStateForMoreLink} />  <ExternalLinkAltIcon />\n                        </a>\n                    </Text>\n                </EmptyStateBody>\n            </TextContent>\n        </EmptyState>\n    </Bullseye>\n);\n\nexport const EmptyCVEListForSystem = (\n    <Bullseye style={{ height: 'auto' }}>\n        <EmptyState variant={EmptyStateVariant.large}>\n            <Title headingLevel=\"h5\" size=\"lg\">\n                <FormattedMessage {...messages.emptyStateNoReportedSystem} />\n            </Title>\n            <TextContent>\n                <EmptyStateBody style={{ whiteSpace: 'normal' }}>\n                    <Text>\n                        <FormattedMessage {...messages.emptyStateNoCveAffects} />\n                    </Text>\n                    <Text component={TextVariants.p}>\n                        <FormattedMessage {...messages.emptyStateIfCveForSystem}/>\n                        <a href=\"https://access.redhat.com/security/team/contact/\" target=\"__blank\" rel=\"noopener noreferrer\">\n                            <FormattedMessage {...messages.emptyStateForMoreLink} />  <ExternalLinkAltIcon />\n                        </a>.\n                    </Text>\n\n                </EmptyStateBody>\n            </TextContent>\n        </EmptyState>\n    </Bullseye>\n);\n\nexport const EmptyExcludedSystem = ({ buttonAction }) => (\n    <Bullseye>\n        <EmptyState variant={EmptyStateVariant.large}>\n            <EmptyStateIcon icon={SecurityIcon} size={'sm'} />\n            <Title headingLevel=\"h5\" size=\"lg\">\n                <FormattedMessage {...messages.emptyStateSystemExcludedTitle} />\n            </Title>\n            <EmptyStateBody>\n                <FormattedMessage {...messages.emptyStateSystemExcludedBody} />\n            </EmptyStateBody>\n            <Button variant=\"primary\" component=\"a\" onClick={buttonAction}>\n                <FormattedMessage {...messages.emptyStateSystemResumeAnalysis} />\n            </Button>\n        </EmptyState>\n    </Bullseye>\n);\n\nEmptyExcludedSystem.propTypes = {\n    buttonAction: propTypes.func\n};\n\nexport const EmptyCVEList = (\n    <Bullseye style={{ height: 'auto' }}>\n        <EmptyState variant={EmptyStateVariant.large}>\n            <Title headingLevel=\"h5\" size=\"lg\">\n                <FormattedMessage {...messages.emptyStateNoReportedSystem} />\n            </Title>\n            <TextContent>\n                <EmptyStateBody style={{ whiteSpace: 'normal' }}>\n                    <Text>\n                        <FormattedMessage {...messages.emptyStateNoCveAffects} />\n                    </Text>\n                    <FormattedMessage {...messages.emptyStateIfCveForSystems}/>\n                    <a href=\"https://access.redhat.com/security/team/contact/\" target=\"__blank\" rel=\"noopener noreferrer\">\n                        <FormattedMessage {...messages.emptyStateForMoreLink} /> <ExternalLinkAltIcon />\n                    </a>\n                    .\n                </EmptyStateBody>\n            </TextContent>\n        </EmptyState>\n    </Bullseye>\n);\n\n// Indicates that Insights is not activated\nexport const EmptyVulnerabilityData = (\n    <Bullseye>\n        <EmptyState>\n            <EmptyStateIcon icon={CubesIcon} />\n            <Title headingLevel=\"h5\" size=\"lg\">\n                <FormattedMessage {...messages.emptyStateNoData} />\n            </Title>\n            <EmptyStateBody>\n                <FormattedMessage {...messages.emptyStateActivateInsights} />\n            </EmptyStateBody>\n            <Button\n                variant=\"primary\"\n                component=\"a\"\n                href=\"http://access.redhat.com/products/cloud_management_services_for_rhel#getstarted\"\n            >\n                <FormattedMessage {...messages.emptyStateLearnInsights} />\n            </Button>\n        </EmptyState>\n    </Bullseye>\n);\n\n// Generic error\nexport const GenericError = (\n    <Card className=\"ins-empty-rule-cards\">\n        <CardHeader>\n            <FrownOpenIcon size=\"lg\" />\n        </CardHeader>\n        <CardBody>\n            <FormattedMessage {...messages.errorReload} />\n        </CardBody>\n    </Card>\n);\n"],"sourceRoot":""}