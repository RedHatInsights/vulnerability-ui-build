{"version":3,"sources":["webpack:///./src/Helpers/DownloadReport.js","webpack:///./src/Components/SmartComponents/Modals/BaseModal.js","webpack:///./src/Components/SmartComponents/InsightsSystemRule/InsightsSystemRule.js","webpack:///./src/Helpers/CVEHelper.js","webpack:///./src/Helpers/selectAllCheckboxHelper.js","webpack:///./node_modules/lodash/union.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/SearchFilter.js","webpack:///./src/Helpers/TableToolbarHelper.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/SecurityRuleFilter.js","webpack:///./node_modules/lodash/unionWith.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/StatusFilter.js","webpack:///./src/Store/Reducers/InventoryEntitiesReducer.js","webpack:///./src/Components/SmartComponents/Modals/BusinessRiskModal.js","webpack:///./src/Components/SmartComponents/Modals/CveStatusModal.js","webpack:///./src/Components/SmartComponents/Modals/CvePairStatusModal.js","webpack:///./src/Components/SmartComponents/Remediation/Remediation.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsDescription/CVEPageDetailsDescription.scss?4f52","webpack:///./node_modules/reselect/lib/index.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsDescription/CVEPageDetailsDescription.scss","webpack:///./src/Components/PresentationalComponents/CVEInfoBox/CVEInfoBox.scss?9c01","webpack:///./src/Components/PresentationalComponents/CVEInfoBox/CVEInfoBox.scss","webpack:///./src/Components/PresentationalComponents/CvssVector/CvssVector.scss?e372","webpack:///./src/Components/PresentationalComponents/CvssVector/CvssVector.scss","webpack:///./src/Components/PresentationalComponents/CSAwRuleBox/CSAwRuleBox.scss?7556","webpack:///./src/Components/PresentationalComponents/CSAwRuleBox/CSAwRuleBox.scss","webpack:///./src/Store/Selectors/CVESelectors.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsDescription/SnippetWithHeaderAndTooltip.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsDescription/CVEPageDetailsDescription.js","webpack:///./src/Components/PresentationalComponents/WithLoader/WithLoader.js","webpack:///./src/Components/PresentationalComponents/CVEInfoBox/CVEInfoBox.js","webpack:///./src/Components/PresentationalComponents/CvssVector/vectorNames.js","webpack:///./src/Components/PresentationalComponents/CvssVector/CvssVector.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsSeverity/CVEPageDetailsSeverity.js","webpack:///./src/Components/PresentationalComponents/CSAwRuleBox/CSAwRuleBox.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetails/CVEPageDetails.js","webpack:///./src/Components/PresentationalComponents/DownloadReportKebab/BaseKebab.js","webpack:///./src/Components/PresentationalComponents/DownloadReportKebab/KebabItems.js","webpack:///./src/Components/SmartComponents/SystemsExposedTable/SystemsExposedTable.js","webpack:///./src/Components/SmartComponents/CVEDetailsPage/CVEDetailsPage.js","webpack:///./node_modules/dot/doT.js","webpack:///./src/Store/ActionTypes.js","webpack:///./src/Helpers/MiscHelper.js","webpack:///./src/Utilities/interceptors.js","webpack:///./src/Helpers/APIHelper.js","webpack:///./src/Store/Reducers/BreadcrumbStore.js","webpack:///./src/Store/Reducers/CVEDetailsPageStore.js","webpack:///./src/Store/Reducers/SystemCvesStore.js","webpack:///./src/Store/Reducers/SystemsPageStore.js","webpack:///./src/Store/Reducers/CVEsStore.js","webpack:///./src/Store/Actions/Actions.js","webpack:///./node_modules/seamless-immutable/seamless-immutable.development.js"],"names":["filename","page","params","cve","defaultParams","date","checkTypes","fetchData","format","pages","includes","formats","exec","a","Array","isArray","data_format","payload","response","data","JSON","stringify","downloadFile","this","page_size","Number","MAX_SAFE_INTEGER","Date","toISOString","replace","split","useStatusSelect","initialValue","useState","statusId","setStatusId","props","setProps","StatusSelect","label","messages","statusLabel","fieldId","aria-label","onChange","selection","value","STATUS_OPTIONS","map","key","useJustificationInput","justification","setJustification","JustificationInput","justificationLabel","type","resizeOrientation","BaseModal","items","title","onSave","onSuccessNotification","targetItems","setTargetItems","handleClose","undefined","useEffect","clearNotifications","Fragment","variant","isOpen","Boolean","onClose","actions","onClick","then","notification","addNotification","save","cancel","children","propTypes","any","func","array","updateRef","string","object","connect","dispatch","InsightsSystemRule","rule","TextContent","className","Text","component","TextVariants","h3","style","paddingLeft","Label","Tooltip","content","rulesIconTooltip","CSAwIcon","description","rule_id","InsightsReportCard","report","PropType","shape","details","resulotion","isRequired","InsightsNoSystemRule","p","exposedSystemNoRules","values","exposedSystemNoRulesInfo","target","rel","href","exposedSystemNoRulesInfoLink","createExposedSystemsTable","isLoading","openedRows","meta","cvesCount","length","item","attributes","id","status","status_name","createSystemsListTable","affectedSystems","asMutable","cve_status_id","status_id","onlyThisSystemCvePair","find","option","parseInt","createCveDetailsPage","cves","error","impact","public_date","processDate","synopsis","rh_link","RHDBLink","mitre_link","createMitreLink","cvss3_score","cvss2_score","cvss2_metrics","cvss3_metrics","business_risk","BUSINESS_RISK_OPTIONS","business_risk_id","toString","business_risk_justification","business_risk_text","status_justification","status_text","systems_status_detail","systems_status_divergent","rules","MITRELink","cveTableRowActions","methods","rowIndex","editBusinessRisk","event","rowId","rowData","showBusinessRiskModal","editStatus","showStatusModal","systemCveTableRowActions","entity","display_name","cve_justification","cve_status_justification","systemExposedTableRowActions","systemTableRowActions","optOut","isOptOut","kebabResumeAnalysis","kebabExcludeAnalysis","selectAllCheckbox","selectedItems","selectorHandler","fetchResource","multiRow","selectedItemsArray","from","selectedItemsCount","selectPageNumber","handleUnselectAll","handleSelectAll","total_items","handleOnCheckboxChange","intl","formatMessage","selectNone","selectPage","count","collectedItems","union","filter","selectAll","baseFlatten","baseRest","baseUniq","isArrayLikeObject","arrays","module","exports","SearchFilter","placeholder","search","apply","React","searchValue","setSearchValue","debounce","handleSearch","conditionalFilterType","text","filterValues","handleChangePage","_event","handleSetPageSize","perPage","exportConfig","onSelect","fileType","downloadReport","buildActiveFilters","currentFilters","filterRulevalues","buildChip","parameter","FILTERS","reduce","name","filteredRule","buildChips","paramValues","push","filterChips","Object","keys","multiValue","filteredValues","category","chips","searchLabel","removeFilters","obj","some","chip","join","securityRuleFilter","currentFilter","dynamicFilters","currentValue","security_rule","filterBySecurityRule","securityRules","radio","urlParam","unionWith","SECURITY_RULE_OPTIONS","isEqual","last","comparator","statusFilter","filterByStatus","checkbox","initialState","columns","rows","entities","selectedRows","modifyInventory","state","loaded","lastSeenColumn","transforms","sortable","selected","system","selectEntities","myRows","slice","inventoryEntitiesReducer","action","row","BusinessRiskModal","cveList","businessRiskId","setBusinessRiskId","setLabel","getDefaultLabel","useCallback","handleOnRadioChange","_","currentTarget","successNotification","businessRiskUpdateSuccessful","setBusinessRisk","businessRiskModalTitle","hasGutter","businessRiskModalInfo","businessRiskLabel","isChecked","injectIntl","CveStatusModal","checkboxState","setCheckboxState","cveStatusModalUpdateSuccessful","cveStatusModalTitle","cveIds","setCveStatus","setSystemCveStatus","cveStatusModalSelected","cveId","b","chunks","fontSize","color","cveStatusModalInfo","trigger","cveStatusModalInfoTooltip","verticalAlign","cveStatusModalOverwriteCheckbox","checked","cveStatusModalOverwriteTooltip","CvePairStatusModal","inventories","hasDifferentStatus","inventoryList","getCveJustification","setJustificationProps","haveSameStatuses","every","val","i","arr","inventory","getDefaultCheckboxState","getCveStatus","getDefaultStatus","setSelectProps","inventoryIds","inventoryNames","isDisabled","disabled","cvePairStatusModalUpdateSuccessful","modalTitle","cvePairStatusModalTitle","setStatusParams","inventory_id","isInline","cvePairStatusModalAlert","cvePairStatusModalSelected","cveCount","systemCount","systemName","cvePairStatusModalUseOverallCheckbox","cvePairStatusModalUseOverallTooltip","bool","Remediation","remediationProvider","systems","concat","issues","nextProps","dispatchNotification","dataProvider","onRemediationCreated","result","getNotification","size","globalBackgroundColor100","remediateLabel","Component","oneOfType","routerParams","options","transform","locals","defaultEqualityCheck","areArgumentsShallowlyEqual","equalityCheck","prev","next","defaultMemoize","arguments","lastArgs","lastResult","getDependencies","funcs","dependencies","dep","dependencyTypes","Error","createSelectorCreator","memoize","_len","memoizeOptions","_key","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","selector","resetRecomputations","__esModule","createStructuredSelector","selectors","selectorCreator","createSelector","objectKeys","_len3","_key3","composition","index","sCveDetailsPage","CVEDetailsPageStore","cveDetails","affectedSystemsByCVE","SystemsStore","SnippetWithHeaderAndPopover","Popover","bodyContent","headerContent","position","Stack","display","cursor","StackItem","CVEPageDetailsDescription","cveAttributes","publishDate","link","businessRisk","businessRiskJustification","statusJustification","systemsStatusDetail","systemsStatusDivergent","detailRows","brPopoverContent","StyledText","fontWeight","StyledConstants","fontWeights","bold","fontSizes","sm","lineHeight","lineHeights","justificationNote","statusPopoverContent","cveStatus","marginTop","semi_bold","cvePageDetailsSystemsWTCves","Table","borders","gridBreakPoint","cells","Split","SplitItem","StyledBox","marginBottom","WithLoader","loading","Spinner","centered","Skeleton","SkeletonSize","lg","CVEPageOverviewItemLoader","height","width","x","y","rx","ry","TrendBoxLoader","CurrentVulnerabilitiesItemLoader","speed","primaryColor","secondaryColor","cx","cy","r","CVEInfoBox","CVEPageContext","Consumer","context","titleColor","Bullseye","titleContent","isFilled","h6","descriptionTitle","descriptionContent","V3names","AV","vectorNamesV3AV","N","vectorValuesNetwork","A","vectorValuesAdjacent","L","vectorValuesLocal","P","vectorValuesPhysical","AC","vectorNamesV3AC","vectorValuesLow","H","vectorValuesHigh","PR","vectorNamesV3PR","vectorValuesNone","UI","vectorNamesV3UI","R","vectorValuesRequired","S","vectorNamesV3S","U","vectorValuesUnchanged","C","vectorValuesChanged","vectorNamesV3C","I","vectorNamesV3I","vectorNamesV3A","CVSS","vectorNamesCvssVersion","V2names","vectorNamesV2AV","vectorValuesAdjacentNetwork","vectorNamesV2AC","Au","vectorNamesV2AU","M","vectorValuesMultiple","vectorValuesSingle","vectorNamesV2C","vectorValuesComplete","vectorValuesPartial","vectorNamesV2I","vectorNamesV2A","CvssVector","CVSS2Vector","CVSS3Vector","cvssVer","cvssVector","parsedVector","vector","namesMapping","res","forEach","curr","parseVector","cvssVersion","maxWidth","enableFlip","cvssVectorPopoverTitle","TableVariant","compact","cvssVectorMetric","cvssVectorValue","entries","cvssVectorVectorString","learnMorePopover","cvePageSeverityDetailsImpact","footerContent","cvePageSeverityDetailsLearnMoreRatings","cvePageSeverityDetailsLearnMore","CVEPageDetailsSeverity","getImpactDetails","parseCvssScore","cvePageSeverityDetailsBaseScore","defaultProps","CSAwRuleBox","changeExposedSystemsParameters","numberOfCards","setNumberOfCards","ruleCards","Card","CardBody","Grid","GridItem","span","CSAwRuleSummary","summary","h4","associatedCves","current","associated_cves","_i","CVES_PATH","kbase_node_id","RH_KB_URL","knowledgebaseArticle","ruleId","to","filterByAffectedSystems","remediationLabel","ansibleRemediation","playbook_count","yes","ansibleRemediationTooltip","no","riskOfChange","RISK_OF_CHANGE_LABEL","change_risk","RISK_OF_CHANGE_TOOLTIP","reboot_required","Reboot","red","Button","viewMoreScurityRules","PropTypes","CVEPageDetails","md","BaseKebab","dropdownItems","setOpen","Dropdown","toggle","KebabToggle","onToggle","kebabState","isPlain","kebabItemEditStatus","DropdownItem","kebabEditStatus","SystemsExposedTable","InventoryTable","setInventoryTable","StatusModal","setStatusModal","selectedHosts","setSelectedHosts","urlParamsAllowed","setUrlParamsAllowed","isFirstMount","setIsFirstMount","createRef","useDispatch","useCreateUrlParams","SYSTEMS_EXPOSED_ALLOWED_PARAMS","createUrlParams","urlParameters","useSelector","parameters","metadata","useMemo","config","inventoryRefresh","pageSize","per_page","sort","onRefreshData","handleSelect","middlewareListener","addNew","on","callback","newSelected","fetchAffectedSystemsByCVE","selectMultipleEntities","loadInventory","insights","ReactRedux","react","reactRouterDom","pfReactTable","PfTable","TableBody","TableHeader","TableGridBreakpoint","cellWidth","expandable","SortByDirection","inventoryConnector","mergeWithEntities","mergeWithDetail","ReducerRegistry","register","SYSTEMS_EXPOSED_HEADER","getStore","clearCveStore","clearInventoryStore","fetchCveDetails","kebabOptions","cveStatusDetails","displayName","getSelectedSystemsLabel","selectOptions","ops","fetchAffectedSystemsIdsByCve","h2","systemsExposedTableHeader","tableProps","canSelectAll","onSort","direction","handleSortColumn","SYSTEMS_EXPOSED_SORTING_HEADER","sortBy","createSortBy","actionResolver","ref","onRefresh","total","isLoaded","hasCheckbox","showActions","DownloadReport","onExpandClick","_e","expandRow","actionsConfig","kebabToggleProps","activeFiltersConfig","filters","filterRuleValues","onDelete","e","bulkSelect","filterConfig","searchFilter","systemsSearchName","searchFilterByName","withRouter","createContext","CVEDetailsPage","setState","open","cveName","fetchAffectedSystems","match","handleCveDetailsError","setHeader","breadcrumbs","PATHS","home","cvesPage","isActive","kebabItems","kebabEditBusinessRisk","VulnerabilityHeader","InvalidObject","Page","Provider","justifyContent","DropdownPosition","right","Main","header","_globals","doT","version","templateSettings","evaluate","interpolate","encode","use","useParams","define","defineParams","conditional","iterate","varname","strip","append","selfcontained","doNotSkipEncoded","template","compile","log","encodeHTMLSource","encodeHTMLRules","matchHTML","code","m","eval","startend","start","end","startencode","skip","unescape","tmpl","c","def","needhtmlencode","indv","cse","sid","str","resolveDefs","block","assign","indexOf","substring","param","v","arg","Function","s","d","rw","__exp","RegExp","elsecase","vname","iname","_encodeHTML","console","FETCH_CVE_LIST","FETCH_CVE_DETAILS","HANDLE_CVE_DETAILS_ERROR","FETCH_SYSTEM_DETAILS","FETCH_AFFECTED_SYSTEMS_BY_CVE","FETCH_SYSTEMS","SET_HEADER","SYSTEM_OPT_OUT","FETCH_SYSTEM_CVE_LIST","CHANGE_SYSTEM_CVE_STATUS","CHANGE_EXPOSED_SYSTEMS_PARAMETERS","CHANGE_CVE_LIST_PARAMETERS","SELECT_CVE","SELECT_SYSTEM_CVE","SELECT_ENTITIES","SELECT_MULTIPLE_ENTITIES","EXPAND_CVE","EXPAND_ROW","EXPAND_SYSTEM_CVE","CHANGE_SYSTEMS_PARAMS","CHANGE_SYSTEM_CVE_LIST_PARAMETERS","CLEAR_SYSTEMS_STORE","CLEAR_SYSTEM_CVES_STORE","CLEAR_CVE_STORE","CLEAR_INVENTORY_STORE","CLEAR_CVES_STORE","FETCH_AFFECTED_SYSTEM_IDS_BY_CVE","FETCH_SYSTEMS_IDS","FETCH_CVE_LIST_IDS","FETCH_SYTEM_DETAILS_IDS","dataShape","constructParameters","apiProps","allowedParams","constructURLParameters","urlParams","formatDate","prepend","number","toFormat","isNaN","year","getFullYear","month","getMonth","day","getDate","constructFilterParameters","filterParams","prototype","hasOwnProperty","call","cvssEntry","CVSS_OPTIONS","cvss_filter","parseFloat","cvss_from","cvss_to","publicEntry","PUBLIC_DATE_OPTIONS","publish_date","public_from","public_to","impactList","impactColorList","unknown","desc","asc","findIndex","currentSort","columnName","useDefault","substr","window","history","pushState","location","pathname","qs","parse","instance","axios","create","interceptors","request","authInterceptor","responseDataInterceptor","interceptor401","ReadOnlyNotification","err","isCancel","errObject","errors","api","GitApi","getCveDetails","getSystemDetails","getAffectedSystemsByCVE","parameterArray","getAffectedSystemsByCve","getSystems","getSystemsList","getCveListByAccount","getCveList","optOutSystem","setSystemOptOut","getCveListBySystem","setStatus","optOutSystems","opt_out","setSystemsOptOut","setCveBusinessRisk","getExecutiveReport","getAffectedSystemsIdsByCve","getSystemsIds","getCveIdsList","getCveIdsBySystem","Immutable","openedCves","selectedCves","expandCveDescription","SystemCvesStore","applyReducerHash","timestamp","newState","splice","element","limit","offet","show_all","isValid","stateTimestamp","actionTimestamp","ActionTypes","setIn","CVEsStore","SystemsPageStore","BreadcrumbStore","set","Promise","resolve","HeaderHelper","APIHelper","fetchSystems","fetchSystemDetails","noError","fetchCveListByAccount","optOutSystemAction","fetchCveListBySystem","optOutSystemsAction","changeCveListParameters","changeSystemCVEsParameters","selectCve","expandCve","selectSystemCve","expandSystemCve","changeSystemsParams","clearSystemStore","clearSystemCvesStore","fetchSystemsIds","fetchCvesIds","fetchSystemDetailsIds","clearCVEsStore","immutableInit","REACT_ELEMENT_TYPE","Symbol","for","globalConfig","use_static","instantiateEmptyObject","getPrototypeOf","addPropertyTo","methodName","defineProperty","enumerable","configurable","writable","banProperty","ImmutableError","isImmutable","getOwnPropertyDescriptor","isMergableObject","mutatingObjectMethods","mutatingArrayMethods","nonMutatingArrayMethods","mutatingDateMethods","message","stack","makeImmutable","bannedMethods","freeze","makeMethodReturnImmutable","currentMethod","arraySet","idx","deep","merge","mode","mutable","asMutableArray","makeImmutableArray","constructor","immutableEmptyArray","arraySetIn","pth","head","newValue","tail","thisHead","nextHead","isFinite","objectSetIn","immutableEmptyObject","flatMap","asObject","update","updateIn","getIn","asMutableDate","getTime","iterator","iteratorResult","without","remove","keysToRemoveArray","el","makeImmutableObject","opts","asDeepMutable","pair","quickCopy","src","dest","other","TypeError","receivedArray","merger","addToResult","currentObj","otherObj","immutableValue","mergerResult","clearDroppedKeys","otherFromArray","objectReplace","fnObject","fnArray","fnDate","path","objectSet","property","updater","restArgs","initialVal","getInPath","l","defaultValue","asMutableObject","instantiatePlainObject","stackRemaining","$$typeof","isReactElement","File","isFileObject","Blob","isBlobObject","isError","isPromise","clone","toStatic","fn","args","self","shift","toStaticObjectOrArray","static"],"mappings":"mvBAkFe,QA/EX,aAAc,4BAedA,SAAW,SAACC,GACR,OAAQA,GACJ,IAAK,kBACD,8CAAwC,EAAKC,OAAOC,IAApD,aAA4D,EAAKC,cAAcC,MACnF,IAAK,cACD,uCAAiC,EAAKD,cAAcC,MACxD,QACI,oCAA8B,EAAKD,cAAcC,QAtB/C,KA2BdC,WAAa,SAACC,EAAWN,EAAMO,GAC3B,GAAyB,mBAAdD,EACP,sEAAmEA,IAGvE,IAAK,EAAKE,MAAMC,SAAST,GACrB,oBAAcA,EAAd,mBAGJ,IAAK,EAAKU,QAAQD,SAASF,GACvB,sBAAgBA,EAAhB,sBArCM,KAkDdI,KAlDc,+BAkDP,WAAOL,EAAWL,EAAQM,EAAQP,GAAlC,uBAAAY,EAAA,yDACH,EAAKP,WAAWC,EAAWN,EAAMO,GACjC,EAAKN,OAAOC,IAAMW,MAAMC,QAAQb,GAAUA,EAAO,GAAK,GAFnD,UAKmBY,MAAMC,QAAQb,GALjC,gCAMaK,EAAU,EAAKL,OAAOC,IAAb,KACVD,EAAO,GADG,GAEV,EAAKE,cAFK,CAGbY,YAAaR,KATtB,2DAWWD,EAAU,EAAD,GACRL,EADQ,GAER,EAAKE,cAFG,CAGXY,YAAaR,KAdtB,0CAKOS,EALP,EAKOA,QALP,UAiBgCA,EAjBhC,iBAiBaC,EAjBb,EAiBOC,KACFA,EAAkB,SAAXX,EAAoBY,KAAKC,UAAUH,GAAYA,EAE1DI,uBAAaH,EAAM,EAAKnB,SAASC,GAAOO,GApBzC,kIAlDO,4DACVe,KAAKnB,cAAgB,CACjBH,KAAM,EACNuB,UAAWC,OAAOC,iBAClBrB,MAAM,IAAIsB,MAAOC,cAAcC,QAAQ,QAAS,KAAKC,MAAM,KAAK,GAAK,QAGzEP,KAAKrB,OAAS,CACVC,IAAK,IAGToB,KAAKd,MAAQ,CAAC,kBAAmB,cAAe,OAAQ,eACxDc,KAAKZ,QAAU,CAAC,MAAO,U,8RCHxB,SAASoB,EAAgBC,GAAc,MACVC,mBAASD,GADC,WACnCE,EADmC,KACzBC,EADyB,OAEhBF,mBAAS,IAFO,WAEnCG,EAFmC,KAE5BC,EAF4B,KAY1C,MAAO,CAAEC,aARL,kBAAC,YAAD,CAAWC,MAAO,kBAAC,IAAqBC,IAASC,aAAiBC,QAAS,YACvE,kBAAC,aAAD,KAAYC,aAAW,eAAeC,SAAU,SAAAC,GAAS,OAAIV,EAAYU,IAAYC,MAAOZ,GAAcE,GACrGW,IAAeC,KAAI,gBAAGF,EAAH,EAAGA,MAAOP,EAAV,EAAUA,MAAV,OAChB,kBAAC,mBAAD,CAAkBU,IAAKH,EAAOA,MAAOA,EAAOP,MAAOA,SAK5CL,WAAUC,cAAaE,YAG3C,SAASa,EAAsBlB,GAAc,MACNC,mBAASD,GADH,WACzCmB,EADyC,KAC1BC,EAD0B,OAEtBnB,mBAAS,IAFa,WAEzCG,EAFyC,KAElCC,EAFkC,KAgBhD,MAAO,CAAEgB,mBAZL,kBAAC,YAAD,CAAWd,MAAO,kBAAC,IAAqBC,IAASc,oBAAwBZ,QAAS,SAC9E,kBAAC,WAAD,KACIO,IAAI,QACJM,KAAK,OACLX,SAAU,SAAAE,GAAK,OAAIM,EAAiBN,IACpCA,MAAOK,EACPK,kBAAkB,WAClBb,aAAY,sBACRP,KAIae,gBAAeC,mBAAkBf,YAG3D,IAAMoB,EAAY,SAAC,GAA8D,IAA5DC,EAA4D,EAA5DA,MAAOC,EAAqD,EAArDA,MAAOC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,sBAA0BzB,EAAY,4DAC9CH,mBAASyB,GADqC,WAC7EI,EAD6E,KAChEC,EADgE,KAO9EC,EAAc,WAChBD,OAAeE,IAcnB,OANAC,qBAAU,WACN,OAAO,WACH9B,EAAM+B,wBAEX,IAGC,kBAAC,IAAMC,SAAP,KACI,kBAAC,QAAD,CACIC,QAAQ,QACRV,MAAOA,EACPW,OAAQC,QAAQT,GAChBU,QAASR,EACTS,QAAS,CACL,kBAAC,SAAD,CAAQxB,IAAI,OAAOoB,QAAQ,UAAUK,QAnBlC,WACfd,IAASe,MAAK,kBATSC,EASgBf,EARhCzB,EAAMyC,gBAAgBD,GADN,IAAAA,KAUvBZ,MAkBiB,kBAAC,IAAqBxB,IAASsC,OAEpC,kBAAC,SAAD,CAAQ7B,IAAI,SAASoB,QAAQ,YAAYK,QAASV,GAC7C,kBAAC,IAAqBxB,IAASuC,WAIvC3C,EAAM4C,YAMvBvB,EAAUwB,UAAY,CAClBD,SAAUC,IAAUC,IACpBV,QAASS,IAAUE,KACnBzB,MAAOuB,IAAUG,MACjBC,UAAWJ,IAAUE,KACrBN,gBAAiBI,IAAUE,KAC3BxB,MAAOsB,IAAUK,OACjB1B,OAAQqB,IAAUE,KAClBtB,sBAAuBoB,IAAUM,OACjCpB,mBAAoBc,IAAUE,MAUnBK,sBACX,MARuB,SAAAC,GACvB,MAAO,CACHZ,gBAAiB,SAAA1D,GAAI,OAAIsE,EAASZ,0BAAgB1D,KAClDgD,mBAAoB,kBAAMsB,EAAStB,oCAI5BqB,CAGb/B,I,6cCvGWiC,EAAqB,SAAC,GAAkB,IAAhBC,EAAgB,EAAhBA,KAAMxF,EAAU,EAAVA,IACvC,OACI,kBAAC,WAAD,KACOwF,EACC,kBAAC,WAAD,KACI,kBAACC,EAAA,YAAD,CAAaC,UAAU,mBACnB,kBAACC,EAAA,KAAD,CAAMC,UAAWC,eAAaC,GAAIC,MAAO,CAAEC,YAAa,iCACpD,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,QAAD,CAASC,QAAS,kBAAC,IAAqB9D,IAAS+D,mBAC7C,kBAACC,EAAA,EAAD,QAGR,0BAAMX,UAAU,aAAaF,EAAKA,KAAKc,aAAed,EAAKA,KAAKe,WAIxE,kBAACC,EAAA,EAAD,CAAoBC,OAAQjB,KAb1B,kBAAC,EAAD,CAAsBxF,IAAKA,MAqBjDuF,EAAmBT,UAAY,CAC3BU,KAAMkB,IAASC,MAAM,CACjBnB,KAAMkB,IAAStB,OACfwB,QAASF,IAAStB,OAClByB,WAAYH,IAAStB,SACtB0B,WACH9G,IAAK0G,IAASvB,QAGX,IAAM4B,EAAuB,SAAC,GAAY,IAAV/G,EAAU,EAAVA,IACnC,OACI,kBAACyF,EAAA,YAAD,CAAaC,UAAU,mBACnB,kBAACC,EAAA,KAAD,CAAMC,UAAWC,eAAamB,GAC1B,kBAAC,IAAD,OAAsB3E,IAAS4E,qBAA/B,CAAqDC,OAAQ,CAAElH,WAEnE,kBAAC2F,EAAA,KAAD,CAAMC,UAAWC,eAAamB,EAAGtB,UAAU,cACvC,kBAAC,IAAqBrD,IAAS8E,0BADnC,IAC+D,kBAACd,EAAA,EAAD,OAE/D,kBAACV,EAAA,KAAD,CACIC,UAAWC,eAAanF,EACxB0G,OAAO,SACPC,IAAI,sBACJC,KAAK,8CAEL,kBAAC,IAAqBjF,IAASkF,iC,ijBAM/CR,EAAqBjC,UAAY,CAC7B9E,IAAK0G,IAASvB,QC/CX,IAAMqC,EAA4B,SAAC,GAA4C,IAA1CC,EAA0C,EAA1CA,UAAW3G,EAA+B,EAA/BA,QAAS4G,EAAsB,EAAtBA,WAAY1H,EAAU,EAAVA,IACxE,GAAIyH,EACA,MAAO,CAAEzG,KAAOF,GAAWA,EAAQE,MAAS,GAAI2G,KAAM,GAAIF,aAFoB,IAK5EzG,EAAeF,EAAfE,KAAM2G,EAAS7G,EAAT6G,KACNC,EAAY5G,GAAQA,EAAK6G,OAW/B,MAAO,CAAE7G,KAVSA,EAAK6B,KAAI,SAAAiF,GAAI,YACxBA,EAAKC,WADmB,CAE3BC,GAAIF,EAAKE,GACT7D,OAAQuD,EAAWnH,SAASuH,EAAKE,IACjCC,OAAQH,EAAKC,WAAWG,YACxBrD,SAAUiD,EAAKC,WAAWvC,KACpB,kBAAC,EAAD,CAAoBxF,IAAKA,EAAKwF,KAAMsC,EAAKC,WAAWvC,OACpD,kBAAC,EAAD,CAAsBxF,IAAKA,SAGX2H,KAAM,EAAF,GAAOA,EAAP,CAAaC,cAAcH,cAItD,SAASU,EAAuBC,GACnC,IAAIX,EAAYW,EAAgBX,UAChC,IAAKA,EAAW,CACZ,IAAI3G,EAAUsH,EAAgBtH,QAAQuH,YAChCrH,EAAeF,EAAfE,KAAM2G,EAAS7G,EAAT6G,KAoBZ,MAAO,CAAE3G,KAnBcA,EAAK6B,KAAI,SAAAiF,GAAI,YAC7BA,EAD6B,CAEhCC,WAAY,EAAF,GACHD,EAAKC,WADF,CAENE,OACI,8BACKH,EAAKC,WAAWO,gBAAkBR,EAAKC,WAAWQ,UAC/C,kBAACrC,EAAA,QAAD,CAASC,QAAS,kBAAC,IAAqB9D,IAASmG,wBAC7C,kBAAC,IAAD,OAGJ,GACD,SAC4B1E,IAA9BgE,EAAKC,WAAWQ,WACb3F,IAAe6F,MAAK,SAAAC,GAAM,OAAIC,SAASD,EAAO/F,SAAWmF,EAAKC,WAAWQ,aAAWnG,cAKzEuF,OAAMF,aAGzC,MAAO,CAAEzG,KAAOoH,EAAgBtH,SAAWsH,EAAgBtH,QAAQE,MAAS,GAAI2G,KAAM,GAAIF,aAGvF,SAASmB,EAAqBC,GACjC,IAoC2Bf,EApCvBL,EAAYoB,EAAKpB,UACjBqB,EAAQD,EAAKC,MACjB,IAAKrB,IAAcqB,EAAO,CACtB,IAAIhI,EAAU+H,EAAK/H,QAAQuH,YACrBrH,EAAeF,EAAfE,KAAM2G,EAAS7G,EAAT6G,KA0BZ,MAAO,CAAE3G,KAxBTA,EAAO,CACH+H,OAAQ/H,EAAK+G,WAAWgB,OACxBC,YAAaC,sBAAYjI,EAAK+G,WAAWiB,aACzC1C,YAAatF,EAAK+G,WAAWzB,YAC7B4C,SAAUlI,EAAK+G,WAAWmB,SAC1BC,SAyBmBrB,EAzBK9G,EAAK+G,WAAWmB,SA2B5C,uBAAG9B,OAAO,SAASC,IAAI,sBAAsBC,KAAM,0CAA4CQ,GAC1F,kBAAC,IAAqBzF,IAAS+G,UAAc,kBAAC,IAAD,CAAqB1D,UAAU,iBA3B7E2D,WAAYC,EAAgBtI,EAAK+G,WAAWmB,UAC5CK,YAAavI,EAAK+G,WAAWwB,YAC7BC,YAAaxI,EAAK+G,WAAWyB,YAC7BC,cAAezI,EAAK+G,WAAW0B,cAC/BC,cAAe1I,EAAK+G,WAAW2B,cAC/BC,cAAeC,IAAsBnB,MACjC,SAAAC,GAAM,OAAIA,EAAO/F,QAAU3B,EAAK+G,WAAW8B,iBAAiBC,cAC9D1H,MACF2H,4BAA6B/I,EAAK+G,WAAWiC,mBAC7CH,iBAAkB7I,EAAK+G,WAAW8B,iBAClC5B,OAAQrF,IAAe6F,MAAK,SAAAC,GAAM,OAAIA,EAAO/F,QAAU3B,EAAK+G,WAAWQ,UAAUuB,cAAY1H,MAC7FmG,UAAWvH,EAAK+G,WAAWQ,UAC3B0B,qBAAsBjJ,EAAK+G,WAAWmC,YACtCC,sBAAuBnJ,EAAK+G,WAAWoC,sBACvCC,yBAA0BpJ,EAAK+G,WAAWqC,yBAC1CC,MAAOrJ,EAAK+G,WAAWsC,OAGZ1C,OAAMF,aAGzB,MAAO,CAAEzG,KAAM,GAAI2G,KAAM,GAAIF,YAAWqB,SAWrC,SAASQ,EAAgBxB,GAC5B,OACI,uBAAGV,OAAO,SAASC,IAAI,sBAAsBC,KAAM,kDAAoDQ,GAClG,kBAAC,IAAqBzF,IAASiI,WAAe,kBAAC,IAAD,OAKpD,IAAMC,EAAqB,SAACC,EAASC,GACxC,OAAQA,EAAW,GAAM,EACrB,CACI,CACIjH,MAAO,kBAAC,IAAqBnB,IAASqI,kBACtCnG,QAAS,SAACoG,EAAOC,EAAOC,GAAf,OACLL,EAAQM,sBAAsB,CAC1B,CACI9C,GAAI6C,EAAQ7C,GACZ6B,iBAAkBgB,EAAQhB,iBAC1B7G,cAAe6H,EAAQd,iCAIvC,CACIvG,MAAO,kBAAC,IAAqBnB,IAAS0I,YACtCxG,QAAS,SAACoG,EAAOC,EAAOC,GAAf,OACLL,EAAQQ,gBAAgB,CACpB,CACIhD,GAAI6C,EAAQ7C,GACZO,UAAWsC,EAAQtC,UACnBvF,cAAe6H,EAAQZ,2BAIvC,MAGCgB,EAA2B,SAACT,EAASU,EAAQT,GACtD,OAAQA,EAAW,GAAM,EACrB,CAAC,CACGjH,MAAO,kBAAC,IAAqBnB,IAAS0I,YACtCxG,QAAS,SAACoG,EAAOC,EAAOC,GAAf,OACLL,EAAQQ,gBAAgB,CACpB,CACIhD,GAAI6C,EAAQ7C,GACZmD,aAAcD,EAAOC,aACrB5C,UAAWsC,EAAQtC,UACnBD,cAAeuC,EAAQvC,cACvBtF,cAAe6H,EAAQZ,qBACvBmB,kBAAmBP,EAAQQ,2BAGnCH,MAEH,MAGAI,EAA+B,SAACN,EAAiBhL,EAAKyK,GAC/D,OAAQA,EAAW,GAAM,EACrB,CAAC,CACGjH,MAAO,kBAAC,IAAqBnB,IAAS0I,YACtCxG,QAAS,SAACoG,EAAOC,EAAOC,GACpBG,EACI,CAAC,CACGhD,GAAIhI,EAAIgI,GACRO,UAAWvI,EAAIuI,UACfvF,cAAehD,EAAIgD,gBAEvB,CAAC,CACGgF,GAAI6C,EAAQ7C,GACZmD,aAAcN,EAAQM,aACtB5C,UAAWsC,EAAQtC,UACnBvF,cAAe6H,EAAQX,kBAIlC,MAGAqB,EAAwB,SAACC,EAAQC,GAAT,MAAsB,CACvD,CACIjI,MACIiI,EACM,kBAAC,IAAqBpJ,IAASqJ,qBAC/B,kBAAC,IAAqBrJ,IAASsJ,sBAEzCpH,QAAS,SAACoG,EAAOC,EAAOC,GACpBW,EAAO,CAACX,EAAQ7C,U,kCCvM5B,qCA6De4D,IAzDW,SAAC,GAA+E,IAA7EC,EAA6E,EAA7EA,cAAeC,EAA8D,EAA9DA,gBAAiBvI,EAA6C,EAA7CA,MAAOwI,EAAsC,EAAtCA,cAAsC,IAAvBC,gBAAuB,SAEhGC,EAAqBtL,MAAMuL,KAAKL,GAChCM,EAAqBF,GAAsBA,EAAmBpE,OAC5DF,EAAepE,EAAfoE,KAAM3G,EAASuC,EAATvC,KACRoL,EAAmBpL,IAAWL,MAAMC,QAAQI,IAASA,EAAK6G,QAAWmE,EAAYhL,EAAK6G,OAAS,EAAI7G,EAAK6G,QAQxGwE,EAAoB,WACtBP,GAAgB,EAAO,KAGrBQ,EAAkB,WAAM,IAEpBxL,GAAYiL,GAAiBA,EAAc,CAAE1K,UAAWsG,EAAK4E,YAAazM,KAAM,KAAhFgB,QACNA,GACIA,EAAQ0D,MAAK,YAAwB,IAE3BjB,EAF2B,EAArBvC,KAEW6B,KAAI,SAAAiF,GAAI,OAAIA,EAAKE,IAAMF,EAAKE,IAAMF,KACzDgE,GAAgB,EAAMvI,OAYlC,MAAQ,CACJiJ,uBAT2B,WACA,IAAvBL,EACAG,IAEAD,KAMJ9I,MAAO,CACH,CACIC,MAAOiJ,IAAKC,cAAcrK,IAASsK,YACnCpI,QAAS8H,GAEb,CACI7I,MAAO,GAAF,OAAKiJ,IAAKC,cAAcrK,IAASuK,WAAY,CAAEC,MAAOT,KAC3D7H,QAtCa,WAAM,IACnBvD,EAASuC,EAATvC,KACF8L,EAAiBC,IAAM/L,EAAKgM,QAAO,SAAAlF,GAAI,OAAIA,EAAKE,MAAInF,KAAI,SAAAiF,GAAI,OAAIA,EAAKE,MAAKiE,GAChFH,GAAgB,EAAMgB,KAqClB,CACItJ,MAAO,GAAF,OAAKiJ,IAAKC,cAAcrK,IAAS4K,UAAW,CAAEJ,MAAOlF,EAAK4E,YAAc5E,EAAK4E,YAAc,KAChGhI,QAAS+H,O,qBCrDzB,IAAIY,EAAc,EAAQ,KACtBC,EAAW,EAAQ,KACnBC,EAAW,EAAQ,KACnBC,EAAoB,EAAQ,MAkB5BN,EAAQI,GAAS,SAASG,GAC5B,OAAOF,EAASF,EAAYI,EAAQ,EAAGD,GAAmB,OAG5DE,EAAOC,QAAUT,G,2GCKFU,IAxBM,SAACrL,EAAOsL,EAAaC,EAAQC,GAAU,MAClBC,IAAM/L,WADY,WACjDgM,EADiD,KACpCC,EADoC,OAEjCF,IAAM/L,UAAS,kBAClCkM,KAAS,SAAAhB,QAA2BlJ,IAAXkJ,GAAwBY,EAAM,CAAEZ,SAAQlN,KAAM,MAAU,QAD9EmO,EAFiD,YAQxD,OAFAJ,IAAM9J,WAAU,kBAAMgK,EAAeJ,KAAS,CAACA,IAExC,CACHvK,KAAM8K,wBAAsBC,KAC5B/L,MAAOqK,IAAKC,cAActK,GAC1BgM,aAAc,CACV,aAAc,eACdpG,GAAI,UAAF,OAAY5F,EAAM4F,IACpBvF,SAAU,SAACkI,EAAOhI,GACdoL,EAAepL,GACfsL,EAAatL,IAEjB+K,YAAajB,IAAKC,cAAcgB,GAChC/K,MAAOmL,M,kCCzBnB,oMAIaO,EAAmB,SAACC,EAAQxO,EAAM8N,GAAf,OAAyBA,EAAM,CAAE9N,UAEpDyO,EAAoB,SAACD,EAAQE,EAASZ,GAAlB,OAA4BA,EAAM,CAAEvM,UAAWmN,EAAS1O,KAAM,KAElF2O,EAAe,SAACjE,GAAD,MACxB,CAAEkE,SAAU,SAACJ,EAAQK,GAAT,OAAwBnE,EAAQoE,eAAeD,MAGlDE,EAAqB,SAACC,GAA0C,IAA1BC,EAA0B,uDAAP,GAE1D/B,EAAW8B,EAAX9B,OAEFgC,EAAY,SAAClM,EAAKmM,GAAN,OACdC,IAAQpM,GAAKS,MAAM4L,QAAO,SAAC/J,EAAQ0C,GAC/B,GAAImH,IAAcnH,EAAKnF,MACnByC,EAAOgK,KAAOtH,EAAK1F,MACnBgD,EAAOzC,MAAQmF,EAAKnF,WAEnB,GAAY,kBAARG,IAA4B,CAAC,OAAQ,SAASvC,SAAS0O,GAChE,CACI,IAAMI,EAAeN,EAAiBtG,MAAK,qBAAG9F,QAAsBsM,KACpE7J,EAAOgK,KAAOC,GAAgBA,EAAajN,OAAS6M,EACpD7J,EAAOzC,MAAQsM,EAGnB,OAAO7J,IACR,KAGDkK,EAAa,SAACC,EAAazM,GAC7B,OAAOyM,EAAYJ,QAAO,SAACjI,EAAQ+H,GAE/B,OADA/H,EAAOsI,KAAKR,EAAUlM,EAAKmM,IACpB/H,IACR,KAGDuI,EAAcC,OAAOC,KAAKT,KAASC,QAAO,SAAClK,EAAOnC,GACpD,GAAY,aAARA,GAAsB4M,OAAOC,KAAKb,GAAgBvO,SAASuC,KAAS,CAAC,QAAIgB,GAAWvD,SAASuO,EAAehM,IAAO,CAEnH,IAAM8M,EAA4C,iBAAxBd,EAAehM,IAAqBgM,EAAehM,GAAKnB,MAAM,KAClFkO,EAAkBD,GAAcA,EAAW/H,OAAS,GACvByH,EAAWM,EAAY9M,IACvB,CAACkM,EAAUlM,EAAKgM,EAAehM,KAElEmC,EAAMuK,KAAK,CAAE1M,MAAK8M,aAAYE,SAAUZ,IAAQpM,GAAKU,MAAOuM,MAAOF,IAGvE,OAAO5K,IACR,IASH,OAPA+H,GAAUyC,EAAYD,KAClB,CAAE1M,IAAK,SACHgN,SAAUrD,IAAKC,cAAcrK,IAAS2N,aACtCD,MAAO,CAAC,CAAEX,KAAMpC,MAIjByC,GAGEQ,EAAgB,SAACF,EAAOnC,GAYjCA,EAXoBmC,EAAMZ,QAAO,SAACe,EAAKpI,GAQnC,MAPiB,WAAbA,EAAKhF,KAAqBgF,EAAK8H,YAAyC,IAA3B9H,EAAK8H,WAAW/H,OAC7DqI,EAAIpI,EAAKhF,KAAO,GAGhBoN,EAAIpI,EAAKhF,KAAOgF,EAAK8H,WAAW5C,QAAO,SAAArK,GAAK,OAAKmF,EAAKiI,MAAMI,MAAK,SAAAC,GAAI,OAAIA,EAAKzN,QAAUA,QAAQ0N,KAAK,KAGlGH,IACR,O,2GCzCQI,IAzBY,SAAC1C,GAAmD,IAA5C2C,EAA4C,uDAA5B,GAAIC,EAAwB,uDAAP,GAC/CC,EAAiBF,EAAhCG,cACe,KAAjBD,GAAwBA,IACxBA,EAAe,OAGnB,IAAME,EAAuB,SAAAzJ,GACzB0G,EAAM,CAAE8C,cAA0B,QAAXxJ,EAAmB,GAAKA,EAAQpH,KAAM,KAGjE,MAAO,CACHsC,MAAOqK,IAAKC,cAAcrK,IAASuO,eACnCxN,KAAM8K,wBAAsB2C,MAC5BC,SAAU,gBACV1C,aAAc,CACV3L,SAAU,SAACkI,EAAOhI,GACdgO,EAAqBhO,IAEzBY,MACIwN,IAAUC,IAAuBR,EAAgBS,KAASpO,KAAI,SAAAiF,GAAI,MAAK,CAAE1F,MAAO0F,EAAK1F,MAAOO,MAAOmF,EAAKnF,UAC5GA,MAAO8N,M,qBC5BnB,IAAIvD,EAAc,EAAQ,KACtBC,EAAW,EAAQ,KACnBC,EAAW,EAAQ,KACnBC,EAAoB,EAAQ,MAC5B6D,EAAO,EAAQ,MAuBfH,EAAY5D,GAAS,SAASG,GAChC,IAAI6D,EAAaD,EAAK5D,GAEtB,OADA6D,EAAkC,mBAAdA,EAA2BA,OAAarN,EACrDsJ,EAASF,EAAYI,EAAQ,EAAGD,GAAmB,QAAOvJ,EAAWqN,MAG9E5D,EAAOC,QAAUuD,G,qECNFK,IArBM,SAACxD,GAA8B,IAAvB2C,EAAuB,uDAAP,GAExBE,EAAiBF,EAA5BhI,UAEA8I,EAAiB,SAAAnK,GACnB0G,EAAM,CAAErF,UAAYrB,EAAOW,OAAS,KAAOX,EAAO8F,QAAO,SAAArK,GAAK,MAAc,MAAVA,KAAe0N,KAAK,MAAS,GAAIvQ,KAAM,KAG7G,MAAO,CACHsC,MAAOqK,IAAKC,cAAcrK,IAAS4F,QACnC7E,KAAM8K,wBAAsBoD,SAC5BlD,aAAc,CACV3L,SAAU,SAACkI,EAAOhI,GACd0O,EAAe1O,IAEnBY,MAAOX,IAAeC,KAAI,SAAAiF,GAAI,MAAK,CAAE1F,MAAO0F,EAAK1F,MAAOO,MAAOmF,EAAKnF,UACpEA,MAAQ8N,EAAeA,EAAa9O,MAAM,KAAO,O,sqBCpBtD,IAAM4P,EAAe,CACxBC,QAAS,GACTC,KAAM,GACNC,SAAU,GACVC,aAAc,IAGlB,SAASC,EAAgBJ,EAASK,GAG9B,GAFKA,EAAMF,eAAeE,EAAMF,aAAe,IAE3CE,EAAMC,OAAQ,CACd,IAAIC,EAAiBF,EAAML,QAAQxE,QAAO,kBAAqB,YAArB,EAAGlK,OAG7C,OAFAiP,EAAiB,CAAC,EAAD,GAAMA,EAAe,GAArB,CAAyBC,WAAY,CAACC,QAEvD,KACOJ,EADP,CAEIJ,KAAMI,EAAMJ,KAAK5O,KAAI,SAAAiF,GAAI,YAAUA,EAAV,CAAgBoK,SAAUL,EAAMF,aAAaxB,MAAK,SAAAgC,GAAM,OAAIA,IAAWrK,EAAKE,WACrGwJ,QAAS,GAAF,WACAA,GAAW,IADX,IAEAO,GAAkB,OAKjC,OAAOF,EAGX,SAASO,EAAeP,EAAOK,GAC3B,IAAMG,EAASR,EAAMJ,KAAKa,QAY1B,OAXKT,EAAMF,eAAeE,EAAMF,aAAe,IAEhC,EAAH,GACLE,EADK,CAERJ,KAAMY,EACLxP,KAAI,SAAAiF,GAED,OADiB,EAAH,GAASA,EAAT,CAAeoK,SAAUA,EAAS/B,MAAK,SAAAgC,GAAM,OAAIA,IAAWrK,EAAKE,WAGnF2J,aAAc,IAAIO,KAKnB,IAAMK,EAA2B,SAACf,GAAD,OAAa,WAAkC,IAAjCK,EAAiC,uDAAzBN,EAAciB,EAAW,uCACnF,OAAQA,EAAOpP,MACX,IAAK,0BACD,OAAOwO,EAAgBJ,EAASK,GACpC,IAAK,2BACD,OAAOO,EAAeP,EAAOW,EAAO1R,SACxC,IAAK,aACD,YACO+Q,EADP,CAEIJ,KAAMI,EAAMJ,KAAK5O,KAAI,SAAA4P,GAAG,YACjBA,EADiB,CAEpBtO,OAAQsO,EAAIzK,KAAOwK,EAAO1R,QAAQkH,GAAKwK,EAAO1R,QAAQqD,OAASsO,EAAItO,cAG/E,IAAK,wBACD,OAAOoN,EACX,QACI,OAAOM,M,sLCrDNa,EAAoB,SAAC,GAA8B,IAA5B7J,EAA4B,EAA5BA,KAAM3D,EAAsB,EAAtBA,UAAWuH,EAAW,EAAXA,KAAW,EAC1C3K,mBAAS+G,GAApB8J,EADqD,cAEhB7Q,mBAAS,KAFO,WAErD8Q,EAFqD,KAErCC,EAFqC,OAGlC/Q,qBAHkC,WAGrDM,EAHqD,KAG9C0Q,EAH8C,KAKtDC,EAAkBC,uBAAY,WAChCF,EAAUH,GAA8B,IAAnBA,EAAQ9K,QAAgB8K,EAAQ,GAAG3P,eAAkB,MAC3E,CAAC2P,IAEJ5O,qBAAU,WAEF8O,EAAmBF,GAA8B,IAAnBA,EAAQ9K,QAAgB8K,EAAQ,GAAG9I,iBAAiBC,YAAe,KAIrGiJ,MACD,CAAClK,EAAMkK,EAAiBJ,IAE3B5O,oBAAUgP,EAAiB,CAAClK,IAE5B,IAAMoK,EAAsB,SAACC,EAAGvI,GAAU,IAC9BhI,EAAUgI,EAAMwI,cAAhBxQ,MACRkQ,EAAkBlQ,IAehByQ,EAAsB,CACxBlP,QAAS,UACTV,MAAOiJ,EAAKC,cAAcrK,IAASgR,6BAA8B,CAAExG,MAAO8F,EAAQ9K,QAAU,KAGhG,OACI,kBAAC,IAAD,CACItE,MAAOoP,EACPlP,OAhBW,WACf,OAAO6P,YAAgB,CACnBzJ,iBAAkBlB,SAASiK,GAC3B5S,IAAK2S,EAAQ9P,KAAI,SAAAiF,GAAI,OAAIA,EAAKE,MAC9BgC,mBAAoB5H,IACrBoC,KAAKU,IAYJxB,sBAAuB0P,EACvB5P,MAAOiJ,EAAKC,cAAcrK,IAASkR,yBAEnC,kBAAC,QAAD,CAAOC,WAAS,GACZ,kBAAC,YAAD,KACK/G,EAAKC,cAAcrK,IAASoR,wBAEjC,kBAAC,YAAD,KACI,kBAAC,OAAD,KACI,kBAAC,YAAD,CAAWrR,MAAOqK,EAAKC,cAAcrK,IAASqR,mBAAoBnR,QAAS,kBACtEqH,IAAsB/G,KAAI,SAAAiF,GAAI,OAC3B,kBAAC,QAAD,CACIpC,UAAW,sBACX/C,MAAOmF,EAAKnF,MACZgR,UAAWf,IAAmB9K,EAAKnF,MACnCF,SAAUwQ,EACV7Q,MAAO0F,EAAK1F,MACZU,IAAKgF,EAAKnF,MACVqF,GAAIF,EAAKnF,MACTyM,KAAMtH,EAAK1F,MACXI,aAAYsF,EAAK1F,YAI7B,kBAAC,YAAD,CAAWA,MAAOqK,EAAKC,cAAcrK,IAASc,oBAAqBZ,QAAS,SACxE,kBAAC,WAAD,CACIa,KAAK,OACLX,SAhDA,SAAAE,GACxBmQ,EAASnQ,IAgDeA,MAAOP,EACPiB,kBAAkB,WAClBb,aAAY,wBAU5CkQ,EAAkB5N,UAAY,CAC1B+D,KAAM/D,IAAUG,MAChBC,UAAWJ,IAAUE,KACrByH,KAAM3H,IAAUC,KAGL6O,gBAAWlB,I,kOC5FbmB,EAAiB,SAAC,GAA8B,IAA5BhL,EAA4B,EAA5BA,KAAM3D,EAAsB,EAAtBA,UAAWuH,EAAW,EAAXA,KAAW,EACvC3K,mBAAS+G,GAApB8J,EADkD,cAEtB/Q,YAgBvB+Q,GAA8B,IAAnBA,EAAQ9K,QAAgB8K,EAAQ,GAAGpK,UAAUuB,YAAe,KAhB3E3H,EAFiD,EAEjDA,aAAcJ,EAFmC,EAEnCA,SAFmC,EAGXgB,YAmBlC4P,GAA8B,IAAnBA,EAAQ9K,QAAgB8K,EAAQ,GAAG3P,eAAkB,IAnBpEE,EAHiD,EAGjDA,mBAAoBF,EAH6B,EAG7BA,cAH6B,EAIflB,oBAAS,GAJM,WAIlDgS,EAJkD,KAInCC,EAJmC,KAyBzD,IAAMX,EAAsB,CACxBlP,QAAS,UACTV,MAAOiJ,EAAKC,cAAcrK,IAAS2R,+BAAgC,CAAEnH,MAAO8F,EAAQ9K,QAAU,KAE5FrE,EAAQiJ,EAAKC,cAAcrK,IAAS4R,oBAAqB,CAAEpH,MAAO8F,EAAQ9K,QAAU,IAE1F,OACI,kBAAC,IAAD,CAAWtE,MAAOoP,EAASlP,OA1BZ,WACf,IAAMyQ,EAASvB,EAAQ9P,KAAI,SAAAiF,GAAI,OAAIA,EAAKE,MACxC,OAAOmM,YAAa,CAChB5L,UAAWI,SAAS5G,GACpB/B,IAAKkU,EACLhK,YAAalH,IAEhBwB,MAAK,kBAAOsP,GAAiBM,YAAmB,CAAEpU,IAAKkU,OACvD1P,KAAKU,IAkByCxB,sBAAuB0P,EAAqB5P,MAAOA,GAC9F,kBAAC,QAAD,CAAOgQ,WAAS,GACZ,kBAAC,YAAD,KACK/G,EAAKC,cACFrK,IAASgS,uBACT,CACIxH,MAAO8F,EAAQ9K,QAAU,EACzByM,MAAO3B,EAAQ,GAAG3K,GAClBuM,EAAG,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAe,2BAAIA,OAIlC,kBAAC,YAAD,KACI,kBAAC,IAAD,CACI9O,UAAU,aACV+O,SAAS,iCACTC,MAAM,wCAETjI,EAAKC,cAAcrK,IAASsS,mBAAoB,CAAE9H,MAAO8F,EAAQ9K,QAAU,IAC5E,kBAAC,UAAD,CACI+M,QAAQ,yBACRzO,QAASsG,EAAKC,cAAcrK,IAASwS,4BAErC,kBAAC,IAAM5Q,SAAP,KACI,kBAAC,IAAD,CACIyB,UAAU,aACVgP,MAAM,+BACN3O,MAAO,CAAE+O,cAAe,iBAKxC,kBAAC,YAAD,KACI,kBAAC,OAAD,CAAMhS,IAAI,OACLX,EACAe,EACD,kBAAC,YAAD,CAAWX,QAAS,aAChB,kBAAC,QAAD,KACI,kBAAC,YAAD,KACI,kBAAC,WAAD,CACIH,MAAOqK,EAAKC,cAAcrK,IAAS0S,iCACnC/M,GAAG,sBACHoH,KAAK,sBACLuE,UAAWG,EACXrR,SAAU,SAAAuS,GAAO,OAAIjB,EAAiBiB,OAG9C,kBAAC,YAAD,KACI,kBAAC,UAAD,CACIJ,QAAQ,yBACRzO,QAASsG,EAAKC,cAAcrK,IAAS4S,iCAErC,kBAAC,IAAD,CACIvP,UAAU,aACVgP,MAAM,+BACN3O,MAAO,CAAE+O,cAAe,gBAapEjB,EAAe/O,UAAY,CACvB+D,KAAM/D,IAAUG,MAChBC,UAAWJ,IAAUE,KACrByH,KAAM3H,IAAUC,KAGL6O,gBAAWC,I,yNC1GbqB,EAAqB,SAAC,GAA6E,IAA3ErM,EAA2E,EAA3EA,KAAM3D,EAAqE,EAArEA,UAAWiQ,EAA0D,EAA1DA,YAA0D,IAA7CC,0BAA6C,SAAjB3I,EAAiB,EAAjBA,KAAMrJ,EAAW,EAAXA,KAAW,EAC1FtB,mBAAS+G,GAApB8J,EADqG,cAEpF7Q,mBAASqT,GAA1BE,EAFqG,cAQxGtS,YA4CJ,WACI,GAAIsS,GAA0C,IAAzBA,EAAcxN,QAAgBwN,EAAc,GAAGrS,cAChE,OAmCIqS,GAA0C,IAAzBA,EAAcxN,QAAgBwN,EAAc,GAAGrS,eAAkB,GAhC1F,GAAI2P,GAA8B,IAAnBA,EAAQ9K,OACnB,OAAOyN,IAlDWvC,IAJtB7P,EAJwG,EAIxGA,mBACAF,EALwG,EAKxGA,cACAC,EANwG,EAMxGA,iBACUsS,EAP8F,EAOxGrT,SAPwG,EASlEJ,mBAqD1C,WAEI,IAAM0T,EAAmB7C,EAAQ8C,OAC7B,SAACC,EAAKC,EAAGC,GAAT,OAAkBF,EAAInN,YAAcqN,EAAI,GAAGrN,WAAemN,EAAIpN,gBAAkBsN,EAAI,GAAGtN,iBAI3F,GAD0BqK,EAAQxC,MAAK,SAAArI,GAAI,OAAIA,EAAKS,YAAcT,EAAKQ,iBAC9C,OAAO,EAGhC,GAAI+M,GAA0C,IAAzBA,EAAcxN,QAAgBwN,EAAc,GAAG9M,UAAW,KACtEsN,EADsE,IACzDR,EADyD,MAE3E,OAAO1C,EAAQxC,MAAK,SAAAnQ,GAAG,OAAKA,EAAIuI,YAAcsN,EAAUtN,aAG5D,GAAIoK,GAA8B,IAAnBA,EAAQ9K,QAAgB2N,EACnC,OAAO,EAGX,OAAO,EAxEwCM,IATyD,WASrGhC,EATqG,KAStFC,EATsF,OAUlCnS,YA8B1E,WAEI,GAAIyT,GAAiBA,EAAcxN,OAAS,GAAKwN,EAAc,GAAG9M,UAC9D,OA0CI8M,GAAiBA,EAAc,GAAG9M,UAAUuB,YAAe,IAvCnE,GAAI6I,GAAWA,EAAQ9K,OAAS,EAC5B,OAAOkO,IArC2EC,IAAlF7T,EAVoG,EAUpGA,aAAcJ,EAVsF,EAUtFA,SAAUC,EAV4E,EAU5EA,YAAuBiU,EAVqD,EAU/D/T,SACvCgU,EAAeb,EAAcxS,KAAI,SAAAiF,GAAI,OAAIA,EAAKE,MAC9CmO,EAAiBd,EAAcxS,KAAI,SAAAiF,GAAI,OAAIA,EAAKqD,gBAEtDpH,qBAAU,WACNkS,EAAe,CAAEG,WAAYtC,IAC7ByB,EAAsB,CAAEc,SAAUvC,IAClC9R,EAAY+T,KACZ9S,EAAiBqS,OAElB,CAACxB,EAAemC,EAAgBV,IAEnCxR,qBAAU,WACN/B,EAAY+T,OAEb,CAACjC,EAAe9R,IAmEnB,SAAS+T,IACL,OAAQ3S,GACJ,IAAK,iBACD,OAAQuP,GAA8B,IAAnBA,EAAQ9K,QAAgB8K,EAAQ,GAAGpK,UAAUuB,YAAe,IAGnF,IAAK,eACD,OAAI6I,EACImB,EACOsB,EAAqB,IAAMzC,EAAQ,GAAGrK,eAAiB,IAGvD8M,EAAqB,IAAMzC,EAAQ,GAAGpK,WAAa,IAIvD,IAIf,QACI,MAAO,KAMnB,SAAS+M,IACL,OAAQlS,GACJ,IAAK,iBACD,OAAQuP,GAA8B,IAAnBA,EAAQ9K,QAAgB8K,EAAQ,GAAG3P,eAAkB,GAG5E,IAAK,eACD,OAAI8Q,EACQnB,GAA8B,IAAnBA,EAAQ9K,QAAgB8K,EAAQ,GAAGvH,mBAAsB,GAGpEuH,GAA8B,IAAnBA,EAAQ9K,QAAgB8K,EAAQ,GAAG3P,eAAkB,GAIhF,QACI,MAAO,IAKnB,IAAMoQ,EAAsB,CACxBlP,QAAS,UACTV,MAAOiJ,EAAKC,cAAcrK,IAASiU,qCAGjCC,EAAa9J,EAAKC,cAAcrK,IAASmU,wBAAyB,CAAE3J,MAAOqJ,EAAarO,OAASgB,EAAKhB,SAE5G,OACI,kBAAC,IAAD,CAAWtE,MAAOoP,EAASlP,OAzHZ,WACf,IAAMyQ,EAASvB,EAAQ9P,KAAI,SAAAiF,GAAI,OAAIA,EAAKE,MAClCyO,EAAmB3C,EAOnB,CAAE9T,IAAKkU,EAAQwC,aAAcR,GAN7B,CACE3N,UAAWI,SAAS5G,GACpB/B,IAAKkU,EACLhK,YAAalH,EACb0T,aAAcR,GAGtB,OAAO9B,YAAmBqC,GAAiBjS,KAAKU,IA+GDxB,sBAAuB0P,EAAqB5P,MAAO+S,GAC9F,kBAAC,QAAD,CAAO/C,WAAS,GACX4B,GACG,kBAAC,YAAD,KACI,kBAAC,QAAD,CACIlR,QAAQ,UACRyS,UAAQ,EACRnT,MAAOiJ,EAAKC,cAAcrK,IAASuU,4BAI/C,kBAAC,YAAD,KACKnK,EAAKC,cACFrK,IAASwU,2BACT,CACIC,SAAUnE,EAAQ9K,QAAU,EAC5ByM,MAAO3B,EAAQ,GAAG3K,GAClB+O,YAAa1B,EAAcxN,QAAU,EACrCmP,WAAYb,EAAe,GAC3B5B,EAAG,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAe,2BAAIA,OAIlC,kBAAC,YAAD,KACI,kBAAC,OAAD,CAAM1R,IAAI,OACN,kBAAC,YAAD,CAAWP,QAAS,WAChB,kBAAC,QAAD,KACI,kBAAC,YAAD,KACI,kBAAC,WAAD,CACIH,MAAOqK,EAAKC,cAAcrK,IAAS4U,sCACnCjP,GAAG,sBACHoH,KAAK,sBACLuE,UAAWG,EACXrR,SAAU,SAAAuS,GAAO,OAAIjB,EAAiBiB,OAG9C,kBAAC,YAAD,KACI,kBAAC,UAAD,CACIJ,QAAQ,yBACRzO,QAASsG,EAAKC,cAAcrK,IAAS6U,sCAErC,kBAAC,IAAD,CACIxR,UAAU,aACVgP,MAAM,+BACN3O,MAAO,CAAE+O,cAAe,WAM3C3S,EACAe,OAQzBgS,EAAmBpQ,UAAY,CAC3B+D,KAAM/D,IAAUG,MAChBC,UAAWJ,IAAUE,KACrBmQ,YAAarQ,IAAUG,MACvBmQ,mBAAoBtQ,IAAUqS,KAC9B1K,KAAM3H,IAAUC,IAChB3B,KAAM0B,IAAUK,QAGLyO,gBAAWsB,I,oQCtNpBkC,E,+LAyBFC,oBAAsB,WAA6B,IAA5BxO,EAA4B,uDAArB,GAAIyO,EAAiB,uDAAP,GAGxC,OAFAzO,EAAO,GAAG0O,OAAO1O,GACjByO,EAAU,GAAGC,OAAOD,MACbzO,EAAKhB,SAAUyP,EAAQzP,SACxB,CACE2P,OAAQ3O,EAAKhG,KAAI,SAAA7C,GAAG,MAAK,CACrBgI,GAAI,mBAAF,OAAqBhI,GACvBsG,YAAatG,MAEjBsX,Y,uEArBUG,GAClB,OAAIA,EAAU5O,OAASzH,KAAKa,MAAM4G,MAI9B4O,EAAUH,UAAYlW,KAAKa,MAAMqV,U,+BAqBhC,aAC4DlW,KAAKa,MAA9D4G,EADH,EACGA,KAAMyO,EADT,EACSA,QAA0BI,EADnC,EACkBhT,gBACvB,OACI,6BACI,kBAAC,IAAD,CACIiT,aAAc,kBAAM,EAAKN,oBAAoBxO,EAAMyO,IACnDlB,YAAwD,IAA5ChV,KAAKiW,oBAAoBxO,EAAMyO,GAC3CM,qBAAsB,SAAAC,GAAM,OAAIH,EAAqBG,EAAOC,qBAE5D,kBAAC,IAAD,CAAiBC,KAAK,KAAKrD,MAAOsD,IAAyBrV,QAL/D,IAMW,kBAAC,IAAqBN,IAAS4V,sB,GAjDhCC,aAApBd,EACKtS,UAAY,CACf+D,KAAM/D,IAAUqT,UAAU,CACtBrT,IAAUG,MACVH,IAAUK,SAEdmS,QAASxS,IAAUqT,UAAU,CACzBrT,IAAUG,MACVH,IAAUK,SAEdT,gBAAiBI,IAAUE,MA8CpBK,sBACX,MACA,SAAAC,GAAQ,MAAK,CACTZ,gBAAiB,SAAAD,GAAY,OAAIa,EAASZ,0BAAgBD,QAHnDY,CAKb+S,IAAahB,K,qBCvEf,IAAIjR,EAAU,EAAQ,MAEA,iBAAZA,IAAsBA,EAAU,CAAC,CAACoH,EAAOoI,EAAIxP,EAAS,MAOhE,IAAIkS,EAAU,CAAC,KAAM,EAErB,eAPIC,EAQJ,gBAAqBxU,GAER,EAAQ,GAAR,CAAmEqC,EAASkS,GAEtFlS,EAAQoS,SAAQhL,EAAOC,QAAUrH,EAAQoS,S,kCCX5C,SAASC,EAAqB9X,EAAG6T,GAC/B,OAAO7T,IAAM6T,EAGf,SAASkE,EAA2BC,EAAeC,EAAMC,GACvD,GAAa,OAATD,GAA0B,OAATC,GAAiBD,EAAK9Q,SAAW+Q,EAAK/Q,OACzD,OAAO,EAKT,IADA,IAAIA,EAAS8Q,EAAK9Q,OACT8N,EAAI,EAAGA,EAAI9N,EAAQ8N,IAC1B,IAAK+C,EAAcC,EAAKhD,GAAIiD,EAAKjD,IAC/B,OAAO,EAIX,OAAO,EAGT,SAASkD,EAAe7T,GACtB,IAAI0T,EAAgBI,UAAUjR,OAAS,QAAsB/D,IAAjBgV,UAAU,GAAmBA,UAAU,GAAKN,EAEpFO,EAAW,KACXC,EAAa,KAEjB,OAAO,WAOL,OANKP,EAA2BC,EAAeK,EAAUD,aAEvDE,EAAahU,EAAK4I,MAAM,KAAMkL,YAGhCC,EAAWD,UACJE,GAIX,SAASC,EAAgBC,GACvB,IAAIC,EAAexY,MAAMC,QAAQsY,EAAM,IAAMA,EAAM,GAAKA,EAExD,IAAKC,EAAa1D,OAAM,SAAU2D,GAChC,MAAsB,mBAARA,KACZ,CACF,IAAIC,EAAkBF,EAAatW,KAAI,SAAUuW,GAC/C,cAAcA,KACb/I,KAAK,MACR,MAAM,IAAIiJ,MAAM,wGAAgHD,EAAkB,KAGpJ,OAAOF,EAGT,SAASI,EAAsBC,GAC7B,IAAK,IAAIC,EAAOX,UAAUjR,OAAQ6R,EAAiB/Y,MAAM8Y,EAAO,EAAIA,EAAO,EAAI,GAAIE,EAAO,EAAGA,EAAOF,EAAME,IACxGD,EAAeC,EAAO,GAAKb,UAAUa,GAGvC,OAAO,WACL,IAAK,IAAIC,EAAQd,UAAUjR,OAAQqR,EAAQvY,MAAMiZ,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACjFX,EAAMW,GAASf,UAAUe,GAG3B,IAAIC,EAAiB,EACjBC,EAAab,EAAMc,MACnBb,EAAeF,EAAgBC,GAE/Be,EAAqBT,EAAQ5L,WAAM9J,EAAW,CAAC,WAGjD,OAFAgW,IAEOC,EAAWnM,MAAM,KAAMkL,aAC7BvB,OAAOmC,IAGNQ,EAAWrB,GAAe,WAI5B,IAHA,IAAI9Y,EAAS,GACT8H,EAASsR,EAAatR,OAEjB8N,EAAI,EAAGA,EAAI9N,EAAQ8N,IAE1B5V,EAAOyP,KAAK2J,EAAaxD,GAAG/H,MAAM,KAAMkL,YAI1C,OAAOmB,EAAmBrM,MAAM,KAAM7N,MAUxC,OAPAma,EAASH,WAAaA,EACtBG,EAASJ,eAAiB,WACxB,OAAOA,GAETI,EAASC,oBAAsB,WAC7B,OAAOL,EAAiB,GAEnBI,GAjGX1M,EAAQ4M,YAAa,EACrB5M,EAAQqL,eAAiBA,EACzBrL,EAAQ+L,sBAAwBA,EAChC/L,EAAQ6M,yBAoGR,SAAkCC,GAChC,IAAIC,EAAkBzB,UAAUjR,OAAS,QAAsB/D,IAAjBgV,UAAU,GAAmBA,UAAU,GAAK0B,EAE1F,GAAyB,iBAAdF,EACT,MAAM,IAAIhB,MAAM,gIAAwIgB,GAE1J,IAAIG,EAAa/K,OAAOC,KAAK2K,GAC7B,OAAOC,EAAgBE,EAAW5X,KAAI,SAAUC,GAC9C,OAAOwX,EAAUxX,OACf,WACF,IAAK,IAAI4X,EAAQ5B,UAAUjR,OAAQX,EAASvG,MAAM+Z,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IAClFzT,EAAOyT,GAAS7B,UAAU6B,GAG5B,OAAOzT,EAAOiI,QAAO,SAAUyL,EAAajY,EAAOkY,GAEjD,OADAD,EAAYH,EAAWI,IAAUlY,EAC1BiY,IACN,QAnBP,IAAIJ,EAAiBhN,EAAQgN,eAAiBjB,EAAsBV,I,sBCvGpErL,EAAUD,EAAOC,QAAU,EAAQ,GAAR,EAA+D,IAElFmI,EAAE,EAAQ,KAAsH,IACxInI,EAAQmI,EAAE,EAAQ,KAAwG,IAG1HnI,EAAQgC,KAAK,CAACjC,EAAOoI,EAAI,otCAAqtC,M,qBCL9uC,IAAIxP,EAAU,EAAQ,MAEA,iBAAZA,IAAsBA,EAAU,CAAC,CAACoH,EAAOoI,EAAIxP,EAAS,MAOhE,IAAIkS,EAAU,CAAC,KAAM,EAErB,eAPIC,EAQJ,gBAAqBxU,GAER,EAAQ,GAAR,CAAmEqC,EAASkS,GAEtFlS,EAAQoS,SAAQhL,EAAOC,QAAUrH,EAAQoS,S,sBCjB5C/K,EAAUD,EAAOC,QAAU,EAAQ,GAAR,EAA+D,IAElFmI,EAAE,EAAQ,KAAsH,IACxInI,EAAQmI,EAAE,EAAQ,KAAwG,IAG1HnI,EAAQgC,KAAK,CAACjC,EAAOoI,EAAI,2gDAA4gD,M,qBCLriD,IAAIxP,EAAU,EAAQ,MAEA,iBAAZA,IAAsBA,EAAU,CAAC,CAACoH,EAAOoI,EAAIxP,EAAS,MAOhE,IAAIkS,EAAU,CAAC,KAAM,EAErB,eAPIC,EAQJ,gBAAqBxU,GAER,EAAQ,GAAR,CAAmEqC,EAASkS,GAEtFlS,EAAQoS,SAAQhL,EAAOC,QAAUrH,EAAQoS,S,sBCjBlChL,EAAOC,QAAU,EAAQ,GAAR,EAA+D,IAKlFgC,KAAK,CAACjC,EAAOoI,EAAI,6TAA8T,M,qBCJvV,IAAIxP,EAAU,EAAQ,MAEA,iBAAZA,IAAsBA,EAAU,CAAC,CAACoH,EAAOoI,EAAIxP,EAAS,MAOhE,IAAIkS,EAAU,CAAC,KAAM,EAErB,eAPIC,EAQJ,gBAAqBxU,GAER,EAAQ,GAAR,CAAmEqC,EAASkS,GAEtFlS,EAAQoS,SAAQhL,EAAOC,QAAUrH,EAAQoS,S,sBCjBlChL,EAAOC,QAAU,EAAQ,GAAR,EAA+D,IAKlFgC,KAAK,CAACjC,EAAOoI,EAAI,oTAAqT,M,khBCF9U,IAIamF,EAAkBN,yBAC3B,CAH2B,SAAA3I,GAAK,OAAIA,EAAMkJ,oBAAoBC,aAI9DpS,K,GAEgC4R,yBAChC,CAT+B,SAAC3I,EAAO7R,GAAR,O,iVAAA,IAAsB6R,EAAMkJ,oBAAoBE,qBAAhD,CAAsEjb,UAUrGwH,KAGuBgT,yBACvB,CAb2B,SAAA3I,GAAK,OAAIA,EAAMqJ,eAc1C/S,K,4KCZEgT,EAA8B,SAAAlZ,GAAS,IACjCuB,EAA0BvB,EAA1BuB,MAAOb,EAAmBV,EAAnBU,MAAOwD,EAAYlE,EAAZkE,QAEtB,OACI,kBAACiV,EAAA,QAAD,CAASC,YAAalV,EAASmV,cAAe,GAAI9Y,aAAY,wBAAyB+Y,SAAS,SAC5F,kBAACC,EAAA,MAAD,CAAOzV,MAAO,CAAE0V,QAAS,eAAgBC,OAAQ,YAC7C,kBAACC,EAAA,UAAD,KACI,kBAAC1V,EAAA,EAAD,KAAQzC,IAEZ,kBAACmY,EAAA,UAAD,KACI,2BAAIhZ,OAOxBwY,EAA4BrW,UAAY,CACpCtB,MAAOsB,IAAUC,IACjBpC,MAAOmC,IAAUC,IACjBoB,QAASrB,IAAUC,KAERoW,Q,eChBTS,EAA4B,SAAC,GAA4B,IAA1BC,EAA0B,EAA1BA,cAAepP,EAAW,EAAXA,KAE/BqP,EASbD,EATA7S,YACA1C,EAQAuV,EARAvV,YACSyV,EAOTF,EAPA1S,QACe6S,EAMfH,EANAlS,cAC6BsS,EAK7BJ,EALA9R,4BACA9B,EAIA4T,EAJA5T,OACsBiU,EAGtBL,EAHA5R,qBACuBkS,EAEvBN,EAFA1R,sBAC0BiS,EAC1BP,EADAzR,yBAGEiS,EACFF,GACAzM,OAAOC,KAAKwM,GAAqBtZ,KAAI,SAAAiF,GAAI,MAAI,CACzClF,IAAe6F,MAAK,SAAAR,GAAM,OAAIA,EAAOtF,QAAUmF,EAAKgC,cAAY1H,MAChE+Z,EAAoBrU,GAAMgC,eAG5BwS,EACF,kBAAC7W,EAAA,YAAD,KACI,kBAAC+V,EAAA,MAAD,KACI,kBAACG,EAAA,UAAD,KACI,kBAACY,EAAA,EAAD,CACIC,WAAYC,IAAgBC,YAAYC,KACxClI,SAAUgI,IAAgBG,UAAUC,GACpCC,WAAYL,IAAgBM,YAAYF,IAEvCpQ,EAAKC,cAAcrK,IAAS2a,qBAGrC,kBAACrB,EAAA,UAAD,KAAYM,GAA6B,QAK/CgB,EACF,kBAACzB,EAAA,MAAD,KACI,kBAACG,EAAA,UAAD,KACI,kBAACY,EAAA,EAAD,CACIC,WAAYC,IAAgBC,YAAYC,KACxClI,SAAUgI,IAAgBG,UAAUC,GACpCC,WAAYL,IAAgBM,YAAYF,IAEvCpQ,EAAKC,cAAcrK,IAAS6a,YAEhCjV,GAAU,KAEX,kBAACsU,EAAA,EAAD,CACIC,WAAYC,IAAgBC,YAAYC,KACxClI,SAAUgI,IAAgBG,UAAUC,GACpCC,WAAYL,IAAgBM,YAAYF,GACxC9W,MAAO,CAAEoX,UAAW,iCAEnB1Q,EAAKC,cAAcrK,IAAS2a,oBAEhCd,GAAuB,MAE3BE,EAAyB,GACtB,kBAACT,EAAA,UAAD,KACI,kBAAClW,EAAA,YAAD,KACI,wBAAIC,UAAW,cAEnB,kBAAC6W,EAAA,EAAD,CAAYC,WAAYC,IAAgBC,YAAYU,UAAWN,WAAYL,IAAgBM,YAAYF,IAClGpQ,EAAKC,cAAcrK,IAASgb,8BAEjC,kBAACC,EAAA,EAAD,CACI9a,aAAY,iBACZ+a,SAAS,EACTC,eAAgB,KAChBC,MAAO,CAAChR,EAAKC,cAAcrK,IAASC,aAAcmK,EAAKC,cAAcrK,IAASwK,QAC9E4E,KAAM4K,EACN3W,UAAW,0BAEX,kBAAC,IAAD,MACA,kBAAC,IAAD,SAMpB,OACI,kBAAC,IAAD,KACI,kBAAC8V,EAAA,MAAD,CAAOhI,WAAS,GACZ,kBAACmI,EAAA,UAAD,MACA,kBAACA,EAAA,UAAD,KACI,kBAAC+B,EAAA,MAAD,CAAOlK,WAAS,GACZ,kBAACmK,EAAA,UAAD,KACI,kBAAC,EAAD,CACIna,MAAOiJ,EAAKC,cAAcrK,IAASqR,mBACnC/Q,MAAOqZ,EACP7V,QAASmW,KAGjB,kBAACqB,EAAA,UAAD,KACI,kBAAC,EAAD,CACIna,MAAOiJ,EAAKC,cAAcrK,IAASC,aACnC6D,QAAS8W,EACTta,MACI,8BACKyZ,EAAyB,GACtB,kBAAC,IAAD,CAAyB1H,MAAO,yCACjC,IACFzM,QAOzB,kBAAC0T,EAAA,UAAD,KACI,kBAAClW,EAAA,YAAD,KACI,kBAACE,EAAA,KAAD,CAAMC,UAAWC,eAAamB,GAAIV,KAG1C,kBAACqV,EAAA,UAAD,KACI,kBAACiC,EAAA,EAAD,CAAW7X,MAAO,CAAE8X,aAAc,iCAC7BpR,EAAKC,cAAcrK,IAASyZ,aADjC,KACiDA,GAEjD,kBAAC8B,EAAA,EAAD,KAAY7B,OAOhCH,EAA0B9W,UAAY,CAClC+W,cAAe/W,IAAUC,IACzB0H,KAAM3H,IAAUC,KAGL6O,mBAAWgI,G,gFC3IpBkC,GAAa,SAAA7b,GACf,QAAc6B,IAAV7B,IAAyC,IAAlBA,EAAM8b,QAC7B,OAAQ9b,EAAMiC,SACV,IAAK,UACD,OAAO,kBAAC8Z,GAAA,QAAD,CAASC,UAAQ,IAC5B,IAAK,sBACD,OAAO,kBAAC,GAAD,MACX,IAAK,OACD,OAAO,kBAAC,QAAD,MACX,IAAK,aACD,OAAO,kBAAC,cAAD,MACX,IAAK,WACD,OAAO,kBAAC,GAAD,MACX,IAAK,6BACD,OAAO,kBAAC,GAAD,MACX,QACI,OAAO,kBAACC,GAAA,SAAD,CAAUnG,KAAMoG,gBAAaC,KAIhD,OAAOnc,EAAM4C,UAIXwZ,GAA4B,WAC9B,OACI,kBAAC,WAAD,CAAeC,OAAQ,GAAIC,MAAO,KAC9B,0BAAMC,EAAE,KAAKC,EAAE,IAAIC,GAAG,IAAIC,GAAG,IAAIJ,MAAM,KAAKD,OAAO,OACnD,0BAAME,EAAE,IAAIC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIJ,MAAM,MAAMD,OAAO,SAK1DM,GAAiB,WACnB,OACI,kBAAC,WAAD,CAAeN,OAAQ,IAAKC,MAAO,KAC/B,0BAAMC,EAAE,SAASC,EAAE,SAASC,GAAG,IAAIC,GAAG,IAAIJ,MAAM,IAAID,OAAO,MAC3D,0BAAME,EAAE,QAAQC,EAAE,QAAQC,GAAG,IAAIC,GAAG,IAAIJ,MAAM,KAAKD,OAAO,OAC1D,0BAAME,EAAE,QAAQC,EAAE,QAAQC,GAAG,IAAIC,GAAG,IAAIJ,MAAM,KAAKD,OAAO,OAC1D,0BAAME,EAAE,QAAQC,EAAE,QAAQC,GAAG,IAAIC,GAAG,IAAIJ,MAAM,KAAKD,OAAO,OAC1D,0BAAME,EAAE,OAAOC,EAAE,QAAQC,GAAG,IAAIC,GAAG,IAAIJ,MAAM,MAAMD,OAAO,SAKhEO,GAAmC,WACrC,OACI,kBAAC,WAAD,CAAeP,OAAQ,GAAIC,MAAO,IAAKO,MAAO,EAAGC,aAAa,UAAUC,eAAe,WACnF,0BAAMR,EAAE,QAAQC,EAAE,QAAQC,GAAG,IAAIC,GAAG,IAAIJ,MAAM,SAASD,OAAO,UAC9D,4BAAQW,GAAG,KAAKC,GAAG,KAAKC,EAAE,SAKtCrB,GAAWhZ,UAAY,CACnBiZ,QAASjZ,IAAUqS,KACnBjT,QAASY,IAAUK,QAGR2Y,UCzDTsB,I,QAAa,SAACnd,GAChB,OACI,kBAACod,GAAeC,SAAhB,MACK,SAAAC,GAAO,OACJ,kBAAC7B,EAAA,MAAD,CAAOhY,UAAU,iBAAiB8N,WAAS,GACvC,kBAAC,GAAD,CAAYuK,QAASwB,EAAQ9X,WACzB,kBAACkW,EAAA,UAAD,CAAWjY,UAAWzD,EAAMud,YACxB,kBAACC,GAAA,SAAD,KAAWxd,EAAMyd,eAErB,kBAAC/B,EAAA,UAAD,CAAWgC,UAAQ,GACf,kBAACla,EAAA,YAAD,KACI,kBAACE,EAAA,KAAD,CAAMC,UAAWC,eAAa+Z,IAAK3d,EAAM4d,kBACzC,kBAACla,EAAA,KAAD,CAAMC,UAAWC,eAAamB,GAAI/E,EAAM6d,6BAUxEV,GAAWta,UAAY,CACnB4a,aAAc5a,IAAUC,IACxBya,WAAY1a,IAAUC,IACtB+a,mBAAoBhb,IAAUC,IAC9B8a,iBAAkB/a,IAAUC,KAGjBqa,U,iFCjCFW,GAAU,CACnBC,GAAI,CACA5Q,KAAM3C,KAAKC,cAAcrK,IAAS4d,iBAClC/Y,OAAQ,CACJgZ,EAAGzT,KAAKC,cAAcrK,IAAS8d,qBAC/BC,EAAG3T,KAAKC,cAAcrK,IAASge,sBAC/BC,EAAG7T,KAAKC,cAAcrK,IAASke,mBAC/BC,EAAG/T,KAAKC,cAAcrK,IAASoe,wBAGvCC,GAAI,CACAtR,KAAM3C,KAAKC,cAAcrK,IAASse,iBAClCzZ,OAAQ,CACJoZ,EAAG7T,KAAKC,cAAcrK,IAASue,iBAC/BC,EAAGpU,KAAKC,cAAcrK,IAASye,oBAGvCC,GAAI,CACA3R,KAAM3C,KAAKC,cAAcrK,IAAS2e,iBAClC9Z,OAAQ,CACJgZ,EAAGzT,KAAKC,cAAcrK,IAAS4e,kBAC/BX,EAAG7T,KAAKC,cAAcrK,IAASue,iBAC/BC,EAAGpU,KAAKC,cAAcrK,IAASye,oBAGvCI,GAAI,CACA9R,KAAM3C,KAAKC,cAAcrK,IAAS8e,iBAClCja,OAAQ,CACJgZ,EAAGzT,KAAKC,cAAcrK,IAAS4e,kBAC/BG,EAAG3U,KAAKC,cAAcrK,IAASgf,wBAGvCC,EAAG,CACClS,KAAM3C,KAAKC,cAAcrK,IAASkf,gBAClCra,OAAQ,CACJsa,EAAG/U,KAAKC,cAAcrK,IAASof,uBAC/BC,EAAGjV,KAAKC,cAAcrK,IAASsf,uBAGvCD,EAAG,CACCtS,KAAM3C,KAAKC,cAAcrK,IAASuf,gBAClC1a,OAAQ,CACJgZ,EAAGzT,KAAKC,cAAcrK,IAAS4e,kBAC/BX,EAAG7T,KAAKC,cAAcrK,IAASue,iBAC/BC,EAAGpU,KAAKC,cAAcrK,IAASye,oBAGvCe,EAAG,CACCzS,KAAM3C,KAAKC,cAAcrK,IAASyf,gBAClC5a,OAAQ,CACJgZ,EAAGzT,KAAKC,cAAcrK,IAAS4e,kBAC/BX,EAAG7T,KAAKC,cAAcrK,IAASue,iBAC/BC,EAAGpU,KAAKC,cAAcrK,IAASye,oBAGvCV,EAAG,CACChR,KAAM3C,KAAKC,cAAcrK,IAAS0f,gBAClC7a,OAAQ,CACJgZ,EAAGzT,KAAKC,cAAcrK,IAAS4e,kBAC/BX,EAAG7T,KAAKC,cAAcrK,IAASue,iBAC/BC,EAAGpU,KAAKC,cAAcrK,IAASye,oBAGvCkB,KAAM,CACF5S,KAAM3C,KAAKC,cAAcrK,IAAS4f,wBAClC/a,OAAQ,CACJ,MAAO,KAKNgb,GAAU,CACnBlC,GAAI,CACA5Q,KAAM3C,KAAKC,cAAcrK,IAAS8f,iBAClCjb,OAAQ,CACJgZ,EAAGzT,KAAKC,cAAcrK,IAAS8d,qBAC/BC,EAAG3T,KAAKC,cAAcrK,IAAS+f,6BAC/B9B,EAAG7T,KAAKC,cAAcrK,IAASke,qBAGvCG,GAAI,CACAtR,KAAM3C,KAAKC,cAAcrK,IAASggB,iBAClCnb,OAAQ,CACJgZ,EAAGzT,KAAKC,cAAcrK,IAAS4e,kBAC/BX,EAAG7T,KAAKC,cAAcrK,IAASue,iBAC/BC,EAAGpU,KAAKC,cAAcrK,IAASye,oBAGvCwB,GAAI,CACAlT,KAAM3C,KAAKC,cAAcrK,IAASkgB,iBAClCrb,OAAQ,CACJsb,EAAG/V,KAAKC,cAAcrK,IAASogB,sBAC/BnB,EAAG7U,KAAKC,cAAcrK,IAASqgB,oBAC/BxC,EAAGzT,KAAKC,cAAcrK,IAAS4e,oBAGvCS,EAAG,CACCtS,KAAM3C,KAAKC,cAAcrK,IAASsgB,gBAClCzb,OAAQ,CACJwa,EAAGjV,KAAKC,cAAcrK,IAASugB,sBAC/BpC,EAAG/T,KAAKC,cAAcrK,IAASwgB,qBAC/B3C,EAAGzT,KAAKC,cAAcrK,IAAS4e,oBAGvCY,EAAG,CACCzS,KAAM3C,KAAKC,cAAcrK,IAASygB,gBAClC5b,OAAQ,CACJwa,EAAGjV,KAAKC,cAAcrK,IAASugB,sBAC/BpC,EAAG/T,KAAKC,cAAcrK,IAASwgB,qBAC/B3C,EAAGzT,KAAKC,cAAcrK,IAAS4e,oBAGvCb,EAAG,CACChR,KAAM3C,KAAKC,cAAcrK,IAAS0gB,gBAClC7b,OAAQ,CACJwa,EAAGjV,KAAKC,cAAcrK,IAASugB,sBAC/BpC,EAAG/T,KAAKC,cAAcrK,IAASwgB,qBAC/B3C,EAAGzT,KAAKC,cAAcrK,IAAS4e,qBC9FrC+B,GAAa,SAAA/gB,GAAS,IACDghB,EAAkDhhB,EAAjEwH,cAA2CyZ,EAAsBjhB,EAArCyH,cAA4B+C,EAASxK,EAATwK,KAC1D0W,GAAWD,EAAe,WAAgBD,GAAe,aAAe,WACxEG,EAAaF,GAAeD,EAE5BI,EAnBiB,SAACC,EAAQC,GAChC,IAAIC,EAAM,GAUV,OATAF,GACIA,EAAO3hB,MAAM,KAAK8hB,SAAQ,SAAAC,GAAQ,MACbA,EAAK/hB,MAAM,KADE,YACzBmB,EADyB,KACpB4S,EADoB,KAExBtG,EAAOmU,EAAazgB,IAAQygB,EAAazgB,GAAKsM,KAC9CzM,EAAS4gB,EAAazgB,IAAQygB,EAAazgB,GAAKoE,OAAOwO,IAAS,MAClEtG,IACAoU,EAAIpU,GAAQzM,MAGjB6gB,EAQcG,CAAYP,EADXF,GAAenD,IAAakD,GAAef,IAIzChb,GAAWmc,EAA3BO,YARgB,KAQWP,EARX,kBAUxB,OACI,kBAAChE,GAAeC,SAAhB,MACK,SAAAC,GAAO,OACJ,kBAAC9Z,EAAA,YAAD,KACI,kBAAC,GAAD,CAAYsY,QAASwB,EAAQ9X,WACzB,kBAAC2T,EAAA,QAAD,CACIG,SAAS,SACTsI,SAAU,OACVC,YAAU,EACVxI,cAAa,UAAM6H,EAAN,YAAiB1W,EAAKC,cAAcrK,IAAS0hB,yBAC1D1I,YACI+H,EAEQ,kBAAC9F,EAAA,EAAD,CACI9a,aAAY,mBACZ0B,QAAS8f,IAAaC,QACtBzG,eAAgB,KAChBC,MACI,CAAChR,EAAKC,cAAcrK,IAAS6hB,kBACzBzX,EAAKC,cAAcrK,IAAS8hB,kBAEpC1S,KAAM/B,OAAO0U,QAAQld,IAErB,kBAAC,IAAD,MACA,kBAAC,IAAD,OA5BnB,OAiCG,kBAAC,IAAMjD,SAAP,KACI,kBAAC0B,EAAA,KAAD,CAAMC,UAAWC,eAAa+Z,GAAI7Z,MAAO,CAAE0V,QAAS,eAAgBC,OAAQ,YACvEyH,EADL,IACe1W,EAAKC,cAAcrK,IAASgiB,wBACvC,kBAAC,KAAD,CAA4B3P,MAAO,4CAEvC,gCAKZ,kBAAC,GAAD,CAAYqJ,QAASwB,EAAQ9X,WAAY2b,GA3CpC,MA2CL,UAOpBJ,GAAWle,UAAY,CACnB2E,cAAe3E,IAAUK,OACzBuE,cAAe5E,IAAUK,OACzBsH,KAAM3H,IAAUC,KAGL6O,mBAAWoP,IC7EpBsB,GAAmB,SAACtJ,EAAYvO,GAClC,OACI,kBAAC2O,EAAA,QAAD,CACIG,SAAS,SACTuI,YAAU,EACVxI,cAAe,6BAAMN,EAAWxX,MAAQiJ,EAAKC,cAAcrK,IAASkiB,+BACpElJ,YACI,kBAAC5V,EAAA,YAAD,KACI,kBAACE,EAAA,KAAD,CAAMC,UAAWC,eAAamB,GAAIgU,EAAW7M,OAGrDqW,cACI,uBAAGld,KAAK,6DAA6DF,OAAO,SAASC,IAAI,uBACpFoF,EAAKC,cAAcrK,IAASoiB,wCADjC,KAC2E,kBAAC,KAAD,QAI/E,2BAAIhY,EAAKC,cAAcrK,IAASqiB,oCAKtCC,GAAyB,SAAA1iB,GAC3B,IAAM+Y,EAAa4J,aAAiB3iB,EAAM8G,QACpC6a,GAAe3hB,EAAMsH,YAAe,WAAgBtH,EAAMuH,aAAe,aAAe,WAC9F,OACI,kBAACgS,EAAA,MAAD,CAAOhI,WAAS,GACZ,kBAACmI,EAAA,UAAD,KACI,kBAAC,GAAD,CACI6D,WAAYxE,EAAWtG,MACvBgL,aAAc1E,EAAW0E,aACzBG,iBAAkB7E,EAAWxX,MAAQvB,EAAMwK,KAAKC,cAAcrK,IAASkiB,8BACvEzE,mBAAoBwE,GAAiBtJ,EAAY/Y,EAAMwK,SAG/D,kBAACkP,EAAA,UAAD,KACI,kBAAC,GAAD,CACI+D,aACI,kBAACja,EAAA,YAAD,KACI,kBAACE,EAAA,KAAD,CAAMC,UAAWC,eAAaC,IAAK+e,0BAAe5iB,EAAMuH,YAAavH,EAAMsH,eAGnFsW,iBAAkB+D,EAAc3hB,EAAMwK,KAAKC,cAAcrK,IAASyiB,oCAI1E,kBAACnJ,EAAA,UAAD,KACI,kBAAC,GAAD,CAAYlS,cAAexH,EAAMwH,cAAeC,cAAezH,EAAMyH,mBAMrFib,GAAuB7f,UAAY,CAC/BiE,OAAQjE,IAAUK,OAClBqE,YAAa1E,IAAUC,IACvBwE,YAAazE,IAAUC,IACvB0E,cAAe3E,IAAUC,IACzB2E,cAAe5E,IAAUC,IACzB0H,KAAM3H,IAAUC,KAGpB4f,GAAuBI,aAAe,CAClChc,OAAQ,UACRS,iBAAa1F,EACbyF,iBAAazF,EACb2F,mBAAe3F,EACf4F,mBAAe5F,GAGJ8P,mBAAW+Q,I,+FCpDpBK,I,QAAc,SAAC,GAA+D,IAA7D3a,EAA6D,EAA7DA,MAAOnB,EAAsD,EAAtDA,SAAU+b,EAA4C,EAA5CA,+BAAiCxY,EAAW,EAAXA,KAAW,EACtC3K,mBAAS,GAD6B,YACzEojB,EADyE,KAC1DC,EAD0D,KAE1EC,EAAY/a,EAAMxC,OAASqd,GAAiB7a,EAAMiI,MAAM,EAAG4S,IAAkB7a,EAOnF,OAAO,kBAAC,WAAD,KACF+a,GAAaA,EAAUviB,KAAI,SAAA2C,GAAI,OAC5B,kBAAC6f,GAAA,KAAD,CAAM3f,UAAU,kBAAkB5C,IAAK0C,EAAKe,SACxC,kBAAC+e,GAAA,SAAD,KACI,kBAACC,EAAA,KAAD,CAAM/R,WAAS,GACX,kBAACgS,EAAA,SAAD,CAAUC,KAAM,IACZ,kBAAChgB,EAAA,YAAD,CAAaC,UAAW,mBACpB,kBAACC,EAAA,KAAD,CAAMC,UAAWC,eAAaC,IAC1B,kBAACI,GAAA,QAAD,CACIC,QAASsG,EAAKC,cAAcrK,IAAS+D,kBACrCwO,QAAQ,0BAER,kBAACvO,GAAA,EAAD,OAEHb,EAAKc,eAIlB,kBAACkf,EAAA,SAAD,CAAUC,KAAM,GACZ,kBAACjK,EAAA,MAAD,CAAOhI,WAAS,GACZ,kBAACmI,EAAA,UAAD,KACI,kBAAC+J,GAAA,EAAD,CAAiBvX,KAAM3I,EAAKmgB,WAGhC,kBAAChK,EAAA,UAAD,KACI,kBAAClW,EAAA,YAAD,KACI,kBAACE,EAAA,KAAD,CAAMC,UAAWC,eAAa+f,IAAKnZ,EAAKC,cAAcrK,IAASwjB,iBAC/D,kBAAClgB,EAAA,KAAD,CAAMC,UAAWC,eAAamB,GACzBkC,EADL,KACiBuD,EAAKC,cAAcrK,IAASyjB,SAD7C,IAGQtgB,EAAKugB,gBACJ/Y,QAAO,SAAAhN,GAAG,OAAIA,IAAQkJ,KACtBrG,KAAI,SAAC7C,EAAKgmB,GAAN,OACD,uBACItgB,UAAU,sBACV5C,IAAKkjB,EACL1e,KAAI,UAAK2e,IAAL,YAAkBjmB,IAErBA,MAGRmP,QAAO,SAACwJ,EAAM+K,GAAP,MAAgB,CAAC/K,EAAM,KAAM+K,KAAO,CAAC,QAOzDle,EAAK0gB,eACL,kBAACvK,EAAA,UAAD,KACI,kBAAClW,EAAA,YAAD,KACI,kBAACE,EAAA,KAAD,CACID,UAAW,kBACXE,UAAWC,eAAamB,GAExB,uBACItB,UAAU,UACV4B,KAAI,UAAK6e,IAAL,YAAkB3gB,EAAK0gB,eAC3B9e,OAAO,SACPC,IAAI,uBAGAoF,EAAKC,cAAcrK,IAAS+jB,sBAEhC,kBAAC,KAAD,CAAqB1gB,UAAU,sBAS3D,kBAAC8f,EAAA,SAAD,CAAUC,KAAM,GACZ,kBAACjK,EAAA,MAAD,CAAOhI,WAAS,GACXhO,EAAKe,SACF,kBAACoV,EAAA,UAAD,KACI,kBAAClW,EAAA,YAAD,KACI,kBAACE,EAAA,KAAD,CACID,UAAW,0BACXnB,QAAS,kBArFlB8hB,EAqFkD7gB,EAAKe,aAnFtF0e,EADe,CAAEvU,cAAe2V,IADF,IAACA,IAuFS,kBAAC,QAAD,CACIvjB,IAAK0C,EAAKe,QACV+f,GAAE,gBAAWpd,EAAX,2BAAsC1D,EAAKe,UAE5CkG,EAAKC,cAAcrK,IAASkkB,6BAQjD,kBAAC5K,EAAA,UAAD,KACI,kBAAClW,EAAA,YAAD,KACI,kBAACE,EAAA,KAAD,CAAMC,UAAWC,eAAa+f,IACzBnZ,EAAKC,cAAcrK,IAASmkB,mBAEjC,kBAAC9I,EAAA,MAAD,CAAOlK,WAAS,GACZ,kBAACmK,EAAA,UAAD,KACI,kBAAC1X,EAAA,EAAD,CAAOP,UAAU,SACZ+G,EAAKC,cAAcrK,IAASokB,sBAIrC,kBAAC9I,EAAA,UAAD,CAAWjY,UAAU,kBAAkBia,UAAQ,GACxCna,EAAKkhB,eAGA,kBAAC,WAAD,KACI,kBAAC,KAAD,CAAiBhhB,UAAU,oBAC1B+G,EAAKC,cAAcrK,IAASskB,KAC7B,kBAACzgB,GAAA,QAAD,CACIC,QAASsG,EAAKC,cAAcrK,IAASukB,2BACrChS,QAAQ,0BAER,kBAAC,KAAD,CACIF,MAAO,yCACPhP,UAAU,kBAXxB+G,EAAKC,cAAcrK,IAASwkB,MAmB1C,kBAACnJ,EAAA,MAAD,CAAOlK,WAAS,EAAC9N,UAAU,cACvB,kBAACiY,EAAA,UAAD,KACI,kBAAC1X,EAAA,EAAD,CAAOP,UAAU,SACZ+G,EAAKC,cAAcrK,IAASykB,gBAGrC,kBAACnJ,EAAA,UAAD,CAAWgC,UAAQ,EAACja,UAAU,mBACxBqhB,IAAqBvhB,EAAKwhB,aAE5B,kBAAC9gB,GAAA,QAAD,CACIC,QAAS8gB,IAAuBzhB,EAAKwhB,aACrCpS,QAAQ,0BAER,kBAAC,KAAD,CACIF,MAAO,yCACPhP,UAAU,iBAIlB,yBAAKA,UAAU,cACTF,EAAK0hB,iBAAmB,gCAAQ,kBAACC,GAAA,OAAD,CAAQC,KAAG,kBAarF/c,EAAMxC,OAASqd,GACX,kBAACK,EAAA,KAAD,KACI,kBAACC,EAAA,SAAD,KACI,kBAAC6B,GAAA,OAAD,CAAQvkB,IAAI,gBAAgBoB,QAAQ,YAAYK,QAAS,kBAAM4gB,EAAiB9a,EAAMxC,UACjF4E,EAAKC,cAAcrK,IAASilB,qBAAsB,CAAEjd,MAAQA,EAAMxC,OAASqd,UASxGF,GAAYD,aAAe,CACvB1a,MAAO,IAGX2a,GAAYlgB,UAAY,CACpB2H,KAAM8a,IAAUxiB,IAChBsF,MAAOkd,IAAUtiB,MACjBiE,SAAUqe,IAAUpiB,OACpB8f,+BAAgCsC,IAAUviB,MAG/B4O,mBAAWoR,ICrNpBwC,GAAiB,SAAAvlB,GACnB,OACI,kBAACod,GAAeC,SAAhB,MACK,SAAAC,GAAO,OACJ,kBAACgG,EAAA,KAAD,CAAM/R,WAAS,GACX,kBAACgS,EAAA,SAAD,CAAUiC,GAAI,EAAG5K,GAAI,IACjB,kBAAC,GAAD,CAAYkB,QAASwB,EAAQ9X,UAAWvD,QAAQ,WAC5C,kBAAC,GAAD,CAA2B2X,cAAe5Z,EAAMjB,KAAKA,SAI7D,kBAACwkB,EAAA,SAAD,CAAUiC,GAAI,EAAG5K,GAAI,GAAInX,UAAU,qBAC/B,kBAAC,GAAD,CACIqD,OAAQ9G,EAAMjB,KAAKA,KAAK+H,OACxBS,YAAavH,EAAMjB,KAAKA,KAAKwI,YAC7BD,YAAatH,EAAMjB,KAAKA,KAAKuI,YAC7BE,cAAexH,EAAMjB,KAAKA,KAAKyI,cAC/BC,cAAezH,EAAMjB,KAAKA,KAAK0I,iBAGvC,kBAAC,GAAD,CACIub,+BAAkChjB,EAAMgjB,+BACxC/b,SAAUjH,EAAMjB,KAAKA,KAAKkI,SAC1BmB,MAAOpI,EAAMjB,KAAKA,KAAKqJ,aAS/Cmd,GAAe1iB,UAAY,CACvB9D,KAAM8D,IAAUM,OAChB6f,+BAAgCngB,IAAUE,MAG/BwiB,U,wCC1CTE,GAAY,SAAC,GAA0C,IAAxCC,EAAwC,EAAxCA,cAAetR,EAAyB,EAAzBA,SAAapU,EAAY,uCAC/BH,oBAAS,GADsB,YAClDqC,EADkD,KAC1CyjB,EAD0C,KAWzD,OACI,6BACI,kBAACC,GAAA,SAAD,MACInZ,SAPZ,WACIkZ,GAASzjB,IAOD2jB,OAAQ,kBAACC,GAAA,YAAD,CAAaC,SAZjC,SAA6BC,GACzBL,EAAQK,IAWoD7R,WAAYC,IAChElS,OAAQA,EACR+jB,SAAO,EACPP,cAAeA,GACX1lB,MAMpBylB,GAAU5iB,UAAY,CAClB6iB,cAAe7iB,IAAUG,MACzBoR,SAAUvR,IAAUqS,MAGTuQ,U,mBCXFS,GAAsB,SAACnd,EAAiBnC,EAAMqN,EAAxB,OAA4CjU,EAA5C,kBAC/B,kBAACmmB,GAAA,aAAD,MAActlB,IAAI,aAAa8C,UAAU,SAASrB,QAAS,kBAAMyG,EAAgBnC,EAAMqN,KAAmBjU,GACtG,kBAAC,KAAqBI,IAASgmB,mB,oxBCwBvC,IAAMC,GAAsB,SAACrmB,GAAU,MACSH,oBAAS,kBAAK,kBAAM,+CAD7B,YAC5BymB,EAD4B,KACZC,EADY,OAEG1mB,oBAAS,kBAAM,kBAAM,SAFxB,YAE5B2mB,EAF4B,KAEfC,EAFe,OAGO5mB,wBAASgC,GAHhB,YAG5B6kB,EAH4B,KAGbC,EAHa,OAIa9mB,oBAAS,GAJtB,YAI5B+mB,EAJ4B,KAIVC,EAJU,OAKKhnB,oBAAS,GALd,YAK5BinB,EAL4B,KAKdC,EALc,KAO7BnT,EAAYhI,IAAMob,YAClB3jB,EAAW4jB,wBARkB,EASMC,aAAmBC,KATzB,YAS5BC,EAT4B,KASXC,EATW,KAW7BlhB,EAAkBmhB,uBACpB,qBAAGxO,oBAA8CE,wBAG/CxT,EAAY8hB,uBACd,qBAAGxO,oBAA8CE,qBAAqBxT,aAGpE+hB,EAAaD,uBACf,qBAAGxO,oBAA8CyO,cAG/CC,EAAWF,uBACb,qBAAGxO,oBAA8CE,qBAAqBna,QAAQ6G,QAG5EpE,EAAQmmB,mBAAQ,kBAAMliB,YAA0B,MAAKY,EAAN,GAA0BnG,EAAMjC,QAAQ,CAACoI,IAExFwF,EAAQ,SAAC+b,GAAD,OAAYrkB,EAAS2f,YAA+B0E,KAE5DC,EAAmB,SAAC,GAAuC,IAArC9pB,EAAqC,EAArCA,KAAgB+pB,EAAqB,EAA/BC,SAAoBC,EAAW,EAAXA,MAC9ClU,EAAUiQ,SAAY2D,EAAS3pB,OAASA,GAAQ2pB,EAASpoB,YAAcwoB,GACvEjc,EAAM,CAAE9N,OAAMuB,UAAWwoB,EAAUE,SAGnCN,GAAYA,EAASld,aAAesd,GAAYhU,EAAUiQ,SAC1DjQ,EAAUiQ,QAAQkE,cAAc,CAAElqB,OAAMuB,UAAWwoB,EAAUE,UAI/DE,EAAe,SAACtW,EAAW7S,GAE7B8nB,EADsB9nB,GAAoB,KAW9CopB,KAAmBC,OAAO,CACtBC,GAAI,gBACJC,SAAU,SAAAvpB,GAAO,OATJ,SAACA,GACd,IAAMwpB,EAAcxpB,EAAQE,KAAKkR,SAAb,CAAyBpR,EAAQE,KAAKgH,IAAtC,YAA8C2gB,GAAiB,KAC7EA,GAAiBA,EAAc3b,QAAO,SAAAlF,GAAI,OAAIA,IAAShH,EAAQE,KAAKgH,MAE1EiiB,EAAa,EAAOK,GAKC5b,CAAS5N,MAGlCiD,qBAAU,YACD8R,EAAUiQ,SAAWiD,GACtBnb,EAAM0b,GACNN,GAAgB,KAGhB1jB,EAASilB,YAA0BtoB,EAAMjC,IAAP,MAAiBwpB,KACnDX,GACOQ,EAAgB,MAAKG,KACrBV,GAAoB,MAEhC,CAACU,IAEJzlB,qBAAU,WACF4kB,GACArjB,EAASklB,YAAuB7B,MAErC,CAACA,EAAerjB,IAEnB,IAAMmlB,EAAa,iCAAG,uCAAA/pB,EAAA,sEACuDgqB,SAASD,cAAc,CAC5FE,aACAC,MAAO/c,IACPgd,kBACAC,aAAc,CACVxN,MAAOyN,IACPC,cACAC,gBACAC,wBACAC,eACAnH,iBACA/R,cACAmZ,gBACAC,uBAdU,gBACVC,EADU,EACVA,mBAAoBC,EADV,EACUA,kBAAmBC,EAD7B,EAC6BA,gBAgB/CC,KAAgBC,SAAhB,MACOH,EAAkBhZ,aAAyBoZ,MADlD,GAEOH,MAnBW,EAsBSF,EAAmBG,KAAgBG,YAAtDrD,EAtBU,EAsBVA,eACRC,GAAkB,kBAAMD,KAvBN,2CAAH,qDA0BnBxkB,qBAAU,WAEN,OADA0mB,IACO,WACHnlB,EAASumB,eACTvmB,EAASwmB,kBAEd,IAEH,IAKM9gB,EAAkB,SAACnC,EAAMsM,GAC3BuT,GACI,kBAAM,kBACF,kBAACxT,GAAA,EAAD,CACIrM,KAAMA,EACN3D,UAAW,WACPA,aAAU3B,EAAMoE,KAAMiG,GACtBme,YAAgB9pB,EAAMjC,MAE1BmV,YAAcA,EACd/R,KAAM,wBAmBhB4oB,EAAe,EACfvkB,GAAc,kBAAC2P,GAAA,EAAD,CAAaE,QAASqR,EAAe9f,KAAM5G,EAAMjC,OAAY,GAC7E,CACIoC,MAAOH,EAAMwK,KAAKC,cAAcrK,IAAS0I,YACzCxG,QAAS,kBAAMyG,EACX,CAAC/I,EAAMgqB,kBAlBa,WAE5B,GAA6B,IAAzBtD,EAAc9gB,OAAc,OACctE,EAAMvC,KAAKyH,MAAK,qBAAGT,KAAgB2gB,EAAc,MAC3F,MAAO,CAAC,CAAE3gB,GAFkB,EACpBA,GACMkkB,YAFc,EAChB/gB,eAGX,OAAIwd,EAAc9gB,OAAS,EACrB8gB,EAAc9lB,KAAI,SAAAiF,GAAI,MAAK,CAAEE,GAAIF,MAGrC,GASCqkB,KAEJlqB,MAAO,CAAEmU,YAAauS,GAA0C,IAAzBA,EAAc9gB,UAIvDukB,EAAiB1C,mBAAQ,kBAAM9d,aAAkB,CACnDC,cAAe8c,GAAiB,GAChC7c,gBAAiBme,EACjB1mB,MAAOA,EAAMvC,MAAQuC,GAAS,CAAEvC,KAAM,GAAI2G,KAAM,CAAE4E,YAAa,IAC/DR,cAAe,SAAAsgB,GAAG,OAAIC,YAA6BrqB,EAAMjC,IAAP,MAAiBwpB,EAAjB,GAAgC6C,SAClF,CAAC9oB,EAAOolB,EAAea,IAiB3B,OACI,kBAAC,IAAMvlB,SAAP,KACI,kBAACuX,EAAA,MAAD,CAAOhI,WAAS,GACZ,kBAACmI,EAAA,UAAD,KACI,kBAAClW,EAAA,YAAD,KACI,kBAACE,EAAA,KAAD,CAAMC,UAAWC,eAAa0mB,IACzBtqB,EAAMwK,KAAKC,cAAcrK,IAASmqB,8BAI/C,kBAAC7Q,EAAA,UAAD,KACI,kBAAC4M,EAAD,CACIkE,WAAY,CACRC,cAAc,EACdC,OAASppB,EAAMvC,KAAK6G,OAAS,GAvBtC,SAAC8C,EAAOkQ,EAAO+R,GAAf,OACXC,aACIhS,EACA+R,EACAE,IACAxD,EAAcS,KACdH,IAkBgBmD,OAASxpB,EAAMvC,KAAK6G,OAAS,GA7BjDmlB,aACIF,IACAxD,EAAcS,MA4BEkD,eAAgB,SAACpiB,EAASJ,GAAV,OACZa,YAA6BN,EAAiB/I,EAAMgqB,iBAAkBxhB,EAASA,YAEvFlH,MAAOA,EAAMvC,KACb8B,IAAK,YACLoqB,IAAKrX,EACLuV,WAAW,OACX+B,UAAWvD,EACX9pB,KAAM0pB,EAAW1pB,KACjBstB,MAAO3D,EAASld,YAChB8gB,UAAa5lB,EACb+G,QAASgb,EAAWnoB,UACpBisB,YAAa/pB,GAA0B,IAAjBA,EAAMsE,OAC5B0lB,YAAahqB,GAA0B,IAAjBA,EAAMsE,OAC5B4G,aAAY,IACR2H,WAAuC,IAA3B7S,EAAMoE,KAAK4E,eAAuBoc,GAA0C,IAAzBA,EAAc9gB,SAC1E4G,aAAa,CAAEG,eApGnB,SAAAvO,GACnB,IAAIN,EAAS,CAACkC,EAAMjC,IAAP,MAAiBwpB,IAC9BgE,KAAe/sB,KAAK8pB,IAA2BxqB,EAAQM,EAAQ,uBAoG/CotB,cAAe,SAACC,EAAI1H,EAAI7hB,EAAT,OAAmB6D,EAAnB,EAAmBA,GAAnB,OAA4B1C,EAASqoB,YAAU3lB,EAAI7D,KAClEypB,cAAe,CACXtpB,QAAS0nB,EACT6B,iBAAkB,CAAEzX,YAAauS,GAA0C,IAAzBA,EAAc9gB,SAEpEimB,oBAAqB,CACjBC,QAASlf,aAAmB,MAAK2a,GAAcvnB,EAAM+rB,kBACrDC,SAAU,SAACC,EAAGvY,GAAJ,OAAU1F,aAAc0F,EAAG/H,KAEzCugB,WAAc/B,GAAiB,CAC3Bvf,MAAO8b,GAAiBA,EAAc9gB,OACtCtE,MAAO6oB,EAAc7oB,MACrB6S,WAAuC,IAA3B7S,EAAMoE,KAAK4E,eAAuBoc,GAA0C,IAAzBA,EAAc9gB,QAC7EmN,QAAS5Q,QAAQukB,GAAiBA,EAAc9gB,QAChD6G,SAAU,kBAAM0d,EAAc5f,2BAElC4hB,aAAc,CACV7qB,MAAO,CACH8qB,aACIhsB,IAASisB,kBAAmBjsB,IAASksB,mBACrC/E,EAAWxc,OAAQY,GAEvB0C,aAAmB1C,EAAO4b,EAAYvnB,EAAM+rB,kBAC5C5c,aAAaxD,EAAO4b,MAI3Bf,GAAe,kBAACA,EAAD,WAQxCH,GAAoBxjB,UAAY,CAC5B2H,KAAM3H,IAAUM,OAChBpF,IAAK8E,IAAUK,OACf8mB,iBAAkBnnB,IAAUM,OAC5B4oB,iBAAkBlpB,IAAUG,OAGjB2O,mBACX4a,YACIlG,K,UC3RKjJ,GAAiBxR,IAAM4gB,cAAc,CAAEhnB,WAAW,IAEzDinB,G,YAWF,WAAYzsB,GAAO,0BACf,4BAAMA,KAoBV6I,sBAAwB,SAAAjC,GACpB,EAAK8lB,SAAS,CACVjc,kBAAmB,kBACf,kBAAC,KAAD,CAAmBkc,MAAI,EAAC/lB,KAAMA,EAAM3D,UAAW,kBAAM,EAAKjD,MAAM8pB,gBAAgB,EAAKla,MAAMgd,gBAxBpF,EA6BnB7jB,gBAAkB,SAAAnC,GACd,EAAK8lB,SAAS,CACVlG,YAAa,kBACT,kBAAC5U,GAAA,EAAD,CACIhL,KAAMA,EACN3D,UAAW,WACP,EAAKjD,MAAM8pB,gBAAgB,EAAKla,MAAMgd,SACtC,EAAK5sB,MAAM6sB,qBAAqB,EAAKjd,MAAMgd,gBAlC3D,EAAKhd,MAAQ,CAAEgd,QAAS,EAAK5sB,MAAM8sB,MAAMhvB,OAAOC,IAAK0S,kBAAmB,kBAAM,MAAM+V,YAAa,kBAAM,OAFxF,E,iEAKC,MAC8CrnB,KAAKa,MAA3D8pB,EADQ,EACRA,gBAAiBiD,EADT,EACSA,uBAEzBC,EAHgB,EACgCA,WAEtC,CACNC,YAAa,CACT,CAAE1rB,MAAO2rB,IAAMC,KAAK5rB,MAAO8iB,GAAI6I,IAAMC,KAAK9I,IAC1C,CAAE9iB,MAAO2rB,IAAME,SAAS7rB,MAAO8iB,GAAI6I,IAAME,SAAS/I,IAClD,CAAE9iB,MAAOpC,KAAKyQ,MAAMgd,QAASS,UAAU,MAI/CvD,EAAgB3qB,KAAKyQ,MAAMgd,SAA3B,OAA0C,WACtCG,S,+BA0BC,IF9D6BlkB,EAAuBjC,EAAxB,EAAmC5G,EE+D5D+I,EAAoB5J,KAApB4J,gBADH,EAEwE5J,KAAKa,MAA1E+Y,EAFH,EAEGA,WAAY8T,EAFf,EAEeA,qBAAsB7J,EAFrC,EAEqCA,+BAClCnc,EAAgBkS,EAAhBlS,MAAO9H,EAASga,EAATha,KAHV,EAI+CI,KAAKyQ,MAAjDgd,EAJH,EAIGA,QAASnc,EAJZ,EAIYA,kBAAmB+V,EAJ/B,EAI+BA,YAC9BwD,EAAmB,CACrBjkB,GAAI6mB,EACJtmB,UAAWyS,EAAWha,KAAKuH,UAC3BvF,cAAegY,EAAWha,KAAKiJ,sBAE7BslB,EAAa,EFxEezkB,EEyEJ1J,KAAK0J,sBFzEsBjC,EEyEC,CAClD,CACIgB,iBAAkBmR,EAAWha,KAAK6I,iBAClC7B,GAAI6mB,EACJ7rB,cAAegY,EAAWha,KAAK+I,8BF7EyB9H,EAAnC,WACrC,kBAACmmB,GAAA,aAAD,MAActlB,IAAI,mBAAmB8C,UAAU,SAASrB,QAAS,kBAAMuG,EAAsBjC,KAAW5G,GACpG,kBAAC,KAAqBI,IAASmtB,yBE8E3BrH,GAAoB/mB,KAAK4J,gBAAiB,CAACihB,KAEvC5hB,EAAUrJ,EAAVqJ,MACF2jB,EAAmB3jB,GAASA,EAAMxH,KACpC,kBAAuC,CAAEF,MAAzC,EAAG4D,QAAqDnE,MAAxD,EAAoBkE,gBAExB,OAAKwC,EA8BG,kBAAC,IAAM7E,SAAP,KACI,kBAACwrB,GAAA,EAAD,CAAqBjsB,MAAOqrB,IAC5B,kBAACa,EAAA,cAAD,OA9BJ,kBAACC,EAAA,KAAD,KACI,kBAACtQ,GAAeuQ,SAAhB,CAAyBjtB,MAAOqY,GAAc,CAAEvT,UAAWuT,EAAWvT,YAClE,kBAACgoB,GAAA,EAAD,CACIjsB,MACI,0BAAMuC,MAAO,CAAE0V,QAAS,OAAQoU,eAAgB,kBAC3ChB,EACD,kBAAC,GAAD,CAAWlH,cAAe4H,EAAYhU,SAAUuU,mBAAiBC,UAIzE,kBAAC,GAAD,CAAgB9K,+BAAgCA,EAAgCjkB,KAAMga,IACtF,kBAACyN,EAAD,MACA,kBAAC/V,EAAD,OAEJ,kBAACsd,EAAA,KAAD,KACI,kBAAC,GAAD,CACIhwB,IAAK6uB,EACLb,iBAAkBA,EAClB/B,iBAAkBA,EAClB7rB,UAAW0uB,EACXtkB,QAAS,CAAEQ,4B,GApGd6C,IAAMqK,WAA7BwW,GACK5pB,UAAY,CACfiqB,MAAOjqB,IAAUM,OACjB4V,WAAYlW,IAAUM,OACtB2mB,gBAAiBjnB,IAAUE,KAC3BiqB,UAAWnqB,IAAUE,KACrBgqB,sBAAuBlqB,IAAUE,KACjC8pB,qBAAsBhqB,IAAUE,KAChCigB,+BAAgCngB,IAAUE,MA6HnCwpB,sBACXnpB,mBAjBJ,SAAyBwM,GACrB,MAAO,CACHmJ,WAAYF,EAAgBjJ,OAIT,SAAAvM,GACvB,MAAO,CACHymB,gBAAiB,SAAA8C,GAAO,OAAIvpB,EAASymB,YAAgB8C,KACrD5J,+BAAgC,SAAAllB,GAAM,OAAIuF,EAAS2f,YAA+BllB,KAClFkvB,UAAW,SAAAgB,GAAM,OAAI3qB,EAAS2pB,YAAUgB,KACxCjB,sBAAuB,kBAAM1pB,EAAS0pB,gBACtCF,qBAAsB,SAAC9uB,EAAKqY,GAAN,OAAkB/S,EAASilB,YAA0BvqB,EAAKqY,QAKpFhT,CAGEqpB,M,oBClKN,OAIC,WACA,aAEA,IAsBGwB,EAtBCC,EAAM,CACT/gB,KAAM,MACNghB,QAAS,QACTC,iBAAkB,CACjBC,SAAa,4BACbC,YAAa,uBACbC,OAAa,uBACbC,IAAa,uBACbC,UAAa,0GACbC,OAAa,+CACbC,aAAa,yBACbC,YAAa,mCACbC,QAAa,2EACbC,QAAS,KACTC,OAAQ,EACRC,QAAS,EACTC,eAAe,EACfC,kBAAkB,GAEnBC,cAAUttB,EACVutB,aAAUvtB,EACVwtB,KAAK,GAGNnB,EAAIoB,iBAAmB,SAASJ,GAC/B,IAAIK,EAAkB,CAAE,IAAK,QAAS,IAAK,QAAS,IAAK,QAAS,IAAK,QAAS,IAAK,QAAS,IAAK,SAClGC,EAAYN,EAAmB,aAAe,0BAC/C,OAAO,SAASO,GACf,OAAOA,EAAOA,EAAK5nB,WAAWpI,QAAQ+vB,GAAW,SAASE,GAAI,OAAOH,EAAgBG,IAAMA,KAAO,KAIpGzB,EAAY,WAAY,OAAO9uB,OAAQ,EAAGwwB,MAAM,QAArC,GAG0BrkB,EAAOC,QAC3CD,EAAOC,QAAU2iB,OAEa,KAA9B,aAAkB,OAAOA,GAAK,8BAK/B,IAAI0B,EAAW,CACdZ,OAAQ,CAAEa,MAAO,MAAYC,IAAK,MAAYC,YAAa,iBAC3DrwB,MAAQ,CAAEmwB,MAAO,WAAYC,IAAK,WAAYC,YAAa,uBACzDC,EAAO,KAkCV,SAASC,EAASR,GACjB,OAAOA,EAAKhwB,QAAQ,YAAa,MAAMA,QAAQ,YAAa,KAG7DyuB,EAAIiB,SAAW,SAASe,EAAMC,EAAGC,GAEhC,IAAuDC,EAAyBC,EAA5EC,GADJJ,EAAIA,GAAKjC,EAAIE,kBACDY,OAASY,EAASZ,OAASY,EAASlwB,MAAuB8wB,EAAM,EAC5EC,EAAQN,EAAE3B,KAAO2B,EAAEzB,OAvCrB,SAASgC,EAAYP,EAAGQ,EAAOP,GAC9B,OAA0B,iBAAVO,EAAsBA,EAAQA,EAAM9oB,YACnDpI,QAAQ0wB,EAAEzB,QAAUsB,GAAM,SAASN,EAAGD,EAAMmB,EAAQlwB,GAcpD,OAb6B,IAAzB+uB,EAAKoB,QAAQ,UAChBpB,EAAOA,EAAKqB,UAAU,IAEjBrB,KAAQW,IACE,MAAXQ,GACCT,EAAExB,cAAcjuB,EAAMjB,QAAQ0wB,EAAExB,cAAc,SAASe,EAAGqB,EAAOC,GACpEZ,EAAIX,GAAQ,CAACwB,IAAKF,EAAO7kB,KAAM8kB,MAE1BvB,KAAQW,IAAMA,EAAIX,GAAO/uB,IAE/B,IAAIwwB,SAAS,MAAO,QAAQzB,EAAK,MAAQ/uB,EAAzC,CAAgD0vB,IAG3C,MAEP3wB,QAAQ0wB,EAAE3B,KAAOwB,GAAM,SAASN,EAAGD,GAC/BU,EAAE1B,YAAWgB,EAAOA,EAAKhwB,QAAQ0wB,EAAE1B,WAAW,SAASiB,EAAGyB,EAAGC,EAAGL,GACnE,GAAIX,EAAIgB,IAAMhB,EAAIgB,GAAGH,KAAOF,EAAO,CAClC,IAAIM,GAAMD,EAAE,IAAIL,GAAOtxB,QAAQ,QAAS,KAGxC,OAFA2wB,EAAIkB,MAAQlB,EAAIkB,OAAS,GACzBlB,EAAIkB,MAAMD,GAAMjB,EAAIgB,GAAGllB,KAAKzM,QAAQ,IAAI8xB,OAAO,cAAgBnB,EAAIgB,GAAGH,IAAM,YAAa,KAAM,KAAOF,EAAQ,MACvGI,EAAI,cAAcE,EAAG,UAG9B,IAAIL,EAAI,IAAIE,SAAS,MAAO,UAAYzB,EAAhC,CAAsCW,GAC9C,OAAOY,EAAIN,EAAYP,EAAGa,EAAGZ,GAAOY,KAWPN,CAAYP,EAAGD,EAAME,GAAO,IAAMF,EAEhEO,GAAO,aAAeN,EAAEpB,MAAQ0B,EAAIhxB,QAAQ,iCAAiC,KACzEA,QAAQ,6BAA6B,IAAKgxB,GAC5ChxB,QAAQ,QAAS,QACjBA,QAAQ0wB,EAAE7B,aAAe0B,GAAM,SAASN,EAAGD,GAC3C,OAAOc,EAAIV,MAAQI,EAASR,GAAQc,EAAIT,OAExCrwB,QAAQ0wB,EAAE5B,QAAUyB,GAAM,SAASN,EAAGD,GAEtC,OADAY,GAAiB,EACVE,EAAIR,YAAcE,EAASR,GAAQc,EAAIT,OAE9CrwB,QAAQ0wB,EAAEvB,aAAeoB,GAAM,SAASN,EAAG8B,EAAU/B,GACrD,OAAO+B,EACL/B,EAAO,cAAgBQ,EAASR,GAAQ,WAAa,iBACrDA,EAAO,QAAUQ,EAASR,GAAQ,WAAa,eAEjDhwB,QAAQ0wB,EAAEtB,SAAWmB,GAAM,SAASN,EAAGb,EAAS4C,EAAOC,GACvD,OAAK7C,GACL2B,GAAK,EAAGF,EAAKoB,GAAS,IAAIlB,EAAK3B,EAAQoB,EAASpB,GACzC,YAAY2B,EAAI,IAAI3B,EAAQ,UAAU2B,EAAI,SAASiB,EAAM,IAAInB,EAAK,QAAQE,EAAI,OAAOA,EAAI,mBAAmBF,EAAK,KAAKE,EAAI,KAC/HiB,EAAM,OAAOjB,EAAI,IAAIF,EAAK,eAHP,kBAKrB7wB,QAAQ0wB,EAAE9B,UAAY2B,GAAM,SAASN,EAAGD,GACxC,MAAO,KAAOQ,EAASR,GAAQ,YAE9B,iBACDhwB,QAAQ,MAAO,OAAOA,QAAQ,MAAO,OAAOA,QAAQ,MAAO,OAC3DA,QAAQ,2BAA4B,MAAMA,QAAQ,QAAS,IAGzD4wB,IACEF,EAAElB,gBAAiBhB,GAAaA,EAAS0D,cAAa1D,EAAS0D,YAAczD,EAAIoB,iBAAiBa,EAAEjB,mBACzGuB,EAAM,wEACHvC,EAAIoB,iBAAiBznB,WAAa,KAAOsoB,EAAEjB,kBAAoB,IAAM,MACrEuB,GAEJ,IACC,OAAO,IAAIS,SAASf,EAAErB,QAAS2B,GAC9B,MAAOxE,GAGR,KADuB,oBAAZ2F,SAAyBA,QAAQvC,IAAI,yCAA2CoB,GACrFxE,IAIRiC,EAAIkB,QAAU,SAASc,EAAME,GAC5B,OAAOlC,EAAIiB,SAASe,EAAM,KAAME,IAzIlC,I,iCCJA,4/BAAO,IAAMyB,EAAiB,iBAEjBC,EAAoB,oBACpBC,EAA2B,2BAC3BC,EAAuB,uBACvBC,EAAgC,gCAChCC,EAAgB,gBAChBC,EAAa,aACbC,EAAiB,iBACjBC,EAAwB,wBACxBC,EAA2B,2BAC3BC,EAAoC,oCACpCC,EAA6B,6BAC7BC,EAAa,aACbC,EAAoB,oBACpBC,EAAkB,kBAClBC,EAA2B,2BAC3BC,EAAa,aACbC,EAAa,aACbC,EAAoB,oBAEpBC,EAAwB,wBACxBC,EAAoC,oCACpCC,EAAsB,sBACtBC,EAA0B,0BAC1BC,EAAkB,kBAClBC,EAAwB,wBACxBC,EAAmB,mBACnBC,EAAmC,mCACnCC,EAAoB,oBACpBC,EAAqB,qBACrBC,EAA0B,2B,0tBCtBhC,IAAMC,EAAY9wB,IAAU6B,MAAM,CACrC3F,KAAM8D,IAAUqT,UAAU,CAACrT,IAAUM,OAAQN,IAAUG,QACvD0C,KAAM7C,IAAUM,OAChBqC,UAAW3C,IAAUqS,OAWlB,SAAS0e,EAAoBC,EAAUC,GAC1C,OAAID,GACApmB,OAAOC,KAAKmmB,GAAUrS,SAClB,SAAA3gB,GAAG,YACmBgB,IAAlBgyB,EAAShzB,IACY,KAAlBgzB,EAAShzB,YAENgzB,EAAShzB,MAGRizB,EAAclzB,KAAI,SAAAiF,GAAI,OAAIguB,EAAShuB,OAK/C,GAIJ,SAASkuB,EAAuBC,EAAWF,GAC9C,GAAIE,EAAW,CACX,IAAMl2B,E,iVAAS,CAAH,GAAQk2B,GAWpB,OAVAvmB,OAAOC,KAAKsmB,GAAWxS,SACnB,SAAA3gB,GAAG,YACiBgB,IAAhB/D,EAAO+C,IACY,KAAhB/C,EAAO+C,KACNizB,EAAcx1B,SAASuC,KACR,IAAhB/C,EAAO+C,YAEJ/C,EAAO+C,MAGd/C,GAIR,SAASm2B,IAA8B,IAAnBh2B,EAAmB,uDAAZ,IAAIsB,KAC5B20B,EAAU,SAACC,GAAD,gBAAsC,IAAvB,UAAGA,GAASvuB,OAAe,IAAM,IAAhD,OAAqDuuB,IAC/DC,EAAW,IAAI70B,KAAKtB,GAC1B,GAAIm2B,aAAoB70B,OAAS80B,MAAMD,GAAW,CAC9C,IAAME,EAAOF,EAASG,cAChBC,EAAQJ,EAASK,WACjBC,EAAMN,EAASO,UACrB,gBAAUL,EAAV,YAAkBJ,EAAQM,GAA1B,YAAoCN,EAAQQ,IAGhD,OAAON,EAUJ,SAASQ,EAA0BC,GACtC,GAAIpnB,OAAOqnB,UAAUC,eAAeC,KAAKH,EAAc,eAAgB,CACnE,IAAII,EAAYC,IAAa1uB,MAAK,qBAAG9F,QAAsBm0B,EAAaM,eAExE,QAAyB,IAAdF,QAAiE,IAA7BJ,EAAaM,YAA6B,CACrF,IAAIlwB,EAAS4vB,EAAaM,YAAYz1B,MAAM,WAAWqL,QAAO,SAAAlF,GAAI,OAAIuvB,WAAWvvB,MADI,MAEpEZ,EAFoE,GAGrFgwB,EAAY,CAAEhrB,KAHuE,KAGjEoa,GAHiE,gBAIzD,IAAd4Q,QAAiE,IAA7BJ,EAAaM,YAC/DF,EAAY,CAAEhrB,UAAMpI,EAAWwiB,QAAIxiB,GAC3BozB,GAAiC,QAApBA,EAAU90B,OAAiD,eAA7B00B,EAAaM,cAChEF,EAAY,CAAEhrB,MAAO,EAAGoa,IAAK,IAGjCwQ,EAAaQ,UAAYJ,EAAUhrB,KACnC4qB,EAAaS,QAAUL,EAAU5Q,GAGrC,GAAI5W,OAAOqnB,UAAUC,eAAeC,KAAKH,EAAc,gBAAiB,CACpE,IAAIU,EAAcC,IAAoBhvB,MAAK,SAAAX,GAAI,OAAIA,EAAKnF,QAAUm0B,EAAaY,qBAEpD,IAAhBF,GACPV,EAAaa,YAAcH,EAAYtrB,MAAQgqB,EAAWsB,EAAYtrB,MACtE4qB,EAAac,UAAYJ,EAAYlR,IAAM4P,EAAWsB,EAAYlR,MAElEwQ,EAAaa,iBAAc7zB,EAC3BgzB,EAAac,eAAY9zB,EACzBgzB,EAAaY,kBAAe5zB,GAIpC,OAAOgzB,EAGJ,SAASlS,EAAiB7b,GAC7B,OAAI2G,OAAOC,KAAKkoB,KAAYt3B,SAASwI,GAC1B,CACHvF,MAAOq0B,IAAW9uB,GAAQvF,MAC1BkR,MAAOmjB,IAAW9uB,GAAQ2L,MAC1BvG,KAAM0pB,IAAW9uB,GAAQoF,KACzBuR,aACI,kBAAC,IAAD,CAAc3H,KAAK,QAIpB,CACHvU,MAAO,UACPkR,MAAOojB,IAAgBC,QACvB5pB,KAAM,GACNuR,aACI,kBAAC,IAAD,CAAa3H,KAAK,QAM3B,IAAMiV,EAAe,SAACiD,EAAQttB,GACjC,GAAIA,EAAO,CACP,IAAIiqB,EAAmC,IAAvBjqB,EAAMmwB,QAAQ,KAAazH,IAAgB2M,KAAO3M,IAAgB4M,IAOlF,OANAt1B,EAAQA,EAAMjB,QAAQ,UAAW,IAEtB,CACPmZ,MAFUqd,IAAUjI,GAAQ,SAAAnoB,GAAI,OAAIA,EAAKhF,MAAQH,KAGjDiqB,aAKR,MAAO,IAGEC,EAAmB,SAAC/pB,EAAK8pB,EAAWqD,EAAQkI,EAAavqB,GAClE,IAAIwqB,EAAanI,EAAOntB,GAAKA,IACvBu1B,EAAaF,GAAeA,EAAYG,OAAO,KAAOF,GACxDxL,IAAcvB,IAAgB2M,MAAQK,KACtCD,EAAa,IAAMA,GAGvBxqB,EAAM,CAAEmc,KAAMqO,KAULjP,EAAqB,SAAC4M,GAe/B,MAAO,CAZiB,SAACvM,GACrB+O,OAAOC,QAAQC,UACX,GACA,GAFJ,UAIQF,OAAOG,SAASC,SAJxB,YAMQC,IAAG13B,UAAU80B,EAAuBxM,EAAYuM,OAT1C6C,IAAGC,MAAMN,OAAOG,SAAS/qB,UAiBlCzI,EAAY,SAACyC,EAAMiG,GAC5B,IAAMtN,EAAQqI,SAAShB,EAAKrH,OACtBR,EAAO6I,SAAShB,EAAK7H,MACrB8H,EAAYe,SAAShB,EAAKC,WAGhCgG,EAAM,CAAE9N,KAFMQ,IAAUR,GAAQA,EAAO,GAAmB,IAAd8H,EAAoBtH,EAAQ,EAAKR,M,s4BCtLjF,IAAMg5B,EAAWC,IAAMC,SAwBvBF,EAASG,aAAaC,QAAQzI,IAAI0I,mBAClCL,EAASG,aAAal4B,SAAS0vB,IAAI2I,2BACnCN,EAASG,aAAal4B,SAAS0vB,IAAI,KAAM4I,kBACzCP,EAASG,aAAal4B,SAAS0vB,IAAI,MAZ5B,SAA6B3nB,GAChC,GAAIA,EAAM/H,UAAsC,MAA1B+H,EAAM/H,SAASkH,OAEjC,MADaqxB,IAIjB,MAAMxwB,KAOVgwB,EAASG,aAAal4B,SAAS0vB,IAAI,MA1B5B,SAA0B8I,GAC7B,IAAKR,IAAMS,SAASD,GAAM,CACtB,IAAME,E,iVAAY,CAAH,GAAQF,GAEvB,GAAIE,EAAU14B,UAAY04B,EAAU14B,SAASC,MAAQy4B,EAAU14B,SAASC,KAAK04B,OAEzE,MADaD,EAAU14B,SAASC,KAAK04B,OAAO,GAIhD,MAAMH,MAmBCT,Q,SChCXa,EAAM,IAAIC,cAAO91B,EALJ,sBAK2Bg1B,GAErC,SAASe,EAAc3wB,GAE1B,OADeywB,EAAIE,cAAc3wB,GAI9B,SAAS4wB,EAAiB3nB,GAE7B,OADewnB,EAAIG,iBAAiB3nB,GAIjC,SAAS4nB,EAAwB7wB,EAAU4sB,GAC9C,IAYIkE,EAAiBnE,YAAoBC,EAZpB,CACjB,SACA,QACA,SACA,OACA,YACA,OACA,YACA,cACA,gBACA,cAIJ,OADa6D,EAAIM,wBAAJ,MAAAN,EAAG,CAAyBzwB,GAAzB,WAAsC8wB,KAInD,SAASE,EAAWpE,GACvB,IACIkE,EAAiBnE,YAAoBC,EADpB,CAAC,SAAU,QAAS,SAAU,OAAQ,YAAa,OAAQ,cAAe,QAAS,OAAQ,YAGhH,OADa6D,EAAIQ,eAAJ,MAAAR,EAAG,IAAmBK,IAIhC,SAASI,EAAoBtE,GAChC,IAkBIkE,EAAiBnE,YAAoBC,EAlBpB,CACjB,SACA,QACA,SACA,OACA,YACA,OACA,YACA,UACA,cACA,YACA,SACA,cACA,mBACA,YACA,gBACA,aAIJ,OADa6D,EAAIU,WAAJ,MAAAV,EAAG,IAAeK,IAI5B,SAASM,EAAanoB,EAAQlK,GAEjC,OADa0xB,EAAIY,gBAAgBpoB,EAAQlK,GAItC,SAASuyB,EAAmB1E,GAAU,IACjC3jB,EAAW2jB,EAAX3jB,OAkBR,GAAI2jB,GAAY3jB,EAAQ,CACpBzC,OAAOC,KAAKmmB,GAAUrS,SAAQ,SAAA3gB,GAAG,YAAuBgB,IAAlBgyB,EAAShzB,IAAwC,KAAlBgzB,EAAShzB,YAAuBgzB,EAAShzB,MAC9G,IAAM/C,EAnBW,CACjB,SACA,QACA,SACA,OACA,YACA,OACA,YACA,UACA,cACA,YACA,SACA,YACA,cACA,mBACA,iBAI8B8C,KAAI,SAAAiF,GAAI,OAAIguB,EAAShuB,MACnD,OAAO6xB,EAAIa,mBAAJ,MAAAb,EAAG,CAAoBxnB,GAApB,WAA+BpS,KAAlC,OAAgD,SAAAw5B,GACnD,GAAIA,GAAsB,QAAfA,EAAItxB,OACX,MAAO,CAAEyxB,OAAQH,GAGrB,MAAMA,MAKX,SAASnlB,EAAmBrU,GAE/B,OADa45B,EAAIc,UAAU16B,GAIxB,SAAS26B,EAAcpjB,EAAS9L,GACnC,IAAMxK,EAAO,CAAE25B,QAASnvB,EAAQkL,aAAc,IAAI/V,MAAN,IAAe2W,KAE3D,OADaqiB,EAAIiB,iBAAiB55B,GAI/B,SAASsS,EAAgBvT,GAE5B,OADa45B,EAAIkB,mBAAmB96B,GAIjC,SAASoU,EAAapU,GAEzB,OADa45B,EAAIxlB,aAAapU,GAI3B,SAAS+6B,IAEZ,OADanB,EAAImB,qBAId,SAASC,EAA2B7xB,EAAU4sB,GAEjD,IAWIkE,EAAiBnE,YAAoBC,EAXpB,CACjB,SACA,QACA,SACA,OACA,YACA,OACA,YACA,cACA,kBAIJ,OADa6D,EAAIoB,2BAAJ,MAAApB,EAAG,CAA4BzwB,GAA5B,WAAyC8wB,KAItD,SAASgB,EAAclF,GAC1B,IACIkE,EAAiBnE,YAAoBC,EADpB,CAAC,SAAU,QAAS,SAAU,OAAQ,YAAa,OAAQ,cAAe,QAAS,OAAQ,YAGhH,OADa6D,EAAIqB,cAAJ,MAAArB,EAAG,IAAkBK,IAI/B,SAASiB,EAAcnF,GAC1B,IAkBIkE,EAAiBnE,YAAoBC,EAlBpB,CACjB,SACA,QACA,SACA,OACA,YACA,OACA,YACA,UACA,cACA,YACA,SACA,cACA,mBACA,YACA,gBACA,aAIJ,OADa6D,EAAIsB,cAAJ,MAAAtB,EAAG,IAAkBK,IAI/B,SAASkB,EAAkBpF,GAAU,IAChC3jB,EAAW2jB,EAAX3jB,OAkBR,GAAI2jB,GAAY3jB,EAAQ,CACpBzC,OAAOC,KAAKmmB,GAAUrS,SAAQ,SAAA3gB,GAAG,YAAuBgB,IAAlBgyB,EAAShzB,IAAwC,KAAlBgzB,EAAShzB,YAAuBgzB,EAAShzB,MAC9G,IAAM/C,EAnBW,CACjB,SACA,QACA,SACA,OACA,YACA,OACA,YACA,UACA,cACA,YACA,SACA,YACA,cACA,mBACA,iBAI8B8C,KAAI,SAAAiF,GAAI,OAAIguB,EAAShuB,MACnD,OAAO6xB,EAAIuB,kBAAJ,MAAAvB,EAAG,CAAmBxnB,GAAnB,WAA8BpS,Q,wjCCpMnCwR,EAAe4pB,IAAU,CAClC33B,MAAO,gBACP0rB,YAAa,K,mkBCFV,I,EAAM3d,EAAe4pB,IAAU,CAClClgB,qBAAsB,CAClBxT,WAAW,EACXC,WAAY,GACZ5G,QAAS,CACL6G,KAAM,CACF4E,YAAa,EACbzM,KAAM,EACNuB,UAAW,MAIvBmoB,WAAY,CACR1pB,KAAM,EACNuB,UAAW,GACXsnB,cAAe,GACfjY,mBAAe5M,EACfyE,eAAWzE,GAEfkX,WAAY,CACRvT,WAAW,EACX3G,QAAS,GACTgI,OAAO,K,0jBCvBR,IAAMyI,EAAe,CACxBiY,WAAY,CACR1pB,KAAM,EACNuB,UAAW,IAEfsR,QAAS,CACLlL,WAAW,EACX3G,QAAS,GACT6G,KAAM,IAAInG,KACVsH,OAAO,GAEXsyB,WAAY,GACZC,aAAc,GACdC,sBAAsB,GA0FnB,IAAMC,EAAkBC,aAAgB,qBAEnClH,IAFmC,aAvF/C,SAAgCziB,EAAhC,GACI,YACOA,EADP,CAEI4pB,UAHyC,EAAR9zB,KAIjCgL,QAAS,KACFd,EAAMc,QADN,CAEHlL,WAAW,SAiFwB,gBAGnC6sB,IAHmC,cA5E/C,SAAiCziB,EAAjC,GACI,YACOA,EADP,CAEI4pB,UAHmD,EAAjB9zB,KAIlCgL,QAAS,CACL7R,QAAS,CAAE44B,OALoC,EAAX54B,SAMpC2G,WAAW,QAsEwB,gBAInC6sB,IAJmC,eAjE/C,SAAkCziB,EAAOW,GAAQ,IACrC1R,EAAkB0R,EAAlB1R,QAAS6G,EAAS6K,EAAT7K,KACjB,OAAIA,GAAQkK,EAAM4pB,UACd,KACO5pB,EADP,CAEI4pB,UAAW9zB,EACXgL,QAAS,CACL7R,UACA2G,WAAW,KAKhBoK,KAoDoC,MAKtC,qCAtBT,SAA0BA,EAAOW,GAC7B,IAAIkpB,EAAW7pB,EAEf,OADA6pB,EAASlS,WAAT,KAA2B3X,EAAM2X,WAAjC,GAAgDhX,EAAO1R,SAChD46B,KAcoC,MAMtC,qBAvDT,SAAsB7pB,EAAOW,GACzB,IAAIkpB,EAAW7pB,EACXwpB,EAAeK,EAASL,aAAa/oB,QAQzC,OAPI3R,MAAMC,QAAQ4R,EAAO1R,SACrBu6B,EAAe7oB,EAAO1R,QAErBu6B,EAAa96B,SAASiS,EAAO1R,UAAYu6B,EAAaM,OAAON,EAAavI,QAAQtgB,EAAO1R,SAAU,IAChGu6B,EAAa7rB,KAAKgD,EAAO1R,SAGjC,KAAY46B,EAAZ,CAAsBL,oBAuCqB,MAOtC,qBA3CT,SAAmBxpB,EAAOW,GACtB,IAAIkpB,EAAW7pB,EADe,EAEiBW,EAAO1R,QAA9CqD,EAFsB,EAEtBA,OAAQ0E,EAFc,EAEdA,KAAMyyB,EAFQ,EAERA,qBAClBF,EAAaM,EAASN,WAAW9oB,QAarC,OAXIzJ,EAAKhB,OAAS,EACdgB,EAAKhG,KAAI,SAAA7C,GACL,IAAM6a,EAAQugB,EAAWlD,WAAU,SAAA0D,GAAO,OAAIA,EAAQ5zB,KAAOhI,KACzD6a,GAAS,EAAKugB,EAAWvgB,GAAU,CAAE7S,GAAIhI,EAAKmE,UAC5Ci3B,EAAW5rB,KAAK,CAAExH,GAAIhI,EAAKmE,cAIrCi3B,EAAaA,EAAWv4B,KAAI,SAAA7C,GAAG,MAAK,CAAEgI,GAAIhI,EAAIgI,GAAI7D,QAAQ,MAG9D,KAAYu3B,EAAZ,CAAsBN,aAAYE,4BAoBS,MAQtC,2BAnBT,SAA8BzpB,GAC1B,IAAI6pB,EAAW7pB,EAOf,OANA6pB,EAASL,aAAe,GACxBK,EAASN,WAAa,GACtBM,EAASlS,WAAa,CAClB1pB,KAAM,EACNuB,UAAW,IAERq6B,KAGoC,GAU3CnqB,G,ijBClHG,IAAMA,EAAe,CACxB9J,WAAW,EACX3G,QAAS,GACT2oB,SAAU,CACN3pB,KAAM,EACN+7B,MAAO,GACPC,MAAO,EACPvvB,YAAa,GAEjBxM,OAAQ,CACJiN,YAAQlJ,EACR62B,SAAS,EACT76B,KAAM,EACNuB,UAAW,GACX0oB,KAAM,iB,ijBCbP,IAAMxY,EAAe,CACxBoB,QAAS,CACLlL,WAAW,EACX3G,QAAS,GACT26B,UAAW,IAAIj6B,MAEnBgoB,WAAY,CACRuS,UAAU,EACVhS,KAAM,gBAEVsR,aAAc,GACdD,WAAY,GACZE,sBAAsB,GAG1B,SAASU,EAAQC,EAAgBC,GAC7B,OAAOA,GAAmBD,ECT9BxQ,IAAgBC,SAAS,CAAE3Q,oBJqBQ,WAAkC,IAAjClJ,EAAiC,uDAAzBN,EAAciB,EAAW,uCAEjE,OAAQA,EAAOpP,MACX,KAAK+4B,IAGD,OAFWtqB,EAAMuqB,MAAM,CAAC,aAAc,SAAU5pB,EAAO1R,QAAQgI,OAC3CszB,MAAM,CAAC,aAAc,cAAc,GAE3D,KAAKD,IAAgC,WAEjC,OADWtqB,EAAMuqB,MAAM,CAAC,aAAc,cAAc,GAGxD,KAAKD,IAAgC,aAGjC,OAFWtqB,EAAMuqB,MAAM,CAAC,aAAc,WAAY5pB,EAAO1R,SACrCs7B,MAAM,CAAC,aAAc,cAAc,GAG3D,KAAKD,IAA4C,WAE7C,OADWtqB,EAAMuqB,MAAM,CAAC,uBAAwB,cAAc,GAGlE,KAAKD,IAA4C,aAG7C,OAFWtqB,EAAMuqB,MAAM,CAAC,uBAAwB,WAAY5pB,EAAO1R,SAC/Cs7B,MAAM,CAAC,uBAAwB,cAAc,GAErE,KAAKD,IAMD,OALWtqB,EAAMuqB,MAAM,CAAC,cAAb,KACJvqB,EAAM2X,WADF,GAEJhX,EAAO1R,QAFH,CAGPO,UAAWmR,EAAO1R,QAAQO,WAAawQ,EAAM2X,WAAWnoB,aAGhE,KAAK86B,IACD,OAAO5qB,EACX,QACI,OAAOM,MItDnB4Z,IAAgBC,SAAS,CAAE2Q,UDYF,WAAkC,IAAjCxqB,EAAiC,uDAAzBN,EAAciB,EAAW,uCACnDkpB,EAAW,KAAK7pB,GAEpB,OAAQW,EAAOpP,MACX,KAAK+4B,IAA6B,WAK9B,OAJAT,EAAS/oB,QAAU,CACf8oB,UAAWjpB,EAAO7K,KAClBF,WAAW,GAERi0B,EAEX,KAAKS,IAA6B,YAM9B,OALAT,EAAS5yB,OAAQ,EACjB4yB,EAAS/oB,QAAU,CACflL,WAAW,EACX3G,QAAS,CAAE44B,OAAQlnB,EAAO1R,UAEvB46B,EAEX,KAAKS,IAA6B,aAC9B,OAAIH,EAAQnqB,EAAMc,QAAQ8oB,UAAWjpB,EAAO7K,OACxC+zB,EAAS/oB,QAAU,CACf7R,QAAS0R,EAAO1R,QAChB2G,WAAW,GAGRi0B,GAGJ7pB,EAEX,KAAKsqB,IAAyC,aAE1C,OADAT,EAASlS,WAAT,KAA2BkS,EAASlS,WAApC,GAAmDhX,EAAO1R,SACnD46B,EAEX,KAAKS,IACD,IAAId,EAAeK,EAASL,aAAa/oB,QAQzC,OAPI3R,MAAMC,QAAQ4R,EAAO1R,SACrBu6B,EAAe7oB,EAAO1R,QAErBu6B,EAAa96B,SAASiS,EAAO1R,UAAYu6B,EAAaM,OAAON,EAAavI,QAAQtgB,EAAO1R,SAAU,IAChGu6B,EAAa7rB,KAAKgD,EAAO1R,SAGjC,KAAY46B,EAAZ,CAAsBL,iBAG1B,KAAKc,IACD,GAAIx7B,MAAMC,QAAQ4R,EAAO1R,SAAU,CAC/B,IAAMs6B,EAAa5oB,EAAO1R,QACpBw6B,EAAiD,IAA1B9oB,EAAO1R,QAAQ+G,OAC5C,YAAY6zB,EAAZ,CAAuBN,aAAYE,yBAGvC,IAAMzM,EAAU6M,EAAS/oB,QAAQ7R,QAAQE,KAAKwR,EAAO1R,QAAU,GAAGkH,GAC5DozB,EAAaM,EAASN,WAAW9oB,QACtC8oB,EAAW76B,SAASsuB,IAAYuM,EAAWO,OAAOP,EAAWtI,QAAQjE,GAAU,IAAOuM,EAAW5rB,KAAKqf,GAEvG,IAAMyM,EAAwBF,EAAWvzB,SAAW6zB,EAAS/oB,QAAQ7R,QAAQE,KAAK6G,OAElF,YAAY6zB,EAAZ,CAAsBN,aAAYE,yBAGtC,KAAKa,IACD,OAAO5qB,EAGX,QACI,OAAOM,MC/EnB4Z,IAAgBC,SAAS,CAAE4Q,iBFQK,WAAkC,IAAjCzqB,EAAiC,uDAAzBN,EAAciB,EAAW,uCAC1DkpB,EAAW,KAAK7pB,GACpB,OAAQW,EAAOpP,MACX,KAAK+4B,IAA4B,WAE7B,OADAT,EAASj0B,WAAY,EACdi0B,EACX,KAAKS,IAA4B,YAE7B,OADAT,EAAS5yB,OAAQ,EACV4yB,EACX,KAAKS,IAA4B,aAI7B,OAHAT,EAAS56B,QAAU0R,EAAO1R,QAC1B46B,EAASjS,SAAWjX,EAAO1R,QAAQ6G,KACnC+zB,EAASj0B,WAAY,EACdi0B,EACX,KAAKS,IAMD,OALAT,EAAS37B,OAAT,KACO27B,EAAS37B,OADhB,GAEOyS,EAAO1R,QAFd,CAGIO,UAAWmR,EAAO1R,QAAQO,WAAaq6B,EAAS37B,OAAOsB,YAEpDq6B,EACX,KAAKS,IACD,OAAO5qB,EACX,QACI,OAAOM,ME/BnB4Z,IAAgBC,SAAS,CAAE6Q,gBLHI,WAAkC,IAAjC1qB,EAAiC,uDAAzBN,EAAciB,EAAW,uCAE7D,OAAQA,EAAOpP,MACX,KAAK+4B,IAAyB,aAG1B,OAFWtqB,EAAM2qB,IAAI,QAAUhqB,EAAO1R,SAAW0R,EAAO1R,QAAQ0C,OAAU+N,EAAa/N,OACnEg5B,IAAI,cAAgBhqB,EAAO1R,SAAW0R,EAAO1R,QAAQouB,aAAgB3d,EAAa2d,aAG1G,QACI,OAAOrd,MKLnB4Z,IAAgBC,SAAS,CAAE6P,oBAEpB,IAAMtM,EAAY,SAAAhtB,GAAK,MAAK,CAC/BmB,KAAM+4B,IACNr7B,QAAS,IAAI27B,SAAQ,SAAAC,GACjBA,EAAQC,IAAuB16B,OAChCuC,MAAK,SAAAqT,GAAM,OAAIA,OAGT0S,EAA4B,SAACvqB,EAAK81B,GAAN,MAAmB,CACxD1yB,KAAM+4B,IACNr7B,QAAS,IAAI27B,SAAQ,SAAAC,GACjBA,EAAQE,IAAkC58B,EAAK81B,OAChDtxB,MAAK,SAAAqT,GAAM,OAAIA,OAGTglB,EAAe,SAAAxkB,GAAO,MAAK,CACpCjV,KAAM+4B,IACNr7B,QAAS,IAAI27B,SAAQ,SAAAC,GACjBA,EAAQE,IAAqBvkB,OAC9B7T,MAAK,SAAAqT,GAAM,OAAIA,OAGTkU,EAAkB,SAAA7iB,GAAQ,MAAK,CACxC9F,KAAM+4B,IACNr7B,QAAS,IAAI27B,SAAQ,SAAAC,GACjBA,EAAQE,IAAwB1zB,OACjC1E,MAAK,SAAAqT,GAAM,OAAIA,OAGTmX,EAAwB,iBAAO,CACxC5rB,KAAM+4B,IACNr7B,QAAS,CAAEgI,OAAO,KAGTg0B,EAAqB,SAAA3qB,GAAM,MAAK,CACzC/O,KAAM+4B,IACNx0B,KAAM,CAAEo1B,SAAS,GACjBj8B,QAAS,IAAI27B,SAAQ,SAAAC,GACjBA,EAAQE,IAA2BzqB,OACpC3N,MAAK,SAAAqT,GAAM,OAAIA,OAGTmlB,EAAwB,SAAAlH,GAAQ,MAAK,CAC9C1yB,KAAM+4B,IACNx0B,KAAM,IAAInG,KACVV,QAAS87B,IAA8B9G,KAG9BmH,EAAqB,SAAC9qB,EAAQlK,GAAT,MAAqB,CACnD7E,KAAM+4B,IACNr7B,QAAS,IAAI27B,SAAQ,SAAAC,GACjBA,EAAQE,IAAuBzqB,EAAQlK,OACxCzD,MAAK,SAAAqT,GAAM,OAAIA,OAGTqlB,EAAuB,SAAApH,GAAQ,MAAK,CAC7C1yB,KAAM+4B,IACNx0B,KAAM,IAAInG,KACVV,QAAS87B,IAA6B9G,KAQ7BqH,EAAsB,SAAChrB,EAAQlK,GAAT,MAAqB,CACpD7E,KAAM+4B,IACNr7B,QAAS,IAAI27B,SAAQ,SAAAC,GACjBA,EAAQE,IAAwBzqB,EAAQlK,OACzCzD,MAAK,SAAAqT,GAAM,OAAIA,OAGTulB,EAA0B,SAAAtH,GAAQ,MAAK,CAChD1yB,KAAM+4B,IACNr7B,QAAS,IAAI27B,SAAQ,SAAAC,GACjBA,EAAQ5G,MACTtxB,MAAK,SAAAqT,GAAM,OAAIA,OAGToN,EAAiC,SAACllB,GAAD,MAAa,CACvDqD,KAAM+4B,IACNr7B,QAASf,IAGAs9B,EAA6B,SAACt9B,GAAD,MAAa,CACnDqD,KAAM+4B,IACNr7B,QAASf,IAGAu9B,EAAY,SAAAxH,GAAQ,MAAK,CAClC1yB,KAAM+4B,IACNr7B,QAASg1B,IAGAyH,EAAY,SAAAzH,GAAQ,MAAK,CAClC1yB,KAAM+4B,IACNr7B,QAASg1B,IAGA0H,EAAkB,SAAA1H,GAAQ,MAAK,CACxC1yB,KAAM+4B,IACNr7B,QAASg1B,IAGA2H,EAAkB,SAAA3H,GAAQ,MAAK,CACxC1yB,KAAM+4B,IACNr7B,QAASg1B,IAGAnI,EAAY,SAAC3lB,EAAI7D,GAAL,MAAiB,CACtCf,KAAM+4B,IACNr7B,QAAS,CAAEkH,KAAI7D,YAQNqmB,EAAyB,SAAC7B,GAAD,MAAoB,CACtDvlB,KAAM+4B,IACNr7B,QAAS6nB,IAGA+U,EAAsB,SAAC39B,GAAD,MAAa,CAC5CqD,KAAM+4B,IACNr7B,QAASf,IAGA49B,EAAmB,iBAAO,CACnCv6B,KAAM+4B,IACNr7B,QAAS,KAGA88B,EAAuB,iBAAO,CACvCx6B,KAAM+4B,IACNr7B,QAAS,KAGA+qB,EAAgB,iBAAO,CAChCzoB,KAAM+4B,IACNr7B,QAAS,KAGAwrB,EAA+B,SAACtsB,EAAK81B,GAAN,MAAoB,CAC5D1yB,KAAM+4B,IACNr7B,QAAS87B,IAAqC58B,EAAK81B,KAG1C+H,EAAkB,SAAC/H,GAAD,MAAe,CAC1C1yB,KAAM+4B,IACNr7B,QAAS87B,IAAwB9G,KAGxBgI,EAAe,SAAChI,GAAD,MAAe,CACvC1yB,KAAM+4B,IACNr7B,QAAS87B,IAAwB9G,KAGxBiI,GAAwB,SAACjI,GAAD,MAAc,CAC/C1yB,KAAM+4B,IACNr7B,QAAS87B,IAA4B9G,KAG5BhK,GAAsB,iBAAM,CACrC1oB,KAAM+4B,IACNr7B,QAAS,KAGAk9B,GAAiB,iBAAM,CAChC56B,KAAM+4B,IACNr7B,QAAS,M,oBC3Lb,kBACE,aAouBA,IAAIq6B,EAluBN,SAAS8C,EAActU,GAGrB,IAYkB3oB,EAZdk9B,EAAuC,mBAAXC,QAAyBA,OAAOC,KAAOD,OAAOC,IAAI,iBAG9EC,EAAe,CACjBC,YAAY,GAgBd,SAASC,EAAuBruB,GAC5B,IAAI6mB,EAAYrnB,OAAO8uB,eAAetuB,GACtC,OAAK6mB,EAGMrnB,OAAOspB,OAAOjC,GAFd,GAMf,SAAS0H,EAAcr3B,EAAQs3B,EAAY/7B,GACzC+M,OAAOivB,eAAev3B,EAAQs3B,EAAY,CACxCE,YAAY,EACZC,cAAc,EACdC,UAAU,EACVn8B,MAAOA,IAIX,SAASo8B,EAAY33B,EAAQs3B,GAC3BD,EAAcr3B,EAAQs3B,GAAY,WAChC,MAAM,IAAIM,EAAe,OAASN,EAChC,gEAUN,SAASO,EAAY73B,GACnB,MAAsB,iBAAXA,IACS,OAAXA,GAAmBhD,QACxBsL,OAAOwvB,yBAAyB93B,EAThB,iCAkBtB,SAAS6J,EAAQvQ,EAAG6T,GAElB,OAAQ7T,IAAM6T,GAAM7T,GAAMA,GAAK6T,GAAMA,EAGvC,SAAS4qB,EAAiB/3B,GACxB,QAAkB,OAAXA,GAAqC,iBAAXA,GAAyBzG,MAAMC,QAAQwG,IAAcA,aAAkB5F,MAvDtF,iBAFFR,EANL2oB,IASRhpB,MAAMC,QAAQI,IACN,OAATA,QAT0B8C,IAAtB6lB,EAAO2U,aACPD,EAAaC,WAAal6B,QAAQulB,EAAO2U,aAgEjD,IAAIc,EAAwB,CAC1B,kBAOEC,EAAuBD,EAAsB7nB,OAAO,CACtD,OAAQ,MAAO,OAAQ,SAAU,QAAS,UAAW,YAGnD+nB,EAR2B,CAC7B,QAOqD/nB,OAAO,CAC5D,MAAO,SAAU,QAAS,SAAU,SAAU,gBAG5CgoB,EAAsBH,EAAsB7nB,OAAO,CACrD,UAAW,cAAe,WAAY,kBAAmB,aAAc,WAAY,aACnF,UAAW,aAAc,iBAAkB,cAAe,qBAAsB,gBAChF,cAAe,gBAAiB,YAGlC,SAASynB,EAAeQ,GACtBp+B,KAAKgO,KAAO,UACZhO,KAAKo+B,QAAUA,EACfp+B,KAAKq+B,OAAQ,IAAKnmB,OAASmmB,MAK7B,SAASC,EAAcxvB,EAAKyvB,GAMxB,IAAK,IAAI9kB,KA5DX4jB,EAwDmBvuB,EA3DC,+BAGmB,GA4DnByvB,EACZA,EAAc3I,eAAenc,IAC/BkkB,EAAY7uB,EAAKyvB,EAAc9kB,IAQrC,OAHEnL,OAAOkwB,OAAO1vB,GAGTA,EAGT,SAAS2vB,EAA0B3vB,EAAKwuB,GACtC,IAAIoB,EAAgB5vB,EAAIwuB,GAExBD,EAAcvuB,EAAKwuB,GAAY,WAC7B,OAAOvD,EAAU2E,EAAclyB,MAAMsC,EAAK4I,eAI9C,SAASinB,EAASC,EAAKr9B,EAAOgnB,GAC5B,IAAIsW,EAAgBtW,GAAUA,EAAOsW,KAErC,GAAID,KAAO5+B,OACL6+B,GAAQ7+B,KAAK4+B,KAASr9B,GAASw8B,EAAiBx8B,IAAUw8B,EAAiB/9B,KAAK4+B,MAClFr9B,EAAQw4B,EAAU+E,MAAM9+B,KAAK4+B,GAAMr9B,EAAO,CAACs9B,MAAM,EAAME,KAAM,aAE3DlvB,EAAQ7P,KAAK4+B,GAAMr9B,IACrB,OAAOvB,KAIX,IAAIg/B,EAAUC,EAAepJ,KAAK71B,MAElC,OADAg/B,EAAQJ,GAAO7E,EAAUx4B,GAClB29B,EAAmBF,GA5C5BpB,EAAejI,UAAY,IAAIzd,MAC/B0lB,EAAejI,UAAUwJ,YAAcjnB,MA8CvC,IAAIknB,EAAsBrF,EAAU,IAEpC,SAASsF,EAAWC,EAAK/9B,EAAOgnB,GAC9B,IAAIgX,EAAOD,EAAI,GAEf,GAAmB,IAAfA,EAAI74B,OACN,OAAOk4B,EAAS9I,KAAK71B,KAAMu/B,EAAMh+B,EAAOgnB,GAExC,IAEIiX,EAFAC,EAAOH,EAAIpuB,MAAM,GACjBwuB,EAAW1/B,KAAKu/B,GAGpB,GAAyB,iBAAf,GAAwC,OAAbG,EAEnCF,EAAWzF,EAAUiB,MAAM0E,EAAUD,EAAMl+B,OACtC,CACL,IAAIo+B,EAAWF,EAAK,GAGlBD,EADe,KAAbG,GAAmBC,SAASD,GACnBN,EAAWxJ,KAAKuJ,EAAqBK,EAAMl+B,GAE3Cs+B,EAAYhK,KAAKiK,EAAsBL,EAAMl+B,GAI5D,GAAIg+B,KAAQv/B,MAAQ0/B,IAAaF,EAC/B,OAAOx/B,KAGT,IAAIg/B,EAAUC,EAAepJ,KAAK71B,MAElC,OADAg/B,EAAQO,GAAQC,EACTN,EAAmBF,GAI9B,SAASE,EAAmBr7B,GAG1B,IAAK,IAAI4V,KAASykB,EAAyB,CACzC,GAAIA,EAAwBtI,eAAenc,GAEzCglB,EAA0B56B,EADTq6B,EAAwBzkB,IAKxCwjB,EAAaC,aAChBG,EAAcx5B,EAAO,UAAYk8B,GACjC1C,EAAcx5B,EAAO,WAAYm8B,GACjC3C,EAAcx5B,EAAO,YAAao7B,GAClC5B,EAAcx5B,EAAO,MAAO86B,GAC5BtB,EAAcx5B,EAAO,QAASw7B,GAC9BhC,EAAcx5B,EAAO,SAAUo8B,GAC/B5C,EAAcx5B,EAAO,WAAYq8B,GACjC7C,EAAcx5B,EAAO,QAASs8B,IAGhC,IAAI,IAAI5rB,EAAI,EAAG9N,EAAS5C,EAAM4C,OAAQ8N,EAAI9N,EAAQ8N,IAChD1Q,EAAM0Q,GAAKwlB,EAAUl2B,EAAM0Q,IAG7B,OAAO+pB,EAAcz6B,EAAOo6B,GAW9B,SAASmC,IACP,OAAO,IAAIhgC,KAAKJ,KAAKqgC,WAUvB,SAASN,EAAQO,GAEf,GAAyB,IAArB5oB,UAAUjR,OACZ,OAAOzG,KAGT,IAEIyZ,EAFAhD,EAAS,GACThQ,EAASzG,KAAKyG,OAGlB,IAAKgT,EAAQ,EAAGA,EAAQhT,EAAQgT,IAAS,CACvC,IAAI8mB,EAAiBD,EAAStgC,KAAKyZ,GAAQA,EAAOzZ,MAE9CT,MAAMC,QAAQ+gC,GAEhB9pB,EAAOrI,KAAK5B,MAAMiK,EAAQ8pB,GAG1B9pB,EAAOrI,KAAKmyB,GAIhB,OAAOrB,EAAmBzoB,GAQ5B,SAAS+pB,EAAQC,GAEf,QAAsB,IAAXA,GAA+C,IAArB/oB,UAAUjR,OAC7C,OAAOzG,KAGT,GAAsB,mBAAXygC,EAAuB,CAEhC,IAAIC,EAAqBnhC,MAAMC,QAAQihC,GACpCA,EAAOvvB,QAAU3R,MAAMo2B,UAAUzkB,MAAM2kB,KAAKne,WAI/CgpB,EAAkBre,SAAQ,SAASse,EAAI/B,EAAKpqB,GACxB,iBAAT,IACPA,EAAIoqB,GAAO+B,EAAGj4B,eAIlB+3B,EAAS,SAASnsB,EAAK5S,GACrB,OAA2C,IAApCg/B,EAAkBhP,QAAQhwB,IAIrC,IAAI+U,EAAS0mB,EAAuBn9B,MAEpC,IAAK,IAAI0B,KAAO1B,KACVA,KAAK41B,eAAel0B,KAAmC,IAA3B++B,EAAOzgC,KAAK0B,GAAMA,KAChD+U,EAAO/U,GAAO1B,KAAK0B,IAIvB,OAAOk/B,EAAoBnqB,GAG7B,SAASwoB,EAAe4B,GACtB,IAAiBtsB,EAAG9N,EAAhBgQ,EAAS,GAEb,GAAGoqB,GAAQA,EAAKhC,KACd,IAAItqB,EAAI,EAAG9N,EAASzG,KAAKyG,OAAQ8N,EAAI9N,EAAQ8N,IAC3CkC,EAAOrI,KAAK0yB,EAAc9gC,KAAKuU,UAGjC,IAAIA,EAAI,EAAG9N,EAASzG,KAAKyG,OAAQ8N,EAAI9N,EAAQ8N,IAC3CkC,EAAOrI,KAAKpO,KAAKuU,IAIrB,OAAOkC,EAUT,SAASupB,EAASM,GAGQ,mBAAbA,IACTA,EAAW,SAAS/+B,GAAS,OAAOA,IAGtC,IAEIkY,EAFAhD,EAAS,GACThQ,EAASzG,KAAKyG,OAGlB,IAAKgT,EAAQ,EAAGA,EAAQhT,EAAQgT,IAAS,CACvC,IAAIsnB,EAAQT,EAAStgC,KAAKyZ,GAAQA,EAAOzZ,MACrC0B,EAAQq/B,EAAK,GACbx/B,EAAQw/B,EAAK,GAEjBtqB,EAAO/U,GAAOH,EAGhB,OAAOq/B,EAAoBnqB,GAG7B,SAASqqB,EAAchyB,GACrB,OACIA,GACc,iBAARA,IACNR,OAAOwvB,yBAAyBhvB,EAzShB,gCA0SjBA,aAAe1O,KACP0O,EACJirB,EAAU9yB,UAAU6H,EAAK,CAAC+vB,MAAM,IAGzC,SAASmC,EAAUC,EAAKC,GACtB,IAAK,IAAIx/B,KAAOu/B,EACV3yB,OAAOwvB,yBAAyBmD,EAAKv/B,KACvCw/B,EAAKx/B,GAAOu/B,EAAIv/B,IAIpB,OAAOw/B,EAYT,SAASpC,EAAMqC,EAAO5Y,GAEpB,GAAyB,IAArB7Q,UAAUjR,OACZ,OAAOzG,KAGT,GAAc,OAAVmhC,GAAoC,iBAAVA,EAC5B,MAAM,IAAIC,UAAU,mEAAqEvhC,KAAKC,UAAUqhC,IAG1G,IAII1qB,EAgDA/U,EApDA2/B,EAAiB9hC,MAAMC,QAAQ2hC,GAC/BtC,EAAgBtW,GAAUA,EAAOsW,KACjCE,EAAgBxW,GAAUA,EAAOwW,MAAQ,QACzCuC,EAAgB/Y,GAAUA,EAAO+Y,OAMrC,SAASC,EAAYC,EAAYC,EAAU//B,GACzC,IASM89B,EATFkC,EAAiB3H,EAAU0H,EAAS//B,IACpCigC,EAAeL,GAAUA,EAAOE,EAAW9/B,GAAMggC,EAAgBnZ,GACjElZ,EAAemyB,EAAW9/B,QAEdgB,IAAX+T,QACe/T,IAAjBi/B,GACCH,EAAW5L,eAAel0B,IAC3BmO,EAAQ6xB,EAAgBryB,KAYpBQ,EAAQR,EAPXmwB,OADmB98B,IAAjBi/B,EACSA,EACF9C,GAAQd,EAAiB1uB,IAAiB0uB,EAAiB2D,GACzD3H,EAAU+E,MAAMzvB,EAAcqyB,EAAgBnZ,GAE9CmZ,IAG4BF,EAAW5L,eAAel0B,UAClDgB,IAAX+T,IAEFA,EAASuqB,EAAUQ,EAAYrE,EAAuBqE,KAGxD/qB,EAAO/U,GAAO89B,IAKpB,SAASoC,EAAiBJ,EAAYC,GACpC,IAAK,IAAI//B,KAAO8/B,EACTC,EAAS7L,eAAel0B,UACZgB,IAAX+T,IAEFA,EAASuqB,EAAUQ,EAAYrE,EAAuBqE,YAEjD/qB,EAAO/U,IAQpB,GAAK2/B,EAYH,IAAK,IAAI5nB,EAAQ,EAAGhT,EAAS06B,EAAM16B,OAAQgT,EAAQhT,EAAQgT,IAAS,CAClE,IAAIooB,EAAiBV,EAAM1nB,GAE3B,IAAK/X,KAAOmgC,EACNA,EAAejM,eAAel0B,IAChC6/B,OAAuB7+B,IAAX+T,EAAuBA,EAASzW,KAAM6hC,EAAgBngC,OAjBtD,CAElB,IAAKA,KAAOy/B,EACN7yB,OAAOwvB,yBAAyBqD,EAAOz/B,IACzC6/B,EAAYvhC,KAAMmhC,EAAOz/B,GAGhB,YAATq9B,GACF6C,EAAiB5hC,KAAMmhC,GAe3B,YAAez+B,IAAX+T,EACKzW,KAEA4gC,EAAoBnqB,GAI/B,SAASqrB,EAAcvgC,EAAOgnB,GAC5B,IAAIsW,EAAgBtW,GAAUA,EAAOsW,KAGrC,GAAyB,IAArBnnB,UAAUjR,OACZ,OAAOzG,KAGT,GAAc,OAAVuB,GAAmC,iBAAVA,EAC3B,MAAM,IAAI6/B,UAAU,qEAAuEvhC,KAAKC,UAAUyB,IAG5G,OAAOw4B,EAAU+E,MAAM9+B,KAAMuB,EAAO,CAACs9B,KAAMA,EAAME,KAAM,YAGzD,IAwNqCgD,EAAUC,EAASC,EAxNpDnC,EAAuB/F,EAAU,IAErC,SAAS8F,EAAYqC,EAAM3gC,EAAOgnB,GAChC,IAAMhpB,MAAMC,QAAQ0iC,IAA0B,IAAhBA,EAAKz7B,OACjC,MAAM,IAAI26B,UAAU,gGAGtB,IAAI7B,EAAO2C,EAAK,GAChB,GAAoB,IAAhBA,EAAKz7B,OACP,OAAO07B,EAAUtM,KAAK71B,KAAMu/B,EAAMh+B,EAAOgnB,GAG3C,IACIiX,EADAC,EAAOyC,EAAKhxB,MAAM,GAElBwuB,EAAW1/B,KAAKu/B,GASpB,GALEC,EAFEx/B,KAAK41B,eAAe2J,IAA8B,iBAAf,GAAwC,OAAbG,EAErD3F,EAAUiB,MAAM0E,EAAUD,EAAMl+B,GAEhCs+B,EAAYhK,KAAKiK,EAAsBL,EAAMl+B,GAGtDvB,KAAK41B,eAAe2J,IAASG,IAAaF,EAC5C,OAAOx/B,KAGT,IAAIg/B,EAAUgC,EAAUhhC,KAAMm9B,EAAuBn9B,OAErD,OADAg/B,EAAQO,GAAQC,EACToB,EAAoB5B,GAG7B,SAASmD,EAAUC,EAAU7gC,EAAOgnB,GAClC,IAAIsW,EAAgBtW,GAAUA,EAAOsW,KAErC,GAAI7+B,KAAK41B,eAAewM,KAClBvD,GAAQ7+B,KAAKoiC,KAAc7gC,GAASw8B,EAAiBx8B,IAAUw8B,EAAiB/9B,KAAKoiC,MACvF7gC,EAAQw4B,EAAU+E,MAAM9+B,KAAKoiC,GAAW7gC,EAAO,CAACs9B,MAAM,EAAME,KAAM,aAEhElvB,EAAQ7P,KAAKoiC,GAAW7gC,IAC1B,OAAOvB,KAIX,IAAIg/B,EAAUgC,EAAUhhC,KAAMm9B,EAAuBn9B,OAErD,OADAg/B,EAAQoD,GAAYrI,EAAUx4B,GACvBq/B,EAAoB5B,GAG7B,SAASiB,EAAOmC,EAAUC,GACxB,IAAIC,EAAW/iC,MAAMo2B,UAAUzkB,MAAM2kB,KAAKne,UAAW,GACjD6qB,EAAaviC,KAAKoiC,GACtB,OAAOrI,EAAUqB,IAAIp7B,KAAMoiC,EAAUC,EAAQ71B,MAAM+1B,EAAY,CAACA,GAAYpsB,OAAOmsB,KAGrF,SAASE,EAAU1zB,EAAKozB,GAEtB,IAAK,IAAI3tB,EAAI,EAAGkuB,EAAIP,EAAKz7B,OAAe,MAAPqI,GAAeyF,EAAIkuB,EAAGluB,IACrDzF,EAAMA,EAAIozB,EAAK3tB,IAGjB,OAAQA,GAAKA,GAAKkuB,EAAK3zB,OAAMpM,EAG/B,SAASw9B,EAASgC,EAAMG,GACtB,IAAIC,EAAW/iC,MAAMo2B,UAAUzkB,MAAM2kB,KAAKne,UAAW,GACjD6qB,EAAaC,EAAUxiC,KAAMkiC,GAEjC,OAAOnI,EAAUiB,MAAMh7B,KAAMkiC,EAAMG,EAAQ71B,MAAM+1B,EAAY,CAACA,GAAYpsB,OAAOmsB,KAGnF,SAASnC,EAAM+B,EAAMQ,GACnB,IAAInhC,EAAQihC,EAAUxiC,KAAMkiC,GAC5B,YAAiBx/B,IAAVnB,EAAsBmhC,EAAenhC,EAG9C,SAASohC,EAAgB9B,GACvB,IAA2Cn/B,EAAvC+U,EAAS0mB,EAAuBn9B,MAEpC,GAAG6gC,GAAQA,EAAKhC,KACd,IAAKn9B,KAAO1B,KACNA,KAAK41B,eAAel0B,KACtB+U,EAAO/U,GAAOo/B,EAAc9gC,KAAK0B,UAIrC,IAAKA,KAAO1B,KACNA,KAAK41B,eAAel0B,KACtB+U,EAAO/U,GAAO1B,KAAK0B,IAKzB,OAAO+U,EAIT,SAASmsB,IACP,MAAO,GAIT,SAAShC,EAAoB9xB,GAa3B,OAZKmuB,EAAaC,aAChBG,EAAcvuB,EAAK,QAASgwB,GAC5BzB,EAAcvuB,EAAK,UAAWgzB,GAC9BzE,EAAcvuB,EAAK,UAAW0xB,GAC9BnD,EAAcvuB,EAAK,YAAa6zB,GAChCtF,EAAcvuB,EAAK,MAAOqzB,GAC1B9E,EAAcvuB,EAAK,QAAS+wB,GAC5BxC,EAAcvuB,EAAK,SAAUmxB,GAC7B5C,EAAcvuB,EAAK,WAAYoxB,GAC/B7C,EAAcvuB,EAAK,QAASqxB,IAGvB7B,EAAcxvB,EAAKkvB,GA8B5B,SAASjE,EAAUjrB,EAAKmI,EAAS4rB,GAC/B,GAAIhF,EAAY/uB,IA1BlB,SAAwBA,GACtB,MAAsB,iBAARA,GACC,OAARA,IAtlByB,QAulBxBA,EAAIg0B,UAA4Ch0B,EAAIg0B,WAAahG,GAuBjDiG,CAAej0B,IApBzC,SAAsBA,GACpB,MAAuB,oBAATk0B,MACPl0B,aAAek0B,KAkByBC,CAAan0B,IAf9D,SAAsBA,GACpB,MAAuB,oBAATo0B,MACPp0B,aAAeo0B,KAa8CC,CAAar0B,IALnF,SAAiBA,GACf,OAAOA,aAAeoJ,MAImEkrB,CAAQt0B,GAC/F,OAAOA,EACF,GAZT,SAAmBA,GACjB,MAAsB,iBAARA,GACa,mBAAbA,EAAI1L,KAUPigC,CAAUv0B,GACnB,OAAOA,EAAI1L,KAAK22B,GACX,GAAIx6B,MAAMC,QAAQsP,GACvB,OAAOowB,EAAmBpwB,EAAIoC,SACzB,GAAIpC,aAAe1O,KACxB,OArauBtB,EAqaE,IAAIsB,KAAK0O,EAAIuxB,WApanCpD,EAAaC,YAChBG,EAAcv+B,EAAM,YAAashC,GAG5B9B,EAAcx/B,EAAMq/B,GAmazB,IAxauBr/B,EAwanB62B,EAAY1e,GAAWA,EAAQ0e,UAI/B2N,GAFA3N,GAAaA,IAAcrnB,OAAOqnB,UACT,WAAc,OAAOrnB,OAAOspB,OAAOjC,IAA5DiN,KAQF,GAHsB,MAAlBC,IACFA,EAAiB,IAEfA,GAAkB,EACpB,MAAM,IAAIjF,EAAe,oQAO7B,IAAK,IAAIl8B,KAHPmhC,GAAkB,EAGJ/zB,EACVR,OAAOwvB,yBAAyBhvB,EAAKpN,KACvC4hC,EAAM5hC,GAAOq4B,EAAUjrB,EAAIpN,QAAMgB,EAAWmgC,IAIhD,OAAOjC,EAAoB0C,GAK/B,SAASC,EAASC,GAOhB,OANA,WACE,IAAIC,EAAO,GAAGvyB,MAAM2kB,KAAKne,WACrBgsB,EAAOD,EAAKE,QAChB,OAAOH,EAAGh3B,MAAMk3B,EAAMD,IAS1B,SAASG,EAAsB7B,EAAUC,GAWvC,OAVA,WACE,IAAIyB,EAAO,GAAGvyB,MAAM2kB,KAAKne,WACrBgsB,EAAOD,EAAKE,QAChB,OAAIpkC,MAAMC,QAAQkkC,GACP1B,EAAQx1B,MAAMk3B,EAAMD,GAEpB1B,EAASv1B,MAAMk3B,EAAMD,IAiDpC,OAtBA1J,EAAUjvB,KAAiBivB,EAC3BA,EAAU8D,YAAiBA,EAC3B9D,EAAU6D,eAAiBA,EAC3B7D,EAAU+E,MAAiByE,EAASzE,GACpC/E,EAAUz5B,QAAiBijC,EAASzB,GACpC/H,EAAUyG,QAAiB+C,EAAS/C,GACpCzG,EAAU9yB,WAvB2B86B,EAuBkBY,EAvBRX,EAuByB/C,EAvBhBgD,EAuBgC7B,EAtBtF,WACE,IAAIqD,EAAO,GAAGvyB,MAAM2kB,KAAKne,WACrBgsB,EAAOD,EAAKE,QAChB,OAAIpkC,MAAMC,QAAQkkC,GACP1B,EAAQx1B,MAAMk3B,EAAMD,GACpBC,aAAgBtjC,KAChB6hC,EAAOz1B,MAAMk3B,EAAMD,GAEnB1B,EAASv1B,MAAMk3B,EAAMD,KAepC1J,EAAUqB,IAAiBwI,EAAsBzB,EAAWxD,GAC5D5E,EAAUiB,MAAiB4I,EAAsB/D,EAAaR,GAC9DtF,EAAUkG,OAAiBsD,EAAStD,GACpClG,EAAUmG,SAAiBqD,EAASrD,GACpCnG,EAAUoG,MAAiBoD,EAASpD,GACpCpG,EAAUgG,QAAiBwD,EAASxD,GACpChG,EAAUiG,SAAiBuD,EAASvD,GAC/B/C,EAAaC,aACdnD,EAAU8J,OAAShH,EAAc,CAC7BK,YAAY,KAIpB5uB,OAAOkwB,OAAOzE,GAEPA,EAGS8C,QAKb,KAFD,aACE,OAAO9C,GACR,8BA1uBL","file":"js/CVEDetailsPage.js","sourcesContent":["import { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\n\nclass DownloadReport  {\n    constructor() {\n        this.defaultParams = {\n            page: 1,\n            page_size: Number.MAX_SAFE_INTEGER,\n            date: new Date().toISOString().replace(/[T:]/g, '-').split('.')[0] + '-utc'\n        };\n\n        this.params = {\n            cve: ''\n        };\n\n        this.pages = ['systems-exposed', 'system-cves', 'cves', 'system-list'];\n        this.formats = ['csv', 'json'];\n    }\n\n    filename = (page) => {\n        switch (page) {\n            case 'systems-exposed':\n                return `vulnerability_systems-exposed-${this.params.cve}--${this.defaultParams.date}`;\n            case 'system-list':\n                return `vulnerability_systems--${this.defaultParams.date}`;\n            default:\n                return `vulnerability_cves--${this.defaultParams.date}`;\n\n        }\n    }\n\n    checkTypes = (fetchData, page, format) => {\n        if (typeof fetchData !== 'function') {\n            throw `exec expects the 1st param to be funtion. Received ${typeof fetchData}`;\n        }\n\n        if (!this.pages.includes(page)) {\n            throw `Page ${page} does not exist`;\n        }\n\n        if (!this.formats.includes(format)) {\n            throw `Format ${format} is not supported`;\n        }\n    }\n\n    /**\n     * Execute and download the report\n     *\n     * @param {Function} fetchData - Function to be called in order to fetch data.\n     * @param {Object || Array} params - Object to be sent as request params. If you need to pass extra argument, pass an array.\n     * @param {String} format - Supported formats to download are CSV and JSON.\n     * @param {String} page - Name of the page based on which the filename will be determined.\n     * @returns {void}\n     */\n    exec = async (fetchData, params, format, page) => {\n        this.checkTypes(fetchData, page, format);\n        this.params.cve = Array.isArray(params) ? params[0] : '';\n\n        try {\n            let { payload } = Array.isArray(params)\n                ? await fetchData(this.params.cve, {\n                    ...params[1],\n                    ...this.defaultParams,\n                    data_format: format\n                }) :\n                await fetchData({\n                    ...params,\n                    ...this.defaultParams,\n                    data_format: format\n                });\n\n            let { data: response } = await payload;\n            let data = format === 'json' ? JSON.stringify(response) : response;\n            // downaloads the files\n            downloadFile(data, this.filename(page), format);\n        } catch (error) {\n            throw `${error}`;\n        }\n\n    }\n\n}\n\nexport default new DownloadReport();\n","import { Button, FormGroup, FormSelect, FormSelectOption, Modal, TextArea } from '@patternfly/react-core';\nimport {\n    addNotification,\n    clearNotifications\n} from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\nimport propTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { STATUS_OPTIONS } from '../../../Helpers/constants';\nimport messages from '../../../Messages';\nimport { FormattedMessage } from 'react-intl';\n\nexport function useStatusSelect(initialValue) {\n    const [statusId, setStatusId] = useState(initialValue);\n    const [props, setProps] = useState({});\n    const StatusSelect = (\n        <FormGroup label={<FormattedMessage {...messages.statusLabel} />} fieldId={'statusId'}>\n            <FormSelect aria-label=\"Select Input\" onChange={selection => setStatusId(selection)} value={statusId} {...props}>\n                {STATUS_OPTIONS.map(({ value, label }) => (\n                    <FormSelectOption key={value} value={value} label={label} />\n                ))}\n            </FormSelect>\n        </FormGroup>\n    );\n    return { StatusSelect, statusId, setStatusId, setProps };\n}\n\nexport function useJustificationInput(initialValue) {\n    const [justification, setJustification] = useState(initialValue);\n    const [props, setProps] = useState({});\n    const JustificationInput = (\n        <FormGroup label={<FormattedMessage {...messages.justificationLabel} />} fieldId={'label'}>\n            <TextArea\n                key=\"input\"\n                type=\"text\"\n                onChange={value => setJustification(value)}\n                value={justification}\n                resizeOrientation='vertical'\n                aria-label={'justification note'}\n                {...props}\n            />\n        </FormGroup>\n    );\n    return { JustificationInput, justification, setJustification, setProps };\n}\n\nexport const BaseModal = ({ items, title, onSave, onSuccessNotification, ...props }) => {\n    const [targetItems, setTargetItems] = useState(items);\n\n    const createNotification = notification => {\n        return props.addNotification(notification);\n    };\n\n    const handleClose = () => {\n        setTargetItems(undefined);\n    };\n\n    const handleSave = () => {\n        onSave().then(() => createNotification(onSuccessNotification));\n        handleClose();\n    };\n\n    useEffect(() => {\n        return () => {\n            props.clearNotifications();\n        };\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Modal\n                variant=\"small\"\n                title={title}\n                isOpen={Boolean(targetItems)}\n                onClose={handleClose}\n                actions={[\n                    <Button key=\"save\" variant=\"primary\" onClick={handleSave}>\n                        {<FormattedMessage {...messages.save} />}\n                    </Button>,\n                    <Button key=\"cancel\" variant=\"secondary\" onClick={handleClose}>\n                        {<FormattedMessage {...messages.cancel} />}\n                    </Button>\n                ]}\n            >\n                {props.children}\n            </Modal>\n        </React.Fragment>\n    );\n};\n\nBaseModal.propTypes = {\n    children: propTypes.any,\n    onClose: propTypes.func,\n    items: propTypes.array,\n    updateRef: propTypes.func,\n    addNotification: propTypes.func,\n    title: propTypes.string,\n    onSave: propTypes.func,\n    onSuccessNotification: propTypes.object,\n    clearNotifications: propTypes.func\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addNotification: data => dispatch(addNotification(data)),\n        clearNotifications: () => dispatch(clearNotifications())\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(BaseModal);\n","import React, { Fragment } from 'react';\nimport { Text, TextContent, TextVariants, Tooltip } from '@patternfly/react-core';\nimport PropType from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport InsightsReportCard from '@redhat-cloud-services/frontend-components-inventory-insights/esm/InsightsReportCard';\nimport { CSAwIcon } from '../../PresentationalComponents/CSAwIcon/CSAwIcon';\nimport Label from '../../PresentationalComponents/Snippets/Label';\nimport messages from '../../../Messages';\n\nexport const InsightsSystemRule = ({ rule, cve }) => {\n    return (\n        <Fragment>\n            { !rule ? <InsightsNoSystemRule cve={cve}/> :\n                <Fragment>\n                    <TextContent className=\"icon-with-label\">\n                        <Text component={TextVariants.h3} style={{ paddingLeft: 'var(--pf-global--spacer--lg)' }}>\n                            <Label>\n                                <Tooltip content={<FormattedMessage {...messages.rulesIconTooltip} />}>\n                                    <CSAwIcon />\n                                </Tooltip>\n                            </Label>\n                            <span className=\"rule-name\">{rule.rule.description || rule.rule.rule_id}</span>\n                        </Text>\n                    </TextContent>\n\n                    <InsightsReportCard report={rule} />\n                </Fragment>\n            }\n        </Fragment>\n\n    );\n};\n\nInsightsSystemRule.propTypes = {\n    rule: PropType.shape({\n        rule: PropType.object,\n        details: PropType.object,\n        resulotion: PropType.object\n    }).isRequired,\n    cve: PropType.string\n};\n\nexport const InsightsNoSystemRule = ({ cve }) => {\n    return (\n        <TextContent className=\"icon-with-label\">\n            <Text component={TextVariants.p}>\n                <FormattedMessage {...messages.exposedSystemNoRules} values={{ cve }} />\n            </Text>\n            <Text component={TextVariants.p} className=\"pf-u-mb-sm\">\n                <FormattedMessage {...messages.exposedSystemNoRulesInfo}/> <CSAwIcon/>\n            </Text>\n            <Text\n                component={TextVariants.a}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://access.redhat.com/articles/2968471\"\n            >\n                <FormattedMessage {...messages.exposedSystemNoRulesInfoLink} />\n            </Text>\n        </TextContent>\n    );\n};\n\nInsightsNoSystemRule.propTypes = {\n    cve: PropType.string\n};\n","import { Tooltip } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon, ServerAltIcon } from '@patternfly/react-icons';\nimport { processDate } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport React from 'react';\nimport { BUSINESS_RISK_OPTIONS, STATUS_OPTIONS } from './constants';\nimport { FormattedMessage } from 'react-intl';\nimport { InsightsSystemRule, InsightsNoSystemRule } from '../Components/SmartComponents/InsightsSystemRule/InsightsSystemRule';\nimport messages from '../Messages';\n\n/**\n * Creates the tables rows for systems exposed table\n *\n * @param {Boolean} isLoading\n * @param {Array} payload fetched data\n * @param {Array} openedRows id of opened(expaned) row\n *\n */\nexport const createExposedSystemsTable = ({ isLoading, payload, openedRows, cve }) => {\n    if (isLoading) {\n        return { data: (payload && payload.data) || [], meta: {}, isLoading };\n    }\n\n    let { data, meta } = payload;\n    const cvesCount = data && data.length;\n    const tableRows = data.map(item => ({\n        ...item.attributes,\n        id: item.id,\n        isOpen: openedRows.includes(item.id),\n        status: item.attributes.status_name,\n        children: item.attributes.rule\n            ? <InsightsSystemRule cve={cve} rule={item.attributes.rule} />\n            : <InsightsNoSystemRule cve={cve}/>\n    }));\n\n    return { data: tableRows, meta: { ...meta, cvesCount },  isLoading };\n\n};\n\nexport function createSystemsListTable(affectedSystems) {\n    let isLoading = affectedSystems.isLoading;\n    if (!isLoading) {\n        let payload = affectedSystems.payload.asMutable();\n        let { data, meta } = payload;\n        const dataWithStatus = data.map(item => ({\n            ...item,\n            attributes: {\n                ...item.attributes,\n                status: (\n                    <span>\n                        {item.attributes.cve_status_id !== item.attributes.status_id ? (\n                            <Tooltip content={<FormattedMessage {...messages.onlyThisSystemCvePair} />}>\n                                <ServerAltIcon />\n                            </Tooltip>\n                        ) : (\n                            ''\n                        )}{' '}\n                        {item.attributes.status_id !== undefined &&\n                            STATUS_OPTIONS.find(option => parseInt(option.value) === item.attributes.status_id).label}\n                    </span>\n                )\n            }\n        }));\n        return { data: dataWithStatus, meta, isLoading };\n    }\n\n    return { data: (affectedSystems.payload && affectedSystems.payload.data) || [], meta: {}, isLoading };\n}\n\nexport function createCveDetailsPage(cves) {\n    let isLoading = cves.isLoading;\n    let error = cves.error;\n    if (!isLoading && !error) {\n        let payload = cves.payload.asMutable();\n        let { data, meta } = payload;\n\n        data = {\n            impact: data.attributes.impact,\n            public_date: processDate(data.attributes.public_date),\n            description: data.attributes.description,\n            synopsis: data.attributes.synopsis,\n            rh_link: createRHDBLink(data.attributes.synopsis),\n            mitre_link: createMitreLink(data.attributes.synopsis),\n            cvss3_score: data.attributes.cvss3_score,\n            cvss2_score: data.attributes.cvss2_score,\n            cvss2_metrics: data.attributes.cvss2_metrics,\n            cvss3_metrics: data.attributes.cvss3_metrics,\n            business_risk: BUSINESS_RISK_OPTIONS.find(\n                option => option.value === data.attributes.business_risk_id.toString()\n            ).label,\n            business_risk_justification: data.attributes.business_risk_text,\n            business_risk_id: data.attributes.business_risk_id,\n            status: STATUS_OPTIONS.find(option => option.value === data.attributes.status_id.toString()).label,\n            status_id: data.attributes.status_id,\n            status_justification: data.attributes.status_text,\n            systems_status_detail: data.attributes.systems_status_detail,\n            systems_status_divergent: data.attributes.systems_status_divergent,\n            rules: data.attributes.rules\n        };\n\n        return { data, meta, isLoading };\n    }\n\n    return { data: [], meta: {}, isLoading, error };\n}\n\nexport function createRHDBLink(item) {\n    return (\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href={'https://access.redhat.com/security/cve/' + item}>\n            {<FormattedMessage {...messages.RHDBLink} />}{<ExternalLinkAltIcon className=\"pf-u-ml-sm\"/>}\n        </a>\n    );\n}\n\nexport function createMitreLink(item) {\n    return (\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href={'https://cve.mitre.org/cgi-bin/cvename.cgi?name=' + item}>\n            {<FormattedMessage {...messages.MITRELink} />}{<ExternalLinkAltIcon />}\n        </a>\n    );\n}\n\nexport const cveTableRowActions = (methods, rowIndex) => {\n    return (rowIndex % 2 === 0) ?\n        [\n            {\n                title: <FormattedMessage {...messages.editBusinessRisk} />,\n                onClick: (event, rowId, rowData) =>\n                    methods.showBusinessRiskModal([\n                        {\n                            id: rowData.id,\n                            business_risk_id: rowData.business_risk_id,\n                            justification: rowData.business_risk_justification\n                        }\n                    ])\n            },\n            {\n                title: <FormattedMessage {...messages.editStatus} />,\n                onClick: (event, rowId, rowData) =>\n                    methods.showStatusModal([\n                        {\n                            id: rowData.id,\n                            status_id: rowData.status_id,\n                            justification: rowData.status_justification\n                        }\n                    ])\n            }\n        ] : null;\n};\n\nexport const systemCveTableRowActions = (methods, entity, rowIndex) => {\n    return (rowIndex % 2 === 0) ?\n        [{\n            title: <FormattedMessage {...messages.editStatus} />,\n            onClick: (event, rowId, rowData) =>\n                methods.showStatusModal([\n                    {\n                        id: rowData.id,\n                        display_name: entity.display_name,\n                        status_id: rowData.status_id,\n                        cve_status_id: rowData.cve_status_id,\n                        justification: rowData.status_justification,\n                        cve_justification: rowData.cve_status_justification\n                    }\n                ],\n                entity\n                )\n        }] : null;\n};\n\nexport const systemExposedTableRowActions = (showStatusModal, cve, rowIndex) => {\n    return (rowIndex % 2 === 0) ?\n        [{\n            title: <FormattedMessage {...messages.editStatus} />,\n            onClick: (event, rowId, rowData) => {\n                showStatusModal(\n                    [{\n                        id: cve.id,\n                        status_id: cve.status_id,\n                        justification: cve.justification\n                    }],\n                    [{\n                        id: rowData.id,\n                        display_name: rowData.display_name,\n                        status_id: rowData.status_id,\n                        justification: rowData.status_text\n                    }]\n                );\n            }\n        }] : null;\n};\n\nexport const systemTableRowActions = (optOut, isOptOut) => [\n    {\n        title: (\n            isOptOut\n                ? <FormattedMessage {...messages.kebabResumeAnalysis} />\n                : <FormattedMessage {...messages.kebabExcludeAnalysis} />\n        ),\n        onClick: (event, rowId, rowData) => {\n            optOut([rowData.id]);\n        }\n    }\n];\n","import union from 'lodash/union';\nimport messages from '../Messages';\nimport { intl } from '../Utilities/IntlProvider';\n\nconst selectAllCheckbox = ({ selectedItems, selectorHandler, items, fetchResource, multiRow = false }) => {\n\n    const selectedItemsArray = Array.from(selectedItems); // we might get array or set and there's no common method for size\n    const selectedItemsCount = selectedItemsArray && selectedItemsArray.length;\n    const { meta, data } = items;\n    const selectPageNumber = data && (((Array.isArray(data) && data.length) && multiRow) ? data.length / 2 : data.length);\n\n    const handleSelectPage = () => {\n        const { data } = items;\n        const collectedItems = union(data.filter(item => item.id).map(item => item.id), selectedItemsArray);\n        selectorHandler(true, collectedItems);\n    };\n\n    const handleUnselectAll = () => {\n        selectorHandler(false, []);\n    };\n\n    const handleSelectAll = () => {\n\n        let { payload } = fetchResource && fetchResource({ page_size: meta.total_items, page: 1 });\n        payload &&\n            payload.then(({ data: response }) => {\n                //TODO: current only one new endpoint is introduced. Once, we have all new endpoints,  get rid of this map\n                const items = response.map(item => item.id && item.id || item);\n                selectorHandler(true, items);\n            });\n    };\n\n    const handleOnCheckboxChange = () => {\n        if (selectedItemsCount === 0) {\n            handleSelectAll();\n        } else {\n            handleUnselectAll();\n        }\n    };\n\n    return ({\n        handleOnCheckboxChange,\n        items: [\n            {\n                title: intl.formatMessage(messages.selectNone),\n                onClick: handleUnselectAll\n            },\n            {\n                title: `${intl.formatMessage(messages.selectPage, { count: selectPageNumber })}`,\n                onClick: handleSelectPage\n            },\n            {\n                title: `${intl.formatMessage(messages.selectAll, { count: meta.total_items ? meta.total_items : 0 })}`,\n                onClick: handleSelectAll\n            }\n        ]\n    }\n\n    );\n};\n\nexport default selectAllCheckbox;\n","var baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    baseUniq = require('./_baseUniq'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array of unique values, in order, from all given arrays using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.union([2], [1, 2]);\n * // => [2, 1]\n */\nvar union = baseRest(function(arrays) {\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n});\n\nmodule.exports = union;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components';\nimport { intl } from '../../../../Utilities/IntlProvider';\n\nimport debounce from 'lodash/debounce';\nimport React from 'react';\n\nconst SearchFilter = (label, placeholder, search, apply) => {\n    const [searchValue, setSearchValue] = React.useState();\n    const [handleSearch] = React.useState(() =>\n        debounce(filter =>  {if (filter !== undefined) { apply({ filter, page: 1 }); }}, 400)\n    );\n\n    React.useEffect(() => setSearchValue(search), [search]);\n\n    return {\n        type: conditionalFilterType.text,\n        label: intl.formatMessage(label),\n        filterValues: {\n            'aria-label': 'search-field',\n            id: `search-${label.id}`,\n            onChange: (event, value) => {\n                setSearchValue(value);\n                handleSearch(value);\n            },\n            placeholder: intl.formatMessage(placeholder),\n            value: searchValue\n        }\n    };\n};\n\nexport default SearchFilter;\n","import messages from '../Messages';\nimport { FILTERS } from './constants';\nimport { intl } from '../Utilities/IntlProvider';\n\nexport const handleChangePage = (_event, page, apply) => apply({ page });\n\nexport const handleSetPageSize = (_event, perPage, apply) => apply({ page_size: perPage, page: 1 });\n\nexport const exportConfig = (methods) => (\n    { onSelect: (_event, fileType) =>   methods.downloadReport(fileType) }\n);\n\nexport const buildActiveFilters = (currentFilters, filterRulevalues = []) => {\n\n    const { filter } = currentFilters;\n\n    const buildChip = (key, parameter) => (\n        FILTERS[key].items.reduce((object, item) => {\n            if (parameter === item.value) {\n                object.name = item.label;\n                object.value = item.value ;\n            }\n            else if (key === 'security_rule' && !['true', 'false'].includes(parameter))\n            {\n                const filteredRule = filterRulevalues.find(({ value }) => value === parameter);\n                object.name = filteredRule && filteredRule.label || parameter ;\n                object.value = parameter;\n            }\n\n            return object;\n        }, {})\n    );\n\n    const buildChips = (paramValues, key) => {\n        return paramValues.reduce((values, parameter) => {\n            values.push(buildChip(key, parameter));\n            return values;\n        }, []);\n    };\n\n    const filterChips = Object.keys(FILTERS).reduce((array, key) => {\n        if (key !== 'show_all' && Object.keys(currentFilters).includes(key) && !['', undefined].includes(currentFilters[key])) {\n\n            const multiValue = typeof currentFilters[key] === 'string' && currentFilters[key].split(',');\n            const filteredValues = (multiValue && multiValue.length > 1)\n                                            && buildChips(multiValue, key)\n                                            || [buildChip(key, currentFilters[key])];\n\n            array.push({ key, multiValue, category: FILTERS[key].title, chips: filteredValues });\n        }\n\n        return array;\n    }, []);\n\n    filter && filterChips.push(\n        { key: 'filter',\n            category: intl.formatMessage(messages.searchLabel),\n            chips: [{ name: filter }]\n        }\n    );\n\n    return filterChips;\n};\n\nexport const removeFilters = (chips, apply) =>{\n    const emptyFilter = chips.reduce((obj, item) =>{\n        if (item.key === 'filter' || (item.multiValue && item.multiValue.length === 1)) {\n            obj[item.key] = '';\n        }\n        else {\n            obj[item.key] = item.multiValue.filter(value => !item.chips.some(chip => chip.value === value)).join(',');\n        }\n\n        return obj;\n    }, {});\n\n    apply(emptyFilter);\n};\n","\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components';\nimport { SECURITY_RULE_OPTIONS } from '../../../../Helpers/constants';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\nimport unionWith from 'lodash/unionWith';\nimport isEqual from 'lodash/isEqual';\n\nconst securityRuleFilter = (apply, currentFilter = {}, dynamicFilters = []) => {\n    let { security_rule: currentValue } = currentFilter;\n    if (currentValue === '' || !currentValue) {\n        currentValue = 'all';\n    }\n\n    const filterBySecurityRule = values => {\n        apply({ security_rule: values === 'all' ? '' : values, page: 1 });\n    };\n\n    return {\n        label: intl.formatMessage(messages.securityRules),\n        type: conditionalFilterType.radio,\n        urlParam: 'security_rule',\n        filterValues: {\n            onChange: (event, value) => {\n                filterBySecurityRule(value);\n            },\n            items:\n                unionWith(SECURITY_RULE_OPTIONS, dynamicFilters, isEqual).map(item => ({ label: item.label, value: item.value })),\n            value: currentValue\n        }\n    };\n};\n\nexport default securityRuleFilter;\n","var baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    baseUniq = require('./_baseUniq'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    last = require('./last');\n\n/**\n * This method is like `_.union` except that it accepts `comparator` which\n * is invoked to compare elements of `arrays`. Result values are chosen from\n * the first array in which the value occurs. The comparator is invoked\n * with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.unionWith(objects, others, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n */\nvar unionWith = baseRest(function(arrays) {\n  var comparator = last(arrays);\n  comparator = typeof comparator == 'function' ? comparator : undefined;\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n});\n\nmodule.exports = unionWith;\n","\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components';\nimport { STATUS_OPTIONS } from '../../../../Helpers/constants';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\n\nconst statusFilter = (apply, currentFilter = {}) => {\n\n    let { status_id: currentValue } = currentFilter;\n\n    const filterByStatus = values => {\n        apply({ status_id: (values.length > '0' && values.filter(value => value !== ',').join(',')) || '', page: 1 });\n    };\n\n    return {\n        label: intl.formatMessage(messages.status),\n        type: conditionalFilterType.checkbox,\n        filterValues: {\n            onChange: (event, value) => {\n                filterByStatus(value);\n            },\n            items: STATUS_OPTIONS.map(item => ({ label: item.label, value: item.value })),\n            value: (currentValue ? currentValue.split(',') : [])\n        }\n    };\n};\n\nexport default statusFilter;\n","import { sortable } from '@patternfly/react-table';\n\nexport const initialState = {\n    columns: [],\n    rows: [],\n    entities: [],\n    selectedRows: []\n};\n\nfunction modifyInventory(columns, state) {\n    if (!state.selectedRows) {state.selectedRows = [];}\n\n    if (state.loaded) {\n        let lastSeenColumn = state.columns.filter(({ key }) => key === 'updated');\n        lastSeenColumn = [{ ...lastSeenColumn[0], transforms: [sortable] }];\n\n        return {\n            ...state,\n            rows: state.rows.map(item => ({ ...item, selected: state.selectedRows.some(system => system === item.id) })),\n            columns: [\n                ...columns || [],\n                ...lastSeenColumn || []\n            ]\n        };\n    }\n\n    return state;\n}\n\nfunction selectEntities(state, selected) {\n    const myRows = state.rows.slice();\n    if (!state.selectedRows) {state.selectedRows = [];}\n\n    const retval = {\n        ...state,\n        rows: myRows\n        .map(item => {\n            const newValue =  { ...item, selected: selected.some(system => system === item.id) };\n            return newValue;\n        }),\n        selectedRows: [...selected]\n    };\n    return retval;\n}\n\nexport const inventoryEntitiesReducer = (columns) => (state = initialState, action) => {\n    switch (action.type) {\n        case 'LOAD_ENTITIES_FULFILLED':\n            return modifyInventory(columns, state);\n        case 'SELECT_MULTIPLE_ENTITIES':\n            return selectEntities(state, action.payload);\n        case 'EXPAND_ROW':\n            return {\n                ...state,\n                rows: state.rows.map(row => ({\n                    ...row,\n                    isOpen: row.id === action.payload.id ? action.payload.isOpen : row.isOpen\n                }))\n            };\n        case 'CLEAR_INVENTORY_STORE':\n            return initialState;\n        default:\n            return state;\n    }\n};\n","import { Form, FormGroup, Radio, Stack, StackItem, TextArea } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { setBusinessRisk } from '../../../Helpers/APIHelper';\nimport { BUSINESS_RISK_OPTIONS } from '../../../Helpers/constants';\nimport BaseModal from './BaseModal';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nexport const BusinessRiskModal = ({ cves, updateRef, intl }) => {\n    const [cveList] = useState(cves);\n    const [businessRiskId, setBusinessRiskId] = useState('0');\n    const [label, setLabel] = useState();\n\n    const getDefaultLabel = useCallback(() => {\n        setLabel((cveList && cveList.length === 1 && cveList[0].justification) || '');\n    }, [cveList]);\n\n    useEffect(() => {\n        const getDefaultBusinessRisk = () => {\n            setBusinessRiskId((cveList && cveList.length === 1 && cveList[0].business_risk_id.toString()) || '0');\n        };\n\n        getDefaultBusinessRisk();\n        getDefaultLabel();\n    }, [cves, getDefaultLabel, cveList]);\n\n    useEffect(getDefaultLabel, [cves]);\n\n    const handleOnRadioChange = (_, event) => {\n        const { value } = event.currentTarget;\n        setBusinessRiskId(value);\n    };\n\n    const handleOnLabelChange = value => {\n        setLabel(value);\n    };\n\n    const handleSave = () => {\n        return setBusinessRisk({\n            business_risk_id: parseInt(businessRiskId),\n            cve: cveList.map(item => item.id),\n            business_risk_text: label\n        }).then(updateRef);\n    };\n\n    const successNotification = {\n        variant: 'success',\n        title: intl.formatMessage(messages.businessRiskUpdateSuccessful, { count: cveList.length || 0 })\n    };\n\n    return (\n        <BaseModal\n            items={cveList}\n            onSave={handleSave}\n            onSuccessNotification={successNotification}\n            title={intl.formatMessage(messages.businessRiskModalTitle)}\n        >\n            <Stack hasGutter>\n                <StackItem>\n                    {intl.formatMessage(messages.businessRiskModalInfo)}\n                </StackItem>\n                <StackItem>\n                    <Form>\n                        <FormGroup label={intl.formatMessage(messages.businessRiskLabel)} fieldId={'businessRiskId'}>\n                            {BUSINESS_RISK_OPTIONS.map(item => (\n                                <Radio\n                                    className={'business-risk-radio'}\n                                    value={item.value}\n                                    isChecked={businessRiskId === item.value}\n                                    onChange={handleOnRadioChange}\n                                    label={item.label}\n                                    key={item.value}\n                                    id={item.value}\n                                    name={item.label}\n                                    aria-label={item.label}\n                                />\n                            ))}\n                        </FormGroup>\n                        <FormGroup label={intl.formatMessage(messages.justificationLabel)} fieldId={'label'}>\n                            <TextArea\n                                type=\"text\"\n                                onChange={handleOnLabelChange}\n                                value={label}\n                                resizeOrientation='vertical'\n                                aria-label={'justification'}\n                            />\n                        </FormGroup>\n                    </Form>\n                </StackItem>\n            </Stack>\n        </BaseModal>\n    );\n};\n\nBusinessRiskModal.propTypes = {\n    cves: propTypes.array,\n    updateRef: propTypes.func,\n    intl: propTypes.any\n};\n\nexport default injectIntl(BusinessRiskModal);\n","import { Checkbox, Form, FormGroup, Split, SplitItem, Stack, StackItem, Tooltip } from '@patternfly/react-core';\nimport { InfoCircleIcon, OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport propTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { setCveStatus, setSystemCveStatus } from '../../../Helpers/APIHelper';\nimport BaseModal, { useJustificationInput, useStatusSelect } from './BaseModal';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nexport const CveStatusModal = ({ cves, updateRef, intl }) => {\n    const [cveList] = useState(cves);\n    const { StatusSelect, statusId } = useStatusSelect(getDefaultStatus());\n    const { JustificationInput, justification } = useJustificationInput(getDefaultLabel());\n    const [checkboxState, setCheckboxState] = useState(false);\n\n    const handleSave = () => {\n        const cveIds = cveList.map(item => item.id);\n        return setCveStatus({\n            status_id: parseInt(statusId),\n            cve: cveIds,\n            status_text: justification\n        })\n        .then(() => !checkboxState && setSystemCveStatus({ cve: cveIds }))\n        .then(updateRef);\n    };\n\n    function getDefaultStatus() {\n        return (cveList && cveList.length === 1 && cveList[0].status_id.toString()) || '0';\n    }\n\n    function getDefaultLabel() {\n        return (cveList && cveList.length === 1 && cveList[0].justification) || '';\n    }\n\n    const successNotification = {\n        variant: 'success',\n        title: intl.formatMessage(messages.cveStatusModalUpdateSuccessful, { count: cveList.length || 0 })\n    };\n    const title = intl.formatMessage(messages.cveStatusModalTitle, { count: cveList.length || 0 });\n\n    return (\n        <BaseModal items={cveList} onSave={handleSave} onSuccessNotification={successNotification} title={title}>\n            <Stack hasGutter>\n                <StackItem>\n                    {intl.formatMessage(\n                        messages.cveStatusModalSelected,\n                        {\n                            count: cveList.length || 0,\n                            cveId: cveList[0].id, // only used when length is 1\n                            b: (...chunks) => <b>{chunks}</b> // explicitly specifying what is wrapped <b> should be bold\n                        }\n                    )}\n                </StackItem>\n                <StackItem>\n                    <InfoCircleIcon\n                        className=\"pf-u-mr-xs\"\n                        fontSize=\"var(--pf-global--FontSize--md)\"\n                        color=\"var(--pf-global--active-color--300)\"\n                    />\n                    {intl.formatMessage(messages.cveStatusModalInfo, { count: cveList.length || 0 })}\n                    <Tooltip\n                        trigger='mouseenter focus click'\n                        content={intl.formatMessage(messages.cveStatusModalInfoTooltip)}\n                    >\n                        <React.Fragment>\n                            <OutlinedQuestionCircleIcon\n                                className=\"pf-u-ml-xs\"\n                                color=\"var(--pf-global--Color--200)\"\n                                style={{ verticalAlign: '-0.125em' }}\n                            />\n                        </React.Fragment>\n                    </Tooltip>\n                </StackItem>\n                <StackItem>\n                    <Form key=\"key\">\n                        {StatusSelect}\n                        {JustificationInput}\n                        <FormGroup fieldId={'overwrite'}>\n                            <Split>\n                                <SplitItem>\n                                    <Checkbox\n                                        label={intl.formatMessage(messages.cveStatusModalOverwriteCheckbox)}\n                                        id=\"alt-form-checkbox-1\"\n                                        name=\"alt-form-checkbox-1\"\n                                        isChecked={checkboxState}\n                                        onChange={checked => setCheckboxState(checked)}\n                                    />\n                                </SplitItem>\n                                <SplitItem>\n                                    <Tooltip\n                                        trigger='mouseenter focus click'\n                                        content={intl.formatMessage(messages.cveStatusModalOverwriteTooltip)}\n                                    >\n                                        <OutlinedQuestionCircleIcon\n                                            className=\"pf-u-ml-xs\"\n                                            color=\"var(--pf-global--Color--200)\"\n                                            style={{ verticalAlign: '0' }}\n                                        />\n                                    </Tooltip>\n                                </SplitItem>\n                            </Split>\n                        </FormGroup>\n                    </Form>\n                </StackItem>\n            </Stack>\n        </BaseModal>\n    );\n};\n\nCveStatusModal.propTypes = {\n    cves: propTypes.array,\n    updateRef: propTypes.func,\n    intl: propTypes.any\n};\n\nexport default injectIntl(CveStatusModal);\n","import { Checkbox, Form, FormGroup, Stack, StackItem, Alert, Split, Tooltip, SplitItem } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport propTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { setSystemCveStatus } from '../../../Helpers/APIHelper';\nimport BaseModal, { useJustificationInput, useStatusSelect } from './BaseModal';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nexport const CvePairStatusModal = ({ cves, updateRef, inventories, hasDifferentStatus = false, intl, type }) => {\n    const [cveList] = useState(cves);\n    const [inventoryList] = useState(inventories);\n    const {\n        JustificationInput,\n        justification,\n        setJustification,\n        setProps: setJustificationProps\n    } = useJustificationInput(getDefaultLabel());\n    const [checkboxState, setCheckboxState] = useState(getDefaultCheckboxState());\n    const { StatusSelect, statusId, setStatusId, setProps: setSelectProps } = useStatusSelect(getDefaultStatus());\n    const inventoryIds = inventoryList.map(item => item.id);\n    const inventoryNames = inventoryList.map(item => item.display_name);\n\n    useEffect(() => {\n        setSelectProps({ isDisabled: checkboxState });\n        setJustificationProps({ disabled: checkboxState });\n        setStatusId(getCveStatus());\n        setJustification(getCveJustification());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [checkboxState, setSelectProps, setJustificationProps]);\n\n    useEffect(() => {\n        setStatusId(getCveStatus());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [checkboxState, setStatusId]);\n\n    const handleSave = () => {\n        const cveIds = cveList.map(item => item.id);\n        const setStatusParams = !checkboxState\n            ? {\n                status_id: parseInt(statusId),\n                cve: cveIds,\n                status_text: justification,\n                inventory_id: inventoryIds\n            }\n            : { cve: cveIds, inventory_id: inventoryIds };\n        return setSystemCveStatus(setStatusParams).then(updateRef);\n    };\n\n    function getDefaultStatus() {\n        // system has different status\n        if (inventoryList && inventoryList.length > 0 && inventoryList[0].status_id) {\n            return getSystemsStatus();\n        }\n\n        if (cveList && cveList.length > 0) {\n            return getCveStatus();\n        }\n\n    }\n\n    function getDefaultLabel() {\n        if (inventoryList && inventoryList.length === 1 && inventoryList[0].justification) {\n            return getSystemsJustification();\n        }\n\n        if (cveList && cveList.length === 1) {\n            return getCveJustification();\n        }\n    }\n\n    function getDefaultCheckboxState() {\n\n        const haveSameStatuses = cveList.every(\n            (val, i, arr) => (val.status_id === arr[0].status_id) && (val.cve_status_id === arr[0].cve_status_id)\n        );\n\n        const differFromOverall = cveList.some(item => item.status_id !== item.cve_status_id);\n        if (differFromOverall) { return false; }\n\n        // system has the same status as cve\n        if (inventoryList && inventoryList.length === 1 && inventoryList[0].status_id) {\n            let [inventory] = inventoryList;\n            return cveList.some(cve => (cve.status_id === inventory.status_id));\n        }\n\n        if (cveList && cveList.length === 1 || haveSameStatuses) {\n            return true;\n        }\n\n        return false;\n    }\n\n    function getSystemsStatus() {\n        return (inventoryList && inventoryList[0].status_id.toString()) || '0';\n    }\n\n    function getSystemsJustification() {\n        return (inventoryList && inventoryList.length === 1 && inventoryList[0].justification) || '';\n    }\n\n    function getCveStatus() {\n        switch (type) {\n            case 'systemsExposed' : {\n                return (cveList && cveList.length === 1 && cveList[0].status_id.toString()) || '0';\n            }\n\n            case 'systemDetail': {\n                if (cveList) {\n                    if (checkboxState) { // use overall (CVE) status\n                        return hasDifferentStatus ? '0' : cveList[0].cve_status_id || '0';\n                    }\n                    else { // use system pair status\n                        return hasDifferentStatus ? '0' : cveList[0].status_id || '0';\n                    }\n                }\n                else {\n                    return '0';\n                }\n            }\n\n            default: {\n                return '0';\n            }\n        }\n\n    }\n\n    function getCveJustification() {\n        switch (type) {\n            case 'systemsExposed' : {\n                return (cveList && cveList.length === 1 && cveList[0].justification) || '';\n            }\n\n            case 'systemDetail': {\n                if (checkboxState) { // use overall (CVE) justification\n                    return (cveList && cveList.length === 1 && cveList[0].cve_justification) || '';\n                }\n                else { // use system pair justification\n                    return (cveList && cveList.length === 1 && cveList[0].justification) || '';\n                }\n            }\n\n            default: {\n                return '';\n            }\n        }\n    }\n\n    const successNotification = {\n        variant: 'success',\n        title: intl.formatMessage(messages.cvePairStatusModalUpdateSuccessful)\n    };\n\n    const modalTitle = intl.formatMessage(messages.cvePairStatusModalTitle, { count: inventoryIds.length * cves.length });\n\n    return (\n        <BaseModal items={cveList} onSave={handleSave} onSuccessNotification={successNotification} title={modalTitle}>\n            <Stack hasGutter>\n                {hasDifferentStatus &&\n                    <StackItem>\n                        <Alert\n                            variant=\"warning\"\n                            isInline\n                            title={intl.formatMessage(messages.cvePairStatusModalAlert)}\n                        />\n                    </StackItem>\n                }\n                <StackItem>\n                    {intl.formatMessage(\n                        messages.cvePairStatusModalSelected,\n                        {\n                            cveCount: cveList.length || 0,\n                            cveId: cveList[0].id, // only used when length is 1\n                            systemCount: inventoryList.length || 0,\n                            systemName: inventoryNames[0], // only used when length is 1\n                            b: (...chunks) => <b>{chunks}</b> // explicitly specifying what is wrapped <b> should be bold\n                        }\n                    )}\n                </StackItem>\n                <StackItem>\n                    <Form key=\"key\">\n                        <FormGroup fieldId={'overall'}>\n                            <Split>\n                                <SplitItem>\n                                    <Checkbox\n                                        label={intl.formatMessage(messages.cvePairStatusModalUseOverallCheckbox)}\n                                        id=\"alt-form-checkbox-1\"\n                                        name=\"alt-form-checkbox-1\"\n                                        isChecked={checkboxState}\n                                        onChange={checked => setCheckboxState(checked)}\n                                    />\n                                </SplitItem>\n                                <SplitItem>\n                                    <Tooltip\n                                        trigger='mouseenter focus click'\n                                        content={intl.formatMessage(messages.cvePairStatusModalUseOverallTooltip)}\n                                    >\n                                        <OutlinedQuestionCircleIcon\n                                            className=\"pf-u-ml-xs\"\n                                            color=\"var(--pf-global--Color--200)\"\n                                            style={{ verticalAlign: '0' }}\n                                        />\n                                    </Tooltip>\n                                </SplitItem>\n                            </Split>\n                        </FormGroup>\n                        {StatusSelect}\n                        {JustificationInput}\n                    </Form>\n                </StackItem>\n            </Stack>\n        </BaseModal>\n    );\n};\n\nCvePairStatusModal.propTypes = {\n    cves: propTypes.array,\n    updateRef: propTypes.func,\n    inventories: propTypes.array,\n    hasDifferentStatus: propTypes.bool,\n    intl: propTypes.any,\n    type: propTypes.string\n};\n\nexport default injectIntl(CvePairStatusModal);\n","import { addNotification } from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\nimport RemediationButton from '@redhat-cloud-services/frontend-components-remediations/RemediationButton';\nimport  AnsibeTowerIcon  from '@patternfly/react-icons/dist/js/icons/ansibeTower-icon';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport globalBackgroundColor100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_100';\nimport propTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport messages from '../../../Messages';\nimport { FormattedMessage } from 'react-intl';\n\nclass Remediation extends Component {\n    static propTypes = {\n        cves: propTypes.oneOfType([\n            propTypes.array,\n            propTypes.string\n        ]),\n        systems: propTypes.oneOfType([\n            propTypes.array,\n            propTypes.string\n        ]),\n        addNotification: propTypes.func\n    };\n\n    shouldComponentUpdate(nextProps) {\n        if (nextProps.cves !== this.props.cves) {\n            return true;\n        }\n\n        if (nextProps.systems !== this.props.systems) {\n            return true;\n        }\n\n        return false;\n    }\n\n    remediationProvider = (cves = [], systems = []) => {\n        cves = [].concat(cves);\n        systems = [].concat(systems);\n        return cves.length && systems.length\n            ? {\n                issues: cves.map(cve => ({\n                    id: `vulnerabilities:${cve}`,\n                    description: cve\n                })),\n                systems\n            }\n            : false;\n    };\n\n    render() {\n        const { cves, systems, addNotification: dispatchNotification } = this.props;\n        return (\n            <div>\n                <RemediationButton\n                    dataProvider={() => this.remediationProvider(cves, systems)}\n                    isDisabled={this.remediationProvider(cves, systems) === false}\n                    onRemediationCreated={result => dispatchNotification(result.getNotification())}\n                >\n                    <AnsibeTowerIcon size='sm' color={globalBackgroundColor100.value} />\n                    &nbsp;{<FormattedMessage {...messages.remediateLabel} />}\n                </RemediationButton>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    null,\n    dispatch => ({\n        addNotification: notification => dispatch(addNotification(notification))\n    })\n)(routerParams(Remediation));\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEPageDetailsDescription.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEPageDetailsDescription.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEPageDetailsDescription.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","'use strict';\n\nexports.__esModule = true;\nexports.defaultMemoize = defaultMemoize;\nexports.createSelectorCreator = createSelectorCreator;\nexports.createStructuredSelector = createStructuredSelector;\nfunction defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nfunction createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = defaultMemoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nvar createSelector = exports.createSelector = createSelectorCreator(defaultMemoize);\n\nfunction createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js!@redhat-cloud-services/frontend-components-notifications/index.css\"), \"\");\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js!@redhat-cloud-services/frontend-components/index.css\"), \"\");\n\n// module\nexports.push([module.id, \":root {\\n  --ins-color--orange: #ec7a08; }\\n\\nbutton:focus {\\n  outline: none; }\\n\\n.page__Vulnerabilities {\\n  overflow-x: auto !important; }\\n  .page__Vulnerabilities .pf-c-page__main {\\n    overflow-x: auto; }\\n\\n.csaw-icon {\\n  vertical-align: -0.125em;\\n  margin-right: var(--pf-global--spacer--xs); }\\n\\n.icon-with-label:not(:last-child) {\\n  margin-right: var(--pf-global--spacer--sm); }\\n\\n.icon-with-label > svg {\\n  margin-right: var(--pf-global--spacer--sm); }\\n\\n.business-risk-radio > input {\\n  margin-left: 1px; }\\n\\n.splitter {\\n  margin-bottom: var(--pf-global--spacer--sm) !important;\\n  margin-top: var(--pf-global--spacer--sm) !important; }\\n\\n.status-breakdown-table tr th {\\n  font-weight: normal;\\n  padding-left: 0px;\\n  padding-right: var(--pf-global--spacer--md);\\n  padding-bottom: var(--pf-global--spacer--sm); }\\n  .status-breakdown-table tr th:last-child {\\n    text-align: right;\\n    min-width: 8em; }\\n\\n.status-breakdown-table tr td {\\n  padding-left: 0px;\\n  padding-right: var(--pf-global--spacer--md);\\n  white-space: nowrap;\\n  padding-top: var(--pf-global--spacer--sm);\\n  padding-bottom: var(--pf-global--spacer--sm); }\\n  .status-breakdown-table tr td:last-child {\\n    text-align: right; }\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEInfoBox.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEInfoBox.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEInfoBox.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js!@redhat-cloud-services/frontend-components-notifications/index.css\"), \"\");\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js!@redhat-cloud-services/frontend-components/index.css\"), \"\");\n\n// module\nexports.push([module.id, \":root {\\n  --ins-color--orange: #ec7a08; }\\n\\nbutton:focus {\\n  outline: none; }\\n\\n.page__Vulnerabilities {\\n  overflow-x: auto !important; }\\n  .page__Vulnerabilities .pf-c-page__main {\\n    overflow-x: auto; }\\n\\n.csaw-icon {\\n  vertical-align: -0.125em;\\n  margin-right: var(--pf-global--spacer--xs); }\\n\\n.icon-with-label:not(:last-child) {\\n  margin-right: var(--pf-global--spacer--sm); }\\n\\n.icon-with-label > svg {\\n  margin-right: var(--pf-global--spacer--sm); }\\n\\n.business-risk-radio > input {\\n  margin-left: 1px; }\\n\\n.infobox-square {\\n  background-color: var(--pf-global--BackgroundColor--200);\\n  border: var(--pf-global--BorderColor--300) var(--pf-global--BorderWidth--sm) solid;\\n  height: 65px; }\\n  .infobox-square > .pf-l-split__item:first-child {\\n    width: 65px;\\n    color: black;\\n    background-color: white; }\\n    .infobox-square > .pf-l-split__item:first-child:not(.severity-unknown) > div.pf-l-bullseye svg {\\n      color: white; }\\n  .infobox-square h3,\\n  .infobox-square h6 {\\n    margin: 0; }\\n  .infobox-square > .pf-l-split__item:nth-child(2) {\\n    display: flex;\\n    justify-content: flex-start;\\n    align-items: center; }\\n\\n.severity-low {\\n  background-color: var(--pf-global--Color--200) !important; }\\n\\n.severity-critical {\\n  background-color: var(--pf-global--danger-color--100) !important; }\\n\\n.severity-moderate {\\n  background-color: var(--pf-global--warning-color--100) !important; }\\n\\n.severity-color-important {\\n  background-color: var(--pf-global--palette--orange-300) !important; }\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CvssVector.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CvssVector.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CvssVector.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".severity-info-box > div h6 {\\n  margin: 0; }\\n\\n.severity-info-box > div > div:nth-child(3) h6 .ins-c-skeleton {\\n  max-height: 30px !important;\\n  max-width: 30% !important; }\\n\\n.severity-info-box > div > div:nth-child(3) div > .ins-c-skeleton {\\n  max-height: 25px !important;\\n  max-width: 80% !important; }\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CSAwRuleBox.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CSAwRuleBox.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CSAwRuleBox.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".label {\\n  min-width: 140px; }\\n\\n.l-sm-spacer {\\n  margin-left: var(--pf-global--spacer--sm); }\\n\\n.ansible-success {\\n  color: var(--pf-global--success-color--200); }\\n\\n.card-box-shadow {\\n  box-shadow: var(--pf-global--BoxShadow--md);\\n  border: 1px solid var(--pf-global--BorderColor--dark-100); }\\n\", \"\"]);\n\n// exports\n","import { createSelector } from 'reselect';\nimport { createCveDetailsPage, createExposedSystemsTable, createSystemsListTable } from '../../Helpers/CVEHelper';\n\nconst cveListWithSystemsSelector = (state, cve) => ({ ...state.CVEDetailsPageStore.affectedSystemsByCVE, cve });\nconst systemsListAllSelector = state => state.SystemsStore;\nconst cveDetailsPageSelector = state => state.CVEDetailsPageStore.cveDetails;\n\nexport const sCveDetailsPage = createSelector(\n    [cveDetailsPageSelector],\n    createCveDetailsPage\n);\nexport const sExposedSystemsTable = createSelector(\n    [cveListWithSystemsSelector],\n    createExposedSystemsTable\n);\n\nexport const sAllSystems = createSelector(\n    [systemsListAllSelector],\n    createSystemsListTable\n);\n","import { Popover, Stack, StackItem } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport Label from '../Snippets/Label';\nimport './CVEPageDetailsDescription.scss';\n\nconst SnippetWithHeaderAndPopover = props => {\n    const { title, value, content } = props;\n\n    return (\n        <Popover bodyContent={content} headerContent={''} aria-label={'Business risk popover'} position=\"right\">\n            <Stack style={{ display: 'inline-block', cursor: 'pointer' }}>\n                <StackItem>\n                    <Label>{title}</Label>\n                </StackItem>\n                <StackItem>\n                    <a>{value}</a>\n                </StackItem>\n            </Stack>\n        </Popover>\n    );\n};\n\nSnippetWithHeaderAndPopover.propTypes = {\n    title: propTypes.any,\n    value: propTypes.any,\n    content: propTypes.any\n};\nexport default SnippetWithHeaderAndPopover;\n","import { Stack, StackItem, Text, TextContent, TextVariants, Split, SplitItem } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { PatternFlyThemeProvider, StyledBox, StyledText, StyledConstants } from '@patternfly/react-styled-system';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { STATUS_OPTIONS } from '../../../Helpers/constants';\nimport './CVEPageDetailsDescription.scss';\nimport SnippetWithHeaderAndPopover from './SnippetWithHeaderAndTooltip';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst CVEPageDetailsDescription = ({ cveAttributes, intl }) => {\n    const {\n        public_date: publishDate,\n        description,\n        rh_link: link,\n        business_risk: businessRisk,\n        business_risk_justification: businessRiskJustification,\n        status,\n        status_justification: statusJustification,\n        systems_status_detail: systemsStatusDetail,\n        systems_status_divergent: systemsStatusDivergent\n    } = cveAttributes;\n\n    const detailRows =\n        systemsStatusDetail &&\n        Object.keys(systemsStatusDetail).map(item => [\n            STATUS_OPTIONS.find(status => status.value === item.toString()).label,\n            systemsStatusDetail[item].toString()\n        ]);\n\n    const brPopoverContent = (\n        <TextContent>\n            <Stack>\n                <StackItem>\n                    <StyledText\n                        fontWeight={StyledConstants.fontWeights.bold}\n                        fontSize={StyledConstants.fontSizes.sm}\n                        lineHeight={StyledConstants.lineHeights.sm}\n                    >\n                        {intl.formatMessage(messages.justificationNote)}\n                    </StyledText>\n                </StackItem>\n                <StackItem>{businessRiskJustification || '--'}</StackItem>\n            </Stack>\n        </TextContent>\n    );\n\n    const statusPopoverContent = (\n        <Stack>\n            <StackItem>\n                <StyledText\n                    fontWeight={StyledConstants.fontWeights.bold}\n                    fontSize={StyledConstants.fontSizes.sm}\n                    lineHeight={StyledConstants.lineHeights.sm}\n                >\n                    {intl.formatMessage(messages.cveStatus)}\n                </StyledText>\n                {status || '--'}\n\n                <StyledText\n                    fontWeight={StyledConstants.fontWeights.bold}\n                    fontSize={StyledConstants.fontSizes.sm}\n                    lineHeight={StyledConstants.lineHeights.sm}\n                    style={{ marginTop: 'var(--pf-global--spacer--sm)' }}\n                >\n                    {intl.formatMessage(messages.justificationNote)}\n                </StyledText>\n                {statusJustification || '--'}\n            </StackItem>\n            {systemsStatusDivergent > 0 && (\n                <StackItem>\n                    <TextContent>\n                        <hr className={'splitter'} />\n                    </TextContent>\n                    <StyledText fontWeight={StyledConstants.fontWeights.semi_bold} lineHeight={StyledConstants.lineHeights.sm}>\n                        {intl.formatMessage(messages.cvePageDetailsSystemsWTCves)}\n                    </StyledText>\n                    <Table\n                        aria-label={'Status details'}\n                        borders={false}\n                        gridBreakPoint={null}\n                        cells={[intl.formatMessage(messages.statusLabel), intl.formatMessage(messages.count)]}\n                        rows={detailRows}\n                        className={'status-breakdown-table'}\n                    >\n                        <TableHeader />\n                        <TableBody />\n                    </Table>\n                </StackItem>\n            )}\n        </Stack>\n    );\n    return (\n        <PatternFlyThemeProvider>\n            <Stack hasGutter>\n                <StackItem />\n                <StackItem>\n                    <Split hasGutter>\n                        <SplitItem>\n                            <SnippetWithHeaderAndPopover\n                                title={intl.formatMessage(messages.businessRiskLabel)}\n                                value={businessRisk}\n                                content={brPopoverContent}\n                            />\n                        </SplitItem>\n                        <SplitItem>\n                            <SnippetWithHeaderAndPopover\n                                title={intl.formatMessage(messages.statusLabel)}\n                                content={statusPopoverContent}\n                                value={\n                                    <span>\n                                        {systemsStatusDivergent > 0 && (\n                                            <ExclamationTriangleIcon color={'var(--pf-global--primary-color--100)'} />\n                                        )}{' '}\n                                        {status}\n                                    </span>\n                                }\n                            />\n                        </SplitItem>\n                    </Split>\n                </StackItem>\n                <StackItem>\n                    <TextContent>\n                        <Text component={TextVariants.p}>{description}</Text>\n                    </TextContent>\n                </StackItem>\n                <StackItem>\n                    <StyledBox style={{ marginBottom: 'var(--pf-global--spacer--xs)' }}>\n                        {intl.formatMessage(messages.publishDate)}: {publishDate}\n                    </StyledBox>\n                    <StyledBox>{link}</StyledBox>\n                </StackItem>\n            </Stack>\n        </PatternFlyThemeProvider>\n    );\n};\n\nCVEPageDetailsDescription.propTypes = {\n    cveAttributes: propTypes.any,\n    intl: propTypes.any\n};\n\nexport default injectIntl(CVEPageDetailsDescription);\n","import { Skeleton, SkeletonSize, Spinner } from '@redhat-cloud-services/frontend-components';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport ContentLoader, { BulletList, List } from 'react-content-loader';\n\nconst WithLoader = props => {\n    if (props === undefined || props.loading !== false) {\n        switch (props.variant) {\n            case 'spinner':\n                return <Spinner centered />;\n            case 'cvePageOverviewItem':\n                return <CVEPageOverviewItemLoader />;\n            case 'list':\n                return <List />;\n            case 'bulletList':\n                return <BulletList />;\n            case 'trendBox':\n                return <TrendBoxLoader />;\n            case 'currentVulnerabilitiesItem':\n                return <CurrentVulnerabilitiesItemLoader />;\n            default:\n                return <Skeleton size={SkeletonSize.lg} />;\n        }\n    }\n\n    return props.children;\n};\n\n// Loaders\nconst CVEPageOverviewItemLoader = () => {\n    return (\n        <ContentLoader height={61} width={120}>\n            <rect x=\"35\" y=\"0\" rx=\"0\" ry=\"0\" width=\"50\" height=\"35\" />\n            <rect x=\"0\" y=\"45\" rx=\"0\" ry=\"0\" width=\"120\" height=\"16\" />\n        </ContentLoader>\n    );\n};\n\nconst TrendBoxLoader = () => {\n    return (\n        <ContentLoader height={100} width={300}>\n            <rect x=\"388.58\" y=\"109.13\" rx=\"0\" ry=\"0\" width=\"0\" height=\"0\" />\n            <rect x=\"11.58\" y=\"16.13\" rx=\"0\" ry=\"0\" width=\"37\" height=\"62\" />\n            <rect x=\"52.58\" y=\"52.13\" rx=\"0\" ry=\"0\" width=\"17\" height=\"26\" />\n            <rect x=\"76.58\" y=\"52.13\" rx=\"0\" ry=\"0\" width=\"17\" height=\"26\" />\n            <rect x=\"4.58\" y=\"82.13\" rx=\"0\" ry=\"0\" width=\"154\" height=\"22\" />\n        </ContentLoader>\n    );\n};\n\nconst CurrentVulnerabilitiesItemLoader = () => {\n    return (\n        <ContentLoader height={50} width={200} speed={2} primaryColor=\"#f3f3f3\" secondaryColor=\"#ecebeb\">\n            <rect x=\"82.58\" y=\"15.13\" rx=\"0\" ry=\"0\" width=\"110.88\" height=\"21.42\" />\n            <circle cx=\"25\" cy=\"25\" r=\"25\" />\n        </ContentLoader>\n    );\n};\n\nWithLoader.propTypes = {\n    loading: propTypes.bool,\n    variant: propTypes.string\n};\n\nexport default WithLoader;\n","import { Bullseye, Split, SplitItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { CVEPageContext } from '../../SmartComponents/CVEDetailsPage/CVEDetailsPage';\nimport WithLoader from '../WithLoader/WithLoader';\nimport './CVEInfoBox.scss';\n\nconst CVEInfoBox = (props) => {\n    return (\n        <CVEPageContext.Consumer>\n            {context => (\n                <Split className=\"infobox-square\" hasGutter>\n                    <WithLoader loading={context.isLoading}>\n                        <SplitItem className={props.titleColor}>\n                            <Bullseye>{props.titleContent}</Bullseye>\n                        </SplitItem>\n                        <SplitItem isFilled>\n                            <TextContent>\n                                <Text component={TextVariants.h6}>{props.descriptionTitle}</Text>\n                                <Text component={TextVariants.p}>{props.descriptionContent}</Text>\n                            </TextContent>\n                        </SplitItem>\n                    </WithLoader>\n                </Split>\n            )}\n        </CVEPageContext.Consumer>\n    );\n};\n\nCVEInfoBox.propTypes = {\n    titleContent: propTypes.any,\n    titleColor: propTypes.any,\n    descriptionContent: propTypes.any,\n    descriptionTitle: propTypes.any\n};\n\nexport default CVEInfoBox;\n","import { intl } from '../../../Utilities/IntlProvider';\nimport messages from '../../../Messages';\n\nexport const V3names = {\n    AV: {\n        name: intl.formatMessage(messages.vectorNamesV3AV),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNetwork),\n            A: intl.formatMessage(messages.vectorValuesAdjacent),\n            L: intl.formatMessage(messages.vectorValuesLocal),\n            P: intl.formatMessage(messages.vectorValuesPhysical)\n        }\n    },\n    AC: {\n        name: intl.formatMessage(messages.vectorNamesV3AC),\n        values: {\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    PR: {\n        name: intl.formatMessage(messages.vectorNamesV3PR),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    UI: {\n        name: intl.formatMessage(messages.vectorNamesV3UI),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            R: intl.formatMessage(messages.vectorValuesRequired)\n        }\n    },\n    S: {\n        name: intl.formatMessage(messages.vectorNamesV3S),\n        values: {\n            U: intl.formatMessage(messages.vectorValuesUnchanged),\n            C: intl.formatMessage(messages.vectorValuesChanged)\n        }\n    },\n    C: {\n        name: intl.formatMessage(messages.vectorNamesV3C),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    I: {\n        name: intl.formatMessage(messages.vectorNamesV3I),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    A: {\n        name: intl.formatMessage(messages.vectorNamesV3A),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    CVSS: {\n        name: intl.formatMessage(messages.vectorNamesCvssVersion),\n        values: {\n            '3.0': 3.0\n        }\n    }\n};\n\nexport const V2names = {\n    AV: {\n        name: intl.formatMessage(messages.vectorNamesV2AV),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNetwork),\n            A: intl.formatMessage(messages.vectorValuesAdjacentNetwork),\n            L: intl.formatMessage(messages.vectorValuesLocal)\n        }\n    },\n    AC: {\n        name: intl.formatMessage(messages.vectorNamesV2AC),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    Au: {\n        name: intl.formatMessage(messages.vectorNamesV2AU),\n        values: {\n            M: intl.formatMessage(messages.vectorValuesMultiple),\n            S: intl.formatMessage(messages.vectorValuesSingle),\n            N: intl.formatMessage(messages.vectorValuesNone)\n        }\n    },\n    C: {\n        name: intl.formatMessage(messages.vectorNamesV2C),\n        values: {\n            C: intl.formatMessage(messages.vectorValuesComplete),\n            P: intl.formatMessage(messages.vectorValuesPartial),\n            N: intl.formatMessage(messages.vectorValuesNone)\n        }\n    },\n    I: {\n        name: intl.formatMessage(messages.vectorNamesV2I),\n        values: {\n            C: intl.formatMessage(messages.vectorValuesComplete),\n            P: intl.formatMessage(messages.vectorValuesPartial),\n            N: intl.formatMessage(messages.vectorValuesNone)\n        }\n    },\n    A: {\n        name: intl.formatMessage(messages.vectorNamesV2A),\n        values: {\n            C: intl.formatMessage(messages.vectorValuesComplete),\n            P: intl.formatMessage(messages.vectorValuesPartial),\n            N: intl.formatMessage(messages.vectorValuesNone)\n        }\n    }\n};\n","import { Popover, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { Table, TableBody, TableHeader, TableVariant } from '@patternfly/react-table';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { CVEPageContext } from '../../SmartComponents/CVEDetailsPage/CVEDetailsPage';\nimport WithLoader from '../WithLoader/WithLoader';\nimport './CvssVector.scss';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport { V3names, V2names } from './vectorNames';\n\nexport const parseVector = (vector, namesMapping) => {\n    let res = {};\n    vector &&\n        vector.split('/').forEach(curr => {\n            let [key, val] = curr.split(':');\n            const name = namesMapping[key] && namesMapping[key].name;\n            const value = (namesMapping[key] && namesMapping[key].values[val]) || 'N/A';\n            if (name) {\n                res[name] = value;\n            }\n        });\n    return res;\n};\n\nconst CvssVector = props => {\n    const { cvss2_metrics: CVSS2Vector, cvss3_metrics: CVSS3Vector, intl } = props;\n    const cvssVer = (CVSS3Vector && 'CVSS 3.0') || (CVSS2Vector && 'CVSS 2.0') || 'CVSS 3.0';\n    const cvssVector = CVSS3Vector || CVSS2Vector;\n    const namesMapping = (CVSS3Vector && V3names) || (CVSS2Vector && V2names);\n    const parsedVector = parseVector(cvssVector, namesMapping);\n    const notAvailable = 'N/A';\n    // eslint-disable-next-line no-unused-vars\n    const { cvssVersion, ...values } = parsedVector;\n\n    return (\n        <CVEPageContext.Consumer>\n            {context => (\n                <TextContent>\n                    <WithLoader loading={context.isLoading}>\n                        <Popover\n                            position=\"bottom\"\n                            maxWidth={'100%'}\n                            enableFlip\n                            headerContent={ `${cvssVer} ${intl.formatMessage(messages.cvssVectorPopoverTitle)}` }\n                            bodyContent={\n                                cvssVector ?\n                                    (\n                                        <Table\n                                            aria-label={'Metric breakdown'}\n                                            variant={TableVariant.compact}\n                                            gridBreakPoint={null}\n                                            cells={\n                                                [intl.formatMessage(messages.cvssVectorMetric),\n                                                    intl.formatMessage(messages.cvssVectorValue)]\n                                            }\n                                            rows={Object.entries(values)}\n                                        >\n                                            <TableHeader />\n                                            <TableBody />\n                                        </Table>\n                                    ) : (notAvailable)\n                            }\n                        >\n                            <React.Fragment>\n                                <Text component={TextVariants.h6} style={{ display: 'inline-block', cursor: 'pointer' }}>\n                                    {cvssVer} {intl.formatMessage(messages.cvssVectorVectorString)}\n                                    <OutlinedQuestionCircleIcon color={'var(--pf-global--secondary-color--100)'}/>\n                                </Text>\n                                <br />\n                            </React.Fragment>\n                        </Popover>\n                    </WithLoader>\n\n                    <WithLoader loading={context.isLoading}>{cvssVector || notAvailable} </WithLoader>\n                </TextContent>\n            )}\n        </CVEPageContext.Consumer>\n    );\n};\n\nCvssVector.propTypes = {\n    cvss2_metrics: propTypes.string,\n    cvss3_metrics: propTypes.string,\n    intl: propTypes.any\n};\n\nexport default injectIntl(CvssVector);\n","import { Popover, Stack, StackItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { parseCvssScore } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { getImpactDetails } from '../../../Helpers/MiscHelper';\nimport CVEInfoBox from '../CVEInfoBox/CVEInfoBox';\nimport CvssVector from '../CvssVector/CvssVector';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst learnMorePopover = (cveDetails, intl) => {\n    return (\n        <Popover\n            position=\"bottom\"\n            enableFlip\n            headerContent={<div>{cveDetails.title + intl.formatMessage(messages.cvePageSeverityDetailsImpact)}</div>}\n            bodyContent={\n                <TextContent>\n                    <Text component={TextVariants.p}>{cveDetails.text}</Text>\n                </TextContent>\n            }\n            footerContent={\n                <a href=\"https://access.redhat.com/security/updates/classification/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    {intl.formatMessage(messages.cvePageSeverityDetailsLearnMoreRatings)}  <ExternalLinkAltIcon />\n                </a>\n            }\n        >\n            <a>{intl.formatMessage(messages.cvePageSeverityDetailsLearnMore)}</a>\n        </Popover>\n    );\n};\n\nconst CVEPageDetailsSeverity = props => {\n    const cveDetails = getImpactDetails(props.impact);\n    const cvssVersion = (props.cvss3_score && 'CVSS 3.0') || (props.cvss2_score && 'CVSS 2.0') || 'CVSS 3.0';\n    return (\n        <Stack hasGutter>\n            <StackItem>\n                <CVEInfoBox\n                    titleColor={cveDetails.color}\n                    titleContent={cveDetails.titleContent}\n                    descriptionTitle={cveDetails.title + props.intl.formatMessage(messages.cvePageSeverityDetailsImpact)}\n                    descriptionContent={learnMorePopover(cveDetails, props.intl)}\n                />\n            </StackItem>\n            <StackItem>\n                <CVEInfoBox\n                    titleContent={\n                        <TextContent>\n                            <Text component={TextVariants.h3}>{parseCvssScore(props.cvss2_score, props.cvss3_score)}</Text>\n                        </TextContent>\n                    }\n                    descriptionTitle={cvssVersion + props.intl.formatMessage(messages.cvePageSeverityDetailsBaseScore)}\n                />\n            </StackItem>\n\n            <StackItem>\n                <CvssVector cvss2_metrics={props.cvss2_metrics} cvss3_metrics={props.cvss3_metrics} />\n            </StackItem>\n        </Stack>\n    );\n};\n\nCVEPageDetailsSeverity.propTypes = {\n    impact: propTypes.string,\n    cvss2_score: propTypes.any,\n    cvss3_score: propTypes.any,\n    cvss2_metrics: propTypes.any,\n    cvss3_metrics: propTypes.any,\n    intl: propTypes.any\n};\n\nCVEPageDetailsSeverity.defaultProps = {\n    impact: 'Unknown',\n    cvss2_score: undefined,\n    cvss3_score: undefined,\n    cvss2_metrics: undefined,\n    cvss3_metrics: undefined\n};\n\nexport default injectIntl(CVEPageDetailsSeverity);\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Stack,\n    StackItem,\n    Text,\n    TextContent,\n    TextVariants,\n    Tooltip,\n    SplitItem,\n    Split,\n    Grid,\n    GridItem,\n    Card,\n    CardBody,\n    Button\n} from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\nimport { Reboot } from '@redhat-cloud-services/frontend-components/components/Reboot';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/js/icons/check-circle-icon';\nimport OutlinedQuestionCircleIcon from '@patternfly/react-icons/dist/js/icons/outlined-question-circle-icon';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\nimport { injectIntl } from 'react-intl';\nimport Label from '../Snippets/Label';\nimport messages from '../../../Messages';\nimport { RISK_OF_CHANGE_TOOLTIP, RISK_OF_CHANGE_LABEL, RH_KB_URL, CVES_PATH } from '../../../Helpers/constants';\nimport { CSAwIcon } from '../../PresentationalComponents/CSAwIcon/CSAwIcon';\nimport CSAwRuleSummary from './CSAwRuleSummary';\nimport './CSAwRuleBox.scss';\n\nconst CSAwRuleBox = ({ rules, synopsis, changeExposedSystemsParameters,  intl }) => {\n    const [numberOfCards, setNumberOfCards] = useState(2);\n    const ruleCards = rules.length > numberOfCards && rules.slice(0, numberOfCards) || rules;\n\n    const handleExposedSystemFilter = (ruleId) => {\n        const params = { security_rule: ruleId };\n        changeExposedSystemsParameters(params);\n    };\n\n    return <Fragment>\n        {ruleCards && ruleCards.map(rule => (\n            <Card className=\"card-box-shadow\" key={rule.rule_id}>\n                <CardBody>\n                    <Grid hasGutter>\n                        <GridItem span={12}>\n                            <TextContent className={'icon-with-label'}>\n                                <Text component={TextVariants.h3}>\n                                    <Tooltip\n                                        content={intl.formatMessage(messages.rulesIconTooltip)}\n                                        trigger='mouseenter focus click'\n                                    >\n                                        <CSAwIcon />\n                                    </Tooltip>\n                                    {rule.description}\n                                </Text>\n                            </TextContent>\n                        </GridItem>\n                        <GridItem span={8}>\n                            <Stack hasGutter>\n                                <StackItem>\n                                    <CSAwRuleSummary text={rule.summary} />\n                                </StackItem>\n\n                                <StackItem>\n                                    <TextContent>\n                                        <Text component={TextVariants.h4}>{intl.formatMessage(messages.associatedCves)}</Text>\n                                        <Text component={TextVariants.p}>\n                                            {synopsis} ({intl.formatMessage(messages.current)})\n                                            {\n                                                rule.associated_cves\n                                                .filter(cve => cve !== synopsis)\n                                                .map((cve, _i) =>\n                                                    <a\n                                                        className=\"associated-cve-link\"\n                                                        key={_i}\n                                                        href={`${CVES_PATH}/${cve}`}\n                                                    >\n                                                        {cve}\n                                                    </a>\n                                                )\n                                                .reduce((prev, curr) => [prev, ', ', curr], [''])\n                                            }\n                                        </Text>\n                                    </TextContent>\n                                </StackItem>\n\n                                {\n                                    rule.kbase_node_id &&\n                                    <StackItem>\n                                        <TextContent>\n                                            <Text\n                                                className={'icon-with-label'}\n                                                component={TextVariants.p}\n                                            >\n                                                <a\n                                                    className=\"kb-link\"\n                                                    href={`${RH_KB_URL}/${rule.kbase_node_id}`}\n                                                    target=\"_blank\"\n                                                    rel=\"noopener noreferrer\"\n                                                >\n                                                    {\n                                                        intl.formatMessage(messages.knowledgebaseArticle)\n                                                    }\n                                                    <ExternalLinkAltIcon className=\"l-sm-spacer\"/>\n                                                </a>\n                                            </Text>\n                                        </TextContent>\n                                    </StackItem>\n                                }\n\n                            </Stack>\n                        </GridItem>\n                        <GridItem span={4}>\n                            <Stack hasGutter>\n                                {rule.rule_id &&\n                                    <StackItem>\n                                        <TextContent>\n                                            <Text\n                                                className={'filter-affected-systems'}\n                                                onClick={() => handleExposedSystemFilter(rule.rule_id)}\n                                            >\n                                                <Link\n                                                    key={rule.rule_id}\n                                                    to={`/cves/${synopsis}/?security_rule=${rule.rule_id}`}\n                                                >\n                                                    {intl.formatMessage(messages.filterByAffectedSystems)}\n\n                                                </Link>\n\n                                            </Text>\n                                        </TextContent>\n                                    </StackItem>\n                                }\n                                <StackItem>\n                                    <TextContent>\n                                        <Text component={TextVariants.h4}>\n                                            {intl.formatMessage(messages.remediationLabel)}\n                                        </Text>\n                                        <Split hasGutter>\n                                            <SplitItem>\n                                                <Label className=\"label\">\n                                                    {intl.formatMessage(messages.ansibleRemediation)}\n\n                                                </Label>\n                                            </SplitItem>\n                                            <SplitItem className=\"icon-with-label\" isFilled>\n                                                { !rule.playbook_count\n                                                    ? intl.formatMessage(messages.no)\n                                                    : (\n                                                        <Fragment>\n                                                            <CheckCircleIcon className=\"ansible-success\" />\n                                                            {intl.formatMessage(messages.yes)}\n                                                            <Tooltip\n                                                                content={intl.formatMessage(messages.ansibleRemediationTooltip)}\n                                                                trigger='mouseenter focus click'\n                                                            >\n                                                                <OutlinedQuestionCircleIcon\n                                                                    color={'var(--pf-global--secondary-color--100)'}\n                                                                    className=\"l-sm-spacer\"\n                                                                />\n                                                            </Tooltip>\n                                                        </Fragment>\n                                                    )\n                                                }\n                                            </SplitItem>\n                                        </Split>\n                                        <Split hasGutter className=\"pf-u-mt-md\">\n                                            <SplitItem>\n                                                <Label className=\"label\">\n                                                    {intl.formatMessage(messages.riskOfChange)}\n                                                </Label>\n                                            </SplitItem>\n                                            <SplitItem isFilled className=\"icon-with-label\">\n                                                { RISK_OF_CHANGE_LABEL[rule.change_risk] }\n\n                                                <Tooltip\n                                                    content={RISK_OF_CHANGE_TOOLTIP[rule.change_risk]}\n                                                    trigger='mouseenter focus click'\n                                                >\n                                                    <OutlinedQuestionCircleIcon\n                                                        color={'var(--pf-global--secondary-color--100)'}\n                                                        className=\"l-sm-spacer\"\n                                                    />\n                                                </Tooltip>\n\n                                                <div className=\"pf-u-mt-sm\">\n                                                    { rule.reboot_required && <strong><Reboot red /></strong> }\n                                                </div>\n                                            </SplitItem>\n                                        </Split>\n                                    </TextContent>\n                                </StackItem>\n                            </Stack>\n                        </GridItem>\n                    </Grid>\n                </CardBody>\n            </Card>\n        ))}\n        {\n            rules.length > numberOfCards && (\n                <Grid>\n                    <GridItem>\n                        <Button key=\"viewMoreRules\" variant=\"secondary\" onClick={() => setNumberOfCards(rules.length)}>\n                            {intl.formatMessage(messages.viewMoreScurityRules, { rules: (rules.length - numberOfCards) })}\n                        </Button>\n                    </GridItem>\n                </Grid>\n            )\n        }\n    </Fragment>;\n};\n\nCSAwRuleBox.defaultProps = {\n    rules: []\n};\n\nCSAwRuleBox.propTypes = {\n    intl: PropTypes.any,\n    rules: PropTypes.array,\n    synopsis: PropTypes.string,\n    changeExposedSystemsParameters: PropTypes.func\n};\n\nexport default injectIntl(CSAwRuleBox);\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { CVEPageContext } from '../../SmartComponents/CVEDetailsPage/CVEDetailsPage';\nimport CVEPageDetailsDescription from '../CVEPageDetailsDescription/CVEPageDetailsDescription';\nimport CVEPageDetailsSeverity from '../CVEPageDetailsSeverity/CVEPageDetailsSeverity';\nimport WithLoader from '../WithLoader/WithLoader';\nimport CSAwRuleBox from '../CSAwRuleBox/CSAwRuleBox';\n\nconst CVEPageDetails = props => {\n    return (\n        <CVEPageContext.Consumer>\n            {context => (\n                <Grid hasGutter>\n                    <GridItem md={8} sm={12}>\n                        <WithLoader loading={context.isLoading} variant=\"spinner\">\n                            <CVEPageDetailsDescription cveAttributes={props.data.data} />\n                        </WithLoader>\n                    </GridItem>\n\n                    <GridItem md={4} sm={12} className=\"severity-info-box\">\n                        <CVEPageDetailsSeverity\n                            impact={props.data.data.impact}\n                            cvss2_score={props.data.data.cvss2_score}\n                            cvss3_score={props.data.data.cvss3_score}\n                            cvss2_metrics={props.data.data.cvss2_metrics}\n                            cvss3_metrics={props.data.data.cvss3_metrics}\n                        />\n                    </GridItem>\n                    <CSAwRuleBox\n                        changeExposedSystemsParameters = {props.changeExposedSystemsParameters}\n                        synopsis={props.data.data.synopsis}\n                        rules={props.data.data.rules}\n                    />\n                </Grid>\n\n            )}\n        </CVEPageContext.Consumer>\n    );\n};\n\nCVEPageDetails.propTypes = {\n    data: propTypes.object,\n    changeExposedSystemsParameters: propTypes.func\n};\n\nexport default CVEPageDetails;\n","import { Dropdown, KebabToggle } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React, { useState } from 'react';\n\nconst BaseKebab = ({ dropdownItems, disabled, ...props }) => {\n    const [isOpen, setOpen] = useState(false);\n\n    function handleOnKebabToggle(kebabState) {\n        setOpen(kebabState);\n    }\n\n    function handleOnKebabSelect() {\n        setOpen(!isOpen);\n    }\n\n    return (\n        <div>\n            <Dropdown\n                onSelect={handleOnKebabSelect}\n                toggle={<KebabToggle onToggle={handleOnKebabToggle} isDisabled={disabled} />}\n                isOpen={isOpen}\n                isPlain\n                dropdownItems={dropdownItems}\n                {...props}\n            />\n        </div>\n    );\n};\n\nBaseKebab.propTypes = {\n    dropdownItems: propTypes.array,\n    disabled: propTypes.bool\n};\n\nexport default BaseKebab;\n","import { DropdownItem } from '@patternfly/react-core';\nimport React from 'react';\nimport messages from '../../../Messages';\nimport { FormattedMessage } from 'react-intl';\n\nexport const kebabItemDownloadJSON = (downloadReport, { ...props }) => (\n    <DropdownItem key=\"json\" component=\"button\" onClick={() => downloadReport('json')} {...props}>\n        <FormattedMessage {...messages.kebabExportAsJson} />\n    </DropdownItem>\n);\n\nexport const kebabItemDownloadCSV = (downloadReport, { ...props }) => (\n    <DropdownItem key=\"csv\" component=\"button\" onClick={() => downloadReport('csv')} {...props}>\n        <FormattedMessage {...messages.kebabExportAsCsv} />\n    </DropdownItem>\n);\n\nexport const kebabItemEditBusinessRisk = (showBusinessRiskModal, cves, { ...props }) => (\n    <DropdownItem key=\"editBusinessRisk\" component=\"button\" onClick={() => showBusinessRiskModal(cves)} {...props}>\n        <FormattedMessage {...messages.kebabEditBusinessRisk} />\n    </DropdownItem>\n);\n\nexport const kebabItemEditStatus = (showStatusModal, cves, inventoryIds,  { ...props }) => (\n    <DropdownItem key=\"editStatus\" component=\"button\" onClick={() => showStatusModal(cves, inventoryIds)} {...props}>\n        <FormattedMessage {...messages.kebabEditStatus} />\n    </DropdownItem>\n);\n\nexport const kebabItemToggleCvesDescription = (toggleCveDescription, isExpanded, { ...props }) => (\n    <DropdownItem key=\"toggleCveDescription\" component=\"button\" onClick={() => toggleCveDescription()} {...props}>\n        {isExpanded ? <FormattedMessage {...messages.kebabCollapseCves} /> : <FormattedMessage {...messages.kebabExpandCves} /> }\n    </DropdownItem>\n);\n\nexport const kebabItemExcludeSystemAnalysis = (doOptOut, isOptOut,  { ...props }) => (\n    <DropdownItem key=\"do_opt_out_analysis\" component=\"button\" onClick={() => doOptOut()} {...props}>\n        {isOptOut ?\n            <FormattedMessage {...messages.kebabResumeAnalysis} /> :\n            <FormattedMessage {...messages.kebabExcludeVulnerabilityAnalysis} />}\n    </DropdownItem>\n);\n\nexport const kebabItemExcludeSystem = (doOptOut, isOptOut,  { ...props }) => (\n    <DropdownItem key=\"do_opt_out\" component=\"button\" onClick={() => doOptOut()} {...props}>\n        {isOptOut ?\n            <FormattedMessage {...messages.kebabResumeAnalysis} /> :\n            <FormattedMessage {...messages.kebabExcludeAnalysis} />}\n    </DropdownItem>\n);\n\nexport const kebabItemToggleExcludeSystemDisplay = (handleOptOut, isOptedOut,  { ...props }) => (\n    <DropdownItem key=\"toggle_opt_out\" component=\"button\" onClick={() => handleOptOut()} {...props}>\n        {isOptedOut ?\n            <FormattedMessage {...messages.kebabHideExcludedSystems} />  :\n            <FormattedMessage {...messages.kebabShowExcludedSystems} />}\n    </DropdownItem>\n);\n","import propTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport { withRouter } from 'react-router-dom';\nimport * as reactRouterDom from 'react-router-dom';\nimport * as ReactRedux from 'react-redux';\nimport { useCreateUrlParams, updateRef, createSortBy, handleSortColumn } from '../../../Helpers/MiscHelper';\nimport {\n    Table as PfTable,\n    TableBody,\n    TableHeader,\n    TableGridBreakpoint,\n    cellWidth,\n    TableVariant,\n    sortable,\n    expandable,\n    SortByDirection\n} from '@patternfly/react-table';\nimport { useDispatch, useSelector } from 'react-redux';\nimport React, { useEffect, useState, useMemo } from 'react';\nimport CvePairStatusModal from '../Modals/CvePairStatusModal';\nimport ReducerRegistry from '../../../Utilities/ReducerRegistry';\nimport { middlewareListener } from '../../../Utilities/ReducerRegistry';\nimport selectAllCheckbox from '../../../Helpers/selectAllCheckboxHelper';\nimport { Text, TextContent, TextVariants, Stack, StackItem } from '@patternfly/react-core';\nimport { systemExposedTableRowActions, createExposedSystemsTable } from '../../../Helpers/CVEHelper';\nimport { inventoryEntitiesReducer } from '../../../Store/Reducers/InventoryEntitiesReducer';\nimport DownloadReport from '../../../Helpers/DownloadReport';\nimport Remediation from '../Remediation/Remediation';\nimport searchFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/SearchFilter';\nimport securityRuleFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/SecurityRuleFilter';\nimport statusFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/StatusFilter';\nimport { exportConfig, buildActiveFilters, removeFilters } from '../../../Helpers/TableToolbarHelper';\nimport {\n    selectMultipleEntities,\n    fetchAffectedSystemsByCVE,\n    fetchCveDetails,\n    expandRow,\n    changeExposedSystemsParameters,\n    clearCveStore,\n    fetchAffectedSystemsIdsByCve,\n    clearInventoryStore\n} from '../../../Store/Actions/Actions';\nimport {\n    SYSTEMS_EXPOSED_HEADER,\n    SYSTEMS_EXPOSED_ALLOWED_PARAMS,\n    SYSTEMS_EXPOSED_SORTING_HEADER\n} from '../../../Helpers/constants';\n\nconst SystemsExposedTable = (props) => {\n    const [InventoryTable, setInventoryTable] = useState(()=> () => <div>Loading...</div>);\n    const [StatusModal, setStatusModal] = useState(() => () => null);\n    const [selectedHosts, setSelectedHosts] = useState(undefined);\n    const [urlParamsAllowed, setUrlParamsAllowed] = useState(false);\n    const [isFirstMount, setIsFirstMount] = useState(true);\n\n    const inventory = React.createRef();\n    const dispatch = useDispatch();\n    const [createUrlParams, urlParameters] = useCreateUrlParams(SYSTEMS_EXPOSED_ALLOWED_PARAMS);\n\n    const affectedSystems = useSelector(\n        ({ CVEDetailsPageStore }) => CVEDetailsPageStore.affectedSystemsByCVE\n    );\n\n    const isLoading = useSelector(\n        ({ CVEDetailsPageStore }) => CVEDetailsPageStore.affectedSystemsByCVE.isLoading\n    );\n\n    const parameters = useSelector(\n        ({ CVEDetailsPageStore }) => CVEDetailsPageStore.parameters\n    );\n\n    const metadata = useSelector(\n        ({ CVEDetailsPageStore }) => CVEDetailsPageStore.affectedSystemsByCVE.payload.meta\n    );\n\n    const items = useMemo(() => createExposedSystemsTable({ ...affectedSystems, ...props.cve }), [affectedSystems]);\n\n    const apply = (config) => dispatch(changeExposedSystemsParameters(config));\n\n    const inventoryRefresh = ({ page, per_page: pageSize, sort }) => {\n        if (inventory.current && (metadata.page !== page || metadata.page_size !== pageSize)) {\n            apply({ page, page_size: pageSize, sort });\n        }\n\n        if (metadata && metadata.total_items <= pageSize && inventory.current) {\n            inventory.current.onRefreshData({ page, page_size: pageSize, sort });\n        }\n    };\n\n    const handleSelect = (isChecked, payload) => {\n        const selectedHosts = payload ? payload : [];\n        setSelectedHosts(selectedHosts);\n    };\n\n    const onSelect = (payload) => {\n        const newSelected = payload.data.selected ? [payload.data.id, ...(selectedHosts || [])]\n            : selectedHosts && selectedHosts.filter(item => item !== payload.data.id);\n\n        handleSelect(false, newSelected);\n    };\n\n    middlewareListener.addNew({\n        on: 'SELECT_ENTITY',\n        callback: payload => onSelect(payload)\n    });\n\n    useEffect(() => {\n        if (!inventory.current && isFirstMount) {\n            apply(urlParameters);\n            setIsFirstMount(false);\n        }\n        else {\n            dispatch(fetchAffectedSystemsByCVE(props.cve, { ...parameters }));\n            urlParamsAllowed\n                && createUrlParams({ ...parameters })\n                || setUrlParamsAllowed(true);\n        }\n    }, [parameters]);\n\n    useEffect(()=>{\n        if (selectedHosts) {\n            dispatch(selectMultipleEntities(selectedHosts));\n        }\n    }, [selectedHosts, dispatch]);\n\n    const loadInventory = async () => {\n        const { inventoryConnector, mergeWithEntities, mergeWithDetail } = await insights.loadInventory({\n            ReactRedux,\n            react: React,\n            reactRouterDom,\n            pfReactTable: {\n                Table: PfTable,\n                TableBody,\n                TableHeader,\n                TableGridBreakpoint,\n                cellWidth,\n                TableVariant,\n                sortable,\n                expandable,\n                SortByDirection\n            }\n        });\n        ReducerRegistry.register({\n            ...mergeWithEntities(inventoryEntitiesReducer(SYSTEMS_EXPOSED_HEADER)),\n            ...mergeWithDetail()\n        });\n\n        const { InventoryTable } = inventoryConnector(ReducerRegistry.getStore());\n        setInventoryTable(() => InventoryTable);\n    };\n\n    useEffect(() => {\n        loadInventory();\n        return () => {\n            dispatch(clearCveStore());\n            dispatch(clearInventoryStore());\n        };\n    }, []);\n\n    const downloadReport = format => {\n        let params = [props.cve, { ...parameters }];\n        DownloadReport.exec(fetchAffectedSystemsByCVE, params, format, 'systems-exposed');\n    };\n\n    const showStatusModal = (cves, inventories) => {\n        setStatusModal(\n            () => () =>\n                <CvePairStatusModal\n                    cves={cves}\n                    updateRef={() => {\n                        updateRef(items.meta, apply);\n                        fetchCveDetails(props.cve);\n                    }}\n                    inventories={ inventories }\n                    type={'systemsExposed'}\n                />\n\n        );\n    };\n\n    const getSelectedSystemsLabel = () => {\n        // we only need display name when we have 1 system selected\n        if (selectedHosts.length === 1) {\n            const { id, display_name: displayName } = items.data.find(({ id }) => id === selectedHosts[0]);\n            return [{ id, displayName }];\n        }\n        else if (selectedHosts.length > 1) {\n            return selectedHosts.map(item => ({ id: item }));\n        }\n\n        return [];\n    };\n\n    const kebabOptions = [\n        (!isLoading && (<Remediation systems={selectedHosts} cves={props.cve} />) || ''),\n        {\n            label: props.intl.formatMessage(messages.editStatus),\n            onClick: () => showStatusModal(\n                [props.cveStatusDetails],\n                getSelectedSystemsLabel()\n            ),\n            props: { isDisabled: !selectedHosts || selectedHosts.length === 0 }\n        }\n    ];\n\n    const selectOptions  = useMemo(() => selectAllCheckbox({\n        selectedItems: selectedHosts || [],\n        selectorHandler: handleSelect,\n        items: items.data && items || { data: [], meta: { total_items: 0 } },\n        fetchResource: ops => fetchAffectedSystemsIdsByCve(props.cve, { ...parameters, ...ops })\n    }), [items, selectedHosts, parameters]);\n\n    const sortBy = () =>\n        createSortBy(\n            SYSTEMS_EXPOSED_SORTING_HEADER,\n            urlParameters.sort\n        );\n\n    const onSort = (event, index, direction) =>\n        handleSortColumn(\n            index,\n            direction,\n            SYSTEMS_EXPOSED_SORTING_HEADER,\n            urlParameters.sort,\n            inventoryRefresh\n        );\n\n    return (\n        <React.Fragment>\n            <Stack hasGutter>\n                <StackItem>\n                    <TextContent>\n                        <Text component={TextVariants.h2}>\n                            {props.intl.formatMessage(messages.systemsExposedTableHeader)}\n                        </Text>\n                    </TextContent>\n                </StackItem>\n                <StackItem>\n                    <InventoryTable\n                        tableProps={{\n                            canSelectAll: false,\n                            onSort: (items.data.length > 0) && onSort,\n                            sortBy: (items.data.length > 0) && sortBy(),\n                            actionResolver: (rowData, rowIndex) =>\n                                systemExposedTableRowActions(showStatusModal, props.cveStatusDetails, rowIndex.rowIndex)\n                        }}\n                        items={items.data}\n                        key={'inventory'}\n                        ref={inventory}\n                        expandable='true'\n                        onRefresh={inventoryRefresh}\n                        page={parameters.page}\n                        total={metadata.total_items}\n                        isLoaded = {!isLoading}\n                        perPage={parameters.page_size }\n                        hasCheckbox={items && items.length !== 0}\n                        showActions={items && items.length !== 0}\n                        exportConfig={{\n                            isDisabled: items.meta.total_items === 0 && (!selectedHosts || selectedHosts.length === 0),\n                            ...exportConfig({ downloadReport })\n                        }}\n                        onExpandClick={(_e, _i, isOpen, { id }) => dispatch(expandRow(id, isOpen))}\n                        actionsConfig={{\n                            actions: kebabOptions,\n                            kebabToggleProps: { isDisabled: !selectedHosts || selectedHosts.length === 0 }\n                        }}\n                        activeFiltersConfig={{\n                            filters: buildActiveFilters({ ...parameters }, props.filterRuleValues),\n                            onDelete: (e, i) => removeFilters(i, apply)\n                        }}\n                        bulkSelect ={ selectOptions && {\n                            count: selectedHosts && selectedHosts.length,\n                            items: selectOptions.items,\n                            isDisabled: items.meta.total_items === 0 && (!selectedHosts || selectedHosts.length === 0),\n                            checked: Boolean(selectedHosts && selectedHosts.length),\n                            onSelect: () => selectOptions.handleOnCheckboxChange()\n                        }}\n                        filterConfig={{\n                            items: [\n                                searchFilter(\n                                    messages.systemsSearchName, messages.searchFilterByName,\n                                    parameters.filter, apply\n                                ),\n                                securityRuleFilter(apply, parameters, props.filterRuleValues),\n                                statusFilter(apply, parameters)\n                            ]\n                        }}\n                    >\n                        {StatusModal && <StatusModal />}\n                    </InventoryTable>\n                </StackItem>\n            </Stack>\n        </React.Fragment>\n    );\n};\n\nSystemsExposedTable.propTypes = {\n    intl: propTypes.object,\n    cve: propTypes.string,\n    cveStatusDetails: propTypes.object,\n    filterRuleValues: propTypes.array\n};\n\nexport default injectIntl(\n    withRouter(\n        SystemsExposedTable\n    )\n);\n","import { DropdownPosition, Page } from '@patternfly/react-core';\nimport { InvalidObject, Main } from '@redhat-cloud-services/frontend-components';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {\n    fetchAffectedSystemsByCVE,\n    fetchCveDetails,\n    handleCveDetailsError,\n    setHeader,\n    changeExposedSystemsParameters\n} from '../../../Store/Actions/Actions';\nimport { sCveDetailsPage } from '../../../Store/Selectors/CVESelectors';\nimport { PATHS } from '../../../Helpers/constants';\nimport CVEPageDetails from '../../PresentationalComponents/CVEPageDetails/CVEPageDetails';\nimport BaseKebab from '../../PresentationalComponents/DownloadReportKebab/BaseKebab';\nimport { kebabItemEditBusinessRisk, kebabItemEditStatus } from '../../PresentationalComponents/DownloadReportKebab/KebabItems';\nimport BusinessRiskModal from '../Modals/BusinessRiskModal';\nimport CveStatusModal from '../Modals/CveStatusModal';\nimport SystemsExposedTable from '../SystemsExposedTable/SystemsExposedTable';\nimport VulnerabilityHeader from '../VulnerabilityHeader/VulnerabilityHeader';\n\nexport const CVEPageContext = React.createContext({ isLoading: true });\n\nclass CVEDetailsPage extends React.Component {\n    static propTypes = {\n        match: propTypes.object,\n        cveDetails: propTypes.object,\n        fetchCveDetails: propTypes.func,\n        setHeader: propTypes.func,\n        handleCveDetailsError: propTypes.func,\n        fetchAffectedSystems: propTypes.func,\n        changeExposedSystemsParameters: propTypes.func\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = { cveName: this.props.match.params.cve, BusinessRiskModal: () => null, StatusModal: () => null };\n    }\n\n    componentDidMount() {\n        const { fetchCveDetails, handleCveDetailsError, setHeader } = this.props;\n\n        setHeader({\n            breadcrumbs: [\n                { title: PATHS.home.title, to: PATHS.home.to },\n                { title: PATHS.cvesPage.title, to: PATHS.cvesPage.to },\n                { title: this.state.cveName, isActive: true }\n            ]\n        });\n\n        fetchCveDetails(this.state.cveName).catch(() => {\n            handleCveDetailsError();\n        });\n    }\n\n    showBusinessRiskModal = cves => {\n        this.setState({\n            BusinessRiskModal: () => (\n                <BusinessRiskModal open cves={cves} updateRef={() => this.props.fetchCveDetails(this.state.cveName)} />\n            )\n        });\n    };\n\n    showStatusModal = cves => {\n        this.setState({\n            StatusModal: () => (\n                <CveStatusModal\n                    cves={cves}\n                    updateRef={() => {\n                        this.props.fetchCveDetails(this.state.cveName);\n                        this.props.fetchAffectedSystems(this.state.cveName);\n                    }}\n                />\n            )\n        });\n    };\n\n    render() {\n        const { showStatusModal } = this;\n        const { cveDetails, fetchAffectedSystems, changeExposedSystemsParameters } = this.props;\n        const { error, data } = cveDetails;\n        const { cveName, BusinessRiskModal, StatusModal } = this.state;\n        const cveStatusDetails = {\n            id: cveName,\n            status_id: cveDetails.data.status_id,\n            justification: cveDetails.data.status_justification\n        };\n        const kebabItems = [\n            kebabItemEditBusinessRisk(this.showBusinessRiskModal, [\n                {\n                    business_risk_id: cveDetails.data.business_risk_id,\n                    id: cveName,\n                    justification: cveDetails.data.business_risk_justification\n                }\n            ]),\n            kebabItemEditStatus(this.showStatusModal, [cveStatusDetails])\n        ];\n        const { rules } = data;\n        const filterRuleValues = rules && rules.map(\n            ({ rule_id: ruleId, description }) => ({ value: ruleId, label: description })\n        );\n        if (!error) {\n            return (\n                <Page>\n                    <CVEPageContext.Provider value={cveDetails && { isLoading: cveDetails.isLoading }}>\n                        <VulnerabilityHeader\n                            title={\n                                <span style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                    {cveName}\n                                    <BaseKebab dropdownItems={kebabItems} position={DropdownPosition.right}></BaseKebab>\n                                </span>\n                            }\n                        >\n                            <CVEPageDetails changeExposedSystemsParameters={changeExposedSystemsParameters} data={cveDetails} />\n                            <StatusModal />\n                            <BusinessRiskModal />\n                        </VulnerabilityHeader>\n                        <Main>\n                            <SystemsExposedTable\n                                cve={cveName}\n                                filterRuleValues={filterRuleValues}\n                                cveStatusDetails={cveStatusDetails}\n                                fetchData={fetchAffectedSystems}\n                                methods={{ showStatusModal }}\n                            />\n                        </Main>\n                    </CVEPageContext.Provider>\n                </Page>\n            );\n        } else {\n            return (\n                <React.Fragment>\n                    <VulnerabilityHeader title={cveName}/>\n                    <InvalidObject />\n                </React.Fragment>\n            );\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        cveDetails: sCveDetailsPage(state)\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchCveDetails: cveName => dispatch(fetchCveDetails(cveName)),\n        changeExposedSystemsParameters: params => dispatch(changeExposedSystemsParameters(params)),\n        setHeader: header => dispatch(setHeader(header)),\n        handleCveDetailsError: () => dispatch(handleCveDetailsError()),\n        fetchAffectedSystems: (cve, options) => dispatch(fetchAffectedSystemsByCVE(cve, options))\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(CVEDetailsPage)\n);\n","// doT.js\n// 2011-2014, Laura Doktorova, https://github.com/olado/doT\n// Licensed under the MIT license.\n\n(function () {\n\t\"use strict\";\n\n\tvar doT = {\n\t\tname: \"doT\",\n\t\tversion: \"1.1.1\",\n\t\ttemplateSettings: {\n\t\t\tevaluate:    /\\{\\{([\\s\\S]+?(\\}?)+)\\}\\}/g,\n\t\t\tinterpolate: /\\{\\{=([\\s\\S]+?)\\}\\}/g,\n\t\t\tencode:      /\\{\\{!([\\s\\S]+?)\\}\\}/g,\n\t\t\tuse:         /\\{\\{#([\\s\\S]+?)\\}\\}/g,\n\t\t\tuseParams:   /(^|[^\\w$])def(?:\\.|\\[[\\'\\\"])([\\w$\\.]+)(?:[\\'\\\"]\\])?\\s*\\:\\s*([\\w$\\.]+|\\\"[^\\\"]+\\\"|\\'[^\\']+\\'|\\{[^\\}]+\\})/g,\n\t\t\tdefine:      /\\{\\{##\\s*([\\w\\.$]+)\\s*(\\:|=)([\\s\\S]+?)#\\}\\}/g,\n\t\t\tdefineParams:/^\\s*([\\w$]+):([\\s\\S]+)/,\n\t\t\tconditional: /\\{\\{\\?(\\?)?\\s*([\\s\\S]*?)\\s*\\}\\}/g,\n\t\t\titerate:     /\\{\\{~\\s*(?:\\}\\}|([\\s\\S]+?)\\s*\\:\\s*([\\w$]+)\\s*(?:\\:\\s*([\\w$]+))?\\s*\\}\\})/g,\n\t\t\tvarname:\t\"it\",\n\t\t\tstrip:\t\ttrue,\n\t\t\tappend:\t\ttrue,\n\t\t\tselfcontained: false,\n\t\t\tdoNotSkipEncoded: false\n\t\t},\n\t\ttemplate: undefined, //fn, compile template\n\t\tcompile:  undefined, //fn, for express\n\t\tlog: true\n\t}, _globals;\n\n\tdoT.encodeHTMLSource = function(doNotSkipEncoded) {\n\t\tvar encodeHTMLRules = { \"&\": \"&#38;\", \"<\": \"&#60;\", \">\": \"&#62;\", '\"': \"&#34;\", \"'\": \"&#39;\", \"/\": \"&#47;\" },\n\t\t\tmatchHTML = doNotSkipEncoded ? /[&<>\"'\\/]/g : /&(?!#?\\w+;)|<|>|\"|'|\\//g;\n\t\treturn function(code) {\n\t\t\treturn code ? code.toString().replace(matchHTML, function(m) {return encodeHTMLRules[m] || m;}) : \"\";\n\t\t};\n\t};\n\n\t_globals = (function(){ return this || (0,eval)(\"this\"); }());\n\n\t/* istanbul ignore else */\n\tif (typeof module !== \"undefined\" && module.exports) {\n\t\tmodule.exports = doT;\n\t} else if (typeof define === \"function\" && define.amd) {\n\t\tdefine(function(){return doT;});\n\t} else {\n\t\t_globals.doT = doT;\n\t}\n\n\tvar startend = {\n\t\tappend: { start: \"'+(\",      end: \")+'\",      startencode: \"'+encodeHTML(\" },\n\t\tsplit:  { start: \"';out+=(\", end: \");out+='\", startencode: \"';out+=encodeHTML(\" }\n\t}, skip = /$^/;\n\n\tfunction resolveDefs(c, block, def) {\n\t\treturn ((typeof block === \"string\") ? block : block.toString())\n\t\t.replace(c.define || skip, function(m, code, assign, value) {\n\t\t\tif (code.indexOf(\"def.\") === 0) {\n\t\t\t\tcode = code.substring(4);\n\t\t\t}\n\t\t\tif (!(code in def)) {\n\t\t\t\tif (assign === \":\") {\n\t\t\t\t\tif (c.defineParams) value.replace(c.defineParams, function(m, param, v) {\n\t\t\t\t\t\tdef[code] = {arg: param, text: v};\n\t\t\t\t\t});\n\t\t\t\t\tif (!(code in def)) def[code]= value;\n\t\t\t\t} else {\n\t\t\t\t\tnew Function(\"def\", \"def['\"+code+\"']=\" + value)(def);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn \"\";\n\t\t})\n\t\t.replace(c.use || skip, function(m, code) {\n\t\t\tif (c.useParams) code = code.replace(c.useParams, function(m, s, d, param) {\n\t\t\t\tif (def[d] && def[d].arg && param) {\n\t\t\t\t\tvar rw = (d+\":\"+param).replace(/'|\\\\/g, \"_\");\n\t\t\t\t\tdef.__exp = def.__exp || {};\n\t\t\t\t\tdef.__exp[rw] = def[d].text.replace(new RegExp(\"(^|[^\\\\w$])\" + def[d].arg + \"([^\\\\w$])\", \"g\"), \"$1\" + param + \"$2\");\n\t\t\t\t\treturn s + \"def.__exp['\"+rw+\"']\";\n\t\t\t\t}\n\t\t\t});\n\t\t\tvar v = new Function(\"def\", \"return \" + code)(def);\n\t\t\treturn v ? resolveDefs(c, v, def) : v;\n\t\t});\n\t}\n\n\tfunction unescape(code) {\n\t\treturn code.replace(/\\\\('|\\\\)/g, \"$1\").replace(/[\\r\\t\\n]/g, \" \");\n\t}\n\n\tdoT.template = function(tmpl, c, def) {\n\t\tc = c || doT.templateSettings;\n\t\tvar cse = c.append ? startend.append : startend.split, needhtmlencode, sid = 0, indv,\n\t\t\tstr  = (c.use || c.define) ? resolveDefs(c, tmpl, def || {}) : tmpl;\n\n\t\tstr = (\"var out='\" + (c.strip ? str.replace(/(^|\\r|\\n)\\t* +| +\\t*(\\r|\\n|$)/g,\" \")\n\t\t\t\t\t.replace(/\\r|\\n|\\t|\\/\\*[\\s\\S]*?\\*\\//g,\"\"): str)\n\t\t\t.replace(/'|\\\\/g, \"\\\\$&\")\n\t\t\t.replace(c.interpolate || skip, function(m, code) {\n\t\t\t\treturn cse.start + unescape(code) + cse.end;\n\t\t\t})\n\t\t\t.replace(c.encode || skip, function(m, code) {\n\t\t\t\tneedhtmlencode = true;\n\t\t\t\treturn cse.startencode + unescape(code) + cse.end;\n\t\t\t})\n\t\t\t.replace(c.conditional || skip, function(m, elsecase, code) {\n\t\t\t\treturn elsecase ?\n\t\t\t\t\t(code ? \"';}else if(\" + unescape(code) + \"){out+='\" : \"';}else{out+='\") :\n\t\t\t\t\t(code ? \"';if(\" + unescape(code) + \"){out+='\" : \"';}out+='\");\n\t\t\t})\n\t\t\t.replace(c.iterate || skip, function(m, iterate, vname, iname) {\n\t\t\t\tif (!iterate) return \"';} } out+='\";\n\t\t\t\tsid+=1; indv=iname || \"i\"+sid; iterate=unescape(iterate);\n\t\t\t\treturn \"';var arr\"+sid+\"=\"+iterate+\";if(arr\"+sid+\"){var \"+vname+\",\"+indv+\"=-1,l\"+sid+\"=arr\"+sid+\".length-1;while(\"+indv+\"<l\"+sid+\"){\"\n\t\t\t\t\t+vname+\"=arr\"+sid+\"[\"+indv+\"+=1];out+='\";\n\t\t\t})\n\t\t\t.replace(c.evaluate || skip, function(m, code) {\n\t\t\t\treturn \"';\" + unescape(code) + \"out+='\";\n\t\t\t})\n\t\t\t+ \"';return out;\")\n\t\t\t.replace(/\\n/g, \"\\\\n\").replace(/\\t/g, '\\\\t').replace(/\\r/g, \"\\\\r\")\n\t\t\t.replace(/(\\s|;|\\}|^|\\{)out\\+='';/g, '$1').replace(/\\+''/g, \"\");\n\t\t\t//.replace(/(\\s|;|\\}|^|\\{)out\\+=''\\+/g,'$1out+=');\n\n\t\tif (needhtmlencode) {\n\t\t\tif (!c.selfcontained && _globals && !_globals._encodeHTML) _globals._encodeHTML = doT.encodeHTMLSource(c.doNotSkipEncoded);\n\t\t\tstr = \"var encodeHTML = typeof _encodeHTML !== 'undefined' ? _encodeHTML : (\"\n\t\t\t\t+ doT.encodeHTMLSource.toString() + \"(\" + (c.doNotSkipEncoded || '') + \"));\"\n\t\t\t\t+ str;\n\t\t}\n\t\ttry {\n\t\t\treturn new Function(c.varname, str);\n\t\t} catch (e) {\n\t\t\t/* istanbul ignore else */\n\t\t\tif (typeof console !== \"undefined\") console.log(\"Could not create a template function: \" + str);\n\t\t\tthrow e;\n\t\t}\n\t};\n\n\tdoT.compile = function(tmpl, def) {\n\t\treturn doT.template(tmpl, null, def);\n\t};\n}());\n","export const FETCH_CVE_LIST = 'FETCH_CVE_LIST';\nexport const EMPTY_CVE_LIST = 'EMPTY_CVE_LIST';\nexport const FETCH_CVE_DETAILS = 'FETCH_CVE_DETAILS';\nexport const HANDLE_CVE_DETAILS_ERROR = 'HANDLE_CVE_DETAILS_ERROR';\nexport const FETCH_SYSTEM_DETAILS = 'FETCH_SYSTEM_DETAILS';\nexport const FETCH_AFFECTED_SYSTEMS_BY_CVE = 'FETCH_AFFECTED_SYSTEMS_BY_CVE';\nexport const FETCH_SYSTEMS = 'FETCH_SYSTEMS';\nexport const SET_HEADER = 'SET_HEADER';\nexport const SYSTEM_OPT_OUT = 'SYSTEM_OPT_OUT';\nexport const FETCH_SYSTEM_CVE_LIST = 'FETCH_SYSTEM_CVE_LIST';\nexport const CHANGE_SYSTEM_CVE_STATUS = 'CHANGE_SYSTEM_CVE_STATUS';\nexport const CHANGE_EXPOSED_SYSTEMS_PARAMETERS = 'CHANGE_EXPOSED_SYSTEMS_PARAMETERS';\nexport const CHANGE_CVE_LIST_PARAMETERS = 'CHANGE_CVE_LIST_PARAMETERS';\nexport const SELECT_CVE = 'SELECT_CVE';\nexport const SELECT_SYSTEM_CVE = 'SELECT_SYSTEM_CVE';\nexport const SELECT_ENTITIES = 'SELECT_ENTITIES';\nexport const SELECT_MULTIPLE_ENTITIES = 'SELECT_MULTIPLE_ENTITIES';\nexport const EXPAND_CVE = 'EXPAND_CVE';\nexport const EXPAND_ROW = 'EXPAND_ROW'; //TODO unify it with EXPAND_CVE action\nexport const EXPAND_SYSTEM_CVE = 'EXPAND_SYSTEM_CVE';\nexport const FETCH_INSIGHTS_SYSTEM_RULES = 'FETCH_INSIGHTS_SYSTEM_RULES';\nexport const CHANGE_SYSTEMS_PARAMS = 'CHANGE_SYSTEMS_PARAMS';\nexport const CHANGE_SYSTEM_CVE_LIST_PARAMETERS = 'CHANGE_SYSTEM_CVE_LIST_PARAMETERS';\nexport const CLEAR_SYSTEMS_STORE = 'CLEAR_SYSTEMS_STORE';\nexport const CLEAR_SYSTEM_CVES_STORE = 'CLEAR_SYSTEM_CVES_STORE';\nexport const CLEAR_CVE_STORE = 'CLEAR_CVE_STORE';\nexport const CLEAR_INVENTORY_STORE = 'CLEAR_INVENTORY_STORE';\nexport const CLEAR_CVES_STORE = 'CLEAR_CVEs_STORE';\nexport const FETCH_AFFECTED_SYSTEM_IDS_BY_CVE = 'FETCH_AFFECTED_SYSTEM_IDS_BY_CVE';\nexport const FETCH_SYSTEMS_IDS = 'FETCH_SYSTEMS_IDS';\nexport const FETCH_CVE_LIST_IDS = 'FETCH_CVE_LIST_IDS';\nexport const FETCH_SYTEM_DETAILS_IDS = 'FETCH_SYTEM_DETAILS_IDS';\n","import { SecurityIcon, UnknownIcon } from '@patternfly/react-icons';\nimport { SortByDirection } from '@patternfly/react-table';\nimport findIndex from 'lodash/findIndex';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { impactColorList, impactList, CVSS_OPTIONS, PUBLIC_DATE_OPTIONS } from './constants';\nimport qs from 'query-string';\nimport { IntlProvider } from '@redhat-cloud-services/frontend-components-translations';\n\nexport const dataShape = propTypes.shape({\n    data: propTypes.oneOfType([propTypes.object, propTypes.array]),\n    meta: propTypes.object,\n    isLoading: propTypes.bool\n});\n\n/**\n * Based on the  allowedParams it will construct the arguments for the API call\n * which is defined in the vulnerabilities-client. vulnerabilities-client is written is typescript\n * so we need to define and pass every single parameter. Order in allowedParams is important\n *\n * @param {Object} apiProps\n * @param {Array} allowedParams - order should align with the params in the vulnerabilities-client\n */\nexport function constructParameters(apiProps, allowedParams) {\n    if (apiProps) {\n        Object.keys(apiProps).forEach(\n            key => (\n                apiProps[key] === undefined\n                || apiProps[key] === ''\n            )\n            && delete apiProps[key]\n        );\n\n        const params = allowedParams.map(item => apiProps[item]);\n\n        return params;\n    }\n\n    return [];\n}\n\n// TODO DRY:similar to constructParameters\nexport function constructURLParameters(urlParams, allowedParams) {\n    if (urlParams) {\n        const params = { ...urlParams };\n        Object.keys(urlParams).forEach(\n            key => (\n                params[key] === undefined\n                || params[key] === ''\n                || !allowedParams.includes(key)\n                || params[key] === false\n            )\n            && delete params[key]\n\n        );\n        return params;\n    }\n}\n\nexport function formatDate(date = new Date()) {\n    const prepend = (number) => `${`${number}`.length === 1 ? '0' : ''}${number}`;\n    const toFormat = new Date(date);\n    if (toFormat instanceof Date && !isNaN(toFormat)) {\n        const year = toFormat.getFullYear();\n        const month = toFormat.getMonth();\n        const day = toFormat.getDate();\n        return `${year}-${prepend(month)}-${prepend(day)}`;\n    }\n\n    return toFormat;\n}\n\n/**\n * Contructs the filters which have more than one parameter that needs to be passed\n * and resets all the parameteres when it's needed\n *\n * @param {Object} filterParams\n * @return {Object}\n */\nexport function constructFilterParameters(filterParams) {\n    if (Object.prototype.hasOwnProperty.call(filterParams, 'cvss_filter')) {\n        let cvssEntry = CVSS_OPTIONS.find(({ value }) => value === filterParams.cvss_filter);\n\n        if (typeof cvssEntry === 'undefined' && typeof filterParams.cvss_filter !== 'undefined') {\n            let values = filterParams.cvss_filter.split(/[^0-9]+/).filter(item => parseFloat(item));\n            let [from, to] = values;\n            cvssEntry = { from, to };\n        } else if (typeof cvssEntry === 'undefined' && typeof filterParams.cvss_filter === 'undefined') {\n            cvssEntry = { from: undefined, to: undefined };\n        } else if ((cvssEntry && cvssEntry.label === 'N/A') && filterParams.cvss_filter === 'from-1to-1') {\n            cvssEntry = { from: -1, to: -1 };\n        }\n\n        filterParams.cvss_from = cvssEntry.from;\n        filterParams.cvss_to = cvssEntry.to;\n    }\n\n    if (Object.prototype.hasOwnProperty.call(filterParams, 'publish_date')) {\n        let publicEntry = PUBLIC_DATE_OPTIONS.find(item => item.value === filterParams.publish_date);\n\n        if (typeof publicEntry !== 'undefined') {\n            filterParams.public_from = publicEntry.from && formatDate(publicEntry.from);\n            filterParams.public_to = publicEntry.to && formatDate(publicEntry.to);\n        } else {\n            filterParams.public_from = undefined;\n            filterParams.public_to = undefined;\n            filterParams.publish_date = undefined;\n        }\n    }\n\n    return filterParams;\n}\n\nexport function getImpactDetails(impact) {\n    if (Object.keys(impactList).includes(impact)) {\n        return {\n            title: impactList[impact].title,\n            color: impactList[impact].color,\n            text: impactList[impact].text,\n            titleContent: (\n                <SecurityIcon size=\"lg\" />\n            )\n        };\n    } else {\n        return {\n            title: 'Unknown',\n            color: impactColorList.unknown,\n            text: '',\n            titleContent: (\n                <UnknownIcon size=\"lg\" />\n            )\n        };\n    }\n}\n\nexport const createSortBy = (header, value) => {\n    if (value) {\n        let direction = value.indexOf('-') === 0 ? SortByDirection.desc : SortByDirection.asc;\n        value = value.replace(/^(-|\\+)/, '');\n        const index = findIndex(header, item => item.key === value);\n        let sort = {\n            index,\n            direction\n        };\n        return sort;\n    }\n\n    return {};\n};\n\nexport const handleSortColumn = (key, direction, header, currentSort, apply) => {\n    let columnName = header[key].key;\n    const useDefault = currentSort && currentSort.substr(1) !== columnName;\n    if (direction === SortByDirection.desc || useDefault) {\n        columnName = '-' + columnName;\n    }\n\n    apply({ sort: columnName });\n};\n\nexport const updateStateSet = (stateSet, names, value) => {\n    [].concat(names).forEach(name => {\n        value ? stateSet.add(name) : stateSet.delete(name);\n    });\n    return stateSet;\n};\n\nexport const useCreateUrlParams = (allowedParams) => {\n    const urlParams = qs.parse(window.location.search);\n\n    const createUrlParams = (parameters) => {\n        window.history.pushState(\n            {},\n            '',\n            `${\n                window.location.pathname\n            }?${\n                qs.stringify(constructURLParameters(parameters, allowedParams))\n            }`\n        );\n    };\n\n    return [createUrlParams, urlParams];\n};\n\nexport const updateRef = (meta, apply) => {\n    const pages = parseInt(meta.pages);\n    const page = parseInt(meta.page);\n    const cvesCount = parseInt(meta.cvesCount);\n    const goTo = (pages === page && page > 1 && cvesCount === 1) ? (pages - 1) : page;\n\n    apply({ page: goTo });\n};\n\nexport const mountWithIntl = (Component) => {\n    const wrapper = mount(Component, {\n        wrappingComponent: IntlProvider\n    });\n    const provider = wrapper.getWrappingComponent();\n    provider.setProps({ locale: 'en' });\n\n    return wrapper;\n};\n","import {\n    authInterceptor,\n    interceptor401,\n    responseDataInterceptor\n} from '@redhat-cloud-services/frontend-components-utilities/files/interceptors';\nimport axios from 'axios';\nimport { ReadOnlyNotification } from '../Helpers/constants';\nconst instance = axios.create();\n\nexport function errorInterceptor(err) {\n    if (!axios.isCancel(err)) {\n        const errObject = { ...err };\n\n        if (errObject.response && errObject.response.data && errObject.response.data.errors) {\n            const data = errObject.response.data.errors[0];\n            throw data;\n        }\n\n        throw err;\n    }\n}\n\nexport function readOnlyInterceptor(error) {\n    if (error.response && error.response.status === 503) {\n        const data = ReadOnlyNotification;\n        throw data;\n    }\n\n    throw error;\n}\n\ninstance.interceptors.request.use(authInterceptor);\ninstance.interceptors.response.use(responseDataInterceptor);\ninstance.interceptors.response.use(null, interceptor401);\ninstance.interceptors.response.use(null, readOnlyInterceptor);\ninstance.interceptors.response.use(null, errorInterceptor);\n\nexport default instance;\n","let BASE_ROUTE = '/api/vulnerability/';\nimport { GitApi } from '@redhat-cloud-services/vulnerabilities-client';\nimport instance from '../Utilities/interceptors';\nimport { constructParameters } from './MiscHelper';\n\nlet api = new GitApi(undefined, BASE_ROUTE, instance);\n\nexport function getCveDetails(synopsis) {\n    const result = api.getCveDetails(synopsis);\n    return result;\n}\n\nexport function getSystemDetails(system) {\n    const result = api.getSystemDetails(system);\n    return result;\n}\n\nexport function getAffectedSystemsByCVE(synopsis, apiProps) {\n    let parameterNames = [\n        'filter',\n        'limit',\n        'offset',\n        'page',\n        'page_size',\n        'sort',\n        'status_id',\n        'data_format',\n        'security_rule',\n        'rule_name'\n    ];\n    let parameterArray = constructParameters(apiProps, parameterNames);\n    let result = api.getAffectedSystemsByCve(synopsis, ...parameterArray);\n    return result;\n}\n\nexport function getSystems(apiProps) {\n    let parameterNames = ['filter', 'limit', 'offset', 'page', 'page_size', 'sort', 'data_format', 'stale', 'uuid', 'opt_out'];\n    let parameterArray = constructParameters(apiProps, parameterNames);\n    let result = api.getSystemsList(...parameterArray);\n    return result;\n}\n\nexport function getCveListByAccount(apiProps) {\n    let parameterNames = [\n        'filter',\n        'limit',\n        'offset',\n        'page',\n        'page_size',\n        'sort',\n        'cvss_from',\n        'cvss_to',\n        'public_from',\n        'public_to',\n        'impact',\n        'data_format',\n        'business_risk_id',\n        'status_id',\n        'security_rule',\n        'show_all'\n    ];\n    let parameterArray = constructParameters(apiProps, parameterNames);\n    let result = api.getCveList(...parameterArray);\n    return result;\n}\n\nexport function optOutSystem(system, status) {\n    let result = api.setSystemOptOut(system, status);\n    return result;\n}\n\nexport function getCveListBySystem(apiProps) {\n    const { system } = apiProps;\n    let parameterNames = [\n        'filter',\n        'limit',\n        'offset',\n        'page',\n        'page_size',\n        'sort',\n        'cvss_from',\n        'cvss_to',\n        'public_from',\n        'public_to',\n        'impact',\n        'status_id',\n        'data_format',\n        'business_risk_id',\n        'security_rule'\n    ];\n    if (apiProps && system) {\n        Object.keys(apiProps).forEach(key => (apiProps[key] === undefined || apiProps[key] === '') && delete apiProps[key]);\n        const params = parameterNames.map(item => apiProps[item]);\n        return api.getCveListBySystem(system, ...params).catch(err => {\n            if (err && err.status === '404') {\n                return { errors: err };\n            }\n\n            throw err;\n        });\n    }\n}\n\nexport function setSystemCveStatus(params) {\n    let result = api.setStatus(params);\n    return result;\n}\n\nexport function optOutSystems(systems, optOut) {\n    const data = { opt_out: optOut, inventory_id: new Array(...systems) };\n    let result = api.setSystemsOptOut(data);\n    return result;\n}\n\nexport function setBusinessRisk(params) {\n    let result = api.setCveBusinessRisk(params);\n    return result;\n}\n\nexport function setCveStatus(params) {\n    let result = api.setCveStatus(params);\n    return result;\n}\n\nexport function getExecutiveReport() {\n    let result = api.getExecutiveReport();\n    return result;\n}\n\nexport function getAffectedSystemsIdsByCve(synopsis, apiProps) {\n    //TODO: Once all new endpoints for selecting IDs are introduced optimize all parameterNames arrays in this page\n    let parameterNames = [\n        'filter',\n        'limit',\n        'offset',\n        'page',\n        'page_size',\n        'sort',\n        'status_id',\n        'data_format',\n        'security_rule'\n    ];\n    let parameterArray = constructParameters(apiProps, parameterNames);\n    let result = api.getAffectedSystemsIdsByCve(synopsis, ...parameterArray);\n    return result;\n}\n\nexport function getSystemsIds(apiProps) {\n    let parameterNames = ['filter', 'limit', 'offset', 'page', 'page_size', 'sort', 'data_format', 'stale', 'uuid', 'opt_out'];\n    let parameterArray = constructParameters(apiProps, parameterNames);\n    let result = api.getSystemsIds(...parameterArray);\n    return result;\n}\n\nexport function getCveIdsList(apiProps) {\n    let parameterNames = [\n        'filter',\n        'limit',\n        'offset',\n        'page',\n        'page_size',\n        'sort',\n        'cvss_from',\n        'cvss_to',\n        'public_from',\n        'public_to',\n        'impact',\n        'data_format',\n        'business_risk_id',\n        'status_id',\n        'security_rule',\n        'show_all'\n    ];\n    let parameterArray = constructParameters(apiProps, parameterNames);\n    let result = api.getCveIdsList(...parameterArray);\n    return result;\n}\n\nexport function getCveIdsBySystem(apiProps) {\n    const { system } = apiProps;\n    let parameterNames = [\n        'filter',\n        'limit',\n        'offset',\n        'page',\n        'page_size',\n        'sort',\n        'cvss_from',\n        'cvss_to',\n        'public_from',\n        'public_to',\n        'impact',\n        'status_id',\n        'data_format',\n        'business_risk_id',\n        'security_rule'\n    ];\n    if (apiProps && system) {\n        Object.keys(apiProps).forEach(key => (apiProps[key] === undefined || apiProps[key] === '') && delete apiProps[key]);\n        const params = parameterNames.map(item => apiProps[item]);\n        return api.getCveIdsBySystem(system, ...params);\n    }\n}\n","import Immutable from 'seamless-immutable';\nimport * as ActionTypes from '../ActionTypes';\n\n// Initial State\nexport const initialState = Immutable({\n    title: 'Vulnerability',\n    breadcrumbs: []\n});\n\n// Reducer\nexport const BreadcrumbStore = (state = initialState, action) => {\n    let newState;\n    switch (action.type) {\n        case ActionTypes.SET_HEADER + '_FULFILLED':\n            newState = state.set('title', (action.payload && action.payload.title) || initialState.title);\n            newState = newState.set('breadcrumbs', (action.payload && action.payload.breadcrumbs) || initialState.breadcrumbs);\n            return newState;\n\n        default:\n            return state;\n    }\n};\n","import Immutable from 'seamless-immutable';\nimport * as ActionTypes from '../ActionTypes';\n\n// Initial State\nexport const initialState = Immutable({\n    affectedSystemsByCVE: {\n        isLoading: true,\n        openedRows: [],\n        payload: {\n            meta: {\n                total_items: 0,\n                page: 1,\n                page_size: 20\n            }\n        }\n    },\n    parameters: {\n        page: 1,\n        page_size: 20,\n        selectedHosts: [],\n        security_rule: undefined,\n        status_id: undefined\n    },\n    cveDetails: {\n        isLoading: true,\n        payload: {},\n        error: false\n    }\n});\n\n// Reducer\nexport const CVEDetailsPageStore = (state = initialState, action) => {\n    let newState;\n    switch (action.type) {\n        case ActionTypes.HANDLE_CVE_DETAILS_ERROR:\n            newState = state.setIn(['cveDetails', 'error'], action.payload.error);\n            newState = newState.setIn(['cveDetails', 'isLoading'], false);\n            return newState;\n        case ActionTypes.FETCH_CVE_DETAILS + '_PENDING':\n            newState = state.setIn(['cveDetails', 'isLoading'], true);\n            return newState;\n\n        case ActionTypes.FETCH_CVE_DETAILS + '_FULFILLED':\n            newState = state.setIn(['cveDetails', 'payload'], action.payload);\n            newState = newState.setIn(['cveDetails', 'isLoading'], false);\n            return newState;\n\n        case ActionTypes.FETCH_AFFECTED_SYSTEMS_BY_CVE + '_PENDING':\n            newState = state.setIn(['affectedSystemsByCVE', 'isLoading'], true);\n            return newState;\n\n        case ActionTypes.FETCH_AFFECTED_SYSTEMS_BY_CVE + '_FULFILLED':\n            newState = state.setIn(['affectedSystemsByCVE', 'payload'], action.payload);\n            newState = newState.setIn(['affectedSystemsByCVE', 'isLoading'], false);\n            return newState;\n        case ActionTypes.CHANGE_EXPOSED_SYSTEMS_PARAMETERS:\n            newState = state.setIn(['parameters'], {\n                ...state.parameters,\n                ...action.payload,\n                page_size: action.payload.page_size || state.parameters.page_size\n            });\n            return newState;\n        case ActionTypes.CLEAR_CVE_STORE:\n            return initialState;\n        default:\n            return state;\n    }\n};\n\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/files/esm/ReducerRegistry';\nimport { FETCH_SYSTEM_CVE_LIST } from '../ActionTypes';\n\nexport const initialState = {\n    parameters: {\n        page: 1,\n        page_size: 20\n    },\n    cveList: {\n        isLoading: true,\n        payload: [],\n        meta: new Date(),\n        error: false\n    },\n    openedCves: [],\n    selectedCves: [],\n    expandCveDescription: false\n};\n\nfunction pendingVulnerabilities(state, { meta }) {\n    return {\n        ...state,\n        timestamp: meta,\n        cveList: {\n            ...state.cveList,\n            isLoading: true\n        }\n    };\n}\n\nfunction rejectedVulnerabilities(state, { meta, payload }) {\n    return {\n        ...state,\n        timestamp: meta,\n        cveList: {\n            payload: { errors: payload },\n            isLoading: false\n        }\n    };\n}\n\nfunction fulfilledVulnerabilities(state, action) {\n    const { payload, meta } = action;\n    if (meta >= state.timestamp) {\n        return {\n            ...state,\n            timestamp: meta,\n            cveList: {\n                payload,\n                isLoading: false\n            }\n        };\n    }\n\n    return state;\n}\n\nfunction selectEntity(state, action) {\n    let newState = state;\n    let selectedCves = newState.selectedCves.slice();\n    if (Array.isArray(action.payload)) {\n        selectedCves = action.payload;\n    } else {\n        (selectedCves.includes(action.payload) && selectedCves.splice(selectedCves.indexOf(action.payload), 1)) ||\n            selectedCves.push(action.payload);\n    }\n\n    return { ...newState, selectedCves };\n}\n\nfunction expandCve(state, action) {\n    let newState = state;\n    const { isOpen, cves, expandCveDescription } = action.payload;\n    let openedCves = newState.openedCves.slice();\n\n    if (cves.length > 0) {\n        cves.map(cve =>{\n            const index = openedCves.findIndex(element => element.id === cve);\n            if (index > -1) { openedCves[index] = ({ id: cve, isOpen });}\n            else {openedCves.push({ id: cve, isOpen });}\n        });\n    }\n    else {\n        openedCves = openedCves.map(cve => ({ id: cve.id, isOpen: false }));\n    }\n\n    return { ...newState, openedCves, expandCveDescription };\n}\n\nfunction changeParameters(state, action) {\n    let newState = state;\n    newState.parameters = { ...state.parameters, ...action.payload };\n    return newState;\n}\n\nfunction clearSystemCvesStore(state) {\n    let newState = state;\n    newState.selectedCves = [];\n    newState.openedCves = [];\n    newState.parameters = {\n        page: 1,\n        page_size: 20\n    };\n    return newState;\n}\n\nexport const SystemCvesStore = applyReducerHash(\n    {\n        [`${FETCH_SYSTEM_CVE_LIST}_PENDING`]: pendingVulnerabilities,\n        [`${FETCH_SYSTEM_CVE_LIST}_REJECTED`]: rejectedVulnerabilities,\n        [`${FETCH_SYSTEM_CVE_LIST}_FULFILLED`]: fulfilledVulnerabilities,\n        ['CHANGE_SYSTEM_CVE_LIST_PARAMETERS']: changeParameters,\n        ['SELECT_SYSTEM_CVE']: selectEntity,\n        ['EXPAND_SYSTEM_CVE']: expandCve,\n        ['CLEAR_SYSTEM_CVES_STORE']: clearSystemCvesStore\n    },\n    initialState\n);\n","import * as ActionTypes from '../ActionTypes';\n\nexport const initialState = {\n    isLoading: true,\n    payload: {},\n    metadata: {\n        page: 1,\n        limit: 20,\n        offet: 0,\n        total_items: 0\n    },\n    params: {\n        filter: undefined,\n        opt_out: false,\n        page: 1,\n        page_size: 20,\n        sort: '-last_upload'\n    }\n};\n\nexport const SystemsPageStore = (state = initialState, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case ActionTypes.FETCH_SYSTEMS + '_PENDING':\n            newState.isLoading = true;\n            return newState;\n        case ActionTypes.FETCH_SYSTEMS + '_REJECTED':\n            newState.error = true;\n            return newState;\n        case ActionTypes.FETCH_SYSTEMS + '_FULFILLED':\n            newState.payload = action.payload;\n            newState.metadata = action.payload.meta;\n            newState.isLoading = false;\n            return newState;\n        case ActionTypes.CHANGE_SYSTEMS_PARAMS:\n            newState.params = {\n                ...newState.params,\n                ...action.payload,\n                page_size: action.payload.page_size || newState.params.page_size\n            };\n            return newState;\n        case ActionTypes.CLEAR_SYSTEMS_STORE:\n            return initialState;\n        default:\n            return state;\n    }\n};\n","import * as ActionTypes from '../ActionTypes';\n\n// Initial State\nexport const initialState = {\n    cveList: {\n        isLoading: true,\n        payload: [],\n        timestamp: new Date()\n    },\n    parameters: {\n        show_all: false,\n        sort: '-public_date'\n    },\n    selectedCves: [],\n    openedCves: [],\n    expandCveDescription: false\n};\n\nfunction isValid(stateTimestamp, actionTimestamp) {\n    return actionTimestamp >= stateTimestamp;\n}\n\n// Reducer\nexport const CVEsStore = (state = initialState, action) => {\n    let newState = { ...state };\n\n    switch (action.type) {\n        case ActionTypes.FETCH_CVE_LIST + '_PENDING':\n            newState.cveList = {\n                timestamp: action.meta,\n                isLoading: true\n            };\n            return newState;\n\n        case ActionTypes.FETCH_CVE_LIST + '_REJECTED':\n            newState.error = true;\n            newState.cveList = {\n                isLoading: false,\n                payload: { errors: action.payload }\n            };\n            return newState;\n\n        case ActionTypes.FETCH_CVE_LIST + '_FULFILLED':\n            if (isValid(state.cveList.timestamp, action.meta)) {\n                newState.cveList = {\n                    payload: action.payload,\n                    isLoading: false\n                };\n\n                return newState;\n            }\n\n            return state;\n\n        case ActionTypes.CHANGE_CVE_LIST_PARAMETERS + '_FULFILLED':\n            newState.parameters = { ...newState.parameters, ...action.payload };\n            return newState;\n\n        case ActionTypes.SELECT_CVE: {\n            let selectedCves = newState.selectedCves.slice();\n            if (Array.isArray(action.payload)) {\n                selectedCves = action.payload;\n            } else {\n                (selectedCves.includes(action.payload) && selectedCves.splice(selectedCves.indexOf(action.payload), 1)) ||\n                    selectedCves.push(action.payload);\n            }\n\n            return { ...newState, selectedCves  };\n        }\n\n        case ActionTypes.EXPAND_CVE: {\n            if (Array.isArray(action.payload)) {\n                const openedCves = action.payload;\n                const expandCveDescription = action.payload.length === 0 ? false : true;\n                return { ...newState,  openedCves, expandCveDescription };\n            }\n\n            const cveName = newState.cveList.payload.data[action.payload / 2].id;\n            const openedCves = newState.openedCves.slice();\n            (openedCves.includes(cveName) && openedCves.splice(openedCves.indexOf(cveName), 1)) || openedCves.push(cveName);\n\n            const expandCveDescription = (openedCves.length === newState.cveList.payload.data.length);\n\n            return { ...newState, openedCves, expandCveDescription };\n        }\n\n        case ActionTypes.CLEAR_CVES_STORE: {\n            return initialState;\n        }\n\n        default:\n            return state;\n    }\n};\n","import * as APIHelper from '../../Helpers/APIHelper';\nimport * as HeaderHelper from '../../Helpers/HeaderHelper';\nimport ReducerRegistry from '../../Utilities/ReducerRegistry';\nimport * as ActionTypes from '../ActionTypes';\nimport { BreadcrumbStore } from '../Reducers/BreadcrumbStore';\nimport { CVEDetailsPageStore } from '../Reducers/CVEDetailsPageStore';\nimport { SystemCvesStore } from '../Reducers/SystemCvesStore';\nimport { SystemsPageStore } from '../Reducers/SystemsPageStore';\nimport { CVEsStore } from '../Reducers/CVEsStore';\n\nReducerRegistry.register({ CVEDetailsPageStore });\nReducerRegistry.register({ CVEsStore });\nReducerRegistry.register({ SystemsPageStore });\nReducerRegistry.register({ BreadcrumbStore });\nReducerRegistry.register({ SystemCvesStore });\n\nexport const setHeader = props => ({\n    type: ActionTypes.SET_HEADER,\n    payload: new Promise(resolve => {\n        resolve(HeaderHelper.setHeader(props));\n    }).then(result => result)\n});\n\nexport const fetchAffectedSystemsByCVE = (cve, apiProps) =>({\n    type: ActionTypes.FETCH_AFFECTED_SYSTEMS_BY_CVE,\n    payload: new Promise(resolve => {\n        resolve(APIHelper.getAffectedSystemsByCVE(cve, apiProps));\n    }).then(result => result)\n});\n\nexport const fetchSystems = options => ({\n    type: ActionTypes.FETCH_SYSTEMS,\n    payload: new Promise(resolve => {\n        resolve(APIHelper.getSystems(options));\n    }).then(result => result)\n});\n\nexport const fetchCveDetails = synopsis => ({\n    type: ActionTypes.FETCH_CVE_DETAILS,\n    payload: new Promise(resolve => {\n        resolve(APIHelper.getCveDetails(synopsis));\n    }).then(result => result)\n});\n\nexport const handleCveDetailsError = () => ({\n    type: ActionTypes.HANDLE_CVE_DETAILS_ERROR,\n    payload: { error: true }\n});\n\nexport const fetchSystemDetails = system => ({\n    type: ActionTypes.FETCH_SYSTEM_DETAILS,\n    meta: { noError: true },\n    payload: new Promise(resolve => {\n        resolve(APIHelper.getSystemDetails(system));\n    }).then(result => result)\n});\n\nexport const fetchCveListByAccount = apiProps => ({\n    type: ActionTypes.FETCH_CVE_LIST,\n    meta: new Date(),\n    payload: APIHelper.getCveListByAccount(apiProps)\n});\n\nexport const optOutSystemAction = (system, status) => ({\n    type: ActionTypes.SYSTEM_OPT_OUT,\n    payload: new Promise(resolve => {\n        resolve(APIHelper.optOutSystem(system, status));\n    }).then(result => result)\n});\n\nexport const fetchCveListBySystem = apiProps => ({\n    type: ActionTypes.FETCH_SYSTEM_CVE_LIST,\n    meta: new Date(),\n    payload: APIHelper.getCveListBySystem(apiProps)\n});\n\nexport const changeSystemCveStatusAction = (inventoryId, cve, statusId, callback) => ({\n    type: ActionTypes.CHANGE_SYSTEM_CVE_STATUS,\n    payload: APIHelper.setSystemCveStatus(inventoryId, cve, statusId, callback)\n});\n\nexport const optOutSystemsAction = (system, status) => ({\n    type: ActionTypes.SYSTEM_OPT_OUT,\n    payload: new Promise(resolve => {\n        resolve(APIHelper.optOutSystems(system, status));\n    }).then(result => result)\n});\n\nexport const changeCveListParameters = apiProps => ({\n    type: ActionTypes.CHANGE_CVE_LIST_PARAMETERS,\n    payload: new Promise(resolve => {\n        resolve(apiProps);\n    }).then(result => result)\n});\n\nexport const changeExposedSystemsParameters = (params) => ({\n    type: ActionTypes.CHANGE_EXPOSED_SYSTEMS_PARAMETERS,\n    payload: params\n});\n\nexport const changeSystemCVEsParameters = (params) => ({\n    type: ActionTypes.CHANGE_SYSTEM_CVE_LIST_PARAMETERS,\n    payload: params\n});\n\nexport const selectCve = apiProps => ({\n    type: ActionTypes.SELECT_CVE,\n    payload: apiProps\n});\n\nexport const expandCve = apiProps => ({\n    type: ActionTypes.EXPAND_CVE,\n    payload: apiProps\n});\n\nexport const selectSystemCve = apiProps => ({\n    type: ActionTypes.SELECT_SYSTEM_CVE,\n    payload: apiProps\n});\n\nexport const expandSystemCve = apiProps => ({\n    type: ActionTypes.EXPAND_SYSTEM_CVE,\n    payload: apiProps\n});\n\nexport const expandRow = (id, isOpen) => ({\n    type: ActionTypes.EXPAND_ROW,\n    payload: { id, isOpen }\n});\n\nexport const selectEntities = (value, ids) => ({\n    type: ActionTypes.SELECT_ENTITIES,\n    payload: ids\n});\n\nexport const selectMultipleEntities = (selectedHosts) => ({\n    type: ActionTypes.SELECT_MULTIPLE_ENTITIES,\n    payload: selectedHosts\n});\n\nexport const changeSystemsParams = (params) => ({\n    type: ActionTypes.CHANGE_SYSTEMS_PARAMS,\n    payload: params\n});\n\nexport const clearSystemStore = () => ({\n    type: ActionTypes.CLEAR_SYSTEMS_STORE,\n    payload: []\n});\n\nexport const clearSystemCvesStore = () => ({\n    type: ActionTypes.CLEAR_SYSTEM_CVES_STORE,\n    payload: []\n});\n\nexport const clearCveStore = () => ({\n    type: ActionTypes.CLEAR_CVE_STORE,\n    payload: []\n});\n\nexport const fetchAffectedSystemsIdsByCve = (cve, apiProps) => ({\n    type: ActionTypes.FETCH_AFFECTED_SYSTEM_IDS_BY_CVE,\n    payload: APIHelper.getAffectedSystemsIdsByCve(cve, apiProps)\n});\n\nexport const fetchSystemsIds = (apiProps) => ({\n    type: ActionTypes.FETCH_SYSTEMS_IDS,\n    payload: APIHelper.getSystemsIds(apiProps)\n});\n\nexport const fetchCvesIds = (apiProps) => ({\n    type: ActionTypes.FETCH_CVE_LIST_IDS,\n    payload: APIHelper.getCveIdsList(apiProps)\n});\n\nexport const fetchSystemDetailsIds = (apiProps) =>({\n    type: ActionTypes.FETCH_SYTEM_DETAILS_IDS,\n    payload: APIHelper.getCveIdsBySystem(apiProps)\n});\n\nexport const clearInventoryStore = () =>({\n    type: ActionTypes.CLEAR_INVENTORY_STORE,\n    payload: []\n});\n\nexport const clearCVEsStore = () =>({\n    type: ActionTypes.CLEAR_CVES_STORE,\n    payload: []\n});\n","(function() {\n  \"use strict\";\n\nfunction immutableInit(config) {\n\n  // https://github.com/facebook/react/blob/v15.0.1/src/isomorphic/classic/element/ReactElement.js#L21\n  var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol.for && Symbol.for('react.element');\n  var REACT_ELEMENT_TYPE_FALLBACK = 0xeac7;\n\n  var globalConfig = {\n    use_static: false\n  };\n  if (isObject(config)) {\n      if (config.use_static !== undefined) {\n          globalConfig.use_static = Boolean(config.use_static);\n      }\n  }\n\n  function isObject(data) {\n    return (\n      typeof data === 'object' &&\n      !Array.isArray(data) &&\n      data !== null\n    );\n  }\n\n  function instantiateEmptyObject(obj) {\n      var prototype = Object.getPrototypeOf(obj);\n      if (!prototype) {\n          return {};\n      } else {\n          return Object.create(prototype);\n      }\n  }\n\n  function addPropertyTo(target, methodName, value) {\n    Object.defineProperty(target, methodName, {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: value\n    });\n  }\n\n  function banProperty(target, methodName) {\n    addPropertyTo(target, methodName, function() {\n      throw new ImmutableError(\"The \" + methodName +\n        \" method cannot be invoked on an Immutable data structure.\");\n    });\n  }\n\n  var immutabilityTag = \"__immutable_invariants_hold\";\n\n  function addImmutabilityTag(target) {\n    addPropertyTo(target, immutabilityTag, true);\n  }\n\n  function isImmutable(target) {\n    if (typeof target === \"object\") {\n      return target === null || Boolean(\n        Object.getOwnPropertyDescriptor(target, immutabilityTag)\n      );\n    } else {\n      // In JavaScript, only objects are even potentially mutable.\n      // strings, numbers, null, and undefined are all naturally immutable.\n      return true;\n    }\n  }\n\n  function isEqual(a, b) {\n    // Avoid false positives due to (NaN !== NaN) evaluating to true\n    return (a === b || (a !== a && b !== b));\n  }\n\n  function isMergableObject(target) {\n    return target !== null && typeof target === \"object\" && !(Array.isArray(target)) && !(target instanceof Date);\n  }\n\n  var mutatingObjectMethods = [\n    \"setPrototypeOf\"\n  ];\n\n  var nonMutatingObjectMethods = [\n    \"keys\"\n  ];\n\n  var mutatingArrayMethods = mutatingObjectMethods.concat([\n    \"push\", \"pop\", \"sort\", \"splice\", \"shift\", \"unshift\", \"reverse\"\n  ]);\n\n  var nonMutatingArrayMethods = nonMutatingObjectMethods.concat([\n    \"map\", \"filter\", \"slice\", \"concat\", \"reduce\", \"reduceRight\"\n  ]);\n\n  var mutatingDateMethods = mutatingObjectMethods.concat([\n    \"setDate\", \"setFullYear\", \"setHours\", \"setMilliseconds\", \"setMinutes\", \"setMonth\", \"setSeconds\",\n    \"setTime\", \"setUTCDate\", \"setUTCFullYear\", \"setUTCHours\", \"setUTCMilliseconds\", \"setUTCMinutes\",\n    \"setUTCMonth\", \"setUTCSeconds\", \"setYear\"\n  ]);\n\n  function ImmutableError(message) {\n    this.name = 'MyError';\n    this.message = message;\n    this.stack = (new Error()).stack;\n  }\n  ImmutableError.prototype = new Error();\n  ImmutableError.prototype.constructor = Error;\n\n  function makeImmutable(obj, bannedMethods) {\n    // Tag it so we can quickly tell it's immutable later.\n    addImmutabilityTag(obj);\n\n    if (\"development\" !== \"production\") {\n      // Make all mutating methods throw exceptions.\n      for (var index in bannedMethods) {\n        if (bannedMethods.hasOwnProperty(index)) {\n          banProperty(obj, bannedMethods[index]);\n        }\n      }\n\n      // Freeze it and return it.\n      Object.freeze(obj);\n    }\n\n    return obj;\n  }\n\n  function makeMethodReturnImmutable(obj, methodName) {\n    var currentMethod = obj[methodName];\n\n    addPropertyTo(obj, methodName, function() {\n      return Immutable(currentMethod.apply(obj, arguments));\n    });\n  }\n\n  function arraySet(idx, value, config) {\n    var deep          = config && config.deep;\n\n    if (idx in this) {\n      if (deep && this[idx] !== value && isMergableObject(value) && isMergableObject(this[idx])) {\n        value = Immutable.merge(this[idx], value, {deep: true, mode: 'replace'});\n      }\n      if (isEqual(this[idx], value)) {\n        return this;\n      }\n    }\n\n    var mutable = asMutableArray.call(this);\n    mutable[idx] = Immutable(value);\n    return makeImmutableArray(mutable);\n  }\n\n  var immutableEmptyArray = Immutable([]);\n\n  function arraySetIn(pth, value, config) {\n    var head = pth[0];\n\n    if (pth.length === 1) {\n      return arraySet.call(this, head, value, config);\n    } else {\n      var tail = pth.slice(1);\n      var thisHead = this[head];\n      var newValue;\n\n      if (typeof(thisHead) === \"object\" && thisHead !== null) {\n        // Might (validly) be object or array\n        newValue = Immutable.setIn(thisHead, tail, value);\n      } else {\n        var nextHead = tail[0];\n        // If the next path part is a number, then we are setting into an array, else an object.\n        if (nextHead !== '' && isFinite(nextHead)) {\n          newValue = arraySetIn.call(immutableEmptyArray, tail, value);\n        } else {\n          newValue = objectSetIn.call(immutableEmptyObject, tail, value);\n        }\n      }\n\n      if (head in this && thisHead === newValue) {\n        return this;\n      }\n\n      var mutable = asMutableArray.call(this);\n      mutable[head] = newValue;\n      return makeImmutableArray(mutable);\n    }\n  }\n\n  function makeImmutableArray(array) {\n    // Don't change their implementations, but wrap these functions to make sure\n    // they always return an immutable value.\n    for (var index in nonMutatingArrayMethods) {\n      if (nonMutatingArrayMethods.hasOwnProperty(index)) {\n        var methodName = nonMutatingArrayMethods[index];\n        makeMethodReturnImmutable(array, methodName);\n      }\n    }\n\n    if (!globalConfig.use_static) {\n      addPropertyTo(array, \"flatMap\",  flatMap);\n      addPropertyTo(array, \"asObject\", asObject);\n      addPropertyTo(array, \"asMutable\", asMutableArray);\n      addPropertyTo(array, \"set\", arraySet);\n      addPropertyTo(array, \"setIn\", arraySetIn);\n      addPropertyTo(array, \"update\", update);\n      addPropertyTo(array, \"updateIn\", updateIn);\n      addPropertyTo(array, \"getIn\", getIn);\n    }\n\n    for(var i = 0, length = array.length; i < length; i++) {\n      array[i] = Immutable(array[i]);\n    }\n\n    return makeImmutable(array, mutatingArrayMethods);\n  }\n\n  function makeImmutableDate(date) {\n    if (!globalConfig.use_static) {\n      addPropertyTo(date, \"asMutable\", asMutableDate);\n    }\n\n    return makeImmutable(date, mutatingDateMethods);\n  }\n\n  function asMutableDate() {\n    return new Date(this.getTime());\n  }\n\n  /**\n   * Effectively performs a map() over the elements in the array, using the\n   * provided iterator, except that whenever the iterator returns an array, that\n   * array's elements are added to the final result instead of the array itself.\n   *\n   * @param {function} iterator - The iterator function that will be invoked on each element in the array. It will receive three arguments: the current value, the current index, and the current object.\n   */\n  function flatMap(iterator) {\n    // Calling .flatMap() with no arguments is a no-op. Don't bother cloning.\n    if (arguments.length === 0) {\n      return this;\n    }\n\n    var result = [],\n        length = this.length,\n        index;\n\n    for (index = 0; index < length; index++) {\n      var iteratorResult = iterator(this[index], index, this);\n\n      if (Array.isArray(iteratorResult)) {\n        // Concatenate Array results into the return value we're building up.\n        result.push.apply(result, iteratorResult);\n      } else {\n        // Handle non-Array results the same way map() does.\n        result.push(iteratorResult);\n      }\n    }\n\n    return makeImmutableArray(result);\n  }\n\n  /**\n   * Returns an Immutable copy of the object without the given keys included.\n   *\n   * @param {array} keysToRemove - A list of strings representing the keys to exclude in the return value. Instead of providing a single array, this method can also be called by passing multiple strings as separate arguments.\n   */\n  function without(remove) {\n    // Calling .without() with no arguments is a no-op. Don't bother cloning.\n    if (typeof remove === \"undefined\" && arguments.length === 0) {\n      return this;\n    }\n\n    if (typeof remove !== \"function\") {\n      // If we weren't given an array, use the arguments list.\n      var keysToRemoveArray = (Array.isArray(remove)) ?\n         remove.slice() : Array.prototype.slice.call(arguments);\n\n      // Convert numeric keys to strings since that's how they'll\n      // come from the enumeration of the object.\n      keysToRemoveArray.forEach(function(el, idx, arr) {\n        if(typeof(el) === \"number\") {\n          arr[idx] = el.toString();\n        }\n      });\n\n      remove = function(val, key) {\n        return keysToRemoveArray.indexOf(key) !== -1;\n      };\n    }\n\n    var result = instantiateEmptyObject(this);\n\n    for (var key in this) {\n      if (this.hasOwnProperty(key) && remove(this[key], key) === false) {\n        result[key] = this[key];\n      }\n    }\n\n    return makeImmutableObject(result);\n  }\n\n  function asMutableArray(opts) {\n    var result = [], i, length;\n\n    if(opts && opts.deep) {\n      for(i = 0, length = this.length; i < length; i++) {\n        result.push(asDeepMutable(this[i]));\n      }\n    } else {\n      for(i = 0, length = this.length; i < length; i++) {\n        result.push(this[i]);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Effectively performs a [map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map) over the elements in the array, expecting that the iterator function\n   * will return an array of two elements - the first representing a key, the other\n   * a value. Then returns an Immutable Object constructed of those keys and values.\n   *\n   * @param {function} iterator - A function which should return an array of two elements - the first representing the desired key, the other the desired value.\n   */\n  function asObject(iterator) {\n    // If no iterator was provided, assume the identity function\n    // (suggesting this array is already a list of key/value pairs.)\n    if (typeof iterator !== \"function\") {\n      iterator = function(value) { return value; };\n    }\n\n    var result = {},\n        length = this.length,\n        index;\n\n    for (index = 0; index < length; index++) {\n      var pair  = iterator(this[index], index, this),\n          key   = pair[0],\n          value = pair[1];\n\n      result[key] = value;\n    }\n\n    return makeImmutableObject(result);\n  }\n\n  function asDeepMutable(obj) {\n    if (\n      (!obj) ||\n      (typeof obj !== 'object') ||\n      (!Object.getOwnPropertyDescriptor(obj, immutabilityTag)) ||\n      (obj instanceof Date)\n    ) { return obj; }\n    return Immutable.asMutable(obj, {deep: true});\n  }\n\n  function quickCopy(src, dest) {\n    for (var key in src) {\n      if (Object.getOwnPropertyDescriptor(src, key)) {\n        dest[key] = src[key];\n      }\n    }\n\n    return dest;\n  }\n\n  /**\n   * Returns an Immutable Object containing the properties and values of both\n   * this object and the provided object, prioritizing the provided object's\n   * values whenever the same key is present in both objects.\n   *\n   * @param {object} other - The other object to merge. Multiple objects can be passed as an array. In such a case, the later an object appears in that list, the higher its priority.\n   * @param {object} config - Optional config object that contains settings. Supported settings are: {deep: true} for deep merge and {merger: mergerFunc} where mergerFunc is a function\n   *                          that takes a property from both objects. If anything is returned it overrides the normal merge behaviour.\n   */\n  function merge(other, config) {\n    // Calling .merge() with no arguments is a no-op. Don't bother cloning.\n    if (arguments.length === 0) {\n      return this;\n    }\n\n    if (other === null || (typeof other !== \"object\")) {\n      throw new TypeError(\"Immutable#merge can only be invoked with objects or arrays, not \" + JSON.stringify(other));\n    }\n\n    var receivedArray = (Array.isArray(other)),\n        deep          = config && config.deep,\n        mode          = config && config.mode || 'merge',\n        merger        = config && config.merger,\n        result;\n\n    // Use the given key to extract a value from the given object, then place\n    // that value in the result object under the same key. If that resulted\n    // in a change from this object's value at that key, set anyChanges = true.\n    function addToResult(currentObj, otherObj, key) {\n      var immutableValue = Immutable(otherObj[key]);\n      var mergerResult = merger && merger(currentObj[key], immutableValue, config);\n      var currentValue = currentObj[key];\n\n      if ((result !== undefined) ||\n        (mergerResult !== undefined) ||\n        (!currentObj.hasOwnProperty(key)) ||\n        !isEqual(immutableValue, currentValue)) {\n\n        var newValue;\n\n        if (mergerResult !== undefined) {\n          newValue = mergerResult;\n        } else if (deep && isMergableObject(currentValue) && isMergableObject(immutableValue)) {\n          newValue = Immutable.merge(currentValue, immutableValue, config);\n        } else {\n          newValue = immutableValue;\n        }\n\n        if (!isEqual(currentValue, newValue) || !currentObj.hasOwnProperty(key)) {\n          if (result === undefined) {\n            // Make a shallow clone of the current object.\n            result = quickCopy(currentObj, instantiateEmptyObject(currentObj));\n          }\n\n          result[key] = newValue;\n        }\n      }\n    }\n\n    function clearDroppedKeys(currentObj, otherObj) {\n      for (var key in currentObj) {\n        if (!otherObj.hasOwnProperty(key)) {\n          if (result === undefined) {\n            // Make a shallow clone of the current object.\n            result = quickCopy(currentObj, instantiateEmptyObject(currentObj));\n          }\n          delete result[key];\n        }\n      }\n    }\n\n    var key;\n\n    // Achieve prioritization by overriding previous values that get in the way.\n    if (!receivedArray) {\n      // The most common use case: just merge one object into the existing one.\n      for (key in other) {\n        if (Object.getOwnPropertyDescriptor(other, key)) {\n          addToResult(this, other, key);\n        }\n      }\n      if (mode === 'replace') {\n        clearDroppedKeys(this, other);\n      }\n    } else {\n      // We also accept an Array\n      for (var index = 0, length = other.length; index < length; index++) {\n        var otherFromArray = other[index];\n\n        for (key in otherFromArray) {\n          if (otherFromArray.hasOwnProperty(key)) {\n            addToResult(result !== undefined ? result : this, otherFromArray, key);\n          }\n        }\n      }\n    }\n\n    if (result === undefined) {\n      return this;\n    } else {\n      return makeImmutableObject(result);\n    }\n  }\n\n  function objectReplace(value, config) {\n    var deep          = config && config.deep;\n\n    // Calling .replace() with no arguments is a no-op. Don't bother cloning.\n    if (arguments.length === 0) {\n      return this;\n    }\n\n    if (value === null || typeof value !== \"object\") {\n      throw new TypeError(\"Immutable#replace can only be invoked with objects or arrays, not \" + JSON.stringify(value));\n    }\n\n    return Immutable.merge(this, value, {deep: deep, mode: 'replace'});\n  }\n\n  var immutableEmptyObject = Immutable({});\n\n  function objectSetIn(path, value, config) {\n    if (!(Array.isArray(path)) || path.length === 0) {\n      throw new TypeError(\"The first argument to Immutable#setIn must be an array containing at least one \\\"key\\\" string.\");\n    }\n\n    var head = path[0];\n    if (path.length === 1) {\n      return objectSet.call(this, head, value, config);\n    }\n\n    var tail = path.slice(1);\n    var newValue;\n    var thisHead = this[head];\n\n    if (this.hasOwnProperty(head) && typeof(thisHead) === \"object\" && thisHead !== null) {\n      // Might (validly) be object or array\n      newValue = Immutable.setIn(thisHead, tail, value);\n    } else {\n      newValue = objectSetIn.call(immutableEmptyObject, tail, value);\n    }\n\n    if (this.hasOwnProperty(head) && thisHead === newValue) {\n      return this;\n    }\n\n    var mutable = quickCopy(this, instantiateEmptyObject(this));\n    mutable[head] = newValue;\n    return makeImmutableObject(mutable);\n  }\n\n  function objectSet(property, value, config) {\n    var deep          = config && config.deep;\n\n    if (this.hasOwnProperty(property)) {\n      if (deep && this[property] !== value && isMergableObject(value) && isMergableObject(this[property])) {\n        value = Immutable.merge(this[property], value, {deep: true, mode: 'replace'});\n      }\n      if (isEqual(this[property], value)) {\n        return this;\n      }\n    }\n\n    var mutable = quickCopy(this, instantiateEmptyObject(this));\n    mutable[property] = Immutable(value);\n    return makeImmutableObject(mutable);\n  }\n\n  function update(property, updater) {\n    var restArgs = Array.prototype.slice.call(arguments, 2);\n    var initialVal = this[property];\n    return Immutable.set(this, property, updater.apply(initialVal, [initialVal].concat(restArgs)));\n  }\n\n  function getInPath(obj, path) {\n    /*jshint eqnull:true */\n    for (var i = 0, l = path.length; obj != null && i < l; i++) {\n      obj = obj[path[i]];\n    }\n\n    return (i && i == l) ? obj : undefined;\n  }\n\n  function updateIn(path, updater) {\n    var restArgs = Array.prototype.slice.call(arguments, 2);\n    var initialVal = getInPath(this, path);\n\n    return Immutable.setIn(this, path, updater.apply(initialVal, [initialVal].concat(restArgs)));\n  }\n\n  function getIn(path, defaultValue) {\n    var value = getInPath(this, path);\n    return value === undefined ? defaultValue : value;\n  }\n\n  function asMutableObject(opts) {\n    var result = instantiateEmptyObject(this), key;\n\n    if(opts && opts.deep) {\n      for (key in this) {\n        if (this.hasOwnProperty(key)) {\n          result[key] = asDeepMutable(this[key]);\n        }\n      }\n    } else {\n      for (key in this) {\n        if (this.hasOwnProperty(key)) {\n          result[key] = this[key];\n        }\n      }\n    }\n\n    return result;\n  }\n\n  // Creates plain object to be used for cloning\n  function instantiatePlainObject() {\n    return {};\n  }\n\n  // Finalizes an object with immutable methods, freezes it, and returns it.\n  function makeImmutableObject(obj) {\n    if (!globalConfig.use_static) {\n      addPropertyTo(obj, \"merge\", merge);\n      addPropertyTo(obj, \"replace\", objectReplace);\n      addPropertyTo(obj, \"without\", without);\n      addPropertyTo(obj, \"asMutable\", asMutableObject);\n      addPropertyTo(obj, \"set\", objectSet);\n      addPropertyTo(obj, \"setIn\", objectSetIn);\n      addPropertyTo(obj, \"update\", update);\n      addPropertyTo(obj, \"updateIn\", updateIn);\n      addPropertyTo(obj, \"getIn\", getIn);\n    }\n\n    return makeImmutable(obj, mutatingObjectMethods);\n  }\n\n  // Returns true if object is a valid react element\n  // https://github.com/facebook/react/blob/v15.0.1/src/isomorphic/classic/element/ReactElement.js#L326\n  function isReactElement(obj) {\n    return typeof obj === 'object' &&\n           obj !== null &&\n           (obj.$$typeof === REACT_ELEMENT_TYPE_FALLBACK || obj.$$typeof === REACT_ELEMENT_TYPE);\n  }\n\n  function isFileObject(obj) {\n    return typeof File !== 'undefined' &&\n           obj instanceof File;\n  }\n\n  function isBlobObject(obj) {\n    return typeof Blob !== 'undefined' &&\n           obj instanceof Blob;\n  }\n\n  function isPromise(obj) {\n    return typeof obj === 'object' &&\n           typeof obj.then === 'function';\n  }\n\n  function isError(obj) {\n    return obj instanceof Error;\n  }\n\n  function Immutable(obj, options, stackRemaining) {\n    if (isImmutable(obj) || isReactElement(obj) || isFileObject(obj) || isBlobObject(obj) || isError(obj)) {\n      return obj;\n    } else if (isPromise(obj)) {\n      return obj.then(Immutable);\n    } else if (Array.isArray(obj)) {\n      return makeImmutableArray(obj.slice());\n    } else if (obj instanceof Date) {\n      return makeImmutableDate(new Date(obj.getTime()));\n    } else {\n      // Don't freeze the object we were given; make a clone and use that.\n      var prototype = options && options.prototype;\n      var instantiateEmptyObject =\n        (!prototype || prototype === Object.prototype) ?\n          instantiatePlainObject : (function() { return Object.create(prototype); });\n      var clone = instantiateEmptyObject();\n\n      if (\"development\" !== \"production\") {\n        /*jshint eqnull:true */\n        if (stackRemaining == null) {\n          stackRemaining = 64;\n        }\n        if (stackRemaining <= 0) {\n          throw new ImmutableError(\"Attempt to construct Immutable from a deeply nested object was detected.\" +\n            \" Have you tried to wrap an object with circular references (e.g. React element)?\" +\n            \" See https://github.com/rtfeldman/seamless-immutable/wiki/Deeply-nested-object-was-detected for details.\");\n        }\n        stackRemaining -= 1;\n      }\n\n      for (var key in obj) {\n        if (Object.getOwnPropertyDescriptor(obj, key)) {\n          clone[key] = Immutable(obj[key], undefined, stackRemaining);\n        }\n      }\n\n      return makeImmutableObject(clone);\n    }\n  }\n\n  // Wrapper to allow the use of object methods as static methods of Immutable.\n  function toStatic(fn) {\n    function staticWrapper() {\n      var args = [].slice.call(arguments);\n      var self = args.shift();\n      return fn.apply(self, args);\n    }\n\n    return staticWrapper;\n  }\n\n  // Wrapper to allow the use of object methods as static methods of Immutable.\n  // with the additional condition of choosing which function to call depending\n  // if argument is an array or an object.\n  function toStaticObjectOrArray(fnObject, fnArray) {\n    function staticWrapper() {\n      var args = [].slice.call(arguments);\n      var self = args.shift();\n      if (Array.isArray(self)) {\n          return fnArray.apply(self, args);\n      } else {\n          return fnObject.apply(self, args);\n      }\n    }\n\n    return staticWrapper;\n  }\n\n  // Wrapper to allow the use of object methods as static methods of Immutable.\n  // with the additional condition of choosing which function to call depending\n  // if argument is an array or an object or a date.\n  function toStaticObjectOrDateOrArray(fnObject, fnArray, fnDate) {\n    function staticWrapper() {\n      var args = [].slice.call(arguments);\n      var self = args.shift();\n      if (Array.isArray(self)) {\n          return fnArray.apply(self, args);\n      } else if (self instanceof Date) {\n          return fnDate.apply(self, args);\n      } else {\n          return fnObject.apply(self, args);\n      }\n    }\n\n    return staticWrapper;\n  }\n\n  // Export the library\n  Immutable.from           = Immutable;\n  Immutable.isImmutable    = isImmutable;\n  Immutable.ImmutableError = ImmutableError;\n  Immutable.merge          = toStatic(merge);\n  Immutable.replace        = toStatic(objectReplace);\n  Immutable.without        = toStatic(without);\n  Immutable.asMutable      = toStaticObjectOrDateOrArray(asMutableObject, asMutableArray, asMutableDate);\n  Immutable.set            = toStaticObjectOrArray(objectSet, arraySet);\n  Immutable.setIn          = toStaticObjectOrArray(objectSetIn, arraySetIn);\n  Immutable.update         = toStatic(update);\n  Immutable.updateIn       = toStatic(updateIn);\n  Immutable.getIn          = toStatic(getIn);\n  Immutable.flatMap        = toStatic(flatMap);\n  Immutable.asObject       = toStatic(asObject);\n  if (!globalConfig.use_static) {\n      Immutable.static = immutableInit({\n          use_static: true\n      });\n  }\n\n  Object.freeze(Immutable);\n\n  return Immutable;\n}\n\n  var Immutable = immutableInit();\n  /* istanbul ignore if */\n  if (typeof define === 'function' && define.amd) {\n    define(function() {\n      return Immutable;\n    });\n  } else if (typeof module === \"object\") {\n    module.exports = Immutable;\n  } else if (typeof exports === \"object\") {\n    exports.Immutable = Immutable;\n  } else if (typeof window === \"object\") {\n    window.Immutable = Immutable;\n  } else if (typeof global === \"object\") {\n    global.Immutable = Immutable;\n  }\n})();\n"],"sourceRoot":""}