{"version":3,"sources":["webpack:///./src/Helpers/DownloadReport.js","webpack:///./src/Components/SmartComponents/Modals/BaseModal.js","webpack:///./src/Components/SmartComponents/InsightsSystemRule/InsightsSystemRule.js","webpack:///./src/Helpers/CVEHelper.js","webpack:///./src/Helpers/selectAllCheckboxHelper.js","webpack:///./node_modules/lodash/union.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/SearchFilter.js","webpack:///./src/Helpers/TableToolbarHelper.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/SecurityRuleFilter.js","webpack:///./node_modules/lodash/unionWith.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/StatusFilter.js","webpack:///./src/Store/Reducers/InventoryEntitiesReducer.js","webpack:///./src/Components/SmartComponents/Modals/BusinessRiskModal.js","webpack:///./src/Components/SmartComponents/Modals/CveStatusModal.js","webpack:///./src/Components/SmartComponents/Modals/CvePairStatusModal.js","webpack:///./src/Components/SmartComponents/Remediation/Remediation.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsDescription/CVEPageDetailsDescription.scss?4f52","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsDescription/CVEPageDetailsDescription.scss","webpack:///./src/Components/PresentationalComponents/CVEInfoBox/CVEInfoBox.scss?9c01","webpack:///./src/Components/PresentationalComponents/CVEInfoBox/CVEInfoBox.scss","webpack:///./src/Components/PresentationalComponents/CvssVector/CvssVector.scss?e372","webpack:///./src/Components/PresentationalComponents/CvssVector/CvssVector.scss","webpack:///./src/Components/PresentationalComponents/CSAwRuleBox/CSAwRuleBox.scss?7556","webpack:///./src/Components/PresentationalComponents/CSAwRuleBox/CSAwRuleBox.scss","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsDescription/SnippetWithHeaderAndTooltip.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsDescription/CVEPageDetailsDescription.js","webpack:///./src/Components/PresentationalComponents/WithLoader/WithLoader.js","webpack:///./src/Components/PresentationalComponents/CVEInfoBox/CVEInfoBox.js","webpack:///./src/Components/PresentationalComponents/CvssVector/vectorNames.js","webpack:///./src/Components/PresentationalComponents/CvssVector/CvssVector.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsSeverity/CVEPageDetailsSeverity.js","webpack:///./src/Components/PresentationalComponents/CSAwRuleBox/CSAwRuleBox.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetails/CVEPageDetails.js","webpack:///./src/Components/PresentationalComponents/DownloadReportKebab/BaseKebab.js","webpack:///./src/Components/PresentationalComponents/DownloadReportKebab/KebabItems.js","webpack:///./src/Components/SmartComponents/SystemsExposedTable/SystemsExposedTable.js","webpack:///./src/Components/SmartComponents/CVEDetailsPage/CVEDetailsPage.js","webpack:///./node_modules/dot/doT.js","webpack:///./src/Store/ActionTypes.js","webpack:///./src/Helpers/MiscHelper.js","webpack:///./src/Utilities/interceptors.js","webpack:///./src/Helpers/APIHelper.js","webpack:///./src/Store/Reducers/BreadcrumbStore.js","webpack:///./src/Store/Reducers/CVEDetailsPageStore.js","webpack:///./src/Store/Reducers/SystemCvesStore.js","webpack:///./src/Store/Reducers/SystemsPageStore.js","webpack:///./src/Store/Reducers/CVEsStore.js","webpack:///./src/Store/Actions/Actions.js","webpack:///./node_modules/seamless-immutable/seamless-immutable.development.js"],"names":["filename","page","params","cve","defaultParams","date","checkTypes","fetchData","format","pages","includes","formats","exec","a","Array","isArray","data_format","payload","response","data","JSON","stringify","downloadFile","this","page_size","Number","MAX_SAFE_INTEGER","Date","toISOString","replace","split","useStatusSelect","initialValue","useState","statusId","setStatusId","props","setProps","StatusSelect","label","messages","statusLabel","fieldId","aria-label","onChange","selection","value","STATUS_OPTIONS","map","key","useJustificationInput","justification","setJustification","JustificationInput","justificationLabel","type","resizeOrientation","BaseModal","items","title","onSave","onSuccessNotification","targetItems","setTargetItems","handleClose","undefined","useEffect","clearNotifications","Fragment","variant","isOpen","Boolean","onClose","actions","onClick","then","notification","addNotification","save","cancel","children","propTypes","any","func","array","updateRef","string","object","connect","dispatch","InsightsSystemRule","rule","TextContent","className","Text","component","TextVariants","h3","style","paddingLeft","Label","Tooltip","content","rulesIconTooltip","CSAwIcon","description","rule_id","InsightsReportCard","report","PropType","shape","details","resulotion","isRequired","InsightsNoSystemRule","p","exposedSystemNoRules","values","exposedSystemNoRulesInfo","target","rel","href","exposedSystemNoRulesInfoLink","createExposedSystemsTable","isLoading","openedRows","meta","cvesCount","length","item","attributes","id","status","status_name","createCveDetailsPage","cves","error","asMutable","impact","public_date","processDate","synopsis","rh_link","RHDBLink","mitre_link","createMitreLink","cvss3_score","cvss2_score","cvss2_metrics","cvss3_metrics","business_risk","BUSINESS_RISK_OPTIONS","find","option","business_risk_id","toString","business_risk_justification","business_risk_text","status_id","status_justification","status_text","systems_status_detail","systems_status_divergent","rules","MITRELink","cveTableRowActions","methods","rowIndex","editBusinessRisk","event","rowId","rowData","showBusinessRiskModal","editStatus","showStatusModal","systemCveTableRowActions","entity","display_name","cve_status_id","cve_justification","cve_status_justification","systemExposedTableRowActions","systemTableRowActions","optOut","isOptOut","kebabResumeAnalysis","kebabExcludeAnalysis","selectAllCheckbox","selectedItems","selectorHandler","fetchResource","multiRow","selectedItemsArray","from","selectedItemsCount","selectPageNumber","handleUnselectAll","handleSelectAll","total_items","handleOnCheckboxChange","intl","formatMessage","selectNone","selectPage","count","collectedItems","union","filter","selectAll","baseFlatten","baseRest","baseUniq","isArrayLikeObject","arrays","module","exports","SearchFilter","placeholder","search","apply","React","searchValue","setSearchValue","debounce","handleSearch","conditionalFilterType","text","filterValues","handleChangePage","_event","handleSetPageSize","perPage","exportConfig","onSelect","fileType","downloadReport","buildActiveFilters","currentFilters","filterRulevalues","buildChip","parameter","FILTERS","reduce","name","filteredRule","buildChips","paramValues","push","filterChips","Object","keys","multiValue","filteredValues","category","chips","searchLabel","removeFilters","obj","some","chip","join","securityRuleFilter","currentFilter","dynamicFilters","currentValue","security_rule","filterBySecurityRule","securityRules","radio","urlParam","unionWith","SECURITY_RULE_OPTIONS","isEqual","last","comparator","statusFilter","filterByStatus","checkbox","initialState","columns","rows","entities","selectedRows","modifyInventory","state","loaded","lastSeenColumn","transforms","sortable","selected","system","selectEntities","myRows","slice","inventoryEntitiesReducer","action","row","BusinessRiskModal","cveList","businessRiskId","setBusinessRiskId","setLabel","getDefaultLabel","useCallback","handleOnRadioChange","_","currentTarget","successNotification","businessRiskUpdateSuccessful","setBusinessRisk","parseInt","businessRiskModalTitle","hasGutter","businessRiskModalInfo","businessRiskLabel","isChecked","injectIntl","CveStatusModal","checkboxState","setCheckboxState","cveStatusModalUpdateSuccessful","cveStatusModalTitle","cveIds","setCveStatus","setSystemCveStatus","cveStatusModalSelected","cveId","b","chunks","fontSize","color","cveStatusModalInfo","trigger","cveStatusModalInfoTooltip","verticalAlign","cveStatusModalOverwriteCheckbox","checked","cveStatusModalOverwriteTooltip","CvePairStatusModal","inventories","hasDifferentStatus","inventoryList","getCveJustification","setJustificationProps","haveSameStatuses","every","val","i","arr","inventory","getDefaultCheckboxState","getCveStatus","getDefaultStatus","setSelectProps","inventoryIds","inventoryNames","isDisabled","disabled","cvePairStatusModalUpdateSuccessful","modalTitle","cvePairStatusModalTitle","setStatusParams","inventory_id","isInline","cvePairStatusModalAlert","cvePairStatusModalSelected","cveCount","systemCount","systemName","cvePairStatusModalUseOverallCheckbox","cvePairStatusModalUseOverallTooltip","bool","Remediation","remediationProvider","systems","concat","issues","nextProps","dispatchNotification","dataProvider","onRemediationCreated","result","getNotification","size","globalBackgroundColor100","remediateLabel","Component","oneOfType","routerParams","options","transform","locals","SnippetWithHeaderAndPopover","Popover","bodyContent","headerContent","position","Stack","display","cursor","StackItem","CVEPageDetailsDescription","cveAttributes","publishDate","link","businessRisk","businessRiskJustification","statusJustification","systemsStatusDetail","systemsStatusDivergent","detailRows","brPopoverContent","StyledText","fontWeight","StyledConstants","fontWeights","bold","fontSizes","sm","lineHeight","lineHeights","justificationNote","statusPopoverContent","cveStatus","marginTop","semi_bold","cvePageDetailsSystemsWTCves","Table","borders","gridBreakPoint","cells","Split","SplitItem","StyledBox","marginBottom","WithLoader","loading","Spinner","centered","Skeleton","SkeletonSize","lg","CVEPageOverviewItemLoader","height","width","x","y","rx","ry","TrendBoxLoader","CurrentVulnerabilitiesItemLoader","speed","primaryColor","secondaryColor","cx","cy","r","CVEInfoBox","CVEPageContext","Consumer","context","titleColor","Bullseye","titleContent","isFilled","h6","descriptionTitle","descriptionContent","V3names","AV","vectorNamesV3AV","N","vectorValuesNetwork","A","vectorValuesAdjacent","L","vectorValuesLocal","P","vectorValuesPhysical","AC","vectorNamesV3AC","vectorValuesLow","H","vectorValuesHigh","PR","vectorNamesV3PR","vectorValuesNone","UI","vectorNamesV3UI","R","vectorValuesRequired","S","vectorNamesV3S","U","vectorValuesUnchanged","C","vectorValuesChanged","vectorNamesV3C","I","vectorNamesV3I","vectorNamesV3A","CVSS","vectorNamesCvssVersion","V2names","vectorNamesV2AV","vectorValuesAdjacentNetwork","vectorNamesV2AC","Au","vectorNamesV2AU","M","vectorValuesMultiple","vectorValuesSingle","vectorNamesV2C","vectorValuesComplete","vectorValuesPartial","vectorNamesV2I","vectorNamesV2A","CvssVector","CVSS2Vector","CVSS3Vector","cvssVer","cvssVector","parsedVector","vector","namesMapping","res","forEach","curr","parseVector","cvssVersion","maxWidth","enableFlip","cvssVectorPopoverTitle","TableVariant","compact","cvssVectorMetric","cvssVectorValue","entries","cvssVectorVectorString","learnMorePopover","cveDetails","cvePageSeverityDetailsImpact","footerContent","cvePageSeverityDetailsLearnMoreRatings","cvePageSeverityDetailsLearnMore","CVEPageDetailsSeverity","getImpactDetails","parseCvssScore","cvePageSeverityDetailsBaseScore","defaultProps","CSAwRuleBox","changeExposedSystemsParameters","numberOfCards","setNumberOfCards","ruleCards","Card","CardBody","Grid","GridItem","span","CSAwRuleSummary","summary","h4","associatedCves","current","associated_cves","_i","CVES_PATH","prev","kbase_node_id","RH_KB_URL","knowledgebaseArticle","ruleId","to","filterByAffectedSystems","remediationLabel","ansibleRemediation","playbook_count","yes","ansibleRemediationTooltip","no","riskOfChange","RISK_OF_CHANGE_LABEL","change_risk","RISK_OF_CHANGE_TOOLTIP","reboot_required","Reboot","red","Button","viewMoreScurityRules","PropTypes","CVEPageDetails","md","BaseKebab","dropdownItems","setOpen","Dropdown","toggle","KebabToggle","onToggle","kebabState","isPlain","kebabItemEditBusinessRisk","DropdownItem","kebabEditBusinessRisk","kebabItemEditStatus","kebabEditStatus","SystemsExposedTable","InventoryTable","setInventoryTable","StatusModal","setStatusModal","selectedHosts","setSelectedHosts","urlParamsAllowed","setUrlParamsAllowed","isFirstMount","setIsFirstMount","createRef","useDispatch","useCreateUrlParams","SYSTEMS_EXPOSED_ALLOWED_PARAMS","createUrlParams","urlParameters","affectedSystems","useSelector","CVEDetailsPageStore","affectedSystemsByCVE","parameters","metadata","useMemo","config","inventoryRefresh","pageSize","per_page","sort","onRefreshData","handleSelect","middlewareListener","addNew","on","callback","newSelected","fetchAffectedSystemsByCVE","selectMultipleEntities","loadInventory","insights","ReactRedux","react","reactRouterDom","pfReactTable","PfTable","TableBody","TableHeader","TableGridBreakpoint","cellWidth","expandable","SortByDirection","pfReact","reactCore","inventoryConnector","mergeWithEntities","mergeWithDetail","ReducerRegistry","register","SYSTEMS_EXPOSED_HEADER","getStore","clearCveStore","clearInventoryStore","fetchCveDetails","kebabOptions","cveStatusDetails","displayName","getSelectedSystemsLabel","selectOptions","ops","fetchAffectedSystemsIdsByCve","h2","systemsExposedTableHeader","tableProps","canSelectAll","onSort","index","direction","handleSortColumn","SYSTEMS_EXPOSED_SORTING_HEADER","sortBy","createSortBy","actionResolver","ref","onRefresh","total","isLoaded","hasCheckbox","showActions","DownloadReport","onExpandClick","_e","expandRow","actionsConfig","kebabToggleProps","activeFiltersConfig","filters","filterRuleValues","onDelete","e","bulkSelect","filterConfig","searchFilter","systemsSearchName","searchFilterByName","withRouter","createContext","CVEDetailsPage","match","cveName","BusinessModal","setHeader","breadcrumbs","PATHS","home","cvesPage","isActive","kebabItems","open","VulnerabilityHeader","InvalidObject","Page","Provider","justifyContent","DropdownPosition","right","Main","handleCveDetailsError","_globals","doT","version","templateSettings","evaluate","interpolate","encode","use","useParams","define","defineParams","conditional","iterate","varname","strip","append","selfcontained","doNotSkipEncoded","template","compile","log","encodeHTMLSource","encodeHTMLRules","matchHTML","code","m","eval","startend","start","end","startencode","skip","unescape","tmpl","c","def","needhtmlencode","indv","cse","sid","str","resolveDefs","block","assign","indexOf","substring","param","v","arg","Function","s","d","rw","__exp","RegExp","elsecase","vname","iname","_encodeHTML","console","FETCH_CVE_LIST","FETCH_CVE_DETAILS","FETCH_SYSTEM_DETAILS","FETCH_AFFECTED_SYSTEMS_BY_CVE","FETCH_SYSTEMS","SET_HEADER","SYSTEM_OPT_OUT","FETCH_SYSTEM_CVE_LIST","CHANGE_SYSTEM_CVE_STATUS","CHANGE_EXPOSED_SYSTEMS_PARAMETERS","CHANGE_CVE_LIST_PARAMETERS","SELECT_CVE","SELECT_SYSTEM_CVE","SELECT_ENTITIES","SELECT_MULTIPLE_ENTITIES","EXPAND_CVE","EXPAND_ROW","EXPAND_SYSTEM_CVE","CHANGE_SYSTEMS_PARAMS","CHANGE_SYSTEM_CVE_LIST_PARAMETERS","CLEAR_SYSTEMS_STORE","CLEAR_SYSTEM_CVES_STORE","CLEAR_CVE_STORE","CLEAR_INVENTORY_STORE","CLEAR_CVES_STORE","FETCH_AFFECTED_SYSTEM_IDS_BY_CVE","FETCH_SYSTEMS_IDS","FETCH_CVE_LIST_IDS","FETCH_SYTEM_DETAILS_IDS","dataShape","constructParameters","apiProps","allowedParams","constructURLParameters","urlParams","formatDate","prepend","number","toFormat","isNaN","year","getFullYear","month","getMonth","day","getDate","constructFilterParameters","filterParams","prototype","hasOwnProperty","call","cvssEntry","CVSS_OPTIONS","cvss_filter","parseFloat","cvss_from","cvss_to","publicEntry","PUBLIC_DATE_OPTIONS","publish_date","public_from","public_to","impactList","impactColorList","unknown","header","desc","asc","findIndex","currentSort","columnName","useDefault","substr","window","history","pushState","location","pathname","qs","parse","instance","axios","create","interceptors","request","authInterceptor","responseDataInterceptor","interceptor401","ReadOnlyNotification","err","isCancel","errObject","errors","api","GitApi","getCveDetails","getSystemDetails","getAffectedSystemsByCVE","parameterArray","getAffectedSystemsByCve","getSystems","getSystemsList","getCveListByAccount","getCveList","optOutSystem","setSystemOptOut","getCveListBySystem","setStatus","optOutSystems","opt_out","setSystemsOptOut","setCveBusinessRisk","getExecutiveReport","getAffectedSystemsIdsByCve","getSystemsIds","getCveIdsList","getCveIdsBySystem","Immutable","openedCves","selectedCves","expandCveDescription","SystemCvesStore","applyReducerHash","timestamp","newState","splice","element","limit","offet","show_all","isValid","stateTimestamp","actionTimestamp","ActionTypes","setIn","CVEsStore","SystemsPageStore","BreadcrumbStore","set","Promise","resolve","HeaderHelper","APIHelper","fetchSystems","fetchSystemDetails","noError","fetchCveListByAccount","optOutSystemAction","fetchCveListBySystem","optOutSystemsAction","changeCveListParameters","changeSystemCVEsParameters","selectCve","expandCve","selectSystemCve","expandSystemCve","changeSystemsParams","clearSystemStore","clearSystemCvesStore","fetchSystemsIds","fetchCvesIds","fetchSystemDetailsIds","clearCVEsStore","immutableInit","REACT_ELEMENT_TYPE","Symbol","for","globalConfig","use_static","instantiateEmptyObject","getPrototypeOf","addPropertyTo","methodName","defineProperty","enumerable","configurable","writable","banProperty","ImmutableError","isImmutable","getOwnPropertyDescriptor","isMergableObject","mutatingObjectMethods","mutatingArrayMethods","nonMutatingArrayMethods","mutatingDateMethods","message","stack","Error","makeImmutable","bannedMethods","freeze","makeMethodReturnImmutable","currentMethod","arguments","arraySet","idx","deep","merge","mode","mutable","asMutableArray","makeImmutableArray","constructor","immutableEmptyArray","arraySetIn","pth","head","newValue","tail","thisHead","nextHead","isFinite","objectSetIn","immutableEmptyObject","flatMap","asObject","update","updateIn","getIn","asMutableDate","getTime","iterator","iteratorResult","without","remove","keysToRemoveArray","el","makeImmutableObject","opts","asDeepMutable","pair","quickCopy","src","dest","other","TypeError","receivedArray","merger","addToResult","currentObj","otherObj","immutableValue","mergerResult","clearDroppedKeys","otherFromArray","objectReplace","fnObject","fnArray","fnDate","path","objectSet","property","updater","restArgs","initialVal","getInPath","l","defaultValue","asMutableObject","instantiatePlainObject","stackRemaining","$$typeof","isReactElement","File","isFileObject","Blob","isBlobObject","isError","isPromise","clone","toStatic","fn","args","self","shift","toStaticObjectOrArray","static"],"mappings":"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","file":"js/CVEDetailsPage.js","sourcesContent":["import { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\n\nclass DownloadReport  {\n    constructor() {\n        this.defaultParams = {\n            page: 1,\n            page_size: Number.MAX_SAFE_INTEGER,\n            date: new Date().toISOString().replace(/[T:]/g, '-').split('.')[0] + '-utc'\n        };\n\n        this.params = {\n            cve: ''\n        };\n\n        this.pages = ['systems-exposed', 'system-cves', 'cves', 'system-list'];\n        this.formats = ['csv', 'json'];\n    }\n\n    filename = (page) => {\n        switch (page) {\n            case 'systems-exposed':\n                return `vulnerability_systems-exposed-${this.params.cve}--${this.defaultParams.date}`;\n            case 'system-list':\n                return `vulnerability_systems--${this.defaultParams.date}`;\n            default:\n                return `vulnerability_cves--${this.defaultParams.date}`;\n\n        }\n    }\n\n    checkTypes = (fetchData, page, format) => {\n        if (typeof fetchData !== 'function') {\n            throw `exec expects the 1st param to be funtion. Received ${typeof fetchData}`;\n        }\n\n        if (!this.pages.includes(page)) {\n            throw `Page ${page} does not exist`;\n        }\n\n        if (!this.formats.includes(format)) {\n            throw `Format ${format} is not supported`;\n        }\n    }\n\n    /**\n     * Execute and download the report\n     *\n     * @param {Function} fetchData - Function to be called in order to fetch data.\n     * @param {Object || Array} params - Object to be sent as request params. If you need to pass extra argument, pass an array.\n     * @param {String} format - Supported formats to download are CSV and JSON.\n     * @param {String} page - Name of the page based on which the filename will be determined.\n     * @returns {void}\n     */\n    exec = async (fetchData, params, format, page) => {\n        this.checkTypes(fetchData, page, format);\n        this.params.cve = Array.isArray(params) ? params[0] : '';\n\n        try {\n            let { payload } = Array.isArray(params)\n                ? await fetchData(this.params.cve, {\n                    ...params[1],\n                    ...this.defaultParams,\n                    data_format: format\n                }) :\n                await fetchData({\n                    ...params,\n                    ...this.defaultParams,\n                    data_format: format\n                });\n\n            let { data: response } = await payload;\n            let data = format === 'json' ? JSON.stringify(response) : response;\n            // downaloads the files\n            downloadFile(data, this.filename(page), format);\n        } catch (error) {\n            throw `${error}`;\n        }\n\n    }\n\n}\n\nexport default new DownloadReport();\n","import { Button, FormGroup, FormSelect, FormSelectOption, Modal, TextArea } from '@patternfly/react-core';\nimport {\n    addNotification,\n    clearNotifications\n} from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\nimport propTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { STATUS_OPTIONS } from '../../../Helpers/constants';\nimport messages from '../../../Messages';\nimport { FormattedMessage } from 'react-intl';\n\nexport function useStatusSelect(initialValue) {\n    const [statusId, setStatusId] = useState(initialValue);\n    const [props, setProps] = useState({});\n    const StatusSelect = (\n        <FormGroup label={<FormattedMessage {...messages.statusLabel} />} fieldId={'statusId'}>\n            <FormSelect aria-label=\"Select Input\" onChange={selection => setStatusId(selection)} value={statusId} {...props}>\n                {STATUS_OPTIONS.map(({ value, label }) => (\n                    <FormSelectOption key={value} value={value} label={label} />\n                ))}\n            </FormSelect>\n        </FormGroup>\n    );\n    return { StatusSelect, statusId, setStatusId, setProps };\n}\n\nexport function useJustificationInput(initialValue) {\n    const [justification, setJustification] = useState(initialValue);\n    const [props, setProps] = useState({});\n    const JustificationInput = (\n        <FormGroup label={<FormattedMessage {...messages.justificationLabel} />} fieldId={'label'}>\n            <TextArea\n                key=\"input\"\n                type=\"text\"\n                onChange={value => setJustification(value)}\n                value={justification}\n                resizeOrientation='vertical'\n                aria-label={'justification note'}\n                {...props}\n            />\n        </FormGroup>\n    );\n    return { JustificationInput, justification, setJustification, setProps };\n}\n\nexport const BaseModal = ({ items, title, onSave, onSuccessNotification, ...props }) => {\n    const [targetItems, setTargetItems] = useState(items);\n\n    const createNotification = notification => {\n        return props.addNotification(notification);\n    };\n\n    const handleClose = () => {\n        setTargetItems(undefined);\n    };\n\n    const handleSave = () => {\n        onSave().then(() => createNotification(onSuccessNotification));\n        handleClose();\n    };\n\n    useEffect(() => {\n        return () => {\n            props.clearNotifications();\n        };\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Modal\n                variant=\"small\"\n                title={title}\n                isOpen={Boolean(targetItems)}\n                onClose={handleClose}\n                actions={[\n                    <Button key=\"save\" variant=\"primary\" onClick={handleSave}>\n                        {<FormattedMessage {...messages.save} />}\n                    </Button>,\n                    <Button key=\"cancel\" variant=\"secondary\" onClick={handleClose}>\n                        {<FormattedMessage {...messages.cancel} />}\n                    </Button>\n                ]}\n            >\n                {props.children}\n            </Modal>\n        </React.Fragment>\n    );\n};\n\nBaseModal.propTypes = {\n    children: propTypes.any,\n    onClose: propTypes.func,\n    items: propTypes.array,\n    updateRef: propTypes.func,\n    addNotification: propTypes.func,\n    title: propTypes.string,\n    onSave: propTypes.func,\n    onSuccessNotification: propTypes.object,\n    clearNotifications: propTypes.func\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addNotification: data => dispatch(addNotification(data)),\n        clearNotifications: () => dispatch(clearNotifications())\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(BaseModal);\n","import React, { Fragment } from 'react';\nimport { Text, TextContent, TextVariants, Tooltip } from '@patternfly/react-core';\nimport PropType from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport InsightsReportCard from '@redhat-cloud-services/frontend-components-inventory-insights/esm/InsightsReportCard';\nimport { CSAwIcon } from '../../PresentationalComponents/CSAwIcon/CSAwIcon';\nimport Label from '../../PresentationalComponents/Snippets/Label';\nimport messages from '../../../Messages';\n\nexport const InsightsSystemRule = ({ rule, cve }) => {\n    return (\n        <Fragment>\n            { !rule ? <InsightsNoSystemRule cve={cve}/> :\n                <Fragment>\n                    <TextContent className=\"icon-with-label\">\n                        <Text component={TextVariants.h3} style={{ paddingLeft: 'var(--pf-global--spacer--lg)' }}>\n                            <Label>\n                                <Tooltip content={<FormattedMessage {...messages.rulesIconTooltip} />}>\n                                    <CSAwIcon />\n                                </Tooltip>\n                            </Label>\n                            <span className=\"rule-name\">{rule.rule.description || rule.rule.rule_id}</span>\n                        </Text>\n                    </TextContent>\n\n                    <InsightsReportCard report={rule} />\n                </Fragment>\n            }\n        </Fragment>\n\n    );\n};\n\nInsightsSystemRule.propTypes = {\n    rule: PropType.shape({\n        rule: PropType.object,\n        details: PropType.object,\n        resulotion: PropType.object\n    }).isRequired,\n    cve: PropType.string\n};\n\nexport const InsightsNoSystemRule = ({ cve }) => {\n    return (\n        <TextContent className=\"icon-with-label\">\n            <Text component={TextVariants.p}>\n                <FormattedMessage {...messages.exposedSystemNoRules} values={{ cve }} />\n            </Text>\n            <Text component={TextVariants.p} className=\"pf-u-mb-sm\">\n                <FormattedMessage {...messages.exposedSystemNoRulesInfo}/> <CSAwIcon/>\n            </Text>\n            <Text\n                component={TextVariants.a}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://access.redhat.com/articles/2968471\"\n            >\n                <FormattedMessage {...messages.exposedSystemNoRulesInfoLink} />\n            </Text>\n        </TextContent>\n    );\n};\n\nInsightsNoSystemRule.propTypes = {\n    cve: PropType.string\n};\n","import { Tooltip } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon, ServerAltIcon } from '@patternfly/react-icons';\nimport { processDate } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport React from 'react';\nimport { BUSINESS_RISK_OPTIONS, STATUS_OPTIONS } from './constants';\nimport { FormattedMessage } from 'react-intl';\nimport { InsightsSystemRule, InsightsNoSystemRule } from '../Components/SmartComponents/InsightsSystemRule/InsightsSystemRule';\nimport messages from '../Messages';\n\n/**\n * Creates the tables rows for systems exposed table\n *\n * @param {Boolean} isLoading\n * @param {Array} payload fetched data\n * @param {Array} openedRows id of opened(expaned) row\n *\n */\nexport const createExposedSystemsTable = ({ isLoading, payload, openedRows, cve }) => {\n    if (isLoading) {\n        return { data: (payload && payload.data) || [], meta: {}, isLoading };\n    }\n\n    let { data, meta } = payload;\n    const cvesCount = data && data.length;\n    const tableRows = data.map(item => ({\n        ...item.attributes,\n        id: item.id,\n        isOpen: openedRows.includes(item.id),\n        status: item.attributes.status_name,\n        children: item.attributes.rule\n            ? <InsightsSystemRule cve={cve} rule={item.attributes.rule} />\n            : <InsightsNoSystemRule cve={cve}/>\n    }));\n\n    return { data: tableRows, meta: { ...meta, cvesCount },  isLoading };\n\n};\n\nexport function createSystemsListTable(affectedSystems) {\n    let isLoading = affectedSystems.isLoading;\n    if (!isLoading) {\n        let payload = affectedSystems.payload.asMutable();\n        let { data, meta } = payload;\n        const dataWithStatus = data.map(item => ({\n            ...item,\n            attributes: {\n                ...item.attributes,\n                status: (\n                    <span>\n                        {item.attributes.cve_status_id !== item.attributes.status_id ? (\n                            <Tooltip content={<FormattedMessage {...messages.onlyThisSystemCvePair} />}>\n                                <ServerAltIcon />\n                            </Tooltip>\n                        ) : (\n                            ''\n                        )}{' '}\n                        {item.attributes.status_id !== undefined &&\n                            STATUS_OPTIONS.find(option => parseInt(option.value) === item.attributes.status_id).label}\n                    </span>\n                )\n            }\n        }));\n        return { data: dataWithStatus, meta, isLoading };\n    }\n\n    return { data: (affectedSystems.payload && affectedSystems.payload.data) || [], meta: {}, isLoading };\n}\n\nexport function createCveDetailsPage(cves) {\n    let isLoading = cves.isLoading;\n    let error = cves.error;\n    if (!isLoading && !error) {\n        let payload = cves.payload.asMutable();\n        let { data, meta } = payload;\n\n        data = {\n            impact: data.attributes.impact,\n            public_date: processDate(data.attributes.public_date),\n            description: data.attributes.description,\n            synopsis: data.attributes.synopsis,\n            rh_link: createRHDBLink(data.attributes.synopsis),\n            mitre_link: createMitreLink(data.attributes.synopsis),\n            cvss3_score: data.attributes.cvss3_score,\n            cvss2_score: data.attributes.cvss2_score,\n            cvss2_metrics: data.attributes.cvss2_metrics,\n            cvss3_metrics: data.attributes.cvss3_metrics,\n            business_risk: BUSINESS_RISK_OPTIONS.find(\n                option => option.value === data.attributes.business_risk_id.toString()\n            ).label,\n            business_risk_justification: data.attributes.business_risk_text,\n            business_risk_id: data.attributes.business_risk_id,\n            status: STATUS_OPTIONS.find(option => option.value === data.attributes.status_id.toString()).label,\n            status_id: data.attributes.status_id,\n            status_justification: data.attributes.status_text,\n            systems_status_detail: data.attributes.systems_status_detail,\n            systems_status_divergent: data.attributes.systems_status_divergent,\n            rules: data.attributes.rules\n        };\n\n        return { data, meta, isLoading };\n    }\n\n    return { data: [], meta: {}, isLoading, error };\n}\n\nexport function createRHDBLink(item) {\n    return (\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href={'https://access.redhat.com/security/cve/' + item}>\n            {<FormattedMessage {...messages.RHDBLink} />}{<ExternalLinkAltIcon className=\"pf-u-ml-sm\"/>}\n        </a>\n    );\n}\n\nexport function createMitreLink(item) {\n    return (\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href={'https://cve.mitre.org/cgi-bin/cvename.cgi?name=' + item}>\n            {<FormattedMessage {...messages.MITRELink} />}{<ExternalLinkAltIcon />}\n        </a>\n    );\n}\n\nexport const cveTableRowActions = (methods, rowIndex) => {\n    return (rowIndex % 2 === 0) ?\n        [\n            {\n                title: <FormattedMessage {...messages.editBusinessRisk} />,\n                onClick: (event, rowId, rowData) =>\n                    methods.showBusinessRiskModal([\n                        {\n                            id: rowData.id,\n                            business_risk_id: rowData.business_risk_id,\n                            justification: rowData.business_risk_justification\n                        }\n                    ])\n            },\n            {\n                title: <FormattedMessage {...messages.editStatus} />,\n                onClick: (event, rowId, rowData) =>\n                    methods.showStatusModal([\n                        {\n                            id: rowData.id,\n                            status_id: rowData.status_id,\n                            justification: rowData.status_justification\n                        }\n                    ])\n            }\n        ] : null;\n};\n\nexport const systemCveTableRowActions = (methods, entity, rowIndex) => {\n    return (rowIndex % 2 === 0) ?\n        [{\n            title: <FormattedMessage {...messages.editStatus} />,\n            onClick: (event, rowId, rowData) =>\n                methods.showStatusModal([\n                    {\n                        id: rowData.id,\n                        display_name: entity.display_name,\n                        status_id: rowData.status_id,\n                        cve_status_id: rowData.cve_status_id,\n                        justification: rowData.status_justification,\n                        cve_justification: rowData.cve_status_justification\n                    }\n                ],\n                entity\n                )\n        }] : null;\n};\n\nexport const systemExposedTableRowActions = (showStatusModal, cve, rowIndex) => {\n    return (rowIndex % 2 === 0) ?\n        [{\n            title: <FormattedMessage {...messages.editStatus} />,\n            onClick: (event, rowId, rowData) => {\n                showStatusModal(\n                    [{\n                        id: cve.id,\n                        status_id: cve.status_id,\n                        justification: cve.justification\n                    }],\n                    [{\n                        id: rowData.id,\n                        display_name: rowData.display_name,\n                        status_id: rowData.status_id,\n                        justification: rowData.status_text\n                    }]\n                );\n            }\n        }] : null;\n};\n\nexport const systemTableRowActions = (optOut, isOptOut) => [\n    {\n        title: (\n            isOptOut\n                ? <FormattedMessage {...messages.kebabResumeAnalysis} />\n                : <FormattedMessage {...messages.kebabExcludeAnalysis} />\n        ),\n        onClick: (event, rowId, rowData) => {\n            optOut([rowData.id]);\n        }\n    }\n];\n","import union from 'lodash/union';\nimport messages from '../Messages';\nimport { intl } from '../Utilities/IntlProvider';\n\nconst selectAllCheckbox = ({ selectedItems, selectorHandler, items, fetchResource, multiRow = false }) => {\n\n    const selectedItemsArray = Array.from(selectedItems); // we might get array or set and there's no common method for size\n    const selectedItemsCount = selectedItemsArray && selectedItemsArray.length;\n    const { meta, data } = items;\n    const selectPageNumber = data && (((Array.isArray(data) && data.length) && multiRow) ? data.length / 2 : data.length);\n\n    const handleSelectPage = () => {\n        const { data } = items;\n        const collectedItems = union(data.filter(item => item.id).map(item => item.id), selectedItemsArray);\n        selectorHandler(true, collectedItems);\n    };\n\n    const handleUnselectAll = () => {\n        selectorHandler(false, []);\n    };\n\n    const handleSelectAll = () => {\n\n        let { payload } = fetchResource && fetchResource({ page_size: meta.total_items, page: 1 });\n        payload &&\n            payload.then(({ data: response }) => {\n                //TODO: current only one new endpoint is introduced. Once, we have all new endpoints,  get rid of this map\n                const items = response.map(item => item.id && item.id || item);\n                selectorHandler(true, items);\n            });\n    };\n\n    const handleOnCheckboxChange = () => {\n        if (selectedItemsCount === 0) {\n            handleSelectAll();\n        } else {\n            handleUnselectAll();\n        }\n    };\n\n    return ({\n        handleOnCheckboxChange,\n        items: [\n            {\n                title: intl.formatMessage(messages.selectNone),\n                onClick: handleUnselectAll\n            },\n            {\n                title: `${intl.formatMessage(messages.selectPage, { count: selectPageNumber })}`,\n                onClick: handleSelectPage\n            },\n            {\n                title: `${intl.formatMessage(messages.selectAll, { count: meta.total_items ? meta.total_items : 0 })}`,\n                onClick: handleSelectAll\n            }\n        ]\n    }\n\n    );\n};\n\nexport default selectAllCheckbox;\n","var baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    baseUniq = require('./_baseUniq'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array of unique values, in order, from all given arrays using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.union([2], [1, 2]);\n * // => [2, 1]\n */\nvar union = baseRest(function(arrays) {\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n});\n\nmodule.exports = union;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components';\nimport { intl } from '../../../../Utilities/IntlProvider';\n\nimport debounce from 'lodash/debounce';\nimport React from 'react';\n\nconst SearchFilter = (label, placeholder, search, apply) => {\n    const [searchValue, setSearchValue] = React.useState();\n    const [handleSearch] = React.useState(() =>\n        debounce(filter =>  {if (filter !== undefined) { apply({ filter, page: 1 }); }}, 400)\n    );\n\n    React.useEffect(() => setSearchValue(search), [search]);\n\n    return {\n        type: conditionalFilterType.text,\n        label: intl.formatMessage(label),\n        filterValues: {\n            'aria-label': 'search-field',\n            id: `search-${label.id}`,\n            onChange: (event, value) => {\n                setSearchValue(value);\n                handleSearch(value);\n            },\n            placeholder: intl.formatMessage(placeholder),\n            value: searchValue\n        }\n    };\n};\n\nexport default SearchFilter;\n","import messages from '../Messages';\nimport { FILTERS } from './constants';\nimport { intl } from '../Utilities/IntlProvider';\n\nexport const handleChangePage = (_event, page, apply) => apply({ page });\n\nexport const handleSetPageSize = (_event, perPage, apply) => apply({ page_size: perPage, page: 1 });\n\nexport const exportConfig = (methods) => (\n    { onSelect: (_event, fileType) =>   methods.downloadReport(fileType) }\n);\n\nexport const buildActiveFilters = (currentFilters, filterRulevalues = []) => {\n\n    const { filter } = currentFilters;\n\n    const buildChip = (key, parameter) => (\n        FILTERS[key].items.reduce((object, item) => {\n            if (parameter === item.value) {\n                object.name = item.label;\n                object.value = item.value ;\n            }\n            else if (key === 'security_rule' && !['true', 'false'].includes(parameter))\n            {\n                const filteredRule = filterRulevalues.find(({ value }) => value === parameter);\n                object.name = filteredRule && filteredRule.label || parameter ;\n                object.value = parameter;\n            }\n\n            return object;\n        }, {})\n    );\n\n    const buildChips = (paramValues, key) => {\n        return paramValues.reduce((values, parameter) => {\n            values.push(buildChip(key, parameter));\n            return values;\n        }, []);\n    };\n\n    const filterChips = Object.keys(FILTERS).reduce((array, key) => {\n        if (key !== 'show_all' && Object.keys(currentFilters).includes(key) && !['', undefined].includes(currentFilters[key])) {\n\n            const multiValue = typeof currentFilters[key] === 'string' && currentFilters[key].split(',');\n            const filteredValues = (multiValue && multiValue.length > 1)\n                                            && buildChips(multiValue, key)\n                                            || [buildChip(key, currentFilters[key])];\n\n            array.push({ key, multiValue, category: FILTERS[key].title, chips: filteredValues });\n        }\n\n        return array;\n    }, []);\n\n    filter && filterChips.push(\n        { key: 'filter',\n            category: intl.formatMessage(messages.searchLabel),\n            chips: [{ name: filter }]\n        }\n    );\n\n    return filterChips;\n};\n\nexport const removeFilters = (chips, apply) =>{\n    const emptyFilter = chips.reduce((obj, item) =>{\n        if (item.key === 'filter' || (item.multiValue && item.multiValue.length === 1)) {\n            obj[item.key] = '';\n        }\n        else {\n            obj[item.key] = item.multiValue.filter(value => !item.chips.some(chip => chip.value === value)).join(',');\n        }\n\n        return obj;\n    }, {});\n\n    apply(emptyFilter);\n};\n","\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components';\nimport { SECURITY_RULE_OPTIONS } from '../../../../Helpers/constants';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\nimport unionWith from 'lodash/unionWith';\nimport isEqual from 'lodash/isEqual';\n\nconst securityRuleFilter = (apply, currentFilter = {}, dynamicFilters = []) => {\n    let { security_rule: currentValue } = currentFilter;\n    if (currentValue === '' || !currentValue) {\n        currentValue = 'all';\n    }\n\n    const filterBySecurityRule = values => {\n        apply({ security_rule: values === 'all' ? '' : values, page: 1 });\n    };\n\n    return {\n        label: intl.formatMessage(messages.securityRules),\n        type: conditionalFilterType.radio,\n        urlParam: 'security_rule',\n        filterValues: {\n            onChange: (event, value) => {\n                filterBySecurityRule(value);\n            },\n            items:\n                unionWith(SECURITY_RULE_OPTIONS, dynamicFilters, isEqual).map(item => ({ label: item.label, value: item.value })),\n            value: currentValue\n        }\n    };\n};\n\nexport default securityRuleFilter;\n","var baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    baseUniq = require('./_baseUniq'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    last = require('./last');\n\n/**\n * This method is like `_.union` except that it accepts `comparator` which\n * is invoked to compare elements of `arrays`. Result values are chosen from\n * the first array in which the value occurs. The comparator is invoked\n * with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.unionWith(objects, others, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n */\nvar unionWith = baseRest(function(arrays) {\n  var comparator = last(arrays);\n  comparator = typeof comparator == 'function' ? comparator : undefined;\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n});\n\nmodule.exports = unionWith;\n","\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components';\nimport { STATUS_OPTIONS } from '../../../../Helpers/constants';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\n\nconst statusFilter = (apply, currentFilter = {}) => {\n\n    let { status_id: currentValue } = currentFilter;\n\n    const filterByStatus = values => {\n        apply({ status_id: (values.length > '0' && values.filter(value => value !== ',').join(',')) || '', page: 1 });\n    };\n\n    return {\n        label: intl.formatMessage(messages.status),\n        type: conditionalFilterType.checkbox,\n        filterValues: {\n            onChange: (event, value) => {\n                filterByStatus(value);\n            },\n            items: STATUS_OPTIONS.map(item => ({ label: item.label, value: item.value })),\n            value: (currentValue ? currentValue.split(',') : [])\n        }\n    };\n};\n\nexport default statusFilter;\n","import { sortable } from '@patternfly/react-table';\n\nexport const initialState = {\n    columns: [],\n    rows: [],\n    entities: [],\n    selectedRows: []\n};\n\nfunction modifyInventory(columns, state) {\n    if (!state.selectedRows) {state.selectedRows = [];}\n\n    if (state.loaded) {\n        let lastSeenColumn = state.columns.filter(({ key }) => key === 'updated');\n        lastSeenColumn = [{ ...lastSeenColumn[0], transforms: [sortable] }];\n\n        return {\n            ...state,\n            rows: state.rows.map(item => ({ ...item, selected: state.selectedRows.some(system => system === item.id) })),\n            columns: [\n                ...columns || [],\n                ...lastSeenColumn || []\n            ]\n        };\n    }\n\n    return state;\n}\n\nfunction selectEntities(state, selected) {\n    const myRows = state.rows.slice();\n    if (!state.selectedRows) {state.selectedRows = [];}\n\n    const retval = {\n        ...state,\n        rows: myRows\n        .map(item => {\n            const newValue =  { ...item, selected: selected.some(system => system === item.id) };\n            return newValue;\n        }),\n        selectedRows: [...selected]\n    };\n    return retval;\n}\n\nexport const inventoryEntitiesReducer = (columns) => (state = initialState, action) => {\n    switch (action.type) {\n        case 'LOAD_ENTITIES_FULFILLED':\n            return modifyInventory(columns, state);\n        case 'SELECT_MULTIPLE_ENTITIES':\n            return selectEntities(state, action.payload);\n        case 'EXPAND_ROW':\n            return {\n                ...state,\n                rows: state.rows.map(row => ({\n                    ...row,\n                    isOpen: row.id === action.payload.id ? action.payload.isOpen : row.isOpen\n                }))\n            };\n        case 'CLEAR_INVENTORY_STORE':\n            return initialState;\n        default:\n            return state;\n    }\n};\n","import { Form, FormGroup, Radio, Stack, StackItem, TextArea } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { setBusinessRisk } from '../../../Helpers/APIHelper';\nimport { BUSINESS_RISK_OPTIONS } from '../../../Helpers/constants';\nimport BaseModal from './BaseModal';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nexport const BusinessRiskModal = ({ cves, updateRef, intl }) => {\n    const [cveList] = useState(cves);\n    const [businessRiskId, setBusinessRiskId] = useState('0');\n    const [label, setLabel] = useState();\n\n    const getDefaultLabel = useCallback(() => {\n        setLabel((cveList && cveList.length === 1 && cveList[0].justification) || '');\n    }, [cveList]);\n\n    useEffect(() => {\n        const getDefaultBusinessRisk = () => {\n            setBusinessRiskId((cveList && cveList.length === 1 && cveList[0].business_risk_id.toString()) || '0');\n        };\n\n        getDefaultBusinessRisk();\n        getDefaultLabel();\n    }, [cves, getDefaultLabel, cveList]);\n\n    useEffect(getDefaultLabel, [cves]);\n\n    const handleOnRadioChange = (_, event) => {\n        const { value } = event.currentTarget;\n        setBusinessRiskId(value);\n    };\n\n    const handleOnLabelChange = value => {\n        setLabel(value);\n    };\n\n    const handleSave = () => {\n        return setBusinessRisk({\n            business_risk_id: parseInt(businessRiskId),\n            cve: cveList.map(item => item.id),\n            business_risk_text: label\n        }).then(updateRef);\n    };\n\n    const successNotification = {\n        variant: 'success',\n        title: intl.formatMessage(messages.businessRiskUpdateSuccessful, { count: cveList.length || 0 })\n    };\n\n    return (\n        <BaseModal\n            items={cveList}\n            onSave={handleSave}\n            onSuccessNotification={successNotification}\n            title={intl.formatMessage(messages.businessRiskModalTitle)}\n        >\n            <Stack hasGutter>\n                <StackItem>\n                    {intl.formatMessage(messages.businessRiskModalInfo)}\n                </StackItem>\n                <StackItem>\n                    <Form>\n                        <FormGroup label={intl.formatMessage(messages.businessRiskLabel)} fieldId={'businessRiskId'}>\n                            {BUSINESS_RISK_OPTIONS.map(item => (\n                                <Radio\n                                    className={'business-risk-radio'}\n                                    value={item.value}\n                                    isChecked={businessRiskId === item.value}\n                                    onChange={handleOnRadioChange}\n                                    label={item.label}\n                                    key={item.value}\n                                    id={item.value}\n                                    name={item.label}\n                                    aria-label={item.label}\n                                />\n                            ))}\n                        </FormGroup>\n                        <FormGroup label={intl.formatMessage(messages.justificationLabel)} fieldId={'label'}>\n                            <TextArea\n                                type=\"text\"\n                                onChange={handleOnLabelChange}\n                                value={label}\n                                resizeOrientation='vertical'\n                                aria-label={'justification'}\n                            />\n                        </FormGroup>\n                    </Form>\n                </StackItem>\n            </Stack>\n        </BaseModal>\n    );\n};\n\nBusinessRiskModal.propTypes = {\n    cves: propTypes.array,\n    updateRef: propTypes.func,\n    intl: propTypes.any\n};\n\nexport default injectIntl(BusinessRiskModal);\n","import { Checkbox, Form, FormGroup, Split, SplitItem, Stack, StackItem, Tooltip } from '@patternfly/react-core';\nimport { InfoCircleIcon, OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport propTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { setCveStatus, setSystemCveStatus } from '../../../Helpers/APIHelper';\nimport BaseModal, { useJustificationInput, useStatusSelect } from './BaseModal';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nexport const CveStatusModal = ({ cves, updateRef, intl }) => {\n    const [cveList] = useState(cves);\n    const { StatusSelect, statusId } = useStatusSelect(getDefaultStatus());\n    const { JustificationInput, justification } = useJustificationInput(getDefaultLabel());\n    const [checkboxState, setCheckboxState] = useState(false);\n\n    const handleSave = () => {\n        const cveIds = cveList.map(item => item.id);\n        return setCveStatus({\n            status_id: parseInt(statusId),\n            cve: cveIds,\n            status_text: justification\n        })\n        .then(() => !checkboxState && setSystemCveStatus({ cve: cveIds }))\n        .then(updateRef);\n    };\n\n    function getDefaultStatus() {\n        return (cveList && cveList.length === 1 && cveList[0].status_id.toString()) || '0';\n    }\n\n    function getDefaultLabel() {\n        return (cveList && cveList.length === 1 && cveList[0].justification) || '';\n    }\n\n    const successNotification = {\n        variant: 'success',\n        title: intl.formatMessage(messages.cveStatusModalUpdateSuccessful, { count: cveList.length || 0 })\n    };\n    const title = intl.formatMessage(messages.cveStatusModalTitle, { count: cveList.length || 0 });\n\n    return (\n        <BaseModal items={cveList} onSave={handleSave} onSuccessNotification={successNotification} title={title}>\n            <Stack hasGutter>\n                <StackItem>\n                    {intl.formatMessage(\n                        messages.cveStatusModalSelected,\n                        {\n                            count: cveList.length || 0,\n                            cveId: cveList[0].id, // only used when length is 1\n                            b: (...chunks) => <b>{chunks}</b> // explicitly specifying what is wrapped <b> should be bold\n                        }\n                    )}\n                </StackItem>\n                <StackItem>\n                    <InfoCircleIcon\n                        className=\"pf-u-mr-xs\"\n                        fontSize=\"var(--pf-global--FontSize--md)\"\n                        color=\"var(--pf-global--active-color--300)\"\n                    />\n                    {intl.formatMessage(messages.cveStatusModalInfo, { count: cveList.length || 0 })}\n                    <Tooltip\n                        trigger='mouseenter focus click'\n                        content={intl.formatMessage(messages.cveStatusModalInfoTooltip)}\n                    >\n                        <React.Fragment>\n                            <OutlinedQuestionCircleIcon\n                                className=\"pf-u-ml-xs\"\n                                color=\"var(--pf-global--Color--200)\"\n                                style={{ verticalAlign: '-0.125em' }}\n                            />\n                        </React.Fragment>\n                    </Tooltip>\n                </StackItem>\n                <StackItem>\n                    <Form key=\"key\">\n                        {StatusSelect}\n                        {JustificationInput}\n                        <FormGroup fieldId={'overwrite'}>\n                            <Split>\n                                <SplitItem>\n                                    <Checkbox\n                                        label={intl.formatMessage(messages.cveStatusModalOverwriteCheckbox)}\n                                        id=\"alt-form-checkbox-1\"\n                                        name=\"alt-form-checkbox-1\"\n                                        isChecked={checkboxState}\n                                        onChange={checked => setCheckboxState(checked)}\n                                    />\n                                </SplitItem>\n                                <SplitItem>\n                                    <Tooltip\n                                        trigger='mouseenter focus click'\n                                        content={intl.formatMessage(messages.cveStatusModalOverwriteTooltip)}\n                                    >\n                                        <OutlinedQuestionCircleIcon\n                                            className=\"pf-u-ml-xs\"\n                                            color=\"var(--pf-global--Color--200)\"\n                                            style={{ verticalAlign: '0' }}\n                                        />\n                                    </Tooltip>\n                                </SplitItem>\n                            </Split>\n                        </FormGroup>\n                    </Form>\n                </StackItem>\n            </Stack>\n        </BaseModal>\n    );\n};\n\nCveStatusModal.propTypes = {\n    cves: propTypes.array,\n    updateRef: propTypes.func,\n    intl: propTypes.any\n};\n\nexport default injectIntl(CveStatusModal);\n","import { Checkbox, Form, FormGroup, Stack, StackItem, Alert, Split, Tooltip, SplitItem } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport propTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { setSystemCveStatus } from '../../../Helpers/APIHelper';\nimport BaseModal, { useJustificationInput, useStatusSelect } from './BaseModal';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nexport const CvePairStatusModal = ({ cves, updateRef, inventories, hasDifferentStatus = false, intl, type }) => {\n    const [cveList] = useState(cves);\n    const [inventoryList] = useState(inventories);\n    const {\n        JustificationInput,\n        justification,\n        setJustification,\n        setProps: setJustificationProps\n    } = useJustificationInput(getDefaultLabel());\n    const [checkboxState, setCheckboxState] = useState(getDefaultCheckboxState());\n    const { StatusSelect, statusId, setStatusId, setProps: setSelectProps } = useStatusSelect(getDefaultStatus());\n    const inventoryIds = inventoryList.map(item => item.id);\n    const inventoryNames = inventoryList.map(item => item.display_name);\n\n    useEffect(() => {\n        setSelectProps({ isDisabled: checkboxState });\n        setJustificationProps({ disabled: checkboxState });\n        setStatusId(getCveStatus());\n        setJustification(getCveJustification());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [checkboxState, setSelectProps, setJustificationProps]);\n\n    useEffect(() => {\n        setStatusId(getCveStatus());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [checkboxState, setStatusId]);\n\n    const handleSave = () => {\n        const cveIds = cveList.map(item => item.id);\n        const setStatusParams = !checkboxState\n            ? {\n                status_id: parseInt(statusId),\n                cve: cveIds,\n                status_text: justification,\n                inventory_id: inventoryIds\n            }\n            : { cve: cveIds, inventory_id: inventoryIds };\n        return setSystemCveStatus(setStatusParams).then(updateRef);\n    };\n\n    function getDefaultStatus() {\n        // system has different status\n        if (inventoryList && inventoryList.length > 0 && inventoryList[0].status_id) {\n            return getSystemsStatus();\n        }\n\n        if (cveList && cveList.length > 0) {\n            return getCveStatus();\n        }\n\n    }\n\n    function getDefaultLabel() {\n        if (inventoryList && inventoryList.length === 1 && inventoryList[0].justification) {\n            return getSystemsJustification();\n        }\n\n        if (cveList && cveList.length === 1) {\n            return getCveJustification();\n        }\n    }\n\n    function getDefaultCheckboxState() {\n\n        const haveSameStatuses = cveList.every(\n            (val, i, arr) => (val.status_id === arr[0].status_id) && (val.cve_status_id === arr[0].cve_status_id)\n        );\n\n        const differFromOverall = cveList.some(item => item.status_id !== item.cve_status_id);\n        if (differFromOverall) { return false; }\n\n        // system has the same status as cve\n        if (inventoryList && inventoryList.length === 1 && inventoryList[0].status_id) {\n            let [inventory] = inventoryList;\n            return cveList.some(cve => (cve.status_id === inventory.status_id));\n        }\n\n        if (cveList && cveList.length === 1 || haveSameStatuses) {\n            return true;\n        }\n\n        return false;\n    }\n\n    function getSystemsStatus() {\n        return (inventoryList && inventoryList[0].status_id.toString()) || '0';\n    }\n\n    function getSystemsJustification() {\n        return (inventoryList && inventoryList.length === 1 && inventoryList[0].justification) || '';\n    }\n\n    function getCveStatus() {\n        switch (type) {\n            case 'systemsExposed' : {\n                return (cveList && cveList.length === 1 && cveList[0].status_id.toString()) || '0';\n            }\n\n            case 'systemDetail': {\n                if (cveList) {\n                    if (checkboxState) { // use overall (CVE) status\n                        return hasDifferentStatus ? '0' : cveList[0].cve_status_id || '0';\n                    }\n                    else { // use system pair status\n                        return hasDifferentStatus ? '0' : cveList[0].status_id || '0';\n                    }\n                }\n                else {\n                    return '0';\n                }\n            }\n\n            default: {\n                return '0';\n            }\n        }\n\n    }\n\n    function getCveJustification() {\n        switch (type) {\n            case 'systemsExposed' : {\n                return (cveList && cveList.length === 1 && cveList[0].justification) || '';\n            }\n\n            case 'systemDetail': {\n                if (checkboxState) { // use overall (CVE) justification\n                    return (cveList && cveList.length === 1 && cveList[0].cve_justification) || '';\n                }\n                else { // use system pair justification\n                    return (cveList && cveList.length === 1 && cveList[0].justification) || '';\n                }\n            }\n\n            default: {\n                return '';\n            }\n        }\n    }\n\n    const successNotification = {\n        variant: 'success',\n        title: intl.formatMessage(messages.cvePairStatusModalUpdateSuccessful)\n    };\n\n    const modalTitle = intl.formatMessage(messages.cvePairStatusModalTitle, { count: inventoryIds.length * cves.length });\n\n    return (\n        <BaseModal items={cveList} onSave={handleSave} onSuccessNotification={successNotification} title={modalTitle}>\n            <Stack hasGutter>\n                {hasDifferentStatus &&\n                    <StackItem>\n                        <Alert\n                            variant=\"warning\"\n                            isInline\n                            title={intl.formatMessage(messages.cvePairStatusModalAlert)}\n                        />\n                    </StackItem>\n                }\n                <StackItem>\n                    {intl.formatMessage(\n                        messages.cvePairStatusModalSelected,\n                        {\n                            cveCount: cveList.length || 0,\n                            cveId: cveList[0].id, // only used when length is 1\n                            systemCount: inventoryList.length || 0,\n                            systemName: inventoryNames[0], // only used when length is 1\n                            b: (...chunks) => <b>{chunks}</b> // explicitly specifying what is wrapped <b> should be bold\n                        }\n                    )}\n                </StackItem>\n                <StackItem>\n                    <Form key=\"key\">\n                        <FormGroup fieldId={'overall'}>\n                            <Split>\n                                <SplitItem>\n                                    <Checkbox\n                                        label={intl.formatMessage(messages.cvePairStatusModalUseOverallCheckbox)}\n                                        id=\"alt-form-checkbox-1\"\n                                        name=\"alt-form-checkbox-1\"\n                                        isChecked={checkboxState}\n                                        onChange={checked => setCheckboxState(checked)}\n                                    />\n                                </SplitItem>\n                                <SplitItem>\n                                    <Tooltip\n                                        trigger='mouseenter focus click'\n                                        content={intl.formatMessage(messages.cvePairStatusModalUseOverallTooltip)}\n                                    >\n                                        <OutlinedQuestionCircleIcon\n                                            className=\"pf-u-ml-xs\"\n                                            color=\"var(--pf-global--Color--200)\"\n                                            style={{ verticalAlign: '0' }}\n                                        />\n                                    </Tooltip>\n                                </SplitItem>\n                            </Split>\n                        </FormGroup>\n                        {StatusSelect}\n                        {JustificationInput}\n                    </Form>\n                </StackItem>\n            </Stack>\n        </BaseModal>\n    );\n};\n\nCvePairStatusModal.propTypes = {\n    cves: propTypes.array,\n    updateRef: propTypes.func,\n    inventories: propTypes.array,\n    hasDifferentStatus: propTypes.bool,\n    intl: propTypes.any,\n    type: propTypes.string\n};\n\nexport default injectIntl(CvePairStatusModal);\n","import { addNotification } from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\nimport RemediationButton from '@redhat-cloud-services/frontend-components-remediations/RemediationButton';\nimport  AnsibeTowerIcon  from '@patternfly/react-icons/dist/js/icons/ansibeTower-icon';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport globalBackgroundColor100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_100';\nimport propTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport messages from '../../../Messages';\nimport { FormattedMessage } from 'react-intl';\n\nclass Remediation extends Component {\n    static propTypes = {\n        cves: propTypes.oneOfType([\n            propTypes.array,\n            propTypes.string\n        ]),\n        systems: propTypes.oneOfType([\n            propTypes.array,\n            propTypes.string\n        ]),\n        addNotification: propTypes.func\n    };\n\n    shouldComponentUpdate(nextProps) {\n        if (nextProps.cves !== this.props.cves) {\n            return true;\n        }\n\n        if (nextProps.systems !== this.props.systems) {\n            return true;\n        }\n\n        return false;\n    }\n\n    remediationProvider = (cves = [], systems = []) => {\n        cves = [].concat(cves);\n        systems = [].concat(systems);\n        return cves.length && systems.length\n            ? {\n                issues: cves.map(cve => ({\n                    id: `vulnerabilities:${cve}`,\n                    description: cve\n                })),\n                systems\n            }\n            : false;\n    };\n\n    render() {\n        const { cves, systems, addNotification: dispatchNotification } = this.props;\n        return (\n            <div>\n                <RemediationButton\n                    dataProvider={() => this.remediationProvider(cves, systems)}\n                    isDisabled={this.remediationProvider(cves, systems) === false}\n                    onRemediationCreated={result => dispatchNotification(result.getNotification())}\n                >\n                    <AnsibeTowerIcon size='sm' color={globalBackgroundColor100.value} />\n                    &nbsp;{<FormattedMessage {...messages.remediateLabel} />}\n                </RemediationButton>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    null,\n    dispatch => ({\n        addNotification: notification => dispatch(addNotification(notification))\n    })\n)(routerParams(Remediation));\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEPageDetailsDescription.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEPageDetailsDescription.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEPageDetailsDescription.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js!@redhat-cloud-services/frontend-components-notifications/index.css\"), \"\");\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js!@redhat-cloud-services/frontend-components/index.css\"), \"\");\n\n// module\nexports.push([module.id, \":root {\\n  --ins-color--orange: #ec7a08; }\\n\\nbutton:focus {\\n  outline: none; }\\n\\n.page__Vulnerabilities {\\n  overflow-x: auto !important; }\\n  .page__Vulnerabilities .pf-c-page__main {\\n    overflow-x: auto; }\\n\\n.csaw-icon {\\n  vertical-align: -0.125em;\\n  margin-right: var(--pf-global--spacer--xs); }\\n\\n.icon-with-label:not(:last-child) {\\n  margin-right: var(--pf-global--spacer--sm); }\\n\\n.icon-with-label > svg {\\n  margin-right: var(--pf-global--spacer--sm); }\\n\\n.business-risk-radio > input {\\n  margin-left: 1px; }\\n\\n.splitter {\\n  margin-bottom: var(--pf-global--spacer--sm) !important;\\n  margin-top: var(--pf-global--spacer--sm) !important; }\\n\\n.status-breakdown-table tr th {\\n  font-weight: normal;\\n  padding-left: 0px;\\n  padding-right: var(--pf-global--spacer--md);\\n  padding-bottom: var(--pf-global--spacer--sm); }\\n  .status-breakdown-table tr th:last-child {\\n    text-align: right;\\n    min-width: 8em; }\\n\\n.status-breakdown-table tr td {\\n  padding-left: 0px;\\n  padding-right: var(--pf-global--spacer--md);\\n  white-space: nowrap;\\n  padding-top: var(--pf-global--spacer--sm);\\n  padding-bottom: var(--pf-global--spacer--sm); }\\n  .status-breakdown-table tr td:last-child {\\n    text-align: right; }\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEInfoBox.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEInfoBox.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEInfoBox.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js!@redhat-cloud-services/frontend-components-notifications/index.css\"), \"\");\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js!@redhat-cloud-services/frontend-components/index.css\"), \"\");\n\n// module\nexports.push([module.id, \":root {\\n  --ins-color--orange: #ec7a08; }\\n\\nbutton:focus {\\n  outline: none; }\\n\\n.page__Vulnerabilities {\\n  overflow-x: auto !important; }\\n  .page__Vulnerabilities .pf-c-page__main {\\n    overflow-x: auto; }\\n\\n.csaw-icon {\\n  vertical-align: -0.125em;\\n  margin-right: var(--pf-global--spacer--xs); }\\n\\n.icon-with-label:not(:last-child) {\\n  margin-right: var(--pf-global--spacer--sm); }\\n\\n.icon-with-label > svg {\\n  margin-right: var(--pf-global--spacer--sm); }\\n\\n.business-risk-radio > input {\\n  margin-left: 1px; }\\n\\n.infobox-square {\\n  background-color: var(--pf-global--BackgroundColor--200);\\n  border: var(--pf-global--BorderColor--300) var(--pf-global--BorderWidth--sm) solid;\\n  height: 65px; }\\n  .infobox-square > .pf-l-split__item:first-child {\\n    width: 65px;\\n    color: black;\\n    background-color: white; }\\n    .infobox-square > .pf-l-split__item:first-child:not(.severity-unknown) > div.pf-l-bullseye svg {\\n      color: white; }\\n  .infobox-square h3,\\n  .infobox-square h6 {\\n    margin: 0; }\\n  .infobox-square > .pf-l-split__item:nth-child(2) {\\n    display: flex;\\n    justify-content: flex-start;\\n    align-items: center; }\\n\\n.severity-low {\\n  background-color: var(--pf-global--Color--200) !important; }\\n\\n.severity-critical {\\n  background-color: var(--pf-global--danger-color--100) !important; }\\n\\n.severity-moderate {\\n  background-color: var(--pf-global--warning-color--100) !important; }\\n\\n.severity-color-important {\\n  background-color: var(--pf-global--palette--orange-300) !important; }\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CvssVector.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CvssVector.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CvssVector.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".severity-info-box > div h6 {\\n  margin: 0; }\\n\\n.severity-info-box > div > div:nth-child(3) h6 .ins-c-skeleton {\\n  max-height: 30px !important;\\n  max-width: 30% !important; }\\n\\n.severity-info-box > div > div:nth-child(3) div > .ins-c-skeleton {\\n  max-height: 25px !important;\\n  max-width: 80% !important; }\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CSAwRuleBox.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CSAwRuleBox.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CSAwRuleBox.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".label {\\n  min-width: 140px; }\\n\\n.l-sm-spacer {\\n  margin-left: var(--pf-global--spacer--sm); }\\n\\n.ansible-success {\\n  color: var(--pf-global--success-color--200); }\\n\\n.card-box-shadow {\\n  box-shadow: var(--pf-global--BoxShadow--md);\\n  border: 1px solid var(--pf-global--BorderColor--dark-100); }\\n\", \"\"]);\n\n// exports\n","import { Popover, Stack, StackItem } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport Label from '../Snippets/Label';\nimport './CVEPageDetailsDescription.scss';\n\nconst SnippetWithHeaderAndPopover = props => {\n    const { title, value, content } = props;\n\n    return (\n        <Popover bodyContent={content} headerContent={''} aria-label={'Business risk popover'} position=\"right\">\n            <Stack style={{ display: 'inline-block', cursor: 'pointer' }}>\n                <StackItem>\n                    <Label>{title}</Label>\n                </StackItem>\n                <StackItem>\n                    <a>{value}</a>\n                </StackItem>\n            </Stack>\n        </Popover>\n    );\n};\n\nSnippetWithHeaderAndPopover.propTypes = {\n    title: propTypes.any,\n    value: propTypes.any,\n    content: propTypes.any\n};\nexport default SnippetWithHeaderAndPopover;\n","import { Stack, StackItem, Text, TextContent, TextVariants, Split, SplitItem } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { PatternFlyThemeProvider, StyledBox, StyledText, StyledConstants } from '@patternfly/react-styled-system';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { STATUS_OPTIONS } from '../../../Helpers/constants';\nimport './CVEPageDetailsDescription.scss';\nimport SnippetWithHeaderAndPopover from './SnippetWithHeaderAndTooltip';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst CVEPageDetailsDescription = ({ cveAttributes, intl }) => {\n    const {\n        public_date: publishDate,\n        description,\n        rh_link: link,\n        business_risk: businessRisk,\n        business_risk_justification: businessRiskJustification,\n        status,\n        status_justification: statusJustification,\n        systems_status_detail: systemsStatusDetail,\n        systems_status_divergent: systemsStatusDivergent\n    } = cveAttributes;\n\n    const detailRows =\n        systemsStatusDetail &&\n        Object.keys(systemsStatusDetail).map(item => [\n            STATUS_OPTIONS.find(status => status.value === item.toString()).label,\n            systemsStatusDetail[item].toString()\n        ]);\n\n    const brPopoverContent = (\n        <TextContent>\n            <Stack>\n                <StackItem>\n                    <StyledText\n                        fontWeight={StyledConstants.fontWeights.bold}\n                        fontSize={StyledConstants.fontSizes.sm}\n                        lineHeight={StyledConstants.lineHeights.sm}\n                    >\n                        {intl.formatMessage(messages.justificationNote)}\n                    </StyledText>\n                </StackItem>\n                <StackItem>{businessRiskJustification || '--'}</StackItem>\n            </Stack>\n        </TextContent>\n    );\n\n    const statusPopoverContent = (\n        <Stack>\n            <StackItem>\n                <StyledText\n                    fontWeight={StyledConstants.fontWeights.bold}\n                    fontSize={StyledConstants.fontSizes.sm}\n                    lineHeight={StyledConstants.lineHeights.sm}\n                >\n                    {intl.formatMessage(messages.cveStatus)}\n                </StyledText>\n                {status || '--'}\n\n                <StyledText\n                    fontWeight={StyledConstants.fontWeights.bold}\n                    fontSize={StyledConstants.fontSizes.sm}\n                    lineHeight={StyledConstants.lineHeights.sm}\n                    style={{ marginTop: 'var(--pf-global--spacer--sm)' }}\n                >\n                    {intl.formatMessage(messages.justificationNote)}\n                </StyledText>\n                {statusJustification || '--'}\n            </StackItem>\n            {systemsStatusDivergent > 0 && (\n                <StackItem>\n                    <TextContent>\n                        <hr className={'splitter'} />\n                    </TextContent>\n                    <StyledText fontWeight={StyledConstants.fontWeights.semi_bold} lineHeight={StyledConstants.lineHeights.sm}>\n                        {intl.formatMessage(messages.cvePageDetailsSystemsWTCves)}\n                    </StyledText>\n                    <Table\n                        aria-label={'Status details'}\n                        borders={false}\n                        gridBreakPoint={null}\n                        cells={[intl.formatMessage(messages.statusLabel), intl.formatMessage(messages.count)]}\n                        rows={detailRows}\n                        className={'status-breakdown-table'}\n                    >\n                        <TableHeader />\n                        <TableBody />\n                    </Table>\n                </StackItem>\n            )}\n        </Stack>\n    );\n    return (\n        <PatternFlyThemeProvider>\n            <Stack hasGutter>\n                <StackItem />\n                <StackItem>\n                    <Split hasGutter>\n                        <SplitItem>\n                            <SnippetWithHeaderAndPopover\n                                title={intl.formatMessage(messages.businessRiskLabel)}\n                                value={businessRisk}\n                                content={brPopoverContent}\n                            />\n                        </SplitItem>\n                        <SplitItem>\n                            <SnippetWithHeaderAndPopover\n                                title={intl.formatMessage(messages.statusLabel)}\n                                content={statusPopoverContent}\n                                value={\n                                    <span>\n                                        {systemsStatusDivergent > 0 && (\n                                            <ExclamationTriangleIcon color={'var(--pf-global--primary-color--100)'} />\n                                        )}{' '}\n                                        {status}\n                                    </span>\n                                }\n                            />\n                        </SplitItem>\n                    </Split>\n                </StackItem>\n                <StackItem>\n                    <TextContent>\n                        <Text component={TextVariants.p}>{description}</Text>\n                    </TextContent>\n                </StackItem>\n                <StackItem>\n                    <StyledBox style={{ marginBottom: 'var(--pf-global--spacer--xs)' }}>\n                        {intl.formatMessage(messages.publishDate)}: {publishDate}\n                    </StyledBox>\n                    <StyledBox>{link}</StyledBox>\n                </StackItem>\n            </Stack>\n        </PatternFlyThemeProvider>\n    );\n};\n\nCVEPageDetailsDescription.propTypes = {\n    cveAttributes: propTypes.any,\n    intl: propTypes.any\n};\n\nexport default injectIntl(CVEPageDetailsDescription);\n","import { Skeleton, SkeletonSize, Spinner } from '@redhat-cloud-services/frontend-components';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport ContentLoader, { BulletList, List } from 'react-content-loader';\n\nconst WithLoader = props => {\n    if (props === undefined || props.loading !== false) {\n        switch (props.variant) {\n            case 'spinner':\n                return <Spinner centered />;\n            case 'cvePageOverviewItem':\n                return <CVEPageOverviewItemLoader />;\n            case 'list':\n                return <List />;\n            case 'bulletList':\n                return <BulletList />;\n            case 'trendBox':\n                return <TrendBoxLoader />;\n            case 'currentVulnerabilitiesItem':\n                return <CurrentVulnerabilitiesItemLoader />;\n            default:\n                return <Skeleton size={SkeletonSize.lg} />;\n        }\n    }\n\n    return props.children;\n};\n\n// Loaders\nconst CVEPageOverviewItemLoader = () => {\n    return (\n        <ContentLoader height={61} width={120}>\n            <rect x=\"35\" y=\"0\" rx=\"0\" ry=\"0\" width=\"50\" height=\"35\" />\n            <rect x=\"0\" y=\"45\" rx=\"0\" ry=\"0\" width=\"120\" height=\"16\" />\n        </ContentLoader>\n    );\n};\n\nconst TrendBoxLoader = () => {\n    return (\n        <ContentLoader height={100} width={300}>\n            <rect x=\"388.58\" y=\"109.13\" rx=\"0\" ry=\"0\" width=\"0\" height=\"0\" />\n            <rect x=\"11.58\" y=\"16.13\" rx=\"0\" ry=\"0\" width=\"37\" height=\"62\" />\n            <rect x=\"52.58\" y=\"52.13\" rx=\"0\" ry=\"0\" width=\"17\" height=\"26\" />\n            <rect x=\"76.58\" y=\"52.13\" rx=\"0\" ry=\"0\" width=\"17\" height=\"26\" />\n            <rect x=\"4.58\" y=\"82.13\" rx=\"0\" ry=\"0\" width=\"154\" height=\"22\" />\n        </ContentLoader>\n    );\n};\n\nconst CurrentVulnerabilitiesItemLoader = () => {\n    return (\n        <ContentLoader height={50} width={200} speed={2} primaryColor=\"#f3f3f3\" secondaryColor=\"#ecebeb\">\n            <rect x=\"82.58\" y=\"15.13\" rx=\"0\" ry=\"0\" width=\"110.88\" height=\"21.42\" />\n            <circle cx=\"25\" cy=\"25\" r=\"25\" />\n        </ContentLoader>\n    );\n};\n\nWithLoader.propTypes = {\n    loading: propTypes.bool,\n    variant: propTypes.string\n};\n\nexport default WithLoader;\n","import { Bullseye, Split, SplitItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { CVEPageContext } from '../../SmartComponents/CVEDetailsPage/CVEDetailsPage';\nimport WithLoader from '../WithLoader/WithLoader';\nimport './CVEInfoBox.scss';\n\nconst CVEInfoBox = (props) => {\n    return (\n        <CVEPageContext.Consumer>\n            {context => (\n                <Split className=\"infobox-square\" hasGutter>\n                    <WithLoader loading={context.isLoading}>\n                        <SplitItem className={props.titleColor}>\n                            <Bullseye>{props.titleContent}</Bullseye>\n                        </SplitItem>\n                        <SplitItem isFilled>\n                            <TextContent>\n                                <Text component={TextVariants.h6}>{props.descriptionTitle}</Text>\n                                <Text component={TextVariants.p}>{props.descriptionContent}</Text>\n                            </TextContent>\n                        </SplitItem>\n                    </WithLoader>\n                </Split>\n            )}\n        </CVEPageContext.Consumer>\n    );\n};\n\nCVEInfoBox.propTypes = {\n    titleContent: propTypes.any,\n    titleColor: propTypes.any,\n    descriptionContent: propTypes.any,\n    descriptionTitle: propTypes.any\n};\n\nexport default CVEInfoBox;\n","import { intl } from '../../../Utilities/IntlProvider';\nimport messages from '../../../Messages';\n\nexport const V3names = {\n    AV: {\n        name: intl.formatMessage(messages.vectorNamesV3AV),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNetwork),\n            A: intl.formatMessage(messages.vectorValuesAdjacent),\n            L: intl.formatMessage(messages.vectorValuesLocal),\n            P: intl.formatMessage(messages.vectorValuesPhysical)\n        }\n    },\n    AC: {\n        name: intl.formatMessage(messages.vectorNamesV3AC),\n        values: {\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    PR: {\n        name: intl.formatMessage(messages.vectorNamesV3PR),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    UI: {\n        name: intl.formatMessage(messages.vectorNamesV3UI),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            R: intl.formatMessage(messages.vectorValuesRequired)\n        }\n    },\n    S: {\n        name: intl.formatMessage(messages.vectorNamesV3S),\n        values: {\n            U: intl.formatMessage(messages.vectorValuesUnchanged),\n            C: intl.formatMessage(messages.vectorValuesChanged)\n        }\n    },\n    C: {\n        name: intl.formatMessage(messages.vectorNamesV3C),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    I: {\n        name: intl.formatMessage(messages.vectorNamesV3I),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    A: {\n        name: intl.formatMessage(messages.vectorNamesV3A),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    CVSS: {\n        name: intl.formatMessage(messages.vectorNamesCvssVersion),\n        values: {\n            '3.0': 3.0\n        }\n    }\n};\n\nexport const V2names = {\n    AV: {\n        name: intl.formatMessage(messages.vectorNamesV2AV),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNetwork),\n            A: intl.formatMessage(messages.vectorValuesAdjacentNetwork),\n            L: intl.formatMessage(messages.vectorValuesLocal)\n        }\n    },\n    AC: {\n        name: intl.formatMessage(messages.vectorNamesV2AC),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    Au: {\n        name: intl.formatMessage(messages.vectorNamesV2AU),\n        values: {\n            M: intl.formatMessage(messages.vectorValuesMultiple),\n            S: intl.formatMessage(messages.vectorValuesSingle),\n            N: intl.formatMessage(messages.vectorValuesNone)\n        }\n    },\n    C: {\n        name: intl.formatMessage(messages.vectorNamesV2C),\n        values: {\n            C: intl.formatMessage(messages.vectorValuesComplete),\n            P: intl.formatMessage(messages.vectorValuesPartial),\n            N: intl.formatMessage(messages.vectorValuesNone)\n        }\n    },\n    I: {\n        name: intl.formatMessage(messages.vectorNamesV2I),\n        values: {\n            C: intl.formatMessage(messages.vectorValuesComplete),\n            P: intl.formatMessage(messages.vectorValuesPartial),\n            N: intl.formatMessage(messages.vectorValuesNone)\n        }\n    },\n    A: {\n        name: intl.formatMessage(messages.vectorNamesV2A),\n        values: {\n            C: intl.formatMessage(messages.vectorValuesComplete),\n            P: intl.formatMessage(messages.vectorValuesPartial),\n            N: intl.formatMessage(messages.vectorValuesNone)\n        }\n    }\n};\n","import { Popover, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { Table, TableBody, TableHeader, TableVariant } from '@patternfly/react-table';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { CVEPageContext } from '../../SmartComponents/CVEDetailsPage/CVEDetailsPage';\nimport WithLoader from '../WithLoader/WithLoader';\nimport './CvssVector.scss';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport { V3names, V2names } from './vectorNames';\n\nexport const parseVector = (vector, namesMapping) => {\n    let res = {};\n    vector &&\n        vector.split('/').forEach(curr => {\n            let [key, val] = curr.split(':');\n            const name = namesMapping[key] && namesMapping[key].name;\n            const value = (namesMapping[key] && namesMapping[key].values[val]) || 'N/A';\n            if (name) {\n                res[name] = value;\n            }\n        });\n    return res;\n};\n\nconst CvssVector = props => {\n    const { cvss2_metrics: CVSS2Vector, cvss3_metrics: CVSS3Vector, intl } = props;\n    const cvssVer = (CVSS3Vector && 'CVSS 3.0') || (CVSS2Vector && 'CVSS 2.0') || 'CVSS 3.0';\n    const cvssVector = CVSS3Vector || CVSS2Vector;\n    const namesMapping = (CVSS3Vector && V3names) || (CVSS2Vector && V2names);\n    const parsedVector = parseVector(cvssVector, namesMapping);\n    const notAvailable = 'N/A';\n    // eslint-disable-next-line no-unused-vars\n    const { cvssVersion, ...values } = parsedVector;\n\n    return (\n        <CVEPageContext.Consumer>\n            {context => (\n                <TextContent>\n                    <WithLoader loading={context.isLoading}>\n                        <Popover\n                            position=\"bottom\"\n                            maxWidth={'100%'}\n                            enableFlip\n                            headerContent={ `${cvssVer} ${intl.formatMessage(messages.cvssVectorPopoverTitle)}` }\n                            bodyContent={\n                                cvssVector ?\n                                    (\n                                        <Table\n                                            aria-label={'Metric breakdown'}\n                                            variant={TableVariant.compact}\n                                            gridBreakPoint={null}\n                                            cells={\n                                                [intl.formatMessage(messages.cvssVectorMetric),\n                                                    intl.formatMessage(messages.cvssVectorValue)]\n                                            }\n                                            rows={Object.entries(values)}\n                                        >\n                                            <TableHeader />\n                                            <TableBody />\n                                        </Table>\n                                    ) : (notAvailable)\n                            }\n                        >\n                            <React.Fragment>\n                                <Text component={TextVariants.h6} style={{ display: 'inline-block', cursor: 'pointer' }}>\n                                    {cvssVer} {intl.formatMessage(messages.cvssVectorVectorString)}\n                                    <OutlinedQuestionCircleIcon color={'var(--pf-global--secondary-color--100)'}/>\n                                </Text>\n                                <br />\n                            </React.Fragment>\n                        </Popover>\n                    </WithLoader>\n\n                    <WithLoader loading={context.isLoading}>{cvssVector || notAvailable} </WithLoader>\n                </TextContent>\n            )}\n        </CVEPageContext.Consumer>\n    );\n};\n\nCvssVector.propTypes = {\n    cvss2_metrics: propTypes.string,\n    cvss3_metrics: propTypes.string,\n    intl: propTypes.any\n};\n\nexport default injectIntl(CvssVector);\n","import { Popover, Stack, StackItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { parseCvssScore } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { getImpactDetails } from '../../../Helpers/MiscHelper';\nimport CVEInfoBox from '../CVEInfoBox/CVEInfoBox';\nimport CvssVector from '../CvssVector/CvssVector';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst learnMorePopover = (cveDetails, intl) => {\n    return (\n        <Popover\n            position=\"bottom\"\n            enableFlip\n            headerContent={<div>{cveDetails.title + intl.formatMessage(messages.cvePageSeverityDetailsImpact)}</div>}\n            bodyContent={\n                <TextContent>\n                    <Text component={TextVariants.p}>{cveDetails.text}</Text>\n                </TextContent>\n            }\n            footerContent={\n                <a href=\"https://access.redhat.com/security/updates/classification/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    {intl.formatMessage(messages.cvePageSeverityDetailsLearnMoreRatings)}  <ExternalLinkAltIcon />\n                </a>\n            }\n        >\n            <a>{intl.formatMessage(messages.cvePageSeverityDetailsLearnMore)}</a>\n        </Popover>\n    );\n};\n\nconst CVEPageDetailsSeverity = props => {\n    const cveDetails = getImpactDetails(props.impact);\n    const cvssVersion = (props.cvss3_score && 'CVSS 3.0') || (props.cvss2_score && 'CVSS 2.0') || 'CVSS 3.0';\n    return (\n        <Stack hasGutter>\n            <StackItem>\n                <CVEInfoBox\n                    titleColor={cveDetails.color}\n                    titleContent={cveDetails.titleContent}\n                    descriptionTitle={cveDetails.title + props.intl.formatMessage(messages.cvePageSeverityDetailsImpact)}\n                    descriptionContent={learnMorePopover(cveDetails, props.intl)}\n                />\n            </StackItem>\n            <StackItem>\n                <CVEInfoBox\n                    titleContent={\n                        <TextContent>\n                            <Text component={TextVariants.h3}>{parseCvssScore(props.cvss2_score, props.cvss3_score)}</Text>\n                        </TextContent>\n                    }\n                    descriptionTitle={cvssVersion + props.intl.formatMessage(messages.cvePageSeverityDetailsBaseScore)}\n                />\n            </StackItem>\n\n            <StackItem>\n                <CvssVector cvss2_metrics={props.cvss2_metrics} cvss3_metrics={props.cvss3_metrics} />\n            </StackItem>\n        </Stack>\n    );\n};\n\nCVEPageDetailsSeverity.propTypes = {\n    impact: propTypes.string,\n    cvss2_score: propTypes.any,\n    cvss3_score: propTypes.any,\n    cvss2_metrics: propTypes.any,\n    cvss3_metrics: propTypes.any,\n    intl: propTypes.any\n};\n\nCVEPageDetailsSeverity.defaultProps = {\n    impact: 'Unknown',\n    cvss2_score: undefined,\n    cvss3_score: undefined,\n    cvss2_metrics: undefined,\n    cvss3_metrics: undefined\n};\n\nexport default injectIntl(CVEPageDetailsSeverity);\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Stack,\n    StackItem,\n    Text,\n    TextContent,\n    TextVariants,\n    Tooltip,\n    SplitItem,\n    Split,\n    Grid,\n    GridItem,\n    Card,\n    CardBody,\n    Button\n} from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\nimport { Reboot } from '@redhat-cloud-services/frontend-components/components/Reboot';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/js/icons/check-circle-icon';\nimport OutlinedQuestionCircleIcon from '@patternfly/react-icons/dist/js/icons/outlined-question-circle-icon';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\nimport { injectIntl } from 'react-intl';\nimport Label from '../Snippets/Label';\nimport messages from '../../../Messages';\nimport { RISK_OF_CHANGE_TOOLTIP, RISK_OF_CHANGE_LABEL, RH_KB_URL, CVES_PATH } from '../../../Helpers/constants';\nimport { CSAwIcon } from '../../PresentationalComponents/CSAwIcon/CSAwIcon';\nimport CSAwRuleSummary from './CSAwRuleSummary';\nimport './CSAwRuleBox.scss';\n\nconst CSAwRuleBox = ({ rules, synopsis, changeExposedSystemsParameters,  intl }) => {\n    const [numberOfCards, setNumberOfCards] = useState(2);\n    const ruleCards = rules.length > numberOfCards && rules.slice(0, numberOfCards) || rules;\n\n    const handleExposedSystemFilter = (ruleId) => {\n        const params = { security_rule: ruleId };\n        changeExposedSystemsParameters(params);\n    };\n\n    return <Fragment>\n        {ruleCards && ruleCards.map(rule => (\n            <Card className=\"card-box-shadow\" key={rule.rule_id}>\n                <CardBody>\n                    <Grid hasGutter>\n                        <GridItem span={12}>\n                            <TextContent className={'icon-with-label'}>\n                                <Text component={TextVariants.h3}>\n                                    <Tooltip\n                                        content={intl.formatMessage(messages.rulesIconTooltip)}\n                                        trigger='mouseenter focus click'\n                                    >\n                                        <CSAwIcon />\n                                    </Tooltip>\n                                    {rule.description}\n                                </Text>\n                            </TextContent>\n                        </GridItem>\n                        <GridItem span={8}>\n                            <Stack hasGutter>\n                                <StackItem>\n                                    <CSAwRuleSummary text={rule.summary} />\n                                </StackItem>\n\n                                <StackItem>\n                                    <TextContent>\n                                        <Text component={TextVariants.h4}>{intl.formatMessage(messages.associatedCves)}</Text>\n                                        <Text component={TextVariants.p}>\n                                            {synopsis} ({intl.formatMessage(messages.current)})\n                                            {\n                                                rule.associated_cves\n                                                .filter(cve => cve !== synopsis)\n                                                .map((cve, _i) =>\n                                                    <a\n                                                        className=\"associated-cve-link\"\n                                                        key={_i}\n                                                        href={`${CVES_PATH}/${cve}`}\n                                                    >\n                                                        {cve}\n                                                    </a>\n                                                )\n                                                .reduce((prev, curr) => [prev, ', ', curr], [''])\n                                            }\n                                        </Text>\n                                    </TextContent>\n                                </StackItem>\n\n                                {\n                                    rule.kbase_node_id &&\n                                    <StackItem>\n                                        <TextContent>\n                                            <Text\n                                                className={'icon-with-label'}\n                                                component={TextVariants.p}\n                                            >\n                                                <a\n                                                    className=\"kb-link\"\n                                                    href={`${RH_KB_URL}/${rule.kbase_node_id}`}\n                                                    target=\"_blank\"\n                                                    rel=\"noopener noreferrer\"\n                                                >\n                                                    {\n                                                        intl.formatMessage(messages.knowledgebaseArticle)\n                                                    }\n                                                    <ExternalLinkAltIcon className=\"l-sm-spacer\"/>\n                                                </a>\n                                            </Text>\n                                        </TextContent>\n                                    </StackItem>\n                                }\n\n                            </Stack>\n                        </GridItem>\n                        <GridItem span={4}>\n                            <Stack hasGutter>\n                                {rule.rule_id &&\n                                    <StackItem>\n                                        <TextContent>\n                                            <Text\n                                                className={'filter-affected-systems'}\n                                                onClick={() => handleExposedSystemFilter(rule.rule_id)}\n                                            >\n                                                <Link\n                                                    key={rule.rule_id}\n                                                    to={`/cves/${synopsis}/?security_rule=${rule.rule_id}`}\n                                                >\n                                                    {intl.formatMessage(messages.filterByAffectedSystems)}\n\n                                                </Link>\n\n                                            </Text>\n                                        </TextContent>\n                                    </StackItem>\n                                }\n                                <StackItem>\n                                    <TextContent>\n                                        <Text component={TextVariants.h4}>\n                                            {intl.formatMessage(messages.remediationLabel)}\n                                        </Text>\n                                        <Split hasGutter>\n                                            <SplitItem>\n                                                <Label className=\"label\">\n                                                    {intl.formatMessage(messages.ansibleRemediation)}\n\n                                                </Label>\n                                            </SplitItem>\n                                            <SplitItem className=\"icon-with-label\" isFilled>\n                                                { !rule.playbook_count\n                                                    ? intl.formatMessage(messages.no)\n                                                    : (\n                                                        <Fragment>\n                                                            <CheckCircleIcon className=\"ansible-success\" />\n                                                            {intl.formatMessage(messages.yes)}\n                                                            <Tooltip\n                                                                content={intl.formatMessage(messages.ansibleRemediationTooltip)}\n                                                                trigger='mouseenter focus click'\n                                                            >\n                                                                <OutlinedQuestionCircleIcon\n                                                                    color={'var(--pf-global--secondary-color--100)'}\n                                                                    className=\"l-sm-spacer\"\n                                                                />\n                                                            </Tooltip>\n                                                        </Fragment>\n                                                    )\n                                                }\n                                            </SplitItem>\n                                        </Split>\n                                        <Split hasGutter className=\"pf-u-mt-md\">\n                                            <SplitItem>\n                                                <Label className=\"label\">\n                                                    {intl.formatMessage(messages.riskOfChange)}\n                                                </Label>\n                                            </SplitItem>\n                                            <SplitItem isFilled className=\"icon-with-label\">\n                                                { RISK_OF_CHANGE_LABEL[rule.change_risk] }\n\n                                                <Tooltip\n                                                    content={RISK_OF_CHANGE_TOOLTIP[rule.change_risk]}\n                                                    trigger='mouseenter focus click'\n                                                >\n                                                    <OutlinedQuestionCircleIcon\n                                                        color={'var(--pf-global--secondary-color--100)'}\n                                                        className=\"l-sm-spacer\"\n                                                    />\n                                                </Tooltip>\n\n                                                <div className=\"pf-u-mt-sm\">\n                                                    { rule.reboot_required && <strong><Reboot red /></strong> }\n                                                </div>\n                                            </SplitItem>\n                                        </Split>\n                                    </TextContent>\n                                </StackItem>\n                            </Stack>\n                        </GridItem>\n                    </Grid>\n                </CardBody>\n            </Card>\n        ))}\n        {\n            rules.length > numberOfCards && (\n                <Grid>\n                    <GridItem>\n                        <Button key=\"viewMoreRules\" variant=\"secondary\" onClick={() => setNumberOfCards(rules.length)}>\n                            {intl.formatMessage(messages.viewMoreScurityRules, { rules: (rules.length - numberOfCards) })}\n                        </Button>\n                    </GridItem>\n                </Grid>\n            )\n        }\n    </Fragment>;\n};\n\nCSAwRuleBox.defaultProps = {\n    rules: []\n};\n\nCSAwRuleBox.propTypes = {\n    intl: PropTypes.any,\n    rules: PropTypes.array,\n    synopsis: PropTypes.string,\n    changeExposedSystemsParameters: PropTypes.func\n};\n\nexport default injectIntl(CSAwRuleBox);\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { CVEPageContext } from '../../SmartComponents/CVEDetailsPage/CVEDetailsPage';\nimport CVEPageDetailsDescription from '../CVEPageDetailsDescription/CVEPageDetailsDescription';\nimport CVEPageDetailsSeverity from '../CVEPageDetailsSeverity/CVEPageDetailsSeverity';\nimport WithLoader from '../WithLoader/WithLoader';\nimport CSAwRuleBox from '../CSAwRuleBox/CSAwRuleBox';\n\nconst CVEPageDetails = props => {\n    return (\n        <CVEPageContext.Consumer>\n            {context => (\n                <Grid hasGutter>\n                    <GridItem md={8} sm={12}>\n                        <WithLoader loading={context.isLoading} variant=\"spinner\">\n                            <CVEPageDetailsDescription cveAttributes={props.data.data} />\n                        </WithLoader>\n                    </GridItem>\n\n                    <GridItem md={4} sm={12} className=\"severity-info-box\">\n                        <CVEPageDetailsSeverity\n                            impact={props.data.data.impact}\n                            cvss2_score={props.data.data.cvss2_score}\n                            cvss3_score={props.data.data.cvss3_score}\n                            cvss2_metrics={props.data.data.cvss2_metrics}\n                            cvss3_metrics={props.data.data.cvss3_metrics}\n                        />\n                    </GridItem>\n                    <CSAwRuleBox\n                        changeExposedSystemsParameters = {props.changeExposedSystemsParameters}\n                        synopsis={props.data.data.synopsis}\n                        rules={props.data.data.rules}\n                    />\n                </Grid>\n\n            )}\n        </CVEPageContext.Consumer>\n    );\n};\n\nCVEPageDetails.propTypes = {\n    data: propTypes.object,\n    changeExposedSystemsParameters: propTypes.func\n};\n\nexport default CVEPageDetails;\n","import { Dropdown, KebabToggle } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React, { useState } from 'react';\n\nconst BaseKebab = ({ dropdownItems, disabled, ...props }) => {\n    const [isOpen, setOpen] = useState(false);\n\n    function handleOnKebabToggle(kebabState) {\n        setOpen(kebabState);\n    }\n\n    function handleOnKebabSelect() {\n        setOpen(!isOpen);\n    }\n\n    return (\n        <div>\n            <Dropdown\n                onSelect={handleOnKebabSelect}\n                toggle={<KebabToggle onToggle={handleOnKebabToggle} isDisabled={disabled} />}\n                isOpen={isOpen}\n                isPlain\n                dropdownItems={dropdownItems}\n                {...props}\n            />\n        </div>\n    );\n};\n\nBaseKebab.propTypes = {\n    dropdownItems: propTypes.array,\n    disabled: propTypes.bool\n};\n\nexport default BaseKebab;\n","import { DropdownItem } from '@patternfly/react-core';\nimport React from 'react';\nimport messages from '../../../Messages';\nimport { FormattedMessage } from 'react-intl';\n\nexport const kebabItemDownloadJSON = (downloadReport, { ...props }) => (\n    <DropdownItem key=\"json\" component=\"button\" onClick={() => downloadReport('json')} {...props}>\n        <FormattedMessage {...messages.kebabExportAsJson} />\n    </DropdownItem>\n);\n\nexport const kebabItemDownloadCSV = (downloadReport, { ...props }) => (\n    <DropdownItem key=\"csv\" component=\"button\" onClick={() => downloadReport('csv')} {...props}>\n        <FormattedMessage {...messages.kebabExportAsCsv} />\n    </DropdownItem>\n);\n\nexport const kebabItemEditBusinessRisk = (showBusinessRiskModal, cves, { ...props }) => (\n    <DropdownItem key=\"editBusinessRisk\" component=\"button\" onClick={() => showBusinessRiskModal(cves)} {...props}>\n        <FormattedMessage {...messages.kebabEditBusinessRisk} />\n    </DropdownItem>\n);\n\nexport const kebabItemEditStatus = (showStatusModal, cves, inventoryIds,  { ...props }) => (\n    <DropdownItem key=\"editStatus\" component=\"button\" onClick={() => showStatusModal(cves, inventoryIds)} {...props}>\n        <FormattedMessage {...messages.kebabEditStatus} />\n    </DropdownItem>\n);\n\nexport const kebabItemToggleCvesDescription = (toggleCveDescription, isExpanded, { ...props }) => (\n    <DropdownItem key=\"toggleCveDescription\" component=\"button\" onClick={() => toggleCveDescription()} {...props}>\n        {isExpanded ? <FormattedMessage {...messages.kebabCollapseCves} /> : <FormattedMessage {...messages.kebabExpandCves} /> }\n    </DropdownItem>\n);\n\nexport const kebabItemExcludeSystemAnalysis = (doOptOut, isOptOut,  { ...props }) => (\n    <DropdownItem key=\"do_opt_out_analysis\" component=\"button\" onClick={() => doOptOut()} {...props}>\n        {isOptOut ?\n            <FormattedMessage {...messages.kebabResumeAnalysis} /> :\n            <FormattedMessage {...messages.kebabExcludeVulnerabilityAnalysis} />}\n    </DropdownItem>\n);\n\nexport const kebabItemExcludeSystem = (doOptOut, isOptOut,  { ...props }) => (\n    <DropdownItem key=\"do_opt_out\" component=\"button\" onClick={() => doOptOut()} {...props}>\n        {isOptOut ?\n            <FormattedMessage {...messages.kebabResumeAnalysis} /> :\n            <FormattedMessage {...messages.kebabExcludeAnalysis} />}\n    </DropdownItem>\n);\n\nexport const kebabItemToggleExcludeSystemDisplay = (handleOptOut, isOptedOut,  { ...props }) => (\n    <DropdownItem key=\"toggle_opt_out\" component=\"button\" onClick={() => handleOptOut()} {...props}>\n        {isOptedOut ?\n            <FormattedMessage {...messages.kebabHideExcludedSystems} />  :\n            <FormattedMessage {...messages.kebabShowExcludedSystems} />}\n    </DropdownItem>\n);\n","import propTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport { withRouter } from 'react-router-dom';\nimport * as reactRouterDom from 'react-router-dom';\nimport * as ReactRedux from 'react-redux';\nimport { reactCore } from '@redhat-cloud-services/frontend-components-utilities/files/inventoryDependencies';\nimport { useCreateUrlParams, updateRef, createSortBy, handleSortColumn } from '../../../Helpers/MiscHelper';\nimport {\n    Table as PfTable,\n    TableBody,\n    TableHeader,\n    TableGridBreakpoint,\n    cellWidth,\n    TableVariant,\n    sortable,\n    expandable,\n    SortByDirection\n} from '@patternfly/react-table';\nimport { useDispatch, useSelector } from 'react-redux';\nimport React, { useEffect, useState, useMemo } from 'react';\nimport CvePairStatusModal from '../Modals/CvePairStatusModal';\nimport ReducerRegistry from '../../../Utilities/ReducerRegistry';\nimport { middlewareListener } from '../../../Utilities/ReducerRegistry';\nimport selectAllCheckbox from '../../../Helpers/selectAllCheckboxHelper';\nimport { Text, TextContent, TextVariants, Stack, StackItem } from '@patternfly/react-core';\nimport { systemExposedTableRowActions, createExposedSystemsTable } from '../../../Helpers/CVEHelper';\nimport { inventoryEntitiesReducer } from '../../../Store/Reducers/InventoryEntitiesReducer';\nimport DownloadReport from '../../../Helpers/DownloadReport';\nimport Remediation from '../Remediation/Remediation';\nimport searchFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/SearchFilter';\nimport securityRuleFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/SecurityRuleFilter';\nimport statusFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/StatusFilter';\nimport { exportConfig, buildActiveFilters, removeFilters } from '../../../Helpers/TableToolbarHelper';\nimport {\n    selectMultipleEntities,\n    fetchAffectedSystemsByCVE,\n    fetchCveDetails,\n    expandRow,\n    changeExposedSystemsParameters,\n    clearCveStore,\n    fetchAffectedSystemsIdsByCve,\n    clearInventoryStore\n} from '../../../Store/Actions/Actions';\nimport {\n    SYSTEMS_EXPOSED_HEADER,\n    SYSTEMS_EXPOSED_ALLOWED_PARAMS,\n    SYSTEMS_EXPOSED_SORTING_HEADER\n} from '../../../Helpers/constants';\n\nconst SystemsExposedTable = (props) => {\n    const [InventoryTable, setInventoryTable] = useState(()=> () => <div>Loading...</div>);\n    const [StatusModal, setStatusModal] = useState(() => () => null);\n    const [selectedHosts, setSelectedHosts] = useState(undefined);\n    const [urlParamsAllowed, setUrlParamsAllowed] = useState(false);\n    const [isFirstMount, setIsFirstMount] = useState(true);\n\n    const inventory = React.createRef();\n    const dispatch = useDispatch();\n    const [createUrlParams, urlParameters] = useCreateUrlParams(SYSTEMS_EXPOSED_ALLOWED_PARAMS);\n\n    const affectedSystems = useSelector(\n        ({ CVEDetailsPageStore }) => CVEDetailsPageStore.affectedSystemsByCVE\n    );\n\n    const isLoading = useSelector(\n        ({ CVEDetailsPageStore }) => CVEDetailsPageStore.affectedSystemsByCVE.isLoading\n    );\n\n    const parameters = useSelector(\n        ({ CVEDetailsPageStore }) => CVEDetailsPageStore.parameters\n    );\n\n    const metadata = useSelector(\n        ({ CVEDetailsPageStore }) => CVEDetailsPageStore.affectedSystemsByCVE.payload.meta\n    );\n\n    const items = useMemo(() => createExposedSystemsTable({ ...affectedSystems, ...props.cve }), [affectedSystems]);\n\n    const apply = (config) => dispatch(changeExposedSystemsParameters(config));\n\n    const inventoryRefresh = ({ page, per_page: pageSize, sort }) => {\n        if (inventory.current && (metadata.page !== page || metadata.page_size !== pageSize)) {\n            apply({ page, page_size: pageSize, sort });\n        }\n\n        if (metadata && metadata.total_items <= pageSize && inventory.current) {\n            inventory.current.onRefreshData({ page, page_size: pageSize, sort });\n        }\n    };\n\n    const handleSelect = (isChecked, payload) => {\n        const selectedHosts = payload ? payload : [];\n        setSelectedHosts(selectedHosts);\n    };\n\n    const onSelect = (payload) => {\n        const newSelected = payload.data.selected ? [payload.data.id, ...(selectedHosts || [])]\n            : selectedHosts && selectedHosts.filter(item => item !== payload.data.id);\n\n        handleSelect(false, newSelected);\n    };\n\n    middlewareListener.addNew({\n        on: 'SELECT_ENTITY',\n        callback: payload => onSelect(payload)\n    });\n\n    useEffect(() => {\n        if (!inventory.current && isFirstMount) {\n            apply(urlParameters);\n            setIsFirstMount(false);\n        }\n        else {\n            dispatch(fetchAffectedSystemsByCVE(props.cve, { ...parameters }));\n            urlParamsAllowed\n                && createUrlParams({ ...parameters })\n                || setUrlParamsAllowed(true);\n        }\n    }, [parameters]);\n\n    useEffect(()=>{\n        if (selectedHosts) {\n            dispatch(selectMultipleEntities(selectedHosts));\n        }\n    }, [selectedHosts, dispatch]);\n\n    const loadInventory = async () => {\n        const { inventoryConnector, mergeWithEntities, mergeWithDetail } = await insights.loadInventory({\n            ReactRedux,\n            react: React,\n            reactRouterDom,\n            pfReactTable: {\n                Table: PfTable,\n                TableBody,\n                TableHeader,\n                TableGridBreakpoint,\n                cellWidth,\n                TableVariant,\n                sortable,\n                expandable,\n                SortByDirection\n            },\n            pfReact: reactCore\n        });\n        ReducerRegistry.register({\n            ...mergeWithEntities(inventoryEntitiesReducer(SYSTEMS_EXPOSED_HEADER)),\n            ...mergeWithDetail()\n        });\n\n        const { InventoryTable } = inventoryConnector(ReducerRegistry.getStore());\n        setInventoryTable(() => InventoryTable);\n    };\n\n    useEffect(() => {\n        loadInventory();\n        return () => {\n            dispatch(clearCveStore());\n            dispatch(clearInventoryStore());\n        };\n    }, []);\n\n    const downloadReport = format => {\n        let params = [props.cve, { ...parameters }];\n        DownloadReport.exec(fetchAffectedSystemsByCVE, params, format, 'systems-exposed');\n    };\n\n    const showStatusModal = (cves, inventories) => {\n        setStatusModal(\n            () => () =>\n                <CvePairStatusModal\n                    cves={cves}\n                    updateRef={() => {\n                        updateRef(items.meta, apply);\n                        fetchCveDetails(props.cve);\n                    }}\n                    inventories={ inventories }\n                    type={'systemsExposed'}\n                />\n\n        );\n    };\n\n    const getSelectedSystemsLabel = () => {\n        // we only need display name when we have 1 system selected\n        if (selectedHosts.length === 1) {\n            const { id, display_name: displayName } = items.data.find(({ id }) => id === selectedHosts[0]);\n            return [{ id, displayName }];\n        }\n        else if (selectedHosts.length > 1) {\n            return selectedHosts.map(item => ({ id: item }));\n        }\n\n        return [];\n    };\n\n    const kebabOptions = [\n        (!isLoading && (<Remediation systems={selectedHosts} cves={props.cve} />) || ''),\n        {\n            label: props.intl.formatMessage(messages.editStatus),\n            onClick: () => showStatusModal(\n                [props.cveStatusDetails],\n                getSelectedSystemsLabel()\n            ),\n            props: { isDisabled: !selectedHosts || selectedHosts.length === 0 }\n        }\n    ];\n\n    const selectOptions  = useMemo(() => selectAllCheckbox({\n        selectedItems: selectedHosts || [],\n        selectorHandler: handleSelect,\n        items: items.data && items || { data: [], meta: { total_items: 0 } },\n        fetchResource: ops => fetchAffectedSystemsIdsByCve(props.cve, { ...parameters, ...ops })\n    }), [items, selectedHosts, parameters]);\n\n    const sortBy = () =>\n        createSortBy(\n            SYSTEMS_EXPOSED_SORTING_HEADER,\n            urlParameters.sort\n        );\n\n    const onSort = (event, index, direction) =>\n        handleSortColumn(\n            index,\n            direction,\n            SYSTEMS_EXPOSED_SORTING_HEADER,\n            urlParameters.sort,\n            inventoryRefresh\n        );\n\n    return (\n        <React.Fragment>\n            <Stack hasGutter>\n                <StackItem>\n                    <TextContent>\n                        <Text component={TextVariants.h2}>\n                            {props.intl.formatMessage(messages.systemsExposedTableHeader)}\n                        </Text>\n                    </TextContent>\n                </StackItem>\n                <StackItem>\n                    <InventoryTable\n                        tableProps={{\n                            canSelectAll: false,\n                            onSort: (items.data.length > 0) && onSort,\n                            sortBy: (items.data.length > 0) && sortBy(),\n                            actionResolver: (rowData, rowIndex) =>\n                                systemExposedTableRowActions(showStatusModal, props.cveStatusDetails, rowIndex.rowIndex)\n                        }}\n                        items={items.data}\n                        key={'inventory'}\n                        ref={inventory}\n                        expandable='true'\n                        onRefresh={inventoryRefresh}\n                        page={parameters.page}\n                        total={metadata.total_items}\n                        isLoaded = {!isLoading}\n                        perPage={parameters.page_size }\n                        hasCheckbox={items && items.length !== 0}\n                        showActions={items && items.length !== 0}\n                        exportConfig={{\n                            isDisabled: items.meta.total_items === 0 && (!selectedHosts || selectedHosts.length === 0),\n                            ...exportConfig({ downloadReport })\n                        }}\n                        onExpandClick={(_e, _i, isOpen, { id }) => dispatch(expandRow(id, isOpen))}\n                        actionsConfig={{\n                            actions: kebabOptions,\n                            kebabToggleProps: { isDisabled: !selectedHosts || selectedHosts.length === 0 }\n                        }}\n                        activeFiltersConfig={{\n                            filters: buildActiveFilters({ ...parameters }, props.filterRuleValues),\n                            onDelete: (e, i) => removeFilters(i, apply)\n                        }}\n                        bulkSelect ={ selectOptions && {\n                            count: selectedHosts && selectedHosts.length,\n                            items: selectOptions.items,\n                            isDisabled: items.meta.total_items === 0 && (!selectedHosts || selectedHosts.length === 0),\n                            checked: Boolean(selectedHosts && selectedHosts.length),\n                            onSelect: () => selectOptions.handleOnCheckboxChange()\n                        }}\n                        filterConfig={{\n                            items: [\n                                searchFilter(\n                                    messages.systemsSearchName, messages.searchFilterByName,\n                                    parameters.filter, apply\n                                ),\n                                securityRuleFilter(apply, parameters, props.filterRuleValues),\n                                statusFilter(apply, parameters)\n                            ]\n                        }}\n                    >\n                        {StatusModal && <StatusModal />}\n                    </InventoryTable>\n                </StackItem>\n            </Stack>\n        </React.Fragment>\n    );\n};\n\nSystemsExposedTable.propTypes = {\n    intl: propTypes.object,\n    cve: propTypes.string,\n    cveStatusDetails: propTypes.object,\n    filterRuleValues: propTypes.array\n};\n\nexport default injectIntl(\n    withRouter(\n        SystemsExposedTable\n    )\n);\n","import { DropdownPosition, Page } from '@patternfly/react-core';\nimport { InvalidObject, Main } from '@redhat-cloud-services/frontend-components';\nimport propTypes from 'prop-types';\nimport React, { useMemo, useState, useEffect } from 'react';\nimport { createCveDetailsPage } from '../../../Helpers/CVEHelper';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    fetchCveDetails,\n    setHeader,\n    changeExposedSystemsParameters,\n    fetchAffectedSystemsByCVE\n} from '../../../Store/Actions/Actions';\nimport { withRouter } from 'react-router-dom';\nimport { PATHS } from '../../../Helpers/constants';\nimport CVEPageDetails from '../../PresentationalComponents/CVEPageDetails/CVEPageDetails';\nimport BaseKebab from '../../PresentationalComponents/DownloadReportKebab/BaseKebab';\nimport { kebabItemEditBusinessRisk, kebabItemEditStatus } from '../../PresentationalComponents/DownloadReportKebab/KebabItems';\nimport BusinessRiskModal from '../Modals/BusinessRiskModal';\nimport CveStatusModal from '../Modals/CveStatusModal';\nimport SystemsExposedTable from '../SystemsExposedTable/SystemsExposedTable';\nimport VulnerabilityHeader from '../VulnerabilityHeader/VulnerabilityHeader';\n\nexport const CVEPageContext = React.createContext({ isLoading: true });\n\nconst CVEDetailsPage = (props) => {\n    const dispatch = useDispatch();\n    const [cveName] = useState(props.match.params.cve);\n    const [BusinessModal, setBusinessRisk] = useState(() => () => null);\n    const [StatusModal, setStatusModal] = useState(() => () => null);\n\n    const details = useSelector(\n        ({ CVEDetailsPageStore }) => CVEDetailsPageStore.cveDetails\n    );\n    const cveDetails = useMemo(() => createCveDetailsPage(details), [details]);\n\n    useEffect(() => {\n        dispatch(\n            setHeader({\n                breadcrumbs: [\n                    { title: PATHS.home.title, to: PATHS.home.to },\n                    { title: PATHS.cvesPage.title, to: PATHS.cvesPage.to },\n                    { title: cveName, isActive: true }\n                ]\n            })\n        );\n        dispatch(fetchCveDetails(cveName));\n    }, []);\n\n    const showBusinessRiskModal = cves => {\n        setBusinessRisk(\n            () => () =>\n                <BusinessRiskModal open cves={cves} updateRef={() => dispatch(fetchCveDetails(cveName))} />\n        );\n    };\n\n    const showStatusModal = cves => {\n        setStatusModal(\n            () => () =>\n                <CveStatusModal\n                    cves={cves}\n                    updateRef={() => {\n                        dispatch(fetchCveDetails(cveName));\n                        dispatch(fetchAffectedSystemsByCVE(cveName));\n                    }}\n                />\n        );\n    };\n\n    const { error, data } = cveDetails;\n\n    const cveStatusDetails = {\n        id: cveName,\n        status_id: cveDetails.data.status_id,\n        justification: cveDetails.data.status_justification\n    };\n    const kebabItems = [\n        kebabItemEditBusinessRisk(showBusinessRiskModal, [\n            {\n                business_risk_id: cveDetails.data.business_risk_id,\n                id: cveName,\n                justification: cveDetails.data.business_risk_justification\n            }\n        ]),\n        kebabItemEditStatus(showStatusModal, [cveStatusDetails])\n    ];\n    const { rules } = data;\n    const filterRuleValues = rules && rules.map(\n        ({ rule_id: ruleId, description }) => ({ value: ruleId, label: description })\n    );\n\n    if (!error) {\n        return (\n            <Page>\n                <CVEPageContext.Provider value={cveDetails && { isLoading: cveDetails.isLoading }}>\n                    <VulnerabilityHeader\n                        title={\n                            <span style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                {cveName}\n                                <BaseKebab dropdownItems={kebabItems} position={DropdownPosition.right}></BaseKebab>\n                            </span>\n                        }\n                    >\n                        <CVEPageDetails changeExposedSystemsParameters={changeExposedSystemsParameters} data={cveDetails} />\n                        <StatusModal />\n                        <BusinessModal />\n                    </VulnerabilityHeader>\n                    <Main>\n                        <SystemsExposedTable\n                            cve={cveName}\n                            filterRuleValues={filterRuleValues}\n                            cveStatusDetails={cveStatusDetails}\n                            methods={{ showStatusModal }}\n                        />\n                    </Main>\n                </CVEPageContext.Provider>\n            </Page>\n        );\n    } else {\n        return (\n            <React.Fragment>\n                <VulnerabilityHeader title={cveName}/>\n                <InvalidObject />\n            </React.Fragment>\n        );\n    }\n};\n\nCVEDetailsPage.propTypes = {\n    match: propTypes.object,\n    cveDetails: propTypes.object,\n    fetchCveDetails: propTypes.func,\n    setHeader: propTypes.func,\n    handleCveDetailsError: propTypes.func\n};\nexport default withRouter(CVEDetailsPage);\n","// doT.js\n// 2011-2014, Laura Doktorova, https://github.com/olado/doT\n// Licensed under the MIT license.\n\n(function () {\n\t\"use strict\";\n\n\tvar doT = {\n\t\tname: \"doT\",\n\t\tversion: \"1.1.1\",\n\t\ttemplateSettings: {\n\t\t\tevaluate:    /\\{\\{([\\s\\S]+?(\\}?)+)\\}\\}/g,\n\t\t\tinterpolate: /\\{\\{=([\\s\\S]+?)\\}\\}/g,\n\t\t\tencode:      /\\{\\{!([\\s\\S]+?)\\}\\}/g,\n\t\t\tuse:         /\\{\\{#([\\s\\S]+?)\\}\\}/g,\n\t\t\tuseParams:   /(^|[^\\w$])def(?:\\.|\\[[\\'\\\"])([\\w$\\.]+)(?:[\\'\\\"]\\])?\\s*\\:\\s*([\\w$\\.]+|\\\"[^\\\"]+\\\"|\\'[^\\']+\\'|\\{[^\\}]+\\})/g,\n\t\t\tdefine:      /\\{\\{##\\s*([\\w\\.$]+)\\s*(\\:|=)([\\s\\S]+?)#\\}\\}/g,\n\t\t\tdefineParams:/^\\s*([\\w$]+):([\\s\\S]+)/,\n\t\t\tconditional: /\\{\\{\\?(\\?)?\\s*([\\s\\S]*?)\\s*\\}\\}/g,\n\t\t\titerate:     /\\{\\{~\\s*(?:\\}\\}|([\\s\\S]+?)\\s*\\:\\s*([\\w$]+)\\s*(?:\\:\\s*([\\w$]+))?\\s*\\}\\})/g,\n\t\t\tvarname:\t\"it\",\n\t\t\tstrip:\t\ttrue,\n\t\t\tappend:\t\ttrue,\n\t\t\tselfcontained: false,\n\t\t\tdoNotSkipEncoded: false\n\t\t},\n\t\ttemplate: undefined, //fn, compile template\n\t\tcompile:  undefined, //fn, for express\n\t\tlog: true\n\t}, _globals;\n\n\tdoT.encodeHTMLSource = function(doNotSkipEncoded) {\n\t\tvar encodeHTMLRules = { \"&\": \"&#38;\", \"<\": \"&#60;\", \">\": \"&#62;\", '\"': \"&#34;\", \"'\": \"&#39;\", \"/\": \"&#47;\" },\n\t\t\tmatchHTML = doNotSkipEncoded ? /[&<>\"'\\/]/g : /&(?!#?\\w+;)|<|>|\"|'|\\//g;\n\t\treturn function(code) {\n\t\t\treturn code ? code.toString().replace(matchHTML, function(m) {return encodeHTMLRules[m] || m;}) : \"\";\n\t\t};\n\t};\n\n\t_globals = (function(){ return this || (0,eval)(\"this\"); }());\n\n\t/* istanbul ignore else */\n\tif (typeof module !== \"undefined\" && module.exports) {\n\t\tmodule.exports = doT;\n\t} else if (typeof define === \"function\" && define.amd) {\n\t\tdefine(function(){return doT;});\n\t} else {\n\t\t_globals.doT = doT;\n\t}\n\n\tvar startend = {\n\t\tappend: { start: \"'+(\",      end: \")+'\",      startencode: \"'+encodeHTML(\" },\n\t\tsplit:  { start: \"';out+=(\", end: \");out+='\", startencode: \"';out+=encodeHTML(\" }\n\t}, skip = /$^/;\n\n\tfunction resolveDefs(c, block, def) {\n\t\treturn ((typeof block === \"string\") ? block : block.toString())\n\t\t.replace(c.define || skip, function(m, code, assign, value) {\n\t\t\tif (code.indexOf(\"def.\") === 0) {\n\t\t\t\tcode = code.substring(4);\n\t\t\t}\n\t\t\tif (!(code in def)) {\n\t\t\t\tif (assign === \":\") {\n\t\t\t\t\tif (c.defineParams) value.replace(c.defineParams, function(m, param, v) {\n\t\t\t\t\t\tdef[code] = {arg: param, text: v};\n\t\t\t\t\t});\n\t\t\t\t\tif (!(code in def)) def[code]= value;\n\t\t\t\t} else {\n\t\t\t\t\tnew Function(\"def\", \"def['\"+code+\"']=\" + value)(def);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn \"\";\n\t\t})\n\t\t.replace(c.use || skip, function(m, code) {\n\t\t\tif (c.useParams) code = code.replace(c.useParams, function(m, s, d, param) {\n\t\t\t\tif (def[d] && def[d].arg && param) {\n\t\t\t\t\tvar rw = (d+\":\"+param).replace(/'|\\\\/g, \"_\");\n\t\t\t\t\tdef.__exp = def.__exp || {};\n\t\t\t\t\tdef.__exp[rw] = def[d].text.replace(new RegExp(\"(^|[^\\\\w$])\" + def[d].arg + \"([^\\\\w$])\", \"g\"), \"$1\" + param + \"$2\");\n\t\t\t\t\treturn s + \"def.__exp['\"+rw+\"']\";\n\t\t\t\t}\n\t\t\t});\n\t\t\tvar v = new Function(\"def\", \"return \" + code)(def);\n\t\t\treturn v ? resolveDefs(c, v, def) : v;\n\t\t});\n\t}\n\n\tfunction unescape(code) {\n\t\treturn code.replace(/\\\\('|\\\\)/g, \"$1\").replace(/[\\r\\t\\n]/g, \" \");\n\t}\n\n\tdoT.template = function(tmpl, c, def) {\n\t\tc = c || doT.templateSettings;\n\t\tvar cse = c.append ? startend.append : startend.split, needhtmlencode, sid = 0, indv,\n\t\t\tstr  = (c.use || c.define) ? resolveDefs(c, tmpl, def || {}) : tmpl;\n\n\t\tstr = (\"var out='\" + (c.strip ? str.replace(/(^|\\r|\\n)\\t* +| +\\t*(\\r|\\n|$)/g,\" \")\n\t\t\t\t\t.replace(/\\r|\\n|\\t|\\/\\*[\\s\\S]*?\\*\\//g,\"\"): str)\n\t\t\t.replace(/'|\\\\/g, \"\\\\$&\")\n\t\t\t.replace(c.interpolate || skip, function(m, code) {\n\t\t\t\treturn cse.start + unescape(code) + cse.end;\n\t\t\t})\n\t\t\t.replace(c.encode || skip, function(m, code) {\n\t\t\t\tneedhtmlencode = true;\n\t\t\t\treturn cse.startencode + unescape(code) + cse.end;\n\t\t\t})\n\t\t\t.replace(c.conditional || skip, function(m, elsecase, code) {\n\t\t\t\treturn elsecase ?\n\t\t\t\t\t(code ? \"';}else if(\" + unescape(code) + \"){out+='\" : \"';}else{out+='\") :\n\t\t\t\t\t(code ? \"';if(\" + unescape(code) + \"){out+='\" : \"';}out+='\");\n\t\t\t})\n\t\t\t.replace(c.iterate || skip, function(m, iterate, vname, iname) {\n\t\t\t\tif (!iterate) return \"';} } out+='\";\n\t\t\t\tsid+=1; indv=iname || \"i\"+sid; iterate=unescape(iterate);\n\t\t\t\treturn \"';var arr\"+sid+\"=\"+iterate+\";if(arr\"+sid+\"){var \"+vname+\",\"+indv+\"=-1,l\"+sid+\"=arr\"+sid+\".length-1;while(\"+indv+\"<l\"+sid+\"){\"\n\t\t\t\t\t+vname+\"=arr\"+sid+\"[\"+indv+\"+=1];out+='\";\n\t\t\t})\n\t\t\t.replace(c.evaluate || skip, function(m, code) {\n\t\t\t\treturn \"';\" + unescape(code) + \"out+='\";\n\t\t\t})\n\t\t\t+ \"';return out;\")\n\t\t\t.replace(/\\n/g, \"\\\\n\").replace(/\\t/g, '\\\\t').replace(/\\r/g, \"\\\\r\")\n\t\t\t.replace(/(\\s|;|\\}|^|\\{)out\\+='';/g, '$1').replace(/\\+''/g, \"\");\n\t\t\t//.replace(/(\\s|;|\\}|^|\\{)out\\+=''\\+/g,'$1out+=');\n\n\t\tif (needhtmlencode) {\n\t\t\tif (!c.selfcontained && _globals && !_globals._encodeHTML) _globals._encodeHTML = doT.encodeHTMLSource(c.doNotSkipEncoded);\n\t\t\tstr = \"var encodeHTML = typeof _encodeHTML !== 'undefined' ? _encodeHTML : (\"\n\t\t\t\t+ doT.encodeHTMLSource.toString() + \"(\" + (c.doNotSkipEncoded || '') + \"));\"\n\t\t\t\t+ str;\n\t\t}\n\t\ttry {\n\t\t\treturn new Function(c.varname, str);\n\t\t} catch (e) {\n\t\t\t/* istanbul ignore else */\n\t\t\tif (typeof console !== \"undefined\") console.log(\"Could not create a template function: \" + str);\n\t\t\tthrow e;\n\t\t}\n\t};\n\n\tdoT.compile = function(tmpl, def) {\n\t\treturn doT.template(tmpl, null, def);\n\t};\n}());\n","export const FETCH_CVE_LIST = 'FETCH_CVE_LIST';\nexport const EMPTY_CVE_LIST = 'EMPTY_CVE_LIST';\nexport const FETCH_CVE_DETAILS = 'FETCH_CVE_DETAILS';\nexport const FETCH_SYSTEM_DETAILS = 'FETCH_SYSTEM_DETAILS';\nexport const FETCH_AFFECTED_SYSTEMS_BY_CVE = 'FETCH_AFFECTED_SYSTEMS_BY_CVE';\nexport const FETCH_SYSTEMS = 'FETCH_SYSTEMS';\nexport const SET_HEADER = 'SET_HEADER';\nexport const SYSTEM_OPT_OUT = 'SYSTEM_OPT_OUT';\nexport const FETCH_SYSTEM_CVE_LIST = 'FETCH_SYSTEM_CVE_LIST';\nexport const CHANGE_SYSTEM_CVE_STATUS = 'CHANGE_SYSTEM_CVE_STATUS';\nexport const CHANGE_EXPOSED_SYSTEMS_PARAMETERS = 'CHANGE_EXPOSED_SYSTEMS_PARAMETERS';\nexport const CHANGE_CVE_LIST_PARAMETERS = 'CHANGE_CVE_LIST_PARAMETERS';\nexport const SELECT_CVE = 'SELECT_CVE';\nexport const SELECT_SYSTEM_CVE = 'SELECT_SYSTEM_CVE';\nexport const SELECT_ENTITIES = 'SELECT_ENTITIES';\nexport const SELECT_MULTIPLE_ENTITIES = 'SELECT_MULTIPLE_ENTITIES';\nexport const EXPAND_CVE = 'EXPAND_CVE';\nexport const EXPAND_ROW = 'EXPAND_ROW'; //TODO unify it with EXPAND_CVE action\nexport const EXPAND_SYSTEM_CVE = 'EXPAND_SYSTEM_CVE';\nexport const FETCH_INSIGHTS_SYSTEM_RULES = 'FETCH_INSIGHTS_SYSTEM_RULES';\nexport const CHANGE_SYSTEMS_PARAMS = 'CHANGE_SYSTEMS_PARAMS';\nexport const CHANGE_SYSTEM_CVE_LIST_PARAMETERS = 'CHANGE_SYSTEM_CVE_LIST_PARAMETERS';\nexport const CLEAR_SYSTEMS_STORE = 'CLEAR_SYSTEMS_STORE';\nexport const CLEAR_SYSTEM_CVES_STORE = 'CLEAR_SYSTEM_CVES_STORE';\nexport const CLEAR_CVE_STORE = 'CLEAR_CVE_STORE';\nexport const CLEAR_INVENTORY_STORE = 'CLEAR_INVENTORY_STORE';\nexport const CLEAR_CVES_STORE = 'CLEAR_CVEs_STORE';\nexport const FETCH_AFFECTED_SYSTEM_IDS_BY_CVE = 'FETCH_AFFECTED_SYSTEM_IDS_BY_CVE';\nexport const FETCH_SYSTEMS_IDS = 'FETCH_SYSTEMS_IDS';\nexport const FETCH_CVE_LIST_IDS = 'FETCH_CVE_LIST_IDS';\nexport const FETCH_SYTEM_DETAILS_IDS = 'FETCH_SYTEM_DETAILS_IDS';\n","import { SecurityIcon, UnknownIcon } from '@patternfly/react-icons';\nimport { SortByDirection } from '@patternfly/react-table';\nimport findIndex from 'lodash/findIndex';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { impactColorList, impactList, CVSS_OPTIONS, PUBLIC_DATE_OPTIONS } from './constants';\nimport qs from 'query-string';\nimport { IntlProvider } from '@redhat-cloud-services/frontend-components-translations';\n\nexport const dataShape = propTypes.shape({\n    data: propTypes.oneOfType([propTypes.object, propTypes.array]),\n    meta: propTypes.object,\n    isLoading: propTypes.bool\n});\n\n/**\n * Based on the  allowedParams it will construct the arguments for the API call\n * which is defined in the vulnerabilities-client. vulnerabilities-client is written is typescript\n * so we need to define and pass every single parameter. Order in allowedParams is important\n *\n * @param {Object} apiProps\n * @param {Array} allowedParams - order should align with the params in the vulnerabilities-client\n */\nexport function constructParameters(apiProps, allowedParams) {\n    if (apiProps) {\n        Object.keys(apiProps).forEach(\n            key => (\n                apiProps[key] === undefined\n                || apiProps[key] === ''\n            )\n            && delete apiProps[key]\n        );\n\n        const params = allowedParams.map(item => apiProps[item]);\n\n        return params;\n    }\n\n    return [];\n}\n\n// TODO DRY:similar to constructParameters\nexport function constructURLParameters(urlParams, allowedParams) {\n    if (urlParams) {\n        const params = { ...urlParams };\n        Object.keys(urlParams).forEach(\n            key => (\n                params[key] === undefined\n                || params[key] === ''\n                || !allowedParams.includes(key)\n                || params[key] === false\n            )\n            && delete params[key]\n\n        );\n        return params;\n    }\n}\n\nexport function formatDate(date = new Date()) {\n    const prepend = (number) => `${`${number}`.length === 1 ? '0' : ''}${number}`;\n    const toFormat = new Date(date);\n    if (toFormat instanceof Date && !isNaN(toFormat)) {\n        const year = toFormat.getFullYear();\n        const month = toFormat.getMonth();\n        const day = toFormat.getDate();\n        return `${year}-${prepend(month)}-${prepend(day)}`;\n    }\n\n    return toFormat;\n}\n\n/**\n * Contructs the filters which have more than one parameter that needs to be passed\n * and resets all the parameteres when it's needed\n *\n * @param {Object} filterParams\n * @return {Object}\n */\nexport function constructFilterParameters(filterParams) {\n    if (Object.prototype.hasOwnProperty.call(filterParams, 'cvss_filter')) {\n        let cvssEntry = CVSS_OPTIONS.find(({ value }) => value === filterParams.cvss_filter);\n\n        if (typeof cvssEntry === 'undefined' && typeof filterParams.cvss_filter !== 'undefined') {\n            let values = filterParams.cvss_filter.split(/[^0-9]+/).filter(item => parseFloat(item));\n            let [from, to] = values;\n            cvssEntry = { from, to };\n        } else if (typeof cvssEntry === 'undefined' && typeof filterParams.cvss_filter === 'undefined') {\n            cvssEntry = { from: undefined, to: undefined };\n        } else if ((cvssEntry && cvssEntry.label === 'N/A') && filterParams.cvss_filter === 'from-1to-1') {\n            cvssEntry = { from: -1, to: -1 };\n        }\n\n        filterParams.cvss_from = cvssEntry.from;\n        filterParams.cvss_to = cvssEntry.to;\n    }\n\n    if (Object.prototype.hasOwnProperty.call(filterParams, 'publish_date')) {\n        let publicEntry = PUBLIC_DATE_OPTIONS.find(item => item.value === filterParams.publish_date);\n\n        if (typeof publicEntry !== 'undefined') {\n            filterParams.public_from = publicEntry.from && formatDate(publicEntry.from);\n            filterParams.public_to = publicEntry.to && formatDate(publicEntry.to);\n        } else {\n            filterParams.public_from = undefined;\n            filterParams.public_to = undefined;\n            filterParams.publish_date = undefined;\n        }\n    }\n\n    return filterParams;\n}\n\nexport function getImpactDetails(impact) {\n    if (Object.keys(impactList).includes(impact)) {\n        return {\n            title: impactList[impact].title,\n            color: impactList[impact].color,\n            text: impactList[impact].text,\n            titleContent: (\n                <SecurityIcon size=\"lg\" />\n            )\n        };\n    } else {\n        return {\n            title: 'Unknown',\n            color: impactColorList.unknown,\n            text: '',\n            titleContent: (\n                <UnknownIcon size=\"lg\" />\n            )\n        };\n    }\n}\n\nexport const createSortBy = (header, value) => {\n    if (value) {\n        let direction = value.indexOf('-') === 0 ? SortByDirection.desc : SortByDirection.asc;\n        value = value.replace(/^(-|\\+)/, '');\n        const index = findIndex(header, item => item.key === value);\n        let sort = {\n            index,\n            direction\n        };\n        return sort;\n    }\n\n    return {};\n};\n\nexport const handleSortColumn = (key, direction, header, currentSort, apply) => {\n    let columnName = header[key].key;\n    const useDefault = currentSort && currentSort.substr(1) !== columnName;\n    if (direction === SortByDirection.desc || useDefault) {\n        columnName = '-' + columnName;\n    }\n\n    apply({ sort: columnName });\n};\n\nexport const updateStateSet = (stateSet, names, value) => {\n    [].concat(names).forEach(name => {\n        value ? stateSet.add(name) : stateSet.delete(name);\n    });\n    return stateSet;\n};\n\nexport const useCreateUrlParams = (allowedParams) => {\n    const urlParams = qs.parse(window.location.search);\n\n    const createUrlParams = (parameters) => {\n        window.history.pushState(\n            {},\n            '',\n            `${\n                window.location.pathname\n            }?${\n                qs.stringify(constructURLParameters(parameters, allowedParams))\n            }`\n        );\n    };\n\n    return [createUrlParams, urlParams];\n};\n\nexport const updateRef = (meta, apply) => {\n    const pages = parseInt(meta.pages);\n    const page = parseInt(meta.page);\n    const cvesCount = parseInt(meta.cvesCount);\n    const goTo = (pages === page && page > 1 && cvesCount === 1) ? (pages - 1) : page;\n\n    apply({ page: goTo });\n};\n\nexport const mountWithIntl = (Component) => {\n    const wrapper = mount(Component, {\n        wrappingComponent: IntlProvider\n    });\n    const provider = wrapper.getWrappingComponent();\n    provider.setProps({ locale: 'en' });\n\n    return wrapper;\n};\n","import {\n    authInterceptor,\n    interceptor401,\n    responseDataInterceptor\n} from '@redhat-cloud-services/frontend-components-utilities/files/interceptors';\nimport axios from 'axios';\nimport { ReadOnlyNotification } from '../Helpers/constants';\nconst instance = axios.create();\n\nexport function errorInterceptor(err) {\n    if (!axios.isCancel(err)) {\n        const errObject = { ...err };\n\n        if (errObject.response && errObject.response.data && errObject.response.data.errors) {\n            const data = errObject.response.data.errors[0];\n            throw data;\n        }\n\n        throw err;\n    }\n}\n\nexport function readOnlyInterceptor(error) {\n    if (error.response && error.response.status === 503) {\n        const data = ReadOnlyNotification;\n        throw data;\n    }\n\n    throw error;\n}\n\ninstance.interceptors.request.use(authInterceptor);\ninstance.interceptors.response.use(responseDataInterceptor);\ninstance.interceptors.response.use(null, interceptor401);\ninstance.interceptors.response.use(null, readOnlyInterceptor);\ninstance.interceptors.response.use(null, errorInterceptor);\n\nexport default instance;\n","let BASE_ROUTE = '/api/vulnerability/';\nimport { GitApi } from '@redhat-cloud-services/vulnerabilities-client';\nimport instance from '../Utilities/interceptors';\nimport { constructParameters } from './MiscHelper';\n\nlet api = new GitApi(undefined, BASE_ROUTE, instance);\n\nexport function getCveDetails(synopsis) {\n    const result = api.getCveDetails(synopsis);\n    return result;\n}\n\nexport function getSystemDetails(system) {\n    const result = api.getSystemDetails(system);\n    return result;\n}\n\nexport function getAffectedSystemsByCVE(synopsis, apiProps) {\n    let parameterNames = [\n        'filter',\n        'limit',\n        'offset',\n        'page',\n        'page_size',\n        'sort',\n        'status_id',\n        'data_format',\n        'security_rule',\n        'rule_name'\n    ];\n    let parameterArray = constructParameters(apiProps, parameterNames);\n    let result = api.getAffectedSystemsByCve(synopsis, ...parameterArray);\n    return result;\n}\n\nexport function getSystems(apiProps) {\n    let parameterNames = ['filter', 'limit', 'offset', 'page', 'page_size', 'sort', 'data_format', 'stale', 'uuid', 'opt_out'];\n    let parameterArray = constructParameters(apiProps, parameterNames);\n    let result = api.getSystemsList(...parameterArray);\n    return result;\n}\n\nexport function getCveListByAccount(apiProps) {\n    let parameterNames = [\n        'filter',\n        'limit',\n        'offset',\n        'page',\n        'page_size',\n        'sort',\n        'cvss_from',\n        'cvss_to',\n        'public_from',\n        'public_to',\n        'impact',\n        'data_format',\n        'business_risk_id',\n        'status_id',\n        'security_rule',\n        'show_all'\n    ];\n    let parameterArray = constructParameters(apiProps, parameterNames);\n    let result = api.getCveList(...parameterArray);\n    return result;\n}\n\nexport function optOutSystem(system, status) {\n    let result = api.setSystemOptOut(system, status);\n    return result;\n}\n\nexport function getCveListBySystem(apiProps) {\n    const { system } = apiProps;\n    let parameterNames = [\n        'filter',\n        'limit',\n        'offset',\n        'page',\n        'page_size',\n        'sort',\n        'cvss_from',\n        'cvss_to',\n        'public_from',\n        'public_to',\n        'impact',\n        'status_id',\n        'data_format',\n        'business_risk_id',\n        'security_rule'\n    ];\n    if (apiProps && system) {\n        Object.keys(apiProps).forEach(key => (apiProps[key] === undefined || apiProps[key] === '') && delete apiProps[key]);\n        const params = parameterNames.map(item => apiProps[item]);\n        return api.getCveListBySystem(system, ...params).catch(err => {\n            if (err && err.status === '404') {\n                return { errors: err };\n            }\n\n            throw err;\n        });\n    }\n}\n\nexport function setSystemCveStatus(params) {\n    let result = api.setStatus(params);\n    return result;\n}\n\nexport function optOutSystems(systems, optOut) {\n    const data = { opt_out: optOut, inventory_id: new Array(...systems) };\n    let result = api.setSystemsOptOut(data);\n    return result;\n}\n\nexport function setBusinessRisk(params) {\n    let result = api.setCveBusinessRisk(params);\n    return result;\n}\n\nexport function setCveStatus(params) {\n    let result = api.setCveStatus(params);\n    return result;\n}\n\nexport function getExecutiveReport() {\n    let result = api.getExecutiveReport();\n    return result;\n}\n\nexport function getAffectedSystemsIdsByCve(synopsis, apiProps) {\n    //TODO: Once all new endpoints for selecting IDs are introduced optimize all parameterNames arrays in this page\n    let parameterNames = [\n        'filter',\n        'limit',\n        'offset',\n        'page',\n        'page_size',\n        'sort',\n        'status_id',\n        'data_format',\n        'security_rule'\n    ];\n    let parameterArray = constructParameters(apiProps, parameterNames);\n    let result = api.getAffectedSystemsIdsByCve(synopsis, ...parameterArray);\n    return result;\n}\n\nexport function getSystemsIds(apiProps) {\n    let parameterNames = ['filter', 'limit', 'offset', 'page', 'page_size', 'sort', 'data_format', 'stale', 'uuid', 'opt_out'];\n    let parameterArray = constructParameters(apiProps, parameterNames);\n    let result = api.getSystemsIds(...parameterArray);\n    return result;\n}\n\nexport function getCveIdsList(apiProps) {\n    let parameterNames = [\n        'filter',\n        'limit',\n        'offset',\n        'page',\n        'page_size',\n        'sort',\n        'cvss_from',\n        'cvss_to',\n        'public_from',\n        'public_to',\n        'impact',\n        'data_format',\n        'business_risk_id',\n        'status_id',\n        'security_rule',\n        'show_all'\n    ];\n    let parameterArray = constructParameters(apiProps, parameterNames);\n    let result = api.getCveIdsList(...parameterArray);\n    return result;\n}\n\nexport function getCveIdsBySystem(apiProps) {\n    const { system } = apiProps;\n    let parameterNames = [\n        'filter',\n        'limit',\n        'offset',\n        'page',\n        'page_size',\n        'sort',\n        'cvss_from',\n        'cvss_to',\n        'public_from',\n        'public_to',\n        'impact',\n        'status_id',\n        'data_format',\n        'business_risk_id',\n        'security_rule'\n    ];\n    if (apiProps && system) {\n        Object.keys(apiProps).forEach(key => (apiProps[key] === undefined || apiProps[key] === '') && delete apiProps[key]);\n        const params = parameterNames.map(item => apiProps[item]);\n        return api.getCveIdsBySystem(system, ...params);\n    }\n}\n","import Immutable from 'seamless-immutable';\nimport * as ActionTypes from '../ActionTypes';\n\n// Initial State\nexport const initialState = Immutable({\n    title: 'Vulnerability',\n    breadcrumbs: []\n});\n\n// Reducer\nexport const BreadcrumbStore = (state = initialState, action) => {\n    let newState;\n    switch (action.type) {\n        case ActionTypes.SET_HEADER + '_FULFILLED':\n            newState = state.set('title', (action.payload && action.payload.title) || initialState.title);\n            newState = newState.set('breadcrumbs', (action.payload && action.payload.breadcrumbs) || initialState.breadcrumbs);\n            return newState;\n\n        default:\n            return state;\n    }\n};\n","import Immutable from 'seamless-immutable';\nimport * as ActionTypes from '../ActionTypes';\n\n// Initial State\nexport const initialState = Immutable({\n    affectedSystemsByCVE: {\n        isLoading: true,\n        openedRows: [],\n        payload: {\n            meta: {\n                total_items: 0,\n                page: 1,\n                page_size: 20\n            }\n        }\n    },\n    parameters: {\n        page: 1,\n        page_size: 20,\n        selectedHosts: [],\n        security_rule: undefined,\n        status_id: undefined\n    },\n    cveDetails: {\n        isLoading: true,\n        payload: {},\n        error: false\n    }\n});\n\n// Reducer\nexport const CVEDetailsPageStore = (state = initialState, action) => {\n    let newState;\n    switch (action.type) {\n        case ActionTypes.FETCH_CVE_DETAILS + '_REJECTED':\n            newState = state.setIn(['cveDetails', 'error'], true);\n            newState = newState.setIn(['cveDetails', 'isLoading'], false);\n            return newState;\n        case ActionTypes.FETCH_CVE_DETAILS + '_PENDING':\n            newState = state.setIn(['cveDetails', 'isLoading'], true);\n            return newState;\n\n        case ActionTypes.FETCH_CVE_DETAILS + '_FULFILLED':\n            newState = state.setIn(['cveDetails', 'payload'], action.payload);\n            newState = newState.setIn(['cveDetails', 'isLoading'], false);\n            return newState;\n\n        case ActionTypes.FETCH_AFFECTED_SYSTEMS_BY_CVE + '_PENDING':\n            newState = state.setIn(['affectedSystemsByCVE', 'isLoading'], true);\n            return newState;\n\n        case ActionTypes.FETCH_AFFECTED_SYSTEMS_BY_CVE + '_FULFILLED':\n            newState = state.setIn(['affectedSystemsByCVE', 'payload'], action.payload);\n            newState = newState.setIn(['affectedSystemsByCVE', 'isLoading'], false);\n            return newState;\n        case ActionTypes.CHANGE_EXPOSED_SYSTEMS_PARAMETERS:\n            newState = state.setIn(['parameters'], {\n                ...state.parameters,\n                ...action.payload,\n                page_size: action.payload.page_size || state.parameters.page_size\n            });\n            return newState;\n        case ActionTypes.CLEAR_CVE_STORE:\n            return initialState;\n        default:\n            return state;\n    }\n};\n\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/files/esm/ReducerRegistry';\nimport { FETCH_SYSTEM_CVE_LIST } from '../ActionTypes';\n\nexport const initialState = {\n    parameters: {\n        page: 1,\n        page_size: 20\n    },\n    cveList: {\n        isLoading: true,\n        payload: [],\n        meta: new Date(),\n        error: false\n    },\n    openedCves: [],\n    selectedCves: [],\n    expandCveDescription: false\n};\n\nfunction pendingVulnerabilities(state, { meta }) {\n    return {\n        ...state,\n        timestamp: meta,\n        cveList: {\n            ...state.cveList,\n            isLoading: true\n        }\n    };\n}\n\nfunction rejectedVulnerabilities(state, { meta, payload }) {\n    return {\n        ...state,\n        timestamp: meta,\n        cveList: {\n            payload: { errors: payload },\n            isLoading: false\n        }\n    };\n}\n\nfunction fulfilledVulnerabilities(state, action) {\n    const { payload, meta } = action;\n    if (meta >= state.timestamp) {\n        return {\n            ...state,\n            timestamp: meta,\n            cveList: {\n                payload,\n                isLoading: false\n            }\n        };\n    }\n\n    return state;\n}\n\nfunction selectEntity(state, action) {\n    let newState = state;\n    let selectedCves = newState.selectedCves.slice();\n    if (Array.isArray(action.payload)) {\n        selectedCves = action.payload;\n    } else {\n        (selectedCves.includes(action.payload) && selectedCves.splice(selectedCves.indexOf(action.payload), 1)) ||\n            selectedCves.push(action.payload);\n    }\n\n    return { ...newState, selectedCves };\n}\n\nfunction expandCve(state, action) {\n    let newState = state;\n    const { isOpen, cves, expandCveDescription } = action.payload;\n    let openedCves = newState.openedCves.slice();\n\n    if (cves.length > 0) {\n        cves.map(cve =>{\n            const index = openedCves.findIndex(element => element.id === cve);\n            if (index > -1) { openedCves[index] = ({ id: cve, isOpen });}\n            else {openedCves.push({ id: cve, isOpen });}\n        });\n    }\n    else {\n        openedCves = openedCves.map(cve => ({ id: cve.id, isOpen: false }));\n    }\n\n    return { ...newState, openedCves, expandCveDescription };\n}\n\nfunction changeParameters(state, action) {\n    let newState = state;\n    newState.parameters = { ...state.parameters, ...action.payload };\n    return newState;\n}\n\nfunction clearSystemCvesStore(state) {\n    let newState = state;\n    newState.selectedCves = [];\n    newState.openedCves = [];\n    newState.parameters = {\n        page: 1,\n        page_size: 20\n    };\n    return newState;\n}\n\nexport const SystemCvesStore = applyReducerHash(\n    {\n        [`${FETCH_SYSTEM_CVE_LIST}_PENDING`]: pendingVulnerabilities,\n        [`${FETCH_SYSTEM_CVE_LIST}_REJECTED`]: rejectedVulnerabilities,\n        [`${FETCH_SYSTEM_CVE_LIST}_FULFILLED`]: fulfilledVulnerabilities,\n        ['CHANGE_SYSTEM_CVE_LIST_PARAMETERS']: changeParameters,\n        ['SELECT_SYSTEM_CVE']: selectEntity,\n        ['EXPAND_SYSTEM_CVE']: expandCve,\n        ['CLEAR_SYSTEM_CVES_STORE']: clearSystemCvesStore\n    },\n    initialState\n);\n","import * as ActionTypes from '../ActionTypes';\n\nexport const initialState = {\n    isLoading: true,\n    payload: {},\n    metadata: {\n        page: 1,\n        limit: 20,\n        offet: 0,\n        total_items: 0\n    },\n    params: {\n        filter: undefined,\n        opt_out: false,\n        page: 1,\n        page_size: 20,\n        sort: '-last_upload'\n    }\n};\n\nexport const SystemsPageStore = (state = initialState, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case ActionTypes.FETCH_SYSTEMS + '_PENDING':\n            newState.isLoading = true;\n            return newState;\n        case ActionTypes.FETCH_SYSTEMS + '_REJECTED':\n            newState.error = true;\n            return newState;\n        case ActionTypes.FETCH_SYSTEMS + '_FULFILLED':\n            newState.payload = action.payload;\n            newState.metadata = action.payload.meta;\n            newState.isLoading = false;\n            return newState;\n        case ActionTypes.CHANGE_SYSTEMS_PARAMS:\n            newState.params = {\n                ...newState.params,\n                ...action.payload,\n                page_size: action.payload.page_size || newState.params.page_size\n            };\n            return newState;\n        case ActionTypes.CLEAR_SYSTEMS_STORE:\n            return initialState;\n        default:\n            return state;\n    }\n};\n","import * as ActionTypes from '../ActionTypes';\n\n// Initial State\nexport const initialState = {\n    cveList: {\n        isLoading: true,\n        payload: [],\n        timestamp: new Date()\n    },\n    parameters: {\n        show_all: false,\n        sort: '-public_date'\n    },\n    selectedCves: [],\n    openedCves: [],\n    expandCveDescription: false\n};\n\nfunction isValid(stateTimestamp, actionTimestamp) {\n    return actionTimestamp >= stateTimestamp;\n}\n\n// Reducer\nexport const CVEsStore = (state = initialState, action) => {\n    let newState = { ...state };\n\n    switch (action.type) {\n        case ActionTypes.FETCH_CVE_LIST + '_PENDING':\n            newState.cveList = {\n                timestamp: action.meta,\n                isLoading: true\n            };\n            return newState;\n\n        case ActionTypes.FETCH_CVE_LIST + '_REJECTED':\n            newState.error = true;\n            newState.cveList = {\n                isLoading: false,\n                payload: { errors: action.payload }\n            };\n            return newState;\n\n        case ActionTypes.FETCH_CVE_LIST + '_FULFILLED':\n            if (isValid(state.cveList.timestamp, action.meta)) {\n                newState.cveList = {\n                    payload: action.payload,\n                    isLoading: false\n                };\n\n                return newState;\n            }\n\n            return state;\n\n        case ActionTypes.CHANGE_CVE_LIST_PARAMETERS + '_FULFILLED':\n            newState.parameters = { ...newState.parameters, ...action.payload };\n            return newState;\n\n        case ActionTypes.SELECT_CVE: {\n            let selectedCves = newState.selectedCves.slice();\n            if (Array.isArray(action.payload)) {\n                selectedCves = action.payload;\n            } else {\n                (selectedCves.includes(action.payload) && selectedCves.splice(selectedCves.indexOf(action.payload), 1)) ||\n                    selectedCves.push(action.payload);\n            }\n\n            return { ...newState, selectedCves  };\n        }\n\n        case ActionTypes.EXPAND_CVE: {\n            if (Array.isArray(action.payload)) {\n                const openedCves = action.payload;\n                const expandCveDescription = action.payload.length === 0 ? false : true;\n                return { ...newState,  openedCves, expandCveDescription };\n            }\n\n            const cveName = newState.cveList.payload.data[action.payload / 2].id;\n            const openedCves = newState.openedCves.slice();\n            (openedCves.includes(cveName) && openedCves.splice(openedCves.indexOf(cveName), 1)) || openedCves.push(cveName);\n\n            const expandCveDescription = (openedCves.length === newState.cveList.payload.data.length);\n\n            return { ...newState, openedCves, expandCveDescription };\n        }\n\n        case ActionTypes.CLEAR_CVES_STORE: {\n            return initialState;\n        }\n\n        default:\n            return state;\n    }\n};\n","import * as APIHelper from '../../Helpers/APIHelper';\nimport * as HeaderHelper from '../../Helpers/HeaderHelper';\nimport ReducerRegistry from '../../Utilities/ReducerRegistry';\nimport * as ActionTypes from '../ActionTypes';\nimport { BreadcrumbStore } from '../Reducers/BreadcrumbStore';\nimport { CVEDetailsPageStore } from '../Reducers/CVEDetailsPageStore';\nimport { SystemCvesStore } from '../Reducers/SystemCvesStore';\nimport { SystemsPageStore } from '../Reducers/SystemsPageStore';\nimport { CVEsStore } from '../Reducers/CVEsStore';\n\nReducerRegistry.register({ CVEDetailsPageStore });\nReducerRegistry.register({ CVEsStore });\nReducerRegistry.register({ SystemsPageStore });\nReducerRegistry.register({ BreadcrumbStore });\nReducerRegistry.register({ SystemCvesStore });\n\nexport const setHeader = props => ({\n    type: ActionTypes.SET_HEADER,\n    payload: new Promise(resolve => {\n        resolve(HeaderHelper.setHeader(props));\n    }).then(result => result)\n});\n\nexport const fetchAffectedSystemsByCVE = (cve, apiProps) =>({\n    type: ActionTypes.FETCH_AFFECTED_SYSTEMS_BY_CVE,\n    payload: new Promise(resolve => {\n        resolve(APIHelper.getAffectedSystemsByCVE(cve, apiProps));\n    }).then(result => result)\n});\n\nexport const fetchSystems = options => ({\n    type: ActionTypes.FETCH_SYSTEMS,\n    payload: new Promise(resolve => {\n        resolve(APIHelper.getSystems(options));\n    }).then(result => result)\n});\n\nexport const fetchCveDetails = synopsis => ({\n    type: ActionTypes.FETCH_CVE_DETAILS,\n    payload: new Promise(resolve => {\n        resolve(APIHelper.getCveDetails(synopsis));\n    }).then(result => result)\n});\n\nexport const fetchSystemDetails = system => ({\n    type: ActionTypes.FETCH_SYSTEM_DETAILS,\n    meta: { noError: true },\n    payload: new Promise(resolve => {\n        resolve(APIHelper.getSystemDetails(system));\n    }).then(result => result)\n});\n\nexport const fetchCveListByAccount = apiProps => ({\n    type: ActionTypes.FETCH_CVE_LIST,\n    meta: new Date(),\n    payload: APIHelper.getCveListByAccount(apiProps)\n});\n\nexport const optOutSystemAction = (system, status) => ({\n    type: ActionTypes.SYSTEM_OPT_OUT,\n    payload: new Promise(resolve => {\n        resolve(APIHelper.optOutSystem(system, status));\n    }).then(result => result)\n});\n\nexport const fetchCveListBySystem = apiProps => ({\n    type: ActionTypes.FETCH_SYSTEM_CVE_LIST,\n    meta: new Date(),\n    payload: APIHelper.getCveListBySystem(apiProps)\n});\n\nexport const changeSystemCveStatusAction = (inventoryId, cve, statusId, callback) => ({\n    type: ActionTypes.CHANGE_SYSTEM_CVE_STATUS,\n    payload: APIHelper.setSystemCveStatus(inventoryId, cve, statusId, callback)\n});\n\nexport const optOutSystemsAction = (system, status) => ({\n    type: ActionTypes.SYSTEM_OPT_OUT,\n    payload: new Promise(resolve => {\n        resolve(APIHelper.optOutSystems(system, status));\n    }).then(result => result)\n});\n\nexport const changeCveListParameters = apiProps => ({\n    type: ActionTypes.CHANGE_CVE_LIST_PARAMETERS,\n    payload: new Promise(resolve => {\n        resolve(apiProps);\n    }).then(result => result)\n});\n\nexport const changeExposedSystemsParameters = (params) => ({\n    type: ActionTypes.CHANGE_EXPOSED_SYSTEMS_PARAMETERS,\n    payload: params\n});\n\nexport const changeSystemCVEsParameters = (params) => ({\n    type: ActionTypes.CHANGE_SYSTEM_CVE_LIST_PARAMETERS,\n    payload: params\n});\n\nexport const selectCve = apiProps => ({\n    type: ActionTypes.SELECT_CVE,\n    payload: apiProps\n});\n\nexport const expandCve = apiProps => ({\n    type: ActionTypes.EXPAND_CVE,\n    payload: apiProps\n});\n\nexport const selectSystemCve = apiProps => ({\n    type: ActionTypes.SELECT_SYSTEM_CVE,\n    payload: apiProps\n});\n\nexport const expandSystemCve = apiProps => ({\n    type: ActionTypes.EXPAND_SYSTEM_CVE,\n    payload: apiProps\n});\n\nexport const expandRow = (id, isOpen) => ({\n    type: ActionTypes.EXPAND_ROW,\n    payload: { id, isOpen }\n});\n\nexport const selectEntities = (value, ids) => ({\n    type: ActionTypes.SELECT_ENTITIES,\n    payload: ids\n});\n\nexport const selectMultipleEntities = (selectedHosts) => ({\n    type: ActionTypes.SELECT_MULTIPLE_ENTITIES,\n    payload: selectedHosts\n});\n\nexport const changeSystemsParams = (params) => ({\n    type: ActionTypes.CHANGE_SYSTEMS_PARAMS,\n    payload: params\n});\n\nexport const clearSystemStore = () => ({\n    type: ActionTypes.CLEAR_SYSTEMS_STORE,\n    payload: []\n});\n\nexport const clearSystemCvesStore = () => ({\n    type: ActionTypes.CLEAR_SYSTEM_CVES_STORE,\n    payload: []\n});\n\nexport const clearCveStore = () => ({\n    type: ActionTypes.CLEAR_CVE_STORE,\n    payload: []\n});\n\nexport const fetchAffectedSystemsIdsByCve = (cve, apiProps) => ({\n    type: ActionTypes.FETCH_AFFECTED_SYSTEM_IDS_BY_CVE,\n    payload: APIHelper.getAffectedSystemsIdsByCve(cve, apiProps)\n});\n\nexport const fetchSystemsIds = (apiProps) => ({\n    type: ActionTypes.FETCH_SYSTEMS_IDS,\n    payload: APIHelper.getSystemsIds(apiProps)\n});\n\nexport const fetchCvesIds = (apiProps) => ({\n    type: ActionTypes.FETCH_CVE_LIST_IDS,\n    payload: APIHelper.getCveIdsList(apiProps)\n});\n\nexport const fetchSystemDetailsIds = (apiProps) =>({\n    type: ActionTypes.FETCH_SYTEM_DETAILS_IDS,\n    payload: APIHelper.getCveIdsBySystem(apiProps)\n});\n\nexport const clearInventoryStore = () =>({\n    type: ActionTypes.CLEAR_INVENTORY_STORE,\n    payload: []\n});\n\nexport const clearCVEsStore = () =>({\n    type: ActionTypes.CLEAR_CVES_STORE,\n    payload: []\n});\n","(function() {\n  \"use strict\";\n\nfunction immutableInit(config) {\n\n  // https://github.com/facebook/react/blob/v15.0.1/src/isomorphic/classic/element/ReactElement.js#L21\n  var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol.for && Symbol.for('react.element');\n  var REACT_ELEMENT_TYPE_FALLBACK = 0xeac7;\n\n  var globalConfig = {\n    use_static: false\n  };\n  if (isObject(config)) {\n      if (config.use_static !== undefined) {\n          globalConfig.use_static = Boolean(config.use_static);\n      }\n  }\n\n  function isObject(data) {\n    return (\n      typeof data === 'object' &&\n      !Array.isArray(data) &&\n      data !== null\n    );\n  }\n\n  function instantiateEmptyObject(obj) {\n      var prototype = Object.getPrototypeOf(obj);\n      if (!prototype) {\n          return {};\n      } else {\n          return Object.create(prototype);\n      }\n  }\n\n  function addPropertyTo(target, methodName, value) {\n    Object.defineProperty(target, methodName, {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: value\n    });\n  }\n\n  function banProperty(target, methodName) {\n    addPropertyTo(target, methodName, function() {\n      throw new ImmutableError(\"The \" + methodName +\n        \" method cannot be invoked on an Immutable data structure.\");\n    });\n  }\n\n  var immutabilityTag = \"__immutable_invariants_hold\";\n\n  function addImmutabilityTag(target) {\n    addPropertyTo(target, immutabilityTag, true);\n  }\n\n  function isImmutable(target) {\n    if (typeof target === \"object\") {\n      return target === null || Boolean(\n        Object.getOwnPropertyDescriptor(target, immutabilityTag)\n      );\n    } else {\n      // In JavaScript, only objects are even potentially mutable.\n      // strings, numbers, null, and undefined are all naturally immutable.\n      return true;\n    }\n  }\n\n  function isEqual(a, b) {\n    // Avoid false positives due to (NaN !== NaN) evaluating to true\n    return (a === b || (a !== a && b !== b));\n  }\n\n  function isMergableObject(target) {\n    return target !== null && typeof target === \"object\" && !(Array.isArray(target)) && !(target instanceof Date);\n  }\n\n  var mutatingObjectMethods = [\n    \"setPrototypeOf\"\n  ];\n\n  var nonMutatingObjectMethods = [\n    \"keys\"\n  ];\n\n  var mutatingArrayMethods = mutatingObjectMethods.concat([\n    \"push\", \"pop\", \"sort\", \"splice\", \"shift\", \"unshift\", \"reverse\"\n  ]);\n\n  var nonMutatingArrayMethods = nonMutatingObjectMethods.concat([\n    \"map\", \"filter\", \"slice\", \"concat\", \"reduce\", \"reduceRight\"\n  ]);\n\n  var mutatingDateMethods = mutatingObjectMethods.concat([\n    \"setDate\", \"setFullYear\", \"setHours\", \"setMilliseconds\", \"setMinutes\", \"setMonth\", \"setSeconds\",\n    \"setTime\", \"setUTCDate\", \"setUTCFullYear\", \"setUTCHours\", \"setUTCMilliseconds\", \"setUTCMinutes\",\n    \"setUTCMonth\", \"setUTCSeconds\", \"setYear\"\n  ]);\n\n  function ImmutableError(message) {\n    this.name = 'MyError';\n    this.message = message;\n    this.stack = (new Error()).stack;\n  }\n  ImmutableError.prototype = new Error();\n  ImmutableError.prototype.constructor = Error;\n\n  function makeImmutable(obj, bannedMethods) {\n    // Tag it so we can quickly tell it's immutable later.\n    addImmutabilityTag(obj);\n\n    if (\"development\" !== \"production\") {\n      // Make all mutating methods throw exceptions.\n      for (var index in bannedMethods) {\n        if (bannedMethods.hasOwnProperty(index)) {\n          banProperty(obj, bannedMethods[index]);\n        }\n      }\n\n      // Freeze it and return it.\n      Object.freeze(obj);\n    }\n\n    return obj;\n  }\n\n  function makeMethodReturnImmutable(obj, methodName) {\n    var currentMethod = obj[methodName];\n\n    addPropertyTo(obj, methodName, function() {\n      return Immutable(currentMethod.apply(obj, arguments));\n    });\n  }\n\n  function arraySet(idx, value, config) {\n    var deep          = config && config.deep;\n\n    if (idx in this) {\n      if (deep && this[idx] !== value && isMergableObject(value) && isMergableObject(this[idx])) {\n        value = Immutable.merge(this[idx], value, {deep: true, mode: 'replace'});\n      }\n      if (isEqual(this[idx], value)) {\n        return this;\n      }\n    }\n\n    var mutable = asMutableArray.call(this);\n    mutable[idx] = Immutable(value);\n    return makeImmutableArray(mutable);\n  }\n\n  var immutableEmptyArray = Immutable([]);\n\n  function arraySetIn(pth, value, config) {\n    var head = pth[0];\n\n    if (pth.length === 1) {\n      return arraySet.call(this, head, value, config);\n    } else {\n      var tail = pth.slice(1);\n      var thisHead = this[head];\n      var newValue;\n\n      if (typeof(thisHead) === \"object\" && thisHead !== null) {\n        // Might (validly) be object or array\n        newValue = Immutable.setIn(thisHead, tail, value);\n      } else {\n        var nextHead = tail[0];\n        // If the next path part is a number, then we are setting into an array, else an object.\n        if (nextHead !== '' && isFinite(nextHead)) {\n          newValue = arraySetIn.call(immutableEmptyArray, tail, value);\n        } else {\n          newValue = objectSetIn.call(immutableEmptyObject, tail, value);\n        }\n      }\n\n      if (head in this && thisHead === newValue) {\n        return this;\n      }\n\n      var mutable = asMutableArray.call(this);\n      mutable[head] = newValue;\n      return makeImmutableArray(mutable);\n    }\n  }\n\n  function makeImmutableArray(array) {\n    // Don't change their implementations, but wrap these functions to make sure\n    // they always return an immutable value.\n    for (var index in nonMutatingArrayMethods) {\n      if (nonMutatingArrayMethods.hasOwnProperty(index)) {\n        var methodName = nonMutatingArrayMethods[index];\n        makeMethodReturnImmutable(array, methodName);\n      }\n    }\n\n    if (!globalConfig.use_static) {\n      addPropertyTo(array, \"flatMap\",  flatMap);\n      addPropertyTo(array, \"asObject\", asObject);\n      addPropertyTo(array, \"asMutable\", asMutableArray);\n      addPropertyTo(array, \"set\", arraySet);\n      addPropertyTo(array, \"setIn\", arraySetIn);\n      addPropertyTo(array, \"update\", update);\n      addPropertyTo(array, \"updateIn\", updateIn);\n      addPropertyTo(array, \"getIn\", getIn);\n    }\n\n    for(var i = 0, length = array.length; i < length; i++) {\n      array[i] = Immutable(array[i]);\n    }\n\n    return makeImmutable(array, mutatingArrayMethods);\n  }\n\n  function makeImmutableDate(date) {\n    if (!globalConfig.use_static) {\n      addPropertyTo(date, \"asMutable\", asMutableDate);\n    }\n\n    return makeImmutable(date, mutatingDateMethods);\n  }\n\n  function asMutableDate() {\n    return new Date(this.getTime());\n  }\n\n  /**\n   * Effectively performs a map() over the elements in the array, using the\n   * provided iterator, except that whenever the iterator returns an array, that\n   * array's elements are added to the final result instead of the array itself.\n   *\n   * @param {function} iterator - The iterator function that will be invoked on each element in the array. It will receive three arguments: the current value, the current index, and the current object.\n   */\n  function flatMap(iterator) {\n    // Calling .flatMap() with no arguments is a no-op. Don't bother cloning.\n    if (arguments.length === 0) {\n      return this;\n    }\n\n    var result = [],\n        length = this.length,\n        index;\n\n    for (index = 0; index < length; index++) {\n      var iteratorResult = iterator(this[index], index, this);\n\n      if (Array.isArray(iteratorResult)) {\n        // Concatenate Array results into the return value we're building up.\n        result.push.apply(result, iteratorResult);\n      } else {\n        // Handle non-Array results the same way map() does.\n        result.push(iteratorResult);\n      }\n    }\n\n    return makeImmutableArray(result);\n  }\n\n  /**\n   * Returns an Immutable copy of the object without the given keys included.\n   *\n   * @param {array} keysToRemove - A list of strings representing the keys to exclude in the return value. Instead of providing a single array, this method can also be called by passing multiple strings as separate arguments.\n   */\n  function without(remove) {\n    // Calling .without() with no arguments is a no-op. Don't bother cloning.\n    if (typeof remove === \"undefined\" && arguments.length === 0) {\n      return this;\n    }\n\n    if (typeof remove !== \"function\") {\n      // If we weren't given an array, use the arguments list.\n      var keysToRemoveArray = (Array.isArray(remove)) ?\n         remove.slice() : Array.prototype.slice.call(arguments);\n\n      // Convert numeric keys to strings since that's how they'll\n      // come from the enumeration of the object.\n      keysToRemoveArray.forEach(function(el, idx, arr) {\n        if(typeof(el) === \"number\") {\n          arr[idx] = el.toString();\n        }\n      });\n\n      remove = function(val, key) {\n        return keysToRemoveArray.indexOf(key) !== -1;\n      };\n    }\n\n    var result = instantiateEmptyObject(this);\n\n    for (var key in this) {\n      if (this.hasOwnProperty(key) && remove(this[key], key) === false) {\n        result[key] = this[key];\n      }\n    }\n\n    return makeImmutableObject(result);\n  }\n\n  function asMutableArray(opts) {\n    var result = [], i, length;\n\n    if(opts && opts.deep) {\n      for(i = 0, length = this.length; i < length; i++) {\n        result.push(asDeepMutable(this[i]));\n      }\n    } else {\n      for(i = 0, length = this.length; i < length; i++) {\n        result.push(this[i]);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Effectively performs a [map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map) over the elements in the array, expecting that the iterator function\n   * will return an array of two elements - the first representing a key, the other\n   * a value. Then returns an Immutable Object constructed of those keys and values.\n   *\n   * @param {function} iterator - A function which should return an array of two elements - the first representing the desired key, the other the desired value.\n   */\n  function asObject(iterator) {\n    // If no iterator was provided, assume the identity function\n    // (suggesting this array is already a list of key/value pairs.)\n    if (typeof iterator !== \"function\") {\n      iterator = function(value) { return value; };\n    }\n\n    var result = {},\n        length = this.length,\n        index;\n\n    for (index = 0; index < length; index++) {\n      var pair  = iterator(this[index], index, this),\n          key   = pair[0],\n          value = pair[1];\n\n      result[key] = value;\n    }\n\n    return makeImmutableObject(result);\n  }\n\n  function asDeepMutable(obj) {\n    if (\n      (!obj) ||\n      (typeof obj !== 'object') ||\n      (!Object.getOwnPropertyDescriptor(obj, immutabilityTag)) ||\n      (obj instanceof Date)\n    ) { return obj; }\n    return Immutable.asMutable(obj, {deep: true});\n  }\n\n  function quickCopy(src, dest) {\n    for (var key in src) {\n      if (Object.getOwnPropertyDescriptor(src, key)) {\n        dest[key] = src[key];\n      }\n    }\n\n    return dest;\n  }\n\n  /**\n   * Returns an Immutable Object containing the properties and values of both\n   * this object and the provided object, prioritizing the provided object's\n   * values whenever the same key is present in both objects.\n   *\n   * @param {object} other - The other object to merge. Multiple objects can be passed as an array. In such a case, the later an object appears in that list, the higher its priority.\n   * @param {object} config - Optional config object that contains settings. Supported settings are: {deep: true} for deep merge and {merger: mergerFunc} where mergerFunc is a function\n   *                          that takes a property from both objects. If anything is returned it overrides the normal merge behaviour.\n   */\n  function merge(other, config) {\n    // Calling .merge() with no arguments is a no-op. Don't bother cloning.\n    if (arguments.length === 0) {\n      return this;\n    }\n\n    if (other === null || (typeof other !== \"object\")) {\n      throw new TypeError(\"Immutable#merge can only be invoked with objects or arrays, not \" + JSON.stringify(other));\n    }\n\n    var receivedArray = (Array.isArray(other)),\n        deep          = config && config.deep,\n        mode          = config && config.mode || 'merge',\n        merger        = config && config.merger,\n        result;\n\n    // Use the given key to extract a value from the given object, then place\n    // that value in the result object under the same key. If that resulted\n    // in a change from this object's value at that key, set anyChanges = true.\n    function addToResult(currentObj, otherObj, key) {\n      var immutableValue = Immutable(otherObj[key]);\n      var mergerResult = merger && merger(currentObj[key], immutableValue, config);\n      var currentValue = currentObj[key];\n\n      if ((result !== undefined) ||\n        (mergerResult !== undefined) ||\n        (!currentObj.hasOwnProperty(key)) ||\n        !isEqual(immutableValue, currentValue)) {\n\n        var newValue;\n\n        if (mergerResult !== undefined) {\n          newValue = mergerResult;\n        } else if (deep && isMergableObject(currentValue) && isMergableObject(immutableValue)) {\n          newValue = Immutable.merge(currentValue, immutableValue, config);\n        } else {\n          newValue = immutableValue;\n        }\n\n        if (!isEqual(currentValue, newValue) || !currentObj.hasOwnProperty(key)) {\n          if (result === undefined) {\n            // Make a shallow clone of the current object.\n            result = quickCopy(currentObj, instantiateEmptyObject(currentObj));\n          }\n\n          result[key] = newValue;\n        }\n      }\n    }\n\n    function clearDroppedKeys(currentObj, otherObj) {\n      for (var key in currentObj) {\n        if (!otherObj.hasOwnProperty(key)) {\n          if (result === undefined) {\n            // Make a shallow clone of the current object.\n            result = quickCopy(currentObj, instantiateEmptyObject(currentObj));\n          }\n          delete result[key];\n        }\n      }\n    }\n\n    var key;\n\n    // Achieve prioritization by overriding previous values that get in the way.\n    if (!receivedArray) {\n      // The most common use case: just merge one object into the existing one.\n      for (key in other) {\n        if (Object.getOwnPropertyDescriptor(other, key)) {\n          addToResult(this, other, key);\n        }\n      }\n      if (mode === 'replace') {\n        clearDroppedKeys(this, other);\n      }\n    } else {\n      // We also accept an Array\n      for (var index = 0, length = other.length; index < length; index++) {\n        var otherFromArray = other[index];\n\n        for (key in otherFromArray) {\n          if (otherFromArray.hasOwnProperty(key)) {\n            addToResult(result !== undefined ? result : this, otherFromArray, key);\n          }\n        }\n      }\n    }\n\n    if (result === undefined) {\n      return this;\n    } else {\n      return makeImmutableObject(result);\n    }\n  }\n\n  function objectReplace(value, config) {\n    var deep          = config && config.deep;\n\n    // Calling .replace() with no arguments is a no-op. Don't bother cloning.\n    if (arguments.length === 0) {\n      return this;\n    }\n\n    if (value === null || typeof value !== \"object\") {\n      throw new TypeError(\"Immutable#replace can only be invoked with objects or arrays, not \" + JSON.stringify(value));\n    }\n\n    return Immutable.merge(this, value, {deep: deep, mode: 'replace'});\n  }\n\n  var immutableEmptyObject = Immutable({});\n\n  function objectSetIn(path, value, config) {\n    if (!(Array.isArray(path)) || path.length === 0) {\n      throw new TypeError(\"The first argument to Immutable#setIn must be an array containing at least one \\\"key\\\" string.\");\n    }\n\n    var head = path[0];\n    if (path.length === 1) {\n      return objectSet.call(this, head, value, config);\n    }\n\n    var tail = path.slice(1);\n    var newValue;\n    var thisHead = this[head];\n\n    if (this.hasOwnProperty(head) && typeof(thisHead) === \"object\" && thisHead !== null) {\n      // Might (validly) be object or array\n      newValue = Immutable.setIn(thisHead, tail, value);\n    } else {\n      newValue = objectSetIn.call(immutableEmptyObject, tail, value);\n    }\n\n    if (this.hasOwnProperty(head) && thisHead === newValue) {\n      return this;\n    }\n\n    var mutable = quickCopy(this, instantiateEmptyObject(this));\n    mutable[head] = newValue;\n    return makeImmutableObject(mutable);\n  }\n\n  function objectSet(property, value, config) {\n    var deep          = config && config.deep;\n\n    if (this.hasOwnProperty(property)) {\n      if (deep && this[property] !== value && isMergableObject(value) && isMergableObject(this[property])) {\n        value = Immutable.merge(this[property], value, {deep: true, mode: 'replace'});\n      }\n      if (isEqual(this[property], value)) {\n        return this;\n      }\n    }\n\n    var mutable = quickCopy(this, instantiateEmptyObject(this));\n    mutable[property] = Immutable(value);\n    return makeImmutableObject(mutable);\n  }\n\n  function update(property, updater) {\n    var restArgs = Array.prototype.slice.call(arguments, 2);\n    var initialVal = this[property];\n    return Immutable.set(this, property, updater.apply(initialVal, [initialVal].concat(restArgs)));\n  }\n\n  function getInPath(obj, path) {\n    /*jshint eqnull:true */\n    for (var i = 0, l = path.length; obj != null && i < l; i++) {\n      obj = obj[path[i]];\n    }\n\n    return (i && i == l) ? obj : undefined;\n  }\n\n  function updateIn(path, updater) {\n    var restArgs = Array.prototype.slice.call(arguments, 2);\n    var initialVal = getInPath(this, path);\n\n    return Immutable.setIn(this, path, updater.apply(initialVal, [initialVal].concat(restArgs)));\n  }\n\n  function getIn(path, defaultValue) {\n    var value = getInPath(this, path);\n    return value === undefined ? defaultValue : value;\n  }\n\n  function asMutableObject(opts) {\n    var result = instantiateEmptyObject(this), key;\n\n    if(opts && opts.deep) {\n      for (key in this) {\n        if (this.hasOwnProperty(key)) {\n          result[key] = asDeepMutable(this[key]);\n        }\n      }\n    } else {\n      for (key in this) {\n        if (this.hasOwnProperty(key)) {\n          result[key] = this[key];\n        }\n      }\n    }\n\n    return result;\n  }\n\n  // Creates plain object to be used for cloning\n  function instantiatePlainObject() {\n    return {};\n  }\n\n  // Finalizes an object with immutable methods, freezes it, and returns it.\n  function makeImmutableObject(obj) {\n    if (!globalConfig.use_static) {\n      addPropertyTo(obj, \"merge\", merge);\n      addPropertyTo(obj, \"replace\", objectReplace);\n      addPropertyTo(obj, \"without\", without);\n      addPropertyTo(obj, \"asMutable\", asMutableObject);\n      addPropertyTo(obj, \"set\", objectSet);\n      addPropertyTo(obj, \"setIn\", objectSetIn);\n      addPropertyTo(obj, \"update\", update);\n      addPropertyTo(obj, \"updateIn\", updateIn);\n      addPropertyTo(obj, \"getIn\", getIn);\n    }\n\n    return makeImmutable(obj, mutatingObjectMethods);\n  }\n\n  // Returns true if object is a valid react element\n  // https://github.com/facebook/react/blob/v15.0.1/src/isomorphic/classic/element/ReactElement.js#L326\n  function isReactElement(obj) {\n    return typeof obj === 'object' &&\n           obj !== null &&\n           (obj.$$typeof === REACT_ELEMENT_TYPE_FALLBACK || obj.$$typeof === REACT_ELEMENT_TYPE);\n  }\n\n  function isFileObject(obj) {\n    return typeof File !== 'undefined' &&\n           obj instanceof File;\n  }\n\n  function isBlobObject(obj) {\n    return typeof Blob !== 'undefined' &&\n           obj instanceof Blob;\n  }\n\n  function isPromise(obj) {\n    return typeof obj === 'object' &&\n           typeof obj.then === 'function';\n  }\n\n  function isError(obj) {\n    return obj instanceof Error;\n  }\n\n  function Immutable(obj, options, stackRemaining) {\n    if (isImmutable(obj) || isReactElement(obj) || isFileObject(obj) || isBlobObject(obj) || isError(obj)) {\n      return obj;\n    } else if (isPromise(obj)) {\n      return obj.then(Immutable);\n    } else if (Array.isArray(obj)) {\n      return makeImmutableArray(obj.slice());\n    } else if (obj instanceof Date) {\n      return makeImmutableDate(new Date(obj.getTime()));\n    } else {\n      // Don't freeze the object we were given; make a clone and use that.\n      var prototype = options && options.prototype;\n      var instantiateEmptyObject =\n        (!prototype || prototype === Object.prototype) ?\n          instantiatePlainObject : (function() { return Object.create(prototype); });\n      var clone = instantiateEmptyObject();\n\n      if (\"development\" !== \"production\") {\n        /*jshint eqnull:true */\n        if (stackRemaining == null) {\n          stackRemaining = 64;\n        }\n        if (stackRemaining <= 0) {\n          throw new ImmutableError(\"Attempt to construct Immutable from a deeply nested object was detected.\" +\n            \" Have you tried to wrap an object with circular references (e.g. React element)?\" +\n            \" See https://github.com/rtfeldman/seamless-immutable/wiki/Deeply-nested-object-was-detected for details.\");\n        }\n        stackRemaining -= 1;\n      }\n\n      for (var key in obj) {\n        if (Object.getOwnPropertyDescriptor(obj, key)) {\n          clone[key] = Immutable(obj[key], undefined, stackRemaining);\n        }\n      }\n\n      return makeImmutableObject(clone);\n    }\n  }\n\n  // Wrapper to allow the use of object methods as static methods of Immutable.\n  function toStatic(fn) {\n    function staticWrapper() {\n      var args = [].slice.call(arguments);\n      var self = args.shift();\n      return fn.apply(self, args);\n    }\n\n    return staticWrapper;\n  }\n\n  // Wrapper to allow the use of object methods as static methods of Immutable.\n  // with the additional condition of choosing which function to call depending\n  // if argument is an array or an object.\n  function toStaticObjectOrArray(fnObject, fnArray) {\n    function staticWrapper() {\n      var args = [].slice.call(arguments);\n      var self = args.shift();\n      if (Array.isArray(self)) {\n          return fnArray.apply(self, args);\n      } else {\n          return fnObject.apply(self, args);\n      }\n    }\n\n    return staticWrapper;\n  }\n\n  // Wrapper to allow the use of object methods as static methods of Immutable.\n  // with the additional condition of choosing which function to call depending\n  // if argument is an array or an object or a date.\n  function toStaticObjectOrDateOrArray(fnObject, fnArray, fnDate) {\n    function staticWrapper() {\n      var args = [].slice.call(arguments);\n      var self = args.shift();\n      if (Array.isArray(self)) {\n          return fnArray.apply(self, args);\n      } else if (self instanceof Date) {\n          return fnDate.apply(self, args);\n      } else {\n          return fnObject.apply(self, args);\n      }\n    }\n\n    return staticWrapper;\n  }\n\n  // Export the library\n  Immutable.from           = Immutable;\n  Immutable.isImmutable    = isImmutable;\n  Immutable.ImmutableError = ImmutableError;\n  Immutable.merge          = toStatic(merge);\n  Immutable.replace        = toStatic(objectReplace);\n  Immutable.without        = toStatic(without);\n  Immutable.asMutable      = toStaticObjectOrDateOrArray(asMutableObject, asMutableArray, asMutableDate);\n  Immutable.set            = toStaticObjectOrArray(objectSet, arraySet);\n  Immutable.setIn          = toStaticObjectOrArray(objectSetIn, arraySetIn);\n  Immutable.update         = toStatic(update);\n  Immutable.updateIn       = toStatic(updateIn);\n  Immutable.getIn          = toStatic(getIn);\n  Immutable.flatMap        = toStatic(flatMap);\n  Immutable.asObject       = toStatic(asObject);\n  if (!globalConfig.use_static) {\n      Immutable.static = immutableInit({\n          use_static: true\n      });\n  }\n\n  Object.freeze(Immutable);\n\n  return Immutable;\n}\n\n  var Immutable = immutableInit();\n  /* istanbul ignore if */\n  if (typeof define === 'function' && define.amd) {\n    define(function() {\n      return Immutable;\n    });\n  } else if (typeof module === \"object\") {\n    module.exports = Immutable;\n  } else if (typeof exports === \"object\") {\n    exports.Immutable = Immutable;\n  } else if (typeof window === \"object\") {\n    window.Immutable = Immutable;\n  } else if (typeof global === \"object\") {\n    global.Immutable = Immutable;\n  }\n})();\n"],"sourceRoot":""}