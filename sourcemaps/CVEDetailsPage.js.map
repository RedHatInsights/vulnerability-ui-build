{"version":3,"sources":["webpack:///./src/Store/ActionTypes.js","webpack:///./src/Helpers/MiscHelper.js","webpack:///./src/Utilities/interceptors.js","webpack:///./src/Helpers/APIHelper.js","webpack:///./src/Store/Reducers/BreadcrumbStore.js","webpack:///./src/Store/Reducers/CVEDetailsPageStore.js","webpack:///./src/Store/Reducers/SystemCvesStore.js","webpack:///./src/Store/Reducers/SystemsPageStore.js","webpack:///./src/Store/Reducers/CVEsStore.js","webpack:///./src/Store/Actions/Actions.js","webpack:///./node_modules/seamless-immutable/seamless-immutable.development.js","webpack:///./src/Helpers/DownloadReport.js","webpack:///./src/Components/SmartComponents/Modals/BaseModal.js","webpack:///./src/Components/SmartComponents/InsightsSystemRule/InsightsSystemRule.js","webpack:///./src/Helpers/CVEHelper.js","webpack:///./src/Helpers/selectAllCheckboxHelper.js","webpack:///./node_modules/lodash/union.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/SearchFilter.js","webpack:///./src/Helpers/TableToolbarHelper.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/SecurityRuleFilter.js","webpack:///./node_modules/lodash/unionWith.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/StatusFilter.js","webpack:///./src/Store/Reducers/InventoryEntitiesReducer.js","webpack:///./src/Components/SmartComponents/Modals/BusinessRiskModal.js","webpack:///./src/Components/SmartComponents/Modals/CveStatusModal.js","webpack:///./src/Components/SmartComponents/Modals/CvePairStatusModal.js","webpack:///./src/Components/SmartComponents/Remediation/Remediation.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsDescription/CVEPageDetailsDescription.scss?4f52","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsDescription/CVEPageDetailsDescription.scss","webpack:///./src/Components/PresentationalComponents/CVEInfoBox/CVEInfoBox.scss?9c01","webpack:///./src/Components/PresentationalComponents/CVEInfoBox/CVEInfoBox.scss","webpack:///./src/Components/PresentationalComponents/CvssVector/CvssVector.scss?e372","webpack:///./src/Components/PresentationalComponents/CvssVector/CvssVector.scss","webpack:///./src/Components/PresentationalComponents/CSAwRuleBox/CSAwRuleBox.scss?7556","webpack:///./src/Components/PresentationalComponents/CSAwRuleBox/CSAwRuleBox.scss","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsDescription/SnippetWithHeaderAndTooltip.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsDescription/CVEPageDetailsDescription.js","webpack:///./src/Components/PresentationalComponents/WithLoader/WithLoader.js","webpack:///./src/Components/PresentationalComponents/CVEInfoBox/CVEInfoBox.js","webpack:///./src/Components/PresentationalComponents/CvssVector/vectorNames.js","webpack:///./src/Components/PresentationalComponents/CvssVector/CvssVector.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsSeverity/CVEPageDetailsSeverity.js","webpack:///./src/Components/PresentationalComponents/CSAwRuleBox/CSAwRuleBox.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetails/CVEPageDetails.js","webpack:///./src/Components/PresentationalComponents/DownloadReportKebab/BaseKebab.js","webpack:///./src/Components/PresentationalComponents/DownloadReportKebab/KebabItems.js","webpack:///./src/Components/SmartComponents/SystemsExposedTable/SystemsExposedTable.js","webpack:///./src/Components/SmartComponents/CVEDetailsPage/CVEDetailsPage.js","webpack:///./node_modules/dot/doT.js"],"names":["FETCH_CVE_LIST","FETCH_CVE_DETAILS","FETCH_SYSTEM_DETAILS","FETCH_AFFECTED_SYSTEMS_BY_CVE","FETCH_SYSTEMS","SET_HEADER","SYSTEM_OPT_OUT","FETCH_SYSTEM_CVE_LIST","CHANGE_SYSTEM_CVE_STATUS","CHANGE_EXPOSED_SYSTEMS_PARAMETERS","CHANGE_CVE_LIST_PARAMETERS","SELECT_CVE","SELECT_SYSTEM_CVE","SELECT_ENTITIES","SELECT_MULTIPLE_ENTITIES","EXPAND_CVE","EXPAND_ROW","EXPAND_SYSTEM_CVE","CHANGE_SYSTEMS_PARAMS","CHANGE_SYSTEM_CVE_LIST_PARAMETERS","CLEAR_SYSTEMS_STORE","CLEAR_SYSTEM_CVES_STORE","CLEAR_CVE_STORE","CLEAR_INVENTORY_STORE","CLEAR_CVES_STORE","FETCH_AFFECTED_SYSTEM_IDS_BY_CVE","FETCH_SYSTEMS_IDS","FETCH_CVE_LIST_IDS","FETCH_SYTEM_DETAILS_IDS","dataShape","propTypes","shape","data","oneOfType","object","array","meta","isLoading","bool","constructParameters","apiProps","allowedParams","Object","keys","forEach","key","undefined","map","item","constructURLParameters","urlParams","params","includes","formatDate","date","Date","prepend","number","length","toFormat","isNaN","year","getFullYear","month","getMonth","day","getDate","constructFilterParameters","filterParams","prototype","hasOwnProperty","call","cvssEntry","CVSS_OPTIONS","find","value","cvss_filter","values","split","filter","parseFloat","from","to","label","cvss_from","cvss_to","publicEntry","PUBLIC_DATE_OPTIONS","publish_date","public_from","public_to","getImpactDetails","impact","impactList","title","color","text","titleContent","size","impactColorList","unknown","createSortBy","header","direction","indexOf","SortByDirection","desc","asc","replace","index","findIndex","handleSortColumn","currentSort","apply","columnName","useDefault","substr","sort","useCreateUrlParams","parameters","window","history","pushState","location","pathname","qs","stringify","parse","search","updateRef","pages","parseInt","page","cvesCount","instance","axios","create","interceptors","request","use","authInterceptor","response","responseDataInterceptor","interceptor401","error","status","ReadOnlyNotification","err","isCancel","errObject","errors","api","GitApi","getCveDetails","synopsis","getSystemDetails","system","getAffectedSystemsByCVE","parameterArray","getAffectedSystemsByCve","getSystems","getSystemsList","getCveListByAccount","getCveList","optOutSystem","setSystemOptOut","getCveListBySystem","setSystemCveStatus","setStatus","optOutSystems","systems","optOut","opt_out","inventory_id","Array","setSystemsOptOut","setBusinessRisk","setCveBusinessRisk","setCveStatus","getExecutiveReport","getAffectedSystemsIdsByCve","getSystemsIds","getCveIdsList","getCveIdsBySystem","initialState","Immutable","breadcrumbs","affectedSystemsByCVE","openedRows","payload","total_items","page_size","selectedHosts","security_rule","status_id","cveDetails","cveList","openedCves","selectedCves","expandCveDescription","SystemCvesStore","applyReducerHash","state","timestamp","action","newState","slice","isArray","splice","push","isOpen","cves","cve","element","id","metadata","limit","offet","show_all","isValid","stateTimestamp","actionTimestamp","ReducerRegistry","register","CVEDetailsPageStore","type","ActionTypes","setIn","CVEsStore","cveName","SystemsPageStore","BreadcrumbStore","set","setHeader","props","Promise","resolve","HeaderHelper","then","result","fetchAffectedSystemsByCVE","APIHelper","fetchSystems","options","fetchCveDetails","fetchSystemDetails","noError","fetchCveListByAccount","optOutSystemAction","fetchCveListBySystem","optOutSystemsAction","changeCveListParameters","changeExposedSystemsParameters","changeSystemCVEsParameters","selectCve","expandCve","selectSystemCve","expandSystemCve","expandRow","selectMultipleEntities","changeSystemsParams","clearSystemStore","clearSystemCvesStore","clearCveStore","fetchAffectedSystemsIdsByCve","fetchSystemsIds","fetchCvesIds","fetchSystemDetailsIds","clearInventoryStore","clearCVEsStore","immutableInit","config","REACT_ELEMENT_TYPE","Symbol","for","globalConfig","use_static","instantiateEmptyObject","obj","getPrototypeOf","addPropertyTo","target","methodName","defineProperty","enumerable","configurable","writable","banProperty","ImmutableError","isImmutable","Boolean","getOwnPropertyDescriptor","isEqual","a","b","isMergableObject","mutatingObjectMethods","mutatingArrayMethods","concat","nonMutatingArrayMethods","mutatingDateMethods","message","this","name","stack","Error","makeImmutable","bannedMethods","freeze","makeMethodReturnImmutable","currentMethod","arguments","arraySet","idx","deep","merge","mode","mutable","asMutableArray","makeImmutableArray","constructor","immutableEmptyArray","arraySetIn","pth","head","newValue","tail","thisHead","nextHead","isFinite","objectSetIn","immutableEmptyObject","flatMap","asObject","update","updateIn","getIn","i","asMutableDate","getTime","iterator","iteratorResult","without","remove","keysToRemoveArray","el","arr","toString","val","makeImmutableObject","opts","asDeepMutable","pair","asMutable","quickCopy","src","dest","other","TypeError","JSON","receivedArray","merger","addToResult","currentObj","otherObj","immutableValue","mergerResult","currentValue","clearDroppedKeys","otherFromArray","objectReplace","fnObject","fnArray","fnDate","path","objectSet","property","updater","restArgs","initialVal","getInPath","l","defaultValue","asMutableObject","instantiatePlainObject","stackRemaining","$$typeof","isReactElement","File","isFileObject","Blob","isBlobObject","isError","isPromise","clone","toStatic","fn","args","self","shift","toStaticObjectOrArray","static","filename","defaultParams","checkTypes","fetchData","format","formats","exec","data_format","downloadFile","Number","MAX_SAFE_INTEGER","toISOString","useStatusSelect","initialValue","useState","statusId","setStatusId","setProps","StatusSelect","messages","statusLabel","fieldId","aria-label","onChange","selection","STATUS_OPTIONS","useJustificationInput","justification","setJustification","JustificationInput","justificationLabel","resizeOrientation","BaseModal","items","onSave","onSuccessNotification","targetItems","setTargetItems","handleClose","useEffect","clearNotifications","Fragment","variant","onClose","actions","onClick","notification","addNotification","save","cancel","children","any","func","string","connect","dispatch","InsightsSystemRule","rule","TextContent","className","Text","component","TextVariants","h3","style","paddingLeft","Label","Tooltip","content","rulesIconTooltip","CSAwIcon","description","rule_id","InsightsReportCard","report","PropType","details","resulotion","isRequired","InsightsNoSystemRule","p","exposedSystemNoRules","exposedSystemNoRulesInfo","rel","href","exposedSystemNoRulesInfoLink","createExposedSystemsTable","attributes","status_name","createCveDetailsPage","public_date","processDate","rh_link","RHDBLink","mitre_link","createMitreLink","cvss3_score","cvss2_score","cvss2_metrics","cvss3_metrics","business_risk","BUSINESS_RISK_OPTIONS","option","business_risk_id","business_risk_justification","business_risk_text","status_justification","status_text","systems_status_detail","systems_status_divergent","rules","MITRELink","cveTableRowActions","methods","rowIndex","editBusinessRisk","event","rowId","rowData","showBusinessRiskModal","editStatus","showStatusModal","systemCveTableRowActions","entity","display_name","cve_status_id","cve_justification","cve_status_justification","systemExposedTableRowActions","systemTableRowActions","isOptOut","kebabResumeAnalysis","kebabExcludeAnalysis","selectAllCheckbox","selectedItems","selectorHandler","fetchResource","multiRow","selectedItemsArray","selectedItemsCount","selectPageNumber","handleUnselectAll","handleSelectAll","handleOnCheckboxChange","intl","formatMessage","selectNone","selectPage","count","collectedItems","union","selectAll","baseFlatten","baseRest","baseUniq","isArrayLikeObject","arrays","module","exports","SearchFilter","placeholder","React","searchValue","setSearchValue","debounce","handleSearch","conditionalFilterType","filterValues","handleChangePage","_event","handleSetPageSize","perPage","exportConfig","onSelect","fileType","downloadReport","buildActiveFilters","currentFilters","filterRulevalues","buildChip","parameter","FILTERS","reduce","filteredRule","buildChips","paramValues","filterChips","multiValue","filteredValues","category","chips","searchLabel","removeFilters","some","chip","join","securityRuleFilter","currentFilter","dynamicFilters","filterBySecurityRule","securityRules","radio","urlParam","unionWith","SECURITY_RULE_OPTIONS","last","comparator","statusFilter","filterByStatus","checkbox","columns","rows","entities","selectedRows","modifyInventory","loaded","lastSeenColumn","transforms","sortable","selected","selectEntities","myRows","inventoryEntitiesReducer","row","BusinessRiskModal","businessRiskId","setBusinessRiskId","setLabel","getDefaultLabel","useCallback","handleOnRadioChange","_","currentTarget","successNotification","businessRiskUpdateSuccessful","businessRiskModalTitle","hasGutter","businessRiskModalInfo","businessRiskLabel","isChecked","injectIntl","CveStatusModal","checkboxState","setCheckboxState","cveStatusModalUpdateSuccessful","cveStatusModalTitle","cveIds","cveStatusModalSelected","cveId","chunks","fontSize","cveStatusModalInfo","trigger","cveStatusModalInfoTooltip","verticalAlign","cveStatusModalOverwriteCheckbox","checked","cveStatusModalOverwriteTooltip","CvePairStatusModal","inventories","hasDifferentStatus","inventoryList","getCveJustification","setJustificationProps","haveSameStatuses","every","inventory","getDefaultCheckboxState","getCveStatus","getDefaultStatus","setSelectProps","inventoryIds","inventoryNames","isDisabled","disabled","cvePairStatusModalUpdateSuccessful","modalTitle","cvePairStatusModalTitle","setStatusParams","isInline","cvePairStatusModalAlert","cvePairStatusModalSelected","cveCount","systemCount","systemName","cvePairStatusModalUseOverallCheckbox","cvePairStatusModalUseOverallTooltip","Remediation","remediationProvider","issues","nextProps","dispatchNotification","dataProvider","onRemediationCreated","getNotification","globalBackgroundColor100","remediateLabel","Component","routerParams","transform","locals","SnippetWithHeaderAndPopover","Popover","bodyContent","headerContent","position","Stack","display","cursor","StackItem","CVEPageDetailsDescription","cveAttributes","publishDate","link","businessRisk","businessRiskJustification","statusJustification","systemsStatusDetail","systemsStatusDivergent","detailRows","brPopoverContent","StyledText","fontWeight","StyledConstants","fontWeights","bold","fontSizes","sm","lineHeight","lineHeights","justificationNote","statusPopoverContent","cveStatus","marginTop","semi_bold","cvePageDetailsSystemsWTCves","Table","borders","gridBreakPoint","cells","Split","SplitItem","StyledBox","marginBottom","WithLoader","loading","Spinner","centered","Skeleton","SkeletonSize","lg","CVEPageOverviewItemLoader","height","width","x","y","rx","ry","TrendBoxLoader","CurrentVulnerabilitiesItemLoader","speed","primaryColor","secondaryColor","cx","cy","r","CVEInfoBox","CVEPageContext","Consumer","context","titleColor","Bullseye","isFilled","h6","descriptionTitle","descriptionContent","V3names","AV","vectorNamesV3AV","N","vectorValuesNetwork","A","vectorValuesAdjacent","L","vectorValuesLocal","P","vectorValuesPhysical","AC","vectorNamesV3AC","vectorValuesLow","H","vectorValuesHigh","PR","vectorNamesV3PR","vectorValuesNone","UI","vectorNamesV3UI","R","vectorValuesRequired","S","vectorNamesV3S","U","vectorValuesUnchanged","C","vectorValuesChanged","vectorNamesV3C","I","vectorNamesV3I","vectorNamesV3A","CVSS","vectorNamesCvssVersion","V2names","vectorNamesV2AV","vectorValuesAdjacentNetwork","vectorNamesV2AC","Au","vectorNamesV2AU","M","vectorValuesMultiple","vectorValuesSingle","vectorNamesV2C","vectorValuesComplete","vectorValuesPartial","vectorNamesV2I","vectorNamesV2A","CvssVector","CVSS2Vector","CVSS3Vector","cvssVer","cvssVector","parsedVector","vector","namesMapping","res","curr","parseVector","cvssVersion","maxWidth","enableFlip","cvssVectorPopoverTitle","TableVariant","compact","cvssVectorMetric","cvssVectorValue","entries","cvssVectorVectorString","learnMorePopover","cvePageSeverityDetailsImpact","footerContent","cvePageSeverityDetailsLearnMoreRatings","cvePageSeverityDetailsLearnMore","CVEPageDetailsSeverity","parseCvssScore","cvePageSeverityDetailsBaseScore","defaultProps","CSAwRuleBox","numberOfCards","setNumberOfCards","ruleCards","Card","CardBody","Grid","GridItem","span","CSAwRuleSummary","summary","associatedCves","current","associated_cves","_i","CVES_PATH","prev","kbase_node_id","RH_KB_URL","knowledgebaseArticle","ruleId","filterByAffectedSystems","remediationLabel","playbook_count","yes","ansibleRemediationTooltip","no","riskOfChange","RISK_OF_CHANGE_LABEL","change_risk","RISK_OF_CHANGE_TOOLTIP","reboot_required","rebootRequired","Button","viewMoreScurityRules","PropTypes","CVEPageDetails","md","BaseKebab","dropdownItems","setOpen","Dropdown","toggle","KebabToggle","onToggle","kebabState","isPlain","kebabItemEditBusinessRisk","DropdownItem","kebabEditBusinessRisk","kebabItemEditStatus","kebabEditStatus","SystemsExposedTable","InventoryTable","setInventoryTable","StatusModal","setStatusModal","setSelectedHosts","urlParamsAllowed","setUrlParamsAllowed","isFirstMount","setIsFirstMount","createRef","useDispatch","SYSTEMS_EXPOSED_ALLOWED_PARAMS","createUrlParams","urlParameters","affectedSystems","useSelector","useMemo","inventoryRefresh","pageSize","per_page","onRefreshData","handleSelect","middlewareListener","addNew","on","callback","newSelected","loadInventory","insights","ReactRedux","react","reactRouterDom","pfReactTable","PfTable","TableBody","TableHeader","TableGridBreakpoint","cellWidth","expandable","pfReact","reactCore","inventoryConnector","mergeWithEntities","mergeWithDetail","SYSTEMS_EXPOSED_HEADER","getStore","kebabOptions","cveStatusDetails","displayName","getSelectedSystemsLabel","selectOptions","ops","h2","systemsExposedTableHeader","tableProps","canSelectAll","onSort","SYSTEMS_EXPOSED_SORTING_HEADER","sortBy","actionResolver","ref","onRefresh","total","isLoaded","hasCheckbox","showActions","DownloadReport","onExpandClick","_e","actionsConfig","kebabToggleProps","activeFiltersConfig","filters","filterRuleValues","onDelete","e","bulkSelect","filterConfig","searchFilter","systemsSearchName","searchFilterByName","withRouter","createContext","CVEDetailsPage","match","BusinessModal","PATHS","home","cvesPage","isActive","kebabItems","open","VulnerabilityHeader","InvalidObject","Page","Provider","justifyContent","DropdownPosition","right","Main","handleCveDetailsError","_globals","doT","version","templateSettings","evaluate","interpolate","encode","useParams","define","defineParams","conditional","iterate","varname","strip","append","selfcontained","doNotSkipEncoded","template","compile","log","encodeHTMLSource","encodeHTMLRules","matchHTML","code","m","eval","startend","start","end","startencode","skip","unescape","tmpl","c","def","needhtmlencode","indv","cse","sid","str","resolveDefs","block","assign","substring","param","v","arg","Function","s","d","rw","__exp","RegExp","elsecase","vname","iname","_encodeHTML","console"],"mappings":"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","file":"js/CVEDetailsPage.js","sourcesContent":["export const FETCH_CVE_LIST = 'FETCH_CVE_LIST';\nexport const EMPTY_CVE_LIST = 'EMPTY_CVE_LIST';\nexport const FETCH_CVE_DETAILS = 'FETCH_CVE_DETAILS';\nexport const FETCH_SYSTEM_DETAILS = 'FETCH_SYSTEM_DETAILS';\nexport const FETCH_AFFECTED_SYSTEMS_BY_CVE = 'FETCH_AFFECTED_SYSTEMS_BY_CVE';\nexport const FETCH_SYSTEMS = 'FETCH_SYSTEMS';\nexport const SET_HEADER = 'SET_HEADER';\nexport const SYSTEM_OPT_OUT = 'SYSTEM_OPT_OUT';\nexport const FETCH_SYSTEM_CVE_LIST = 'FETCH_SYSTEM_CVE_LIST';\nexport const CHANGE_SYSTEM_CVE_STATUS = 'CHANGE_SYSTEM_CVE_STATUS';\nexport const CHANGE_EXPOSED_SYSTEMS_PARAMETERS = 'CHANGE_EXPOSED_SYSTEMS_PARAMETERS';\nexport const CHANGE_CVE_LIST_PARAMETERS = 'CHANGE_CVE_LIST_PARAMETERS';\nexport const SELECT_CVE = 'SELECT_CVE';\nexport const SELECT_SYSTEM_CVE = 'SELECT_SYSTEM_CVE';\nexport const SELECT_ENTITIES = 'SELECT_ENTITIES';\nexport const SELECT_MULTIPLE_ENTITIES = 'SELECT_MULTIPLE_ENTITIES';\nexport const EXPAND_CVE = 'EXPAND_CVE';\nexport const EXPAND_ROW = 'EXPAND_ROW'; //TODO unify it with EXPAND_CVE action\nexport const EXPAND_SYSTEM_CVE = 'EXPAND_SYSTEM_CVE';\nexport const FETCH_INSIGHTS_SYSTEM_RULES = 'FETCH_INSIGHTS_SYSTEM_RULES';\nexport const CHANGE_SYSTEMS_PARAMS = 'CHANGE_SYSTEMS_PARAMS';\nexport const CHANGE_SYSTEM_CVE_LIST_PARAMETERS = 'CHANGE_SYSTEM_CVE_LIST_PARAMETERS';\nexport const CLEAR_SYSTEMS_STORE = 'CLEAR_SYSTEMS_STORE';\nexport const CLEAR_SYSTEM_CVES_STORE = 'CLEAR_SYSTEM_CVES_STORE';\nexport const CLEAR_CVE_STORE = 'CLEAR_CVE_STORE';\nexport const CLEAR_INVENTORY_STORE = 'CLEAR_INVENTORY_STORE';\nexport const CLEAR_CVES_STORE = 'CLEAR_CVEs_STORE';\nexport const FETCH_AFFECTED_SYSTEM_IDS_BY_CVE = 'FETCH_AFFECTED_SYSTEM_IDS_BY_CVE';\nexport const FETCH_SYSTEMS_IDS = 'FETCH_SYSTEMS_IDS';\nexport const FETCH_CVE_LIST_IDS = 'FETCH_CVE_LIST_IDS';\nexport const FETCH_SYTEM_DETAILS_IDS = 'FETCH_SYTEM_DETAILS_IDS';\n","import { SecurityIcon, UnknownIcon } from '@patternfly/react-icons';\nimport { SortByDirection } from '@patternfly/react-table';\nimport findIndex from 'lodash/findIndex';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { impactColorList, impactList, CVSS_OPTIONS, PUBLIC_DATE_OPTIONS } from './constants';\nimport qs from 'query-string';\nimport { IntlProvider } from '@redhat-cloud-services/frontend-components-translations';\n\nexport const dataShape = propTypes.shape({\n    data: propTypes.oneOfType([propTypes.object, propTypes.array]),\n    meta: propTypes.object,\n    isLoading: propTypes.bool\n});\n\n/**\n * Based on the  allowedParams it will construct the arguments for the API call\n * which is defined in the vulnerabilities-client. vulnerabilities-client is written is typescript\n * so we need to define and pass every single parameter. Order in allowedParams is important\n *\n * @param {Object} apiProps\n * @param {Array} allowedParams - order should align with the params in the vulnerabilities-client\n */\nexport function constructParameters(apiProps, allowedParams) {\n    if (apiProps) {\n        Object.keys(apiProps).forEach(\n            key => (\n                apiProps[key] === undefined\n                || apiProps[key] === ''\n            )\n            && delete apiProps[key]\n        );\n\n        const params = allowedParams.map(item => apiProps[item]);\n\n        return params;\n    }\n\n    return [];\n}\n\n// TODO DRY:similar to constructParameters\nexport function constructURLParameters(urlParams, allowedParams) {\n    if (urlParams) {\n        const params = { ...urlParams };\n        Object.keys(urlParams).forEach(\n            key => (\n                params[key] === undefined\n                || params[key] === ''\n                || !allowedParams.includes(key)\n                || params[key] === false\n            )\n            && delete params[key]\n\n        );\n        return params;\n    }\n}\n\nexport function formatDate(date = new Date()) {\n    const prepend = (number) => `${`${number}`.length === 1 ? '0' : ''}${number}`;\n    const toFormat = new Date(date);\n    if (toFormat instanceof Date && !isNaN(toFormat)) {\n        const year = toFormat.getFullYear();\n        const month = toFormat.getMonth();\n        const day = toFormat.getDate();\n        return `${year}-${prepend(month)}-${prepend(day)}`;\n    }\n\n    return toFormat;\n}\n\n/**\n * Contructs the filters which have more than one parameter that needs to be passed\n * and resets all the parameteres when it's needed\n *\n * @param {Object} filterParams\n * @return {Object}\n */\nexport function constructFilterParameters(filterParams) {\n    if (Object.prototype.hasOwnProperty.call(filterParams, 'cvss_filter')) {\n        let cvssEntry = CVSS_OPTIONS.find(({ value }) => value === filterParams.cvss_filter);\n\n        if (typeof cvssEntry === 'undefined' && typeof filterParams.cvss_filter !== 'undefined') {\n            let values = filterParams.cvss_filter.split(/[^0-9]+/).filter(item => parseFloat(item));\n            let [from, to] = values;\n            cvssEntry = { from, to };\n        } else if (typeof cvssEntry === 'undefined' && typeof filterParams.cvss_filter === 'undefined') {\n            cvssEntry = { from: undefined, to: undefined };\n        } else if ((cvssEntry && cvssEntry.label === 'N/A') && filterParams.cvss_filter === 'from-1to-1') {\n            cvssEntry = { from: -1, to: -1 };\n        }\n\n        filterParams.cvss_from = cvssEntry.from;\n        filterParams.cvss_to = cvssEntry.to;\n    }\n\n    if (Object.prototype.hasOwnProperty.call(filterParams, 'publish_date')) {\n        let publicEntry = PUBLIC_DATE_OPTIONS.find(item => item.value === filterParams.publish_date);\n\n        if (typeof publicEntry !== 'undefined') {\n            filterParams.public_from = publicEntry.from && formatDate(publicEntry.from);\n            filterParams.public_to = publicEntry.to && formatDate(publicEntry.to);\n        } else {\n            filterParams.public_from = undefined;\n            filterParams.public_to = undefined;\n            filterParams.publish_date = undefined;\n        }\n    }\n\n    return filterParams;\n}\n\nexport function getImpactDetails(impact) {\n    if (Object.keys(impactList).includes(impact)) {\n        return {\n            title: impactList[impact].title,\n            color: impactList[impact].color,\n            text: impactList[impact].text,\n            titleContent: (\n                <SecurityIcon size=\"lg\" />\n            )\n        };\n    } else {\n        return {\n            title: 'Unknown',\n            color: impactColorList.unknown,\n            text: '',\n            titleContent: (\n                <UnknownIcon size=\"lg\" />\n            )\n        };\n    }\n}\n\nexport const createSortBy = (header, value) => {\n    if (value) {\n        let direction = value.indexOf('-') === 0 ? SortByDirection.desc : SortByDirection.asc;\n        value = value.replace(/^(-|\\+)/, '');\n        const index = findIndex(header, item => item.key === value);\n        let sort = {\n            index,\n            direction\n        };\n        return sort;\n    }\n\n    return {};\n};\n\nexport const handleSortColumn = (key, direction, header, currentSort, apply) => {\n    let columnName = header[key].key;\n    const useDefault = currentSort && currentSort.substr(1) !== columnName;\n    if (direction === SortByDirection.desc || useDefault) {\n        columnName = '-' + columnName;\n    }\n\n    apply({ sort: columnName });\n};\n\nexport const updateStateSet = (stateSet, names, value) => {\n    [].concat(names).forEach(name => {\n        value ? stateSet.add(name) : stateSet.delete(name);\n    });\n    return stateSet;\n};\n\nexport const useCreateUrlParams = (allowedParams) => {\n    const urlParams = qs.parse(window.location.search);\n\n    const createUrlParams = (parameters) => {\n        window.history.pushState(\n            {},\n            '',\n            `${\n                window.location.pathname\n            }?${\n                qs.stringify(constructURLParameters(parameters, allowedParams))\n            }`\n        );\n    };\n\n    return [createUrlParams, urlParams];\n};\n\nexport const updateRef = (meta, apply) => {\n    const pages = parseInt(meta.pages);\n    const page = parseInt(meta.page);\n    const cvesCount = parseInt(meta.cvesCount);\n    const goTo = (pages === page && page > 1 && cvesCount === 1) ? (pages - 1) : page;\n\n    apply({ page: goTo });\n};\n\nexport const mountWithIntl = (Component) => {\n    const wrapper = mount(Component, {\n        wrappingComponent: IntlProvider\n    });\n    const provider = wrapper.getWrappingComponent();\n    provider.setProps({ locale: 'en' });\n\n    return wrapper;\n};\n","import {\n    authInterceptor,\n    interceptor401,\n    responseDataInterceptor\n} from '@redhat-cloud-services/frontend-components-utilities/files/interceptors';\nimport axios from 'axios';\nimport { ReadOnlyNotification } from '../Helpers/constants';\nconst instance = axios.create();\n\nexport function errorInterceptor(err) {\n    if (!axios.isCancel(err)) {\n        const errObject = { ...err };\n\n        if (errObject.response && errObject.response.data && errObject.response.data.errors) {\n            const data = errObject.response.data.errors[0];\n            throw data;\n        }\n\n        throw err;\n    }\n}\n\nexport function readOnlyInterceptor(error) {\n    if (error.response && error.response.status === 503) {\n        const data = ReadOnlyNotification;\n        throw data;\n    }\n\n    throw error;\n}\n\ninstance.interceptors.request.use(authInterceptor);\ninstance.interceptors.response.use(responseDataInterceptor);\ninstance.interceptors.response.use(null, interceptor401);\ninstance.interceptors.response.use(null, readOnlyInterceptor);\ninstance.interceptors.response.use(null, errorInterceptor);\n\nexport default instance;\n","let BASE_ROUTE = '/api/vulnerability/';\nimport { GitApi } from '@redhat-cloud-services/vulnerabilities-client';\nimport instance from '../Utilities/interceptors';\nimport { constructParameters } from './MiscHelper';\n\nlet api = new GitApi(undefined, BASE_ROUTE, instance);\n\nexport function getCveDetails(synopsis) {\n    const result = api.getCveDetails(synopsis);\n    return result;\n}\n\nexport function getSystemDetails(system) {\n    const result = api.getSystemDetails(system);\n    return result;\n}\n\nexport function getAffectedSystemsByCVE(synopsis, apiProps) {\n    let parameterNames = [\n        'filter',\n        'limit',\n        'offset',\n        'page',\n        'page_size',\n        'sort',\n        'status_id',\n        'data_format',\n        'security_rule',\n        'rule_name'\n    ];\n    let parameterArray = constructParameters(apiProps, parameterNames);\n    let result = api.getAffectedSystemsByCve(synopsis, ...parameterArray);\n    return result;\n}\n\nexport function getSystems(apiProps) {\n    let parameterNames = ['filter', 'limit', 'offset', 'page', 'page_size', 'sort', 'data_format', 'stale', 'uuid', 'opt_out'];\n    let parameterArray = constructParameters(apiProps, parameterNames);\n    let result = api.getSystemsList(...parameterArray);\n    return result;\n}\n\nexport function getCveListByAccount(apiProps) {\n    let parameterNames = [\n        'filter',\n        'limit',\n        'offset',\n        'page',\n        'page_size',\n        'sort',\n        'cvss_from',\n        'cvss_to',\n        'public_from',\n        'public_to',\n        'impact',\n        'data_format',\n        'business_risk_id',\n        'status_id',\n        'security_rule',\n        'show_all'\n    ];\n    let parameterArray = constructParameters(apiProps, parameterNames);\n    let result = api.getCveList(...parameterArray);\n    return result;\n}\n\nexport function optOutSystem(system, status) {\n    let result = api.setSystemOptOut(system, status);\n    return result;\n}\n\nexport function getCveListBySystem(apiProps) {\n    const { system } = apiProps;\n    let parameterNames = [\n        'filter',\n        'limit',\n        'offset',\n        'page',\n        'page_size',\n        'sort',\n        'cvss_from',\n        'cvss_to',\n        'public_from',\n        'public_to',\n        'impact',\n        'status_id',\n        'data_format',\n        'business_risk_id',\n        'security_rule'\n    ];\n    if (apiProps && system) {\n        Object.keys(apiProps).forEach(key => (apiProps[key] === undefined || apiProps[key] === '') && delete apiProps[key]);\n        const params = parameterNames.map(item => apiProps[item]);\n        return api.getCveListBySystem(system, ...params).catch(err => {\n            if (err && err.status === '404') {\n                return { errors: err };\n            }\n\n            throw err;\n        });\n    }\n}\n\nexport function setSystemCveStatus(params) {\n    let result = api.setStatus(params);\n    return result;\n}\n\nexport function optOutSystems(systems, optOut) {\n    const data = { opt_out: optOut, inventory_id: new Array(...systems) };\n    let result = api.setSystemsOptOut(data);\n    return result;\n}\n\nexport function setBusinessRisk(params) {\n    let result = api.setCveBusinessRisk(params);\n    return result;\n}\n\nexport function setCveStatus(params) {\n    let result = api.setCveStatus(params);\n    return result;\n}\n\nexport function getExecutiveReport() {\n    let result = api.getExecutiveReport();\n    return result;\n}\n\nexport function getAffectedSystemsIdsByCve(synopsis, apiProps) {\n    //TODO: Once all new endpoints for selecting IDs are introduced optimize all parameterNames arrays in this page\n    let parameterNames = [\n        'filter',\n        'limit',\n        'offset',\n        'page',\n        'page_size',\n        'sort',\n        'status_id',\n        'data_format',\n        'security_rule'\n    ];\n    let parameterArray = constructParameters(apiProps, parameterNames);\n    let result = api.getAffectedSystemsIdsByCve(synopsis, ...parameterArray);\n    return result;\n}\n\nexport function getSystemsIds(apiProps) {\n    let parameterNames = ['filter', 'limit', 'offset', 'page', 'page_size', 'sort', 'data_format', 'stale', 'uuid', 'opt_out'];\n    let parameterArray = constructParameters(apiProps, parameterNames);\n    let result = api.getSystemsIds(...parameterArray);\n    return result;\n}\n\nexport function getCveIdsList(apiProps) {\n    let parameterNames = [\n        'filter',\n        'limit',\n        'offset',\n        'page',\n        'page_size',\n        'sort',\n        'cvss_from',\n        'cvss_to',\n        'public_from',\n        'public_to',\n        'impact',\n        'data_format',\n        'business_risk_id',\n        'status_id',\n        'security_rule',\n        'show_all'\n    ];\n    let parameterArray = constructParameters(apiProps, parameterNames);\n    let result = api.getCveIdsList(...parameterArray);\n    return result;\n}\n\nexport function getCveIdsBySystem(apiProps) {\n    const { system } = apiProps;\n    let parameterNames = [\n        'filter',\n        'limit',\n        'offset',\n        'page',\n        'page_size',\n        'sort',\n        'cvss_from',\n        'cvss_to',\n        'public_from',\n        'public_to',\n        'impact',\n        'status_id',\n        'data_format',\n        'business_risk_id',\n        'security_rule'\n    ];\n    if (apiProps && system) {\n        Object.keys(apiProps).forEach(key => (apiProps[key] === undefined || apiProps[key] === '') && delete apiProps[key]);\n        const params = parameterNames.map(item => apiProps[item]);\n        return api.getCveIdsBySystem(system, ...params);\n    }\n}\n","import Immutable from 'seamless-immutable';\nimport * as ActionTypes from '../ActionTypes';\n\n// Initial State\nexport const initialState = Immutable({\n    title: 'Vulnerability',\n    breadcrumbs: []\n});\n\n// Reducer\nexport const BreadcrumbStore = (state = initialState, action) => {\n    let newState;\n    switch (action.type) {\n        case ActionTypes.SET_HEADER + '_FULFILLED':\n            newState = state.set('title', (action.payload && action.payload.title) || initialState.title);\n            newState = newState.set('breadcrumbs', (action.payload && action.payload.breadcrumbs) || initialState.breadcrumbs);\n            return newState;\n\n        default:\n            return state;\n    }\n};\n","import Immutable from 'seamless-immutable';\nimport * as ActionTypes from '../ActionTypes';\n\n// Initial State\nexport const initialState = Immutable({\n    affectedSystemsByCVE: {\n        isLoading: true,\n        openedRows: [],\n        payload: {\n            meta: {\n                total_items: 0,\n                page: 1,\n                page_size: 20\n            }\n        }\n    },\n    parameters: {\n        page: 1,\n        page_size: 20,\n        selectedHosts: [],\n        security_rule: undefined,\n        status_id: undefined\n    },\n    cveDetails: {\n        isLoading: true,\n        payload: {},\n        error: false\n    }\n});\n\n// Reducer\nexport const CVEDetailsPageStore = (state = initialState, action) => {\n    let newState;\n    switch (action.type) {\n        case ActionTypes.FETCH_CVE_DETAILS + '_REJECTED':\n            newState = state.setIn(['cveDetails', 'error'], true);\n            newState = newState.setIn(['cveDetails', 'isLoading'], false);\n            return newState;\n        case ActionTypes.FETCH_CVE_DETAILS + '_PENDING':\n            newState = state.setIn(['cveDetails', 'isLoading'], true);\n            return newState;\n\n        case ActionTypes.FETCH_CVE_DETAILS + '_FULFILLED':\n            newState = state.setIn(['cveDetails', 'payload'], action.payload);\n            newState = newState.setIn(['cveDetails', 'isLoading'], false);\n            return newState;\n\n        case ActionTypes.FETCH_AFFECTED_SYSTEMS_BY_CVE + '_PENDING':\n            newState = state.setIn(['affectedSystemsByCVE', 'isLoading'], true);\n            return newState;\n\n        case ActionTypes.FETCH_AFFECTED_SYSTEMS_BY_CVE + '_FULFILLED':\n            newState = state.setIn(['affectedSystemsByCVE', 'payload'], action.payload);\n            newState = newState.setIn(['affectedSystemsByCVE', 'isLoading'], false);\n            return newState;\n        case ActionTypes.CHANGE_EXPOSED_SYSTEMS_PARAMETERS:\n            newState = state.setIn(['parameters'], {\n                ...state.parameters,\n                ...action.payload,\n                page_size: action.payload.page_size || state.parameters.page_size\n            });\n            return newState;\n        case ActionTypes.CLEAR_CVE_STORE:\n            return initialState;\n        default:\n            return state;\n    }\n};\n\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/files/esm/ReducerRegistry';\nimport { FETCH_SYSTEM_CVE_LIST } from '../ActionTypes';\n\nexport const initialState = {\n    parameters: {\n        page: 1,\n        page_size: 20\n    },\n    cveList: {\n        isLoading: true,\n        payload: [],\n        meta: new Date(),\n        error: false\n    },\n    openedCves: [],\n    selectedCves: [],\n    expandCveDescription: false\n};\n\nfunction pendingVulnerabilities(state, { meta }) {\n    return {\n        ...state,\n        timestamp: meta,\n        cveList: {\n            ...state.cveList,\n            isLoading: true\n        }\n    };\n}\n\nfunction rejectedVulnerabilities(state, { meta, payload }) {\n    return {\n        ...state,\n        timestamp: meta,\n        cveList: {\n            payload: { errors: payload },\n            isLoading: false\n        }\n    };\n}\n\nfunction fulfilledVulnerabilities(state, action) {\n    const { payload, meta } = action;\n    if (meta >= state.timestamp) {\n        return {\n            ...state,\n            timestamp: meta,\n            cveList: {\n                payload,\n                isLoading: false\n            }\n        };\n    }\n\n    return state;\n}\n\nfunction selectEntity(state, action) {\n    let newState = state;\n    let selectedCves = newState.selectedCves.slice();\n    if (Array.isArray(action.payload)) {\n        selectedCves = action.payload;\n    } else {\n        (selectedCves.includes(action.payload) && selectedCves.splice(selectedCves.indexOf(action.payload), 1)) ||\n            selectedCves.push(action.payload);\n    }\n\n    return { ...newState, selectedCves };\n}\n\nfunction expandCve(state, action) {\n    let newState = state;\n    const { isOpen, cves, expandCveDescription } = action.payload;\n    let openedCves = newState.openedCves.slice();\n\n    if (cves.length > 0) {\n        cves.map(cve =>{\n            const index = openedCves.findIndex(element => element.id === cve);\n            if (index > -1) { openedCves[index] = ({ id: cve, isOpen });}\n            else {openedCves.push({ id: cve, isOpen });}\n        });\n    }\n    else {\n        openedCves = openedCves.map(cve => ({ id: cve.id, isOpen: false }));\n    }\n\n    return { ...newState, openedCves, expandCveDescription };\n}\n\nfunction changeParameters(state, action) {\n    let newState = state;\n    newState.parameters = { ...state.parameters, ...action.payload };\n    return newState;\n}\n\nfunction clearSystemCvesStore(state) {\n    let newState = state;\n    newState.selectedCves = [];\n    newState.openedCves = [];\n    newState.parameters = {\n        page: 1,\n        page_size: 20\n    };\n    return newState;\n}\n\nexport const SystemCvesStore = applyReducerHash(\n    {\n        [`${FETCH_SYSTEM_CVE_LIST}_PENDING`]: pendingVulnerabilities,\n        [`${FETCH_SYSTEM_CVE_LIST}_REJECTED`]: rejectedVulnerabilities,\n        [`${FETCH_SYSTEM_CVE_LIST}_FULFILLED`]: fulfilledVulnerabilities,\n        ['CHANGE_SYSTEM_CVE_LIST_PARAMETERS']: changeParameters,\n        ['SELECT_SYSTEM_CVE']: selectEntity,\n        ['EXPAND_SYSTEM_CVE']: expandCve,\n        ['CLEAR_SYSTEM_CVES_STORE']: clearSystemCvesStore\n    },\n    initialState\n);\n","import * as ActionTypes from '../ActionTypes';\n\nexport const initialState = {\n    isLoading: true,\n    payload: {},\n    metadata: {\n        page: 1,\n        limit: 20,\n        offet: 0,\n        total_items: 0\n    },\n    params: {\n        filter: undefined,\n        opt_out: false,\n        page: 1,\n        page_size: 20,\n        sort: '-last_upload'\n    }\n};\n\nexport const SystemsPageStore = (state = initialState, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case ActionTypes.FETCH_SYSTEMS + '_PENDING':\n            newState.isLoading = true;\n            return newState;\n        case ActionTypes.FETCH_SYSTEMS + '_REJECTED':\n            newState.error = true;\n            return newState;\n        case ActionTypes.FETCH_SYSTEMS + '_FULFILLED':\n            newState.payload = action.payload;\n            newState.metadata = action.payload.meta;\n            newState.isLoading = false;\n            return newState;\n        case ActionTypes.CHANGE_SYSTEMS_PARAMS:\n            newState.params = {\n                ...newState.params,\n                ...action.payload,\n                page_size: action.payload.page_size || newState.params.page_size\n            };\n            return newState;\n        case ActionTypes.CLEAR_SYSTEMS_STORE:\n            return initialState;\n        default:\n            return state;\n    }\n};\n","import * as ActionTypes from '../ActionTypes';\n\n// Initial State\nexport const initialState = {\n    cveList: {\n        isLoading: true,\n        payload: [],\n        timestamp: new Date()\n    },\n    parameters: {\n        show_all: false,\n        sort: '-public_date'\n    },\n    selectedCves: [],\n    openedCves: [],\n    expandCveDescription: false\n};\n\nfunction isValid(stateTimestamp, actionTimestamp) {\n    return actionTimestamp >= stateTimestamp;\n}\n\n// Reducer\nexport const CVEsStore = (state = initialState, action) => {\n    let newState = { ...state };\n\n    switch (action.type) {\n        case ActionTypes.FETCH_CVE_LIST + '_PENDING':\n            newState.cveList = {\n                timestamp: action.meta,\n                isLoading: true\n            };\n            return newState;\n\n        case ActionTypes.FETCH_CVE_LIST + '_REJECTED':\n            newState.error = true;\n            newState.cveList = {\n                isLoading: false,\n                payload: { errors: action.payload }\n            };\n            return newState;\n\n        case ActionTypes.FETCH_CVE_LIST + '_FULFILLED':\n            if (isValid(state.cveList.timestamp, action.meta)) {\n                newState.cveList = {\n                    payload: action.payload,\n                    isLoading: false\n                };\n\n                return newState;\n            }\n\n            return state;\n\n        case ActionTypes.CHANGE_CVE_LIST_PARAMETERS + '_FULFILLED':\n            newState.parameters = { ...newState.parameters, ...action.payload };\n            return newState;\n\n        case ActionTypes.SELECT_CVE: {\n            let selectedCves = newState.selectedCves.slice();\n            if (Array.isArray(action.payload)) {\n                selectedCves = action.payload;\n            } else {\n                (selectedCves.includes(action.payload) && selectedCves.splice(selectedCves.indexOf(action.payload), 1)) ||\n                    selectedCves.push(action.payload);\n            }\n\n            return { ...newState, selectedCves  };\n        }\n\n        case ActionTypes.EXPAND_CVE: {\n            if (Array.isArray(action.payload)) {\n                const openedCves = action.payload;\n                const expandCveDescription = action.payload.length === 0 ? false : true;\n                return { ...newState,  openedCves, expandCveDescription };\n            }\n\n            const cveName = newState.cveList.payload.data[action.payload / 2].id;\n            const openedCves = newState.openedCves.slice();\n            (openedCves.includes(cveName) && openedCves.splice(openedCves.indexOf(cveName), 1)) || openedCves.push(cveName);\n\n            const expandCveDescription = (openedCves.length === newState.cveList.payload.data.length);\n\n            return { ...newState, openedCves, expandCveDescription };\n        }\n\n        case ActionTypes.CLEAR_CVES_STORE: {\n            return initialState;\n        }\n\n        default:\n            return state;\n    }\n};\n","import * as APIHelper from '../../Helpers/APIHelper';\nimport * as HeaderHelper from '../../Helpers/HeaderHelper';\nimport ReducerRegistry from '../../Utilities/ReducerRegistry';\nimport * as ActionTypes from '../ActionTypes';\nimport { BreadcrumbStore } from '../Reducers/BreadcrumbStore';\nimport { CVEDetailsPageStore } from '../Reducers/CVEDetailsPageStore';\nimport { SystemCvesStore } from '../Reducers/SystemCvesStore';\nimport { SystemsPageStore } from '../Reducers/SystemsPageStore';\nimport { CVEsStore } from '../Reducers/CVEsStore';\n\nReducerRegistry.register({ CVEDetailsPageStore });\nReducerRegistry.register({ CVEsStore });\nReducerRegistry.register({ SystemsPageStore });\nReducerRegistry.register({ BreadcrumbStore });\nReducerRegistry.register({ SystemCvesStore });\n\nexport const setHeader = props => ({\n    type: ActionTypes.SET_HEADER,\n    payload: new Promise(resolve => {\n        resolve(HeaderHelper.setHeader(props));\n    }).then(result => result)\n});\n\nexport const fetchAffectedSystemsByCVE = (cve, apiProps) =>({\n    type: ActionTypes.FETCH_AFFECTED_SYSTEMS_BY_CVE,\n    payload: new Promise(resolve => {\n        resolve(APIHelper.getAffectedSystemsByCVE(cve, apiProps));\n    }).then(result => result)\n});\n\nexport const fetchSystems = options => ({\n    type: ActionTypes.FETCH_SYSTEMS,\n    payload: new Promise(resolve => {\n        resolve(APIHelper.getSystems(options));\n    }).then(result => result)\n});\n\nexport const fetchCveDetails = synopsis => ({\n    type: ActionTypes.FETCH_CVE_DETAILS,\n    payload: new Promise(resolve => {\n        resolve(APIHelper.getCveDetails(synopsis));\n    }).then(result => result)\n});\n\nexport const fetchSystemDetails = system => ({\n    type: ActionTypes.FETCH_SYSTEM_DETAILS,\n    meta: { noError: true },\n    payload: new Promise(resolve => {\n        resolve(APIHelper.getSystemDetails(system));\n    }).then(result => result)\n});\n\nexport const fetchCveListByAccount = apiProps => ({\n    type: ActionTypes.FETCH_CVE_LIST,\n    meta: new Date(),\n    payload: APIHelper.getCveListByAccount(apiProps)\n});\n\nexport const optOutSystemAction = (system, status) => ({\n    type: ActionTypes.SYSTEM_OPT_OUT,\n    payload: new Promise(resolve => {\n        resolve(APIHelper.optOutSystem(system, status));\n    }).then(result => result)\n});\n\nexport const fetchCveListBySystem = apiProps => ({\n    type: ActionTypes.FETCH_SYSTEM_CVE_LIST,\n    meta: new Date(),\n    payload: APIHelper.getCveListBySystem(apiProps)\n});\n\nexport const changeSystemCveStatusAction = (inventoryId, cve, statusId, callback) => ({\n    type: ActionTypes.CHANGE_SYSTEM_CVE_STATUS,\n    payload: APIHelper.setSystemCveStatus(inventoryId, cve, statusId, callback)\n});\n\nexport const optOutSystemsAction = (system, status) => ({\n    type: ActionTypes.SYSTEM_OPT_OUT,\n    payload: new Promise(resolve => {\n        resolve(APIHelper.optOutSystems(system, status));\n    }).then(result => result)\n});\n\nexport const changeCveListParameters = apiProps => ({\n    type: ActionTypes.CHANGE_CVE_LIST_PARAMETERS,\n    payload: new Promise(resolve => {\n        resolve(apiProps);\n    }).then(result => result)\n});\n\nexport const changeExposedSystemsParameters = (params) => ({\n    type: ActionTypes.CHANGE_EXPOSED_SYSTEMS_PARAMETERS,\n    payload: params\n});\n\nexport const changeSystemCVEsParameters = (params) => ({\n    type: ActionTypes.CHANGE_SYSTEM_CVE_LIST_PARAMETERS,\n    payload: params\n});\n\nexport const selectCve = apiProps => ({\n    type: ActionTypes.SELECT_CVE,\n    payload: apiProps\n});\n\nexport const expandCve = apiProps => ({\n    type: ActionTypes.EXPAND_CVE,\n    payload: apiProps\n});\n\nexport const selectSystemCve = apiProps => ({\n    type: ActionTypes.SELECT_SYSTEM_CVE,\n    payload: apiProps\n});\n\nexport const expandSystemCve = apiProps => ({\n    type: ActionTypes.EXPAND_SYSTEM_CVE,\n    payload: apiProps\n});\n\nexport const expandRow = (id, isOpen) => ({\n    type: ActionTypes.EXPAND_ROW,\n    payload: { id, isOpen }\n});\n\nexport const selectEntities = (value, ids) => ({\n    type: ActionTypes.SELECT_ENTITIES,\n    payload: ids\n});\n\nexport const selectMultipleEntities = (selectedHosts) => ({\n    type: ActionTypes.SELECT_MULTIPLE_ENTITIES,\n    payload: selectedHosts\n});\n\nexport const changeSystemsParams = (params) => ({\n    type: ActionTypes.CHANGE_SYSTEMS_PARAMS,\n    payload: params\n});\n\nexport const clearSystemStore = () => ({\n    type: ActionTypes.CLEAR_SYSTEMS_STORE,\n    payload: []\n});\n\nexport const clearSystemCvesStore = () => ({\n    type: ActionTypes.CLEAR_SYSTEM_CVES_STORE,\n    payload: []\n});\n\nexport const clearCveStore = () => ({\n    type: ActionTypes.CLEAR_CVE_STORE,\n    payload: []\n});\n\nexport const fetchAffectedSystemsIdsByCve = (cve, apiProps) => ({\n    type: ActionTypes.FETCH_AFFECTED_SYSTEM_IDS_BY_CVE,\n    payload: APIHelper.getAffectedSystemsIdsByCve(cve, apiProps)\n});\n\nexport const fetchSystemsIds = (apiProps) => ({\n    type: ActionTypes.FETCH_SYSTEMS_IDS,\n    payload: APIHelper.getSystemsIds(apiProps)\n});\n\nexport const fetchCvesIds = (apiProps) => ({\n    type: ActionTypes.FETCH_CVE_LIST_IDS,\n    payload: APIHelper.getCveIdsList(apiProps)\n});\n\nexport const fetchSystemDetailsIds = (apiProps) =>({\n    type: ActionTypes.FETCH_SYTEM_DETAILS_IDS,\n    payload: APIHelper.getCveIdsBySystem(apiProps)\n});\n\nexport const clearInventoryStore = () =>({\n    type: ActionTypes.CLEAR_INVENTORY_STORE,\n    payload: []\n});\n\nexport const clearCVEsStore = () =>({\n    type: ActionTypes.CLEAR_CVES_STORE,\n    payload: []\n});\n","(function() {\n  \"use strict\";\n\nfunction immutableInit(config) {\n\n  // https://github.com/facebook/react/blob/v15.0.1/src/isomorphic/classic/element/ReactElement.js#L21\n  var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol.for && Symbol.for('react.element');\n  var REACT_ELEMENT_TYPE_FALLBACK = 0xeac7;\n\n  var globalConfig = {\n    use_static: false\n  };\n  if (isObject(config)) {\n      if (config.use_static !== undefined) {\n          globalConfig.use_static = Boolean(config.use_static);\n      }\n  }\n\n  function isObject(data) {\n    return (\n      typeof data === 'object' &&\n      !Array.isArray(data) &&\n      data !== null\n    );\n  }\n\n  function instantiateEmptyObject(obj) {\n      var prototype = Object.getPrototypeOf(obj);\n      if (!prototype) {\n          return {};\n      } else {\n          return Object.create(prototype);\n      }\n  }\n\n  function addPropertyTo(target, methodName, value) {\n    Object.defineProperty(target, methodName, {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: value\n    });\n  }\n\n  function banProperty(target, methodName) {\n    addPropertyTo(target, methodName, function() {\n      throw new ImmutableError(\"The \" + methodName +\n        \" method cannot be invoked on an Immutable data structure.\");\n    });\n  }\n\n  var immutabilityTag = \"__immutable_invariants_hold\";\n\n  function addImmutabilityTag(target) {\n    addPropertyTo(target, immutabilityTag, true);\n  }\n\n  function isImmutable(target) {\n    if (typeof target === \"object\") {\n      return target === null || Boolean(\n        Object.getOwnPropertyDescriptor(target, immutabilityTag)\n      );\n    } else {\n      // In JavaScript, only objects are even potentially mutable.\n      // strings, numbers, null, and undefined are all naturally immutable.\n      return true;\n    }\n  }\n\n  function isEqual(a, b) {\n    // Avoid false positives due to (NaN !== NaN) evaluating to true\n    return (a === b || (a !== a && b !== b));\n  }\n\n  function isMergableObject(target) {\n    return target !== null && typeof target === \"object\" && !(Array.isArray(target)) && !(target instanceof Date);\n  }\n\n  var mutatingObjectMethods = [\n    \"setPrototypeOf\"\n  ];\n\n  var nonMutatingObjectMethods = [\n    \"keys\"\n  ];\n\n  var mutatingArrayMethods = mutatingObjectMethods.concat([\n    \"push\", \"pop\", \"sort\", \"splice\", \"shift\", \"unshift\", \"reverse\"\n  ]);\n\n  var nonMutatingArrayMethods = nonMutatingObjectMethods.concat([\n    \"map\", \"filter\", \"slice\", \"concat\", \"reduce\", \"reduceRight\"\n  ]);\n\n  var mutatingDateMethods = mutatingObjectMethods.concat([\n    \"setDate\", \"setFullYear\", \"setHours\", \"setMilliseconds\", \"setMinutes\", \"setMonth\", \"setSeconds\",\n    \"setTime\", \"setUTCDate\", \"setUTCFullYear\", \"setUTCHours\", \"setUTCMilliseconds\", \"setUTCMinutes\",\n    \"setUTCMonth\", \"setUTCSeconds\", \"setYear\"\n  ]);\n\n  function ImmutableError(message) {\n    this.name = 'MyError';\n    this.message = message;\n    this.stack = (new Error()).stack;\n  }\n  ImmutableError.prototype = new Error();\n  ImmutableError.prototype.constructor = Error;\n\n  function makeImmutable(obj, bannedMethods) {\n    // Tag it so we can quickly tell it's immutable later.\n    addImmutabilityTag(obj);\n\n    if (\"development\" !== \"production\") {\n      // Make all mutating methods throw exceptions.\n      for (var index in bannedMethods) {\n        if (bannedMethods.hasOwnProperty(index)) {\n          banProperty(obj, bannedMethods[index]);\n        }\n      }\n\n      // Freeze it and return it.\n      Object.freeze(obj);\n    }\n\n    return obj;\n  }\n\n  function makeMethodReturnImmutable(obj, methodName) {\n    var currentMethod = obj[methodName];\n\n    addPropertyTo(obj, methodName, function() {\n      return Immutable(currentMethod.apply(obj, arguments));\n    });\n  }\n\n  function arraySet(idx, value, config) {\n    var deep          = config && config.deep;\n\n    if (idx in this) {\n      if (deep && this[idx] !== value && isMergableObject(value) && isMergableObject(this[idx])) {\n        value = Immutable.merge(this[idx], value, {deep: true, mode: 'replace'});\n      }\n      if (isEqual(this[idx], value)) {\n        return this;\n      }\n    }\n\n    var mutable = asMutableArray.call(this);\n    mutable[idx] = Immutable(value);\n    return makeImmutableArray(mutable);\n  }\n\n  var immutableEmptyArray = Immutable([]);\n\n  function arraySetIn(pth, value, config) {\n    var head = pth[0];\n\n    if (pth.length === 1) {\n      return arraySet.call(this, head, value, config);\n    } else {\n      var tail = pth.slice(1);\n      var thisHead = this[head];\n      var newValue;\n\n      if (typeof(thisHead) === \"object\" && thisHead !== null) {\n        // Might (validly) be object or array\n        newValue = Immutable.setIn(thisHead, tail, value);\n      } else {\n        var nextHead = tail[0];\n        // If the next path part is a number, then we are setting into an array, else an object.\n        if (nextHead !== '' && isFinite(nextHead)) {\n          newValue = arraySetIn.call(immutableEmptyArray, tail, value);\n        } else {\n          newValue = objectSetIn.call(immutableEmptyObject, tail, value);\n        }\n      }\n\n      if (head in this && thisHead === newValue) {\n        return this;\n      }\n\n      var mutable = asMutableArray.call(this);\n      mutable[head] = newValue;\n      return makeImmutableArray(mutable);\n    }\n  }\n\n  function makeImmutableArray(array) {\n    // Don't change their implementations, but wrap these functions to make sure\n    // they always return an immutable value.\n    for (var index in nonMutatingArrayMethods) {\n      if (nonMutatingArrayMethods.hasOwnProperty(index)) {\n        var methodName = nonMutatingArrayMethods[index];\n        makeMethodReturnImmutable(array, methodName);\n      }\n    }\n\n    if (!globalConfig.use_static) {\n      addPropertyTo(array, \"flatMap\",  flatMap);\n      addPropertyTo(array, \"asObject\", asObject);\n      addPropertyTo(array, \"asMutable\", asMutableArray);\n      addPropertyTo(array, \"set\", arraySet);\n      addPropertyTo(array, \"setIn\", arraySetIn);\n      addPropertyTo(array, \"update\", update);\n      addPropertyTo(array, \"updateIn\", updateIn);\n      addPropertyTo(array, \"getIn\", getIn);\n    }\n\n    for(var i = 0, length = array.length; i < length; i++) {\n      array[i] = Immutable(array[i]);\n    }\n\n    return makeImmutable(array, mutatingArrayMethods);\n  }\n\n  function makeImmutableDate(date) {\n    if (!globalConfig.use_static) {\n      addPropertyTo(date, \"asMutable\", asMutableDate);\n    }\n\n    return makeImmutable(date, mutatingDateMethods);\n  }\n\n  function asMutableDate() {\n    return new Date(this.getTime());\n  }\n\n  /**\n   * Effectively performs a map() over the elements in the array, using the\n   * provided iterator, except that whenever the iterator returns an array, that\n   * array's elements are added to the final result instead of the array itself.\n   *\n   * @param {function} iterator - The iterator function that will be invoked on each element in the array. It will receive three arguments: the current value, the current index, and the current object.\n   */\n  function flatMap(iterator) {\n    // Calling .flatMap() with no arguments is a no-op. Don't bother cloning.\n    if (arguments.length === 0) {\n      return this;\n    }\n\n    var result = [],\n        length = this.length,\n        index;\n\n    for (index = 0; index < length; index++) {\n      var iteratorResult = iterator(this[index], index, this);\n\n      if (Array.isArray(iteratorResult)) {\n        // Concatenate Array results into the return value we're building up.\n        result.push.apply(result, iteratorResult);\n      } else {\n        // Handle non-Array results the same way map() does.\n        result.push(iteratorResult);\n      }\n    }\n\n    return makeImmutableArray(result);\n  }\n\n  /**\n   * Returns an Immutable copy of the object without the given keys included.\n   *\n   * @param {array} keysToRemove - A list of strings representing the keys to exclude in the return value. Instead of providing a single array, this method can also be called by passing multiple strings as separate arguments.\n   */\n  function without(remove) {\n    // Calling .without() with no arguments is a no-op. Don't bother cloning.\n    if (typeof remove === \"undefined\" && arguments.length === 0) {\n      return this;\n    }\n\n    if (typeof remove !== \"function\") {\n      // If we weren't given an array, use the arguments list.\n      var keysToRemoveArray = (Array.isArray(remove)) ?\n         remove.slice() : Array.prototype.slice.call(arguments);\n\n      // Convert numeric keys to strings since that's how they'll\n      // come from the enumeration of the object.\n      keysToRemoveArray.forEach(function(el, idx, arr) {\n        if(typeof(el) === \"number\") {\n          arr[idx] = el.toString();\n        }\n      });\n\n      remove = function(val, key) {\n        return keysToRemoveArray.indexOf(key) !== -1;\n      };\n    }\n\n    var result = instantiateEmptyObject(this);\n\n    for (var key in this) {\n      if (this.hasOwnProperty(key) && remove(this[key], key) === false) {\n        result[key] = this[key];\n      }\n    }\n\n    return makeImmutableObject(result);\n  }\n\n  function asMutableArray(opts) {\n    var result = [], i, length;\n\n    if(opts && opts.deep) {\n      for(i = 0, length = this.length; i < length; i++) {\n        result.push(asDeepMutable(this[i]));\n      }\n    } else {\n      for(i = 0, length = this.length; i < length; i++) {\n        result.push(this[i]);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Effectively performs a [map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map) over the elements in the array, expecting that the iterator function\n   * will return an array of two elements - the first representing a key, the other\n   * a value. Then returns an Immutable Object constructed of those keys and values.\n   *\n   * @param {function} iterator - A function which should return an array of two elements - the first representing the desired key, the other the desired value.\n   */\n  function asObject(iterator) {\n    // If no iterator was provided, assume the identity function\n    // (suggesting this array is already a list of key/value pairs.)\n    if (typeof iterator !== \"function\") {\n      iterator = function(value) { return value; };\n    }\n\n    var result = {},\n        length = this.length,\n        index;\n\n    for (index = 0; index < length; index++) {\n      var pair  = iterator(this[index], index, this),\n          key   = pair[0],\n          value = pair[1];\n\n      result[key] = value;\n    }\n\n    return makeImmutableObject(result);\n  }\n\n  function asDeepMutable(obj) {\n    if (\n      (!obj) ||\n      (typeof obj !== 'object') ||\n      (!Object.getOwnPropertyDescriptor(obj, immutabilityTag)) ||\n      (obj instanceof Date)\n    ) { return obj; }\n    return Immutable.asMutable(obj, {deep: true});\n  }\n\n  function quickCopy(src, dest) {\n    for (var key in src) {\n      if (Object.getOwnPropertyDescriptor(src, key)) {\n        dest[key] = src[key];\n      }\n    }\n\n    return dest;\n  }\n\n  /**\n   * Returns an Immutable Object containing the properties and values of both\n   * this object and the provided object, prioritizing the provided object's\n   * values whenever the same key is present in both objects.\n   *\n   * @param {object} other - The other object to merge. Multiple objects can be passed as an array. In such a case, the later an object appears in that list, the higher its priority.\n   * @param {object} config - Optional config object that contains settings. Supported settings are: {deep: true} for deep merge and {merger: mergerFunc} where mergerFunc is a function\n   *                          that takes a property from both objects. If anything is returned it overrides the normal merge behaviour.\n   */\n  function merge(other, config) {\n    // Calling .merge() with no arguments is a no-op. Don't bother cloning.\n    if (arguments.length === 0) {\n      return this;\n    }\n\n    if (other === null || (typeof other !== \"object\")) {\n      throw new TypeError(\"Immutable#merge can only be invoked with objects or arrays, not \" + JSON.stringify(other));\n    }\n\n    var receivedArray = (Array.isArray(other)),\n        deep          = config && config.deep,\n        mode          = config && config.mode || 'merge',\n        merger        = config && config.merger,\n        result;\n\n    // Use the given key to extract a value from the given object, then place\n    // that value in the result object under the same key. If that resulted\n    // in a change from this object's value at that key, set anyChanges = true.\n    function addToResult(currentObj, otherObj, key) {\n      var immutableValue = Immutable(otherObj[key]);\n      var mergerResult = merger && merger(currentObj[key], immutableValue, config);\n      var currentValue = currentObj[key];\n\n      if ((result !== undefined) ||\n        (mergerResult !== undefined) ||\n        (!currentObj.hasOwnProperty(key)) ||\n        !isEqual(immutableValue, currentValue)) {\n\n        var newValue;\n\n        if (mergerResult !== undefined) {\n          newValue = mergerResult;\n        } else if (deep && isMergableObject(currentValue) && isMergableObject(immutableValue)) {\n          newValue = Immutable.merge(currentValue, immutableValue, config);\n        } else {\n          newValue = immutableValue;\n        }\n\n        if (!isEqual(currentValue, newValue) || !currentObj.hasOwnProperty(key)) {\n          if (result === undefined) {\n            // Make a shallow clone of the current object.\n            result = quickCopy(currentObj, instantiateEmptyObject(currentObj));\n          }\n\n          result[key] = newValue;\n        }\n      }\n    }\n\n    function clearDroppedKeys(currentObj, otherObj) {\n      for (var key in currentObj) {\n        if (!otherObj.hasOwnProperty(key)) {\n          if (result === undefined) {\n            // Make a shallow clone of the current object.\n            result = quickCopy(currentObj, instantiateEmptyObject(currentObj));\n          }\n          delete result[key];\n        }\n      }\n    }\n\n    var key;\n\n    // Achieve prioritization by overriding previous values that get in the way.\n    if (!receivedArray) {\n      // The most common use case: just merge one object into the existing one.\n      for (key in other) {\n        if (Object.getOwnPropertyDescriptor(other, key)) {\n          addToResult(this, other, key);\n        }\n      }\n      if (mode === 'replace') {\n        clearDroppedKeys(this, other);\n      }\n    } else {\n      // We also accept an Array\n      for (var index = 0, length = other.length; index < length; index++) {\n        var otherFromArray = other[index];\n\n        for (key in otherFromArray) {\n          if (otherFromArray.hasOwnProperty(key)) {\n            addToResult(result !== undefined ? result : this, otherFromArray, key);\n          }\n        }\n      }\n    }\n\n    if (result === undefined) {\n      return this;\n    } else {\n      return makeImmutableObject(result);\n    }\n  }\n\n  function objectReplace(value, config) {\n    var deep          = config && config.deep;\n\n    // Calling .replace() with no arguments is a no-op. Don't bother cloning.\n    if (arguments.length === 0) {\n      return this;\n    }\n\n    if (value === null || typeof value !== \"object\") {\n      throw new TypeError(\"Immutable#replace can only be invoked with objects or arrays, not \" + JSON.stringify(value));\n    }\n\n    return Immutable.merge(this, value, {deep: deep, mode: 'replace'});\n  }\n\n  var immutableEmptyObject = Immutable({});\n\n  function objectSetIn(path, value, config) {\n    if (!(Array.isArray(path)) || path.length === 0) {\n      throw new TypeError(\"The first argument to Immutable#setIn must be an array containing at least one \\\"key\\\" string.\");\n    }\n\n    var head = path[0];\n    if (path.length === 1) {\n      return objectSet.call(this, head, value, config);\n    }\n\n    var tail = path.slice(1);\n    var newValue;\n    var thisHead = this[head];\n\n    if (this.hasOwnProperty(head) && typeof(thisHead) === \"object\" && thisHead !== null) {\n      // Might (validly) be object or array\n      newValue = Immutable.setIn(thisHead, tail, value);\n    } else {\n      newValue = objectSetIn.call(immutableEmptyObject, tail, value);\n    }\n\n    if (this.hasOwnProperty(head) && thisHead === newValue) {\n      return this;\n    }\n\n    var mutable = quickCopy(this, instantiateEmptyObject(this));\n    mutable[head] = newValue;\n    return makeImmutableObject(mutable);\n  }\n\n  function objectSet(property, value, config) {\n    var deep          = config && config.deep;\n\n    if (this.hasOwnProperty(property)) {\n      if (deep && this[property] !== value && isMergableObject(value) && isMergableObject(this[property])) {\n        value = Immutable.merge(this[property], value, {deep: true, mode: 'replace'});\n      }\n      if (isEqual(this[property], value)) {\n        return this;\n      }\n    }\n\n    var mutable = quickCopy(this, instantiateEmptyObject(this));\n    mutable[property] = Immutable(value);\n    return makeImmutableObject(mutable);\n  }\n\n  function update(property, updater) {\n    var restArgs = Array.prototype.slice.call(arguments, 2);\n    var initialVal = this[property];\n    return Immutable.set(this, property, updater.apply(initialVal, [initialVal].concat(restArgs)));\n  }\n\n  function getInPath(obj, path) {\n    /*jshint eqnull:true */\n    for (var i = 0, l = path.length; obj != null && i < l; i++) {\n      obj = obj[path[i]];\n    }\n\n    return (i && i == l) ? obj : undefined;\n  }\n\n  function updateIn(path, updater) {\n    var restArgs = Array.prototype.slice.call(arguments, 2);\n    var initialVal = getInPath(this, path);\n\n    return Immutable.setIn(this, path, updater.apply(initialVal, [initialVal].concat(restArgs)));\n  }\n\n  function getIn(path, defaultValue) {\n    var value = getInPath(this, path);\n    return value === undefined ? defaultValue : value;\n  }\n\n  function asMutableObject(opts) {\n    var result = instantiateEmptyObject(this), key;\n\n    if(opts && opts.deep) {\n      for (key in this) {\n        if (this.hasOwnProperty(key)) {\n          result[key] = asDeepMutable(this[key]);\n        }\n      }\n    } else {\n      for (key in this) {\n        if (this.hasOwnProperty(key)) {\n          result[key] = this[key];\n        }\n      }\n    }\n\n    return result;\n  }\n\n  // Creates plain object to be used for cloning\n  function instantiatePlainObject() {\n    return {};\n  }\n\n  // Finalizes an object with immutable methods, freezes it, and returns it.\n  function makeImmutableObject(obj) {\n    if (!globalConfig.use_static) {\n      addPropertyTo(obj, \"merge\", merge);\n      addPropertyTo(obj, \"replace\", objectReplace);\n      addPropertyTo(obj, \"without\", without);\n      addPropertyTo(obj, \"asMutable\", asMutableObject);\n      addPropertyTo(obj, \"set\", objectSet);\n      addPropertyTo(obj, \"setIn\", objectSetIn);\n      addPropertyTo(obj, \"update\", update);\n      addPropertyTo(obj, \"updateIn\", updateIn);\n      addPropertyTo(obj, \"getIn\", getIn);\n    }\n\n    return makeImmutable(obj, mutatingObjectMethods);\n  }\n\n  // Returns true if object is a valid react element\n  // https://github.com/facebook/react/blob/v15.0.1/src/isomorphic/classic/element/ReactElement.js#L326\n  function isReactElement(obj) {\n    return typeof obj === 'object' &&\n           obj !== null &&\n           (obj.$$typeof === REACT_ELEMENT_TYPE_FALLBACK || obj.$$typeof === REACT_ELEMENT_TYPE);\n  }\n\n  function isFileObject(obj) {\n    return typeof File !== 'undefined' &&\n           obj instanceof File;\n  }\n\n  function isBlobObject(obj) {\n    return typeof Blob !== 'undefined' &&\n           obj instanceof Blob;\n  }\n\n  function isPromise(obj) {\n    return typeof obj === 'object' &&\n           typeof obj.then === 'function';\n  }\n\n  function isError(obj) {\n    return obj instanceof Error;\n  }\n\n  function Immutable(obj, options, stackRemaining) {\n    if (isImmutable(obj) || isReactElement(obj) || isFileObject(obj) || isBlobObject(obj) || isError(obj)) {\n      return obj;\n    } else if (isPromise(obj)) {\n      return obj.then(Immutable);\n    } else if (Array.isArray(obj)) {\n      return makeImmutableArray(obj.slice());\n    } else if (obj instanceof Date) {\n      return makeImmutableDate(new Date(obj.getTime()));\n    } else {\n      // Don't freeze the object we were given; make a clone and use that.\n      var prototype = options && options.prototype;\n      var instantiateEmptyObject =\n        (!prototype || prototype === Object.prototype) ?\n          instantiatePlainObject : (function() { return Object.create(prototype); });\n      var clone = instantiateEmptyObject();\n\n      if (\"development\" !== \"production\") {\n        /*jshint eqnull:true */\n        if (stackRemaining == null) {\n          stackRemaining = 64;\n        }\n        if (stackRemaining <= 0) {\n          throw new ImmutableError(\"Attempt to construct Immutable from a deeply nested object was detected.\" +\n            \" Have you tried to wrap an object with circular references (e.g. React element)?\" +\n            \" See https://github.com/rtfeldman/seamless-immutable/wiki/Deeply-nested-object-was-detected for details.\");\n        }\n        stackRemaining -= 1;\n      }\n\n      for (var key in obj) {\n        if (Object.getOwnPropertyDescriptor(obj, key)) {\n          clone[key] = Immutable(obj[key], undefined, stackRemaining);\n        }\n      }\n\n      return makeImmutableObject(clone);\n    }\n  }\n\n  // Wrapper to allow the use of object methods as static methods of Immutable.\n  function toStatic(fn) {\n    function staticWrapper() {\n      var args = [].slice.call(arguments);\n      var self = args.shift();\n      return fn.apply(self, args);\n    }\n\n    return staticWrapper;\n  }\n\n  // Wrapper to allow the use of object methods as static methods of Immutable.\n  // with the additional condition of choosing which function to call depending\n  // if argument is an array or an object.\n  function toStaticObjectOrArray(fnObject, fnArray) {\n    function staticWrapper() {\n      var args = [].slice.call(arguments);\n      var self = args.shift();\n      if (Array.isArray(self)) {\n          return fnArray.apply(self, args);\n      } else {\n          return fnObject.apply(self, args);\n      }\n    }\n\n    return staticWrapper;\n  }\n\n  // Wrapper to allow the use of object methods as static methods of Immutable.\n  // with the additional condition of choosing which function to call depending\n  // if argument is an array or an object or a date.\n  function toStaticObjectOrDateOrArray(fnObject, fnArray, fnDate) {\n    function staticWrapper() {\n      var args = [].slice.call(arguments);\n      var self = args.shift();\n      if (Array.isArray(self)) {\n          return fnArray.apply(self, args);\n      } else if (self instanceof Date) {\n          return fnDate.apply(self, args);\n      } else {\n          return fnObject.apply(self, args);\n      }\n    }\n\n    return staticWrapper;\n  }\n\n  // Export the library\n  Immutable.from           = Immutable;\n  Immutable.isImmutable    = isImmutable;\n  Immutable.ImmutableError = ImmutableError;\n  Immutable.merge          = toStatic(merge);\n  Immutable.replace        = toStatic(objectReplace);\n  Immutable.without        = toStatic(without);\n  Immutable.asMutable      = toStaticObjectOrDateOrArray(asMutableObject, asMutableArray, asMutableDate);\n  Immutable.set            = toStaticObjectOrArray(objectSet, arraySet);\n  Immutable.setIn          = toStaticObjectOrArray(objectSetIn, arraySetIn);\n  Immutable.update         = toStatic(update);\n  Immutable.updateIn       = toStatic(updateIn);\n  Immutable.getIn          = toStatic(getIn);\n  Immutable.flatMap        = toStatic(flatMap);\n  Immutable.asObject       = toStatic(asObject);\n  if (!globalConfig.use_static) {\n      Immutable.static = immutableInit({\n          use_static: true\n      });\n  }\n\n  Object.freeze(Immutable);\n\n  return Immutable;\n}\n\n  var Immutable = immutableInit();\n  /* istanbul ignore if */\n  if (typeof define === 'function' && define.amd) {\n    define(function() {\n      return Immutable;\n    });\n  } else if (typeof module === \"object\") {\n    module.exports = Immutable;\n  } else if (typeof exports === \"object\") {\n    exports.Immutable = Immutable;\n  } else if (typeof window === \"object\") {\n    window.Immutable = Immutable;\n  } else if (typeof global === \"object\") {\n    global.Immutable = Immutable;\n  }\n})();\n","import { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\n\nclass DownloadReport  {\n    constructor() {\n        this.defaultParams = {\n            page: 1,\n            page_size: Number.MAX_SAFE_INTEGER,\n            date: new Date().toISOString().replace(/[T:]/g, '-').split('.')[0] + '-utc'\n        };\n\n        this.params = {\n            cve: ''\n        };\n\n        this.pages = ['systems-exposed', 'system-cves', 'cves', 'system-list'];\n        this.formats = ['csv', 'json'];\n    }\n\n    filename = (page) => {\n        switch (page) {\n            case 'systems-exposed':\n                return `vulnerability_systems-exposed-${this.params.cve}--${this.defaultParams.date}`;\n            case 'system-list':\n                return `vulnerability_systems--${this.defaultParams.date}`;\n            default:\n                return `vulnerability_cves--${this.defaultParams.date}`;\n\n        }\n    }\n\n    checkTypes = (fetchData, page, format) => {\n        if (typeof fetchData !== 'function') {\n            throw `exec expects the 1st param to be funtion. Received ${typeof fetchData}`;\n        }\n\n        if (!this.pages.includes(page)) {\n            throw `Page ${page} does not exist`;\n        }\n\n        if (!this.formats.includes(format)) {\n            throw `Format ${format} is not supported`;\n        }\n    }\n\n    /**\n     * Execute and download the report\n     *\n     * @param {Function} fetchData - Function to be called in order to fetch data.\n     * @param {Object || Array} params - Object to be sent as request params. If you need to pass extra argument, pass an array.\n     * @param {String} format - Supported formats to download are CSV and JSON.\n     * @param {String} page - Name of the page based on which the filename will be determined.\n     * @returns {void}\n     */\n    exec = async (fetchData, params, format, page) => {\n        this.checkTypes(fetchData, page, format);\n        this.params.cve = Array.isArray(params) ? params[0] : '';\n\n        try {\n            let { payload } = Array.isArray(params)\n                ? await fetchData(this.params.cve, {\n                    ...params[1],\n                    ...this.defaultParams,\n                    data_format: format\n                }) :\n                await fetchData({\n                    ...params,\n                    ...this.defaultParams,\n                    data_format: format\n                });\n\n            let { data: response } = await payload;\n            let data = format === 'json' ? JSON.stringify(response) : response;\n            // downaloads the files\n            downloadFile(data, this.filename(page), format);\n        } catch (error) {\n            throw `${error}`;\n        }\n\n    }\n\n}\n\nexport default new DownloadReport();\n","import { Button, FormGroup, FormSelect, FormSelectOption, Modal, TextArea } from '@patternfly/react-core';\nimport {\n    addNotification,\n    clearNotifications\n} from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\nimport propTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { STATUS_OPTIONS } from '../../../Helpers/constants';\nimport messages from '../../../Messages';\nimport { FormattedMessage } from 'react-intl';\n\nexport function useStatusSelect(initialValue) {\n    const [statusId, setStatusId] = useState(initialValue);\n    const [props, setProps] = useState({});\n    const StatusSelect = (\n        <FormGroup label={<FormattedMessage {...messages.statusLabel} />} fieldId={'statusId'}>\n            <FormSelect aria-label=\"Select Input\" onChange={selection => setStatusId(selection)} value={statusId} {...props}>\n                {STATUS_OPTIONS.map(({ value, label }) => (\n                    <FormSelectOption key={value} value={value} label={label} />\n                ))}\n            </FormSelect>\n        </FormGroup>\n    );\n    return { StatusSelect, statusId, setStatusId, setProps };\n}\n\nexport function useJustificationInput(initialValue) {\n    const [justification, setJustification] = useState(initialValue);\n    const [props, setProps] = useState({});\n    const JustificationInput = (\n        <FormGroup label={<FormattedMessage {...messages.justificationLabel} />} fieldId={'label'}>\n            <TextArea\n                key=\"input\"\n                type=\"text\"\n                onChange={value => setJustification(value)}\n                value={justification}\n                resizeOrientation='vertical'\n                aria-label={'justification note'}\n                {...props}\n            />\n        </FormGroup>\n    );\n    return { JustificationInput, justification, setJustification, setProps };\n}\n\nexport const BaseModal = ({ items, title, onSave, onSuccessNotification, ...props }) => {\n    const [targetItems, setTargetItems] = useState(items);\n\n    const createNotification = notification => {\n        return props.addNotification(notification);\n    };\n\n    const handleClose = () => {\n        setTargetItems(undefined);\n    };\n\n    const handleSave = () => {\n        onSave().then(() => createNotification(onSuccessNotification));\n        handleClose();\n    };\n\n    useEffect(() => {\n        return () => {\n            props.clearNotifications();\n        };\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Modal\n                variant=\"small\"\n                title={title}\n                isOpen={Boolean(targetItems)}\n                onClose={handleClose}\n                actions={[\n                    <Button key=\"save\" variant=\"primary\" onClick={handleSave}>\n                        {<FormattedMessage {...messages.save} />}\n                    </Button>,\n                    <Button key=\"cancel\" variant=\"secondary\" onClick={handleClose}>\n                        {<FormattedMessage {...messages.cancel} />}\n                    </Button>\n                ]}\n            >\n                {props.children}\n            </Modal>\n        </React.Fragment>\n    );\n};\n\nBaseModal.propTypes = {\n    children: propTypes.any,\n    onClose: propTypes.func,\n    items: propTypes.array,\n    updateRef: propTypes.func,\n    addNotification: propTypes.func,\n    title: propTypes.string,\n    onSave: propTypes.func,\n    onSuccessNotification: propTypes.object,\n    clearNotifications: propTypes.func\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addNotification: data => dispatch(addNotification(data)),\n        clearNotifications: () => dispatch(clearNotifications())\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(BaseModal);\n","import React, { Fragment } from 'react';\nimport { Text, TextContent, TextVariants, Tooltip } from '@patternfly/react-core';\nimport PropType from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport InsightsReportCard from '@redhat-cloud-services/frontend-components-inventory-insights/esm/InsightsReportCard';\nimport { CSAwIcon } from '../../PresentationalComponents/CSAwIcon/CSAwIcon';\nimport Label from '../../PresentationalComponents/Snippets/Label';\nimport messages from '../../../Messages';\n\nexport const InsightsSystemRule = ({ rule, cve }) => {\n    return (\n        <Fragment>\n            { !rule ? <InsightsNoSystemRule cve={cve}/> :\n                <Fragment>\n                    <TextContent className=\"icon-with-label\">\n                        <Text component={TextVariants.h3} style={{ paddingLeft: 'var(--pf-global--spacer--lg)' }}>\n                            <Label>\n                                <Tooltip content={<FormattedMessage {...messages.rulesIconTooltip} />}>\n                                    <CSAwIcon />\n                                </Tooltip>\n                            </Label>\n                            <span className=\"rule-name\">{rule.rule.description || rule.rule.rule_id}</span>\n                        </Text>\n                    </TextContent>\n\n                    <InsightsReportCard report={rule} />\n                </Fragment>\n            }\n        </Fragment>\n\n    );\n};\n\nInsightsSystemRule.propTypes = {\n    rule: PropType.shape({\n        rule: PropType.object,\n        details: PropType.object,\n        resulotion: PropType.object\n    }).isRequired,\n    cve: PropType.string\n};\n\nexport const InsightsNoSystemRule = ({ cve }) => {\n    return (\n        <TextContent className=\"icon-with-label\">\n            <Text component={TextVariants.p}>\n                <FormattedMessage {...messages.exposedSystemNoRules} values={{ cve }} />\n            </Text>\n            <Text component={TextVariants.p} className=\"pf-u-mb-sm\">\n                <FormattedMessage {...messages.exposedSystemNoRulesInfo}/> <CSAwIcon/>\n            </Text>\n            <Text\n                component={TextVariants.a}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://access.redhat.com/articles/2968471\"\n            >\n                <FormattedMessage {...messages.exposedSystemNoRulesInfoLink} />\n            </Text>\n        </TextContent>\n    );\n};\n\nInsightsNoSystemRule.propTypes = {\n    cve: PropType.string\n};\n","import { Tooltip } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon, ServerAltIcon } from '@patternfly/react-icons';\nimport { processDate } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport React from 'react';\nimport { BUSINESS_RISK_OPTIONS, STATUS_OPTIONS } from './constants';\nimport { FormattedMessage } from 'react-intl';\nimport { InsightsSystemRule, InsightsNoSystemRule } from '../Components/SmartComponents/InsightsSystemRule/InsightsSystemRule';\nimport messages from '../Messages';\n\n/**\n * Creates the tables rows for systems exposed table\n *\n * @param {Boolean} isLoading\n * @param {Array} payload fetched data\n * @param {Array} openedRows id of opened(expaned) row\n *\n */\nexport const createExposedSystemsTable = ({ isLoading, payload, openedRows, cve }) => {\n    if (isLoading) {\n        return { data: (payload && payload.data) || [], meta: {}, isLoading };\n    }\n\n    let { data, meta } = payload;\n    const cvesCount = data && data.length;\n    const tableRows = data.map(item => ({\n        ...item.attributes,\n        id: item.id,\n        isOpen: openedRows.includes(item.id),\n        status: item.attributes.status_name,\n        children: item.attributes.rule\n            ? <InsightsSystemRule cve={cve} rule={item.attributes.rule} />\n            : <InsightsNoSystemRule cve={cve}/>\n    }));\n\n    return { data: tableRows, meta: { ...meta, cvesCount },  isLoading };\n\n};\n\nexport function createSystemsListTable(affectedSystems) {\n    let isLoading = affectedSystems.isLoading;\n    if (!isLoading) {\n        let payload = affectedSystems.payload.asMutable();\n        let { data, meta } = payload;\n        const dataWithStatus = data.map(item => ({\n            ...item,\n            attributes: {\n                ...item.attributes,\n                status: (\n                    <span>\n                        {item.attributes.cve_status_id !== item.attributes.status_id ? (\n                            <Tooltip content={<FormattedMessage {...messages.onlyThisSystemCvePair} />}>\n                                <ServerAltIcon />\n                            </Tooltip>\n                        ) : (\n                            ''\n                        )}{' '}\n                        {item.attributes.status_id !== undefined &&\n                            STATUS_OPTIONS.find(option => parseInt(option.value) === item.attributes.status_id).label}\n                    </span>\n                )\n            }\n        }));\n        return { data: dataWithStatus, meta, isLoading };\n    }\n\n    return { data: (affectedSystems.payload && affectedSystems.payload.data) || [], meta: {}, isLoading };\n}\n\nexport function createCveDetailsPage(cves) {\n    let isLoading = cves.isLoading;\n    let error = cves.error;\n    if (!isLoading && !error) {\n        let payload = cves.payload.asMutable();\n        let { data, meta } = payload;\n\n        data = {\n            impact: data.attributes.impact,\n            public_date: processDate(data.attributes.public_date),\n            description: data.attributes.description,\n            synopsis: data.attributes.synopsis,\n            rh_link: createRHDBLink(data.attributes.synopsis),\n            mitre_link: createMitreLink(data.attributes.synopsis),\n            cvss3_score: data.attributes.cvss3_score,\n            cvss2_score: data.attributes.cvss2_score,\n            cvss2_metrics: data.attributes.cvss2_metrics,\n            cvss3_metrics: data.attributes.cvss3_metrics,\n            business_risk: BUSINESS_RISK_OPTIONS.find(\n                option => option.value === data.attributes.business_risk_id.toString()\n            ).label,\n            business_risk_justification: data.attributes.business_risk_text,\n            business_risk_id: data.attributes.business_risk_id,\n            status: STATUS_OPTIONS.find(option => option.value === data.attributes.status_id.toString()).label,\n            status_id: data.attributes.status_id,\n            status_justification: data.attributes.status_text,\n            systems_status_detail: data.attributes.systems_status_detail,\n            systems_status_divergent: data.attributes.systems_status_divergent,\n            rules: data.attributes.rules\n        };\n\n        return { data, meta, isLoading };\n    }\n\n    return { data: [], meta: {}, isLoading, error };\n}\n\nexport function createRHDBLink(item) {\n    return (\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href={'https://access.redhat.com/security/cve/' + item}>\n            {<FormattedMessage {...messages.RHDBLink} />}{<ExternalLinkAltIcon className=\"pf-u-ml-sm\"/>}\n        </a>\n    );\n}\n\nexport function createMitreLink(item) {\n    return (\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href={'https://cve.mitre.org/cgi-bin/cvename.cgi?name=' + item}>\n            {<FormattedMessage {...messages.MITRELink} />}{<ExternalLinkAltIcon />}\n        </a>\n    );\n}\n\nexport const cveTableRowActions = (methods, rowIndex) => {\n    return (rowIndex % 2 === 0) ?\n        [\n            {\n                title: <FormattedMessage {...messages.editBusinessRisk} />,\n                onClick: (event, rowId, rowData) =>\n                    methods.showBusinessRiskModal([\n                        {\n                            id: rowData.id,\n                            business_risk_id: rowData.business_risk_id,\n                            justification: rowData.business_risk_justification\n                        }\n                    ])\n            },\n            {\n                title: <FormattedMessage {...messages.editStatus} />,\n                onClick: (event, rowId, rowData) =>\n                    methods.showStatusModal([\n                        {\n                            id: rowData.id,\n                            status_id: rowData.status_id,\n                            justification: rowData.status_justification\n                        }\n                    ])\n            }\n        ] : null;\n};\n\nexport const systemCveTableRowActions = (methods, entity, rowIndex) => {\n    return (rowIndex % 2 === 0) ?\n        [{\n            title: <FormattedMessage {...messages.editStatus} />,\n            onClick: (event, rowId, rowData) =>\n                methods.showStatusModal([\n                    {\n                        id: rowData.id,\n                        display_name: entity.display_name,\n                        status_id: rowData.status_id,\n                        cve_status_id: rowData.cve_status_id,\n                        justification: rowData.status_justification,\n                        cve_justification: rowData.cve_status_justification\n                    }\n                ],\n                entity\n                )\n        }] : null;\n};\n\nexport const systemExposedTableRowActions = (showStatusModal, cve, rowIndex) => {\n    return (rowIndex % 2 === 0) ?\n        [{\n            title: <FormattedMessage {...messages.editStatus} />,\n            onClick: (event, rowId, rowData) => {\n                showStatusModal(\n                    [{\n                        id: cve.id,\n                        status_id: cve.status_id,\n                        justification: cve.justification\n                    }],\n                    [{\n                        id: rowData.id,\n                        display_name: rowData.display_name,\n                        status_id: rowData.status_id,\n                        justification: rowData.status_text\n                    }]\n                );\n            }\n        }] : null;\n};\n\nexport const systemTableRowActions = (optOut, isOptOut) => [\n    {\n        title: (\n            isOptOut\n                ? <FormattedMessage {...messages.kebabResumeAnalysis} />\n                : <FormattedMessage {...messages.kebabExcludeAnalysis} />\n        ),\n        onClick: (event, rowId, rowData) => {\n            optOut([rowData.id]);\n        }\n    }\n];\n","import union from 'lodash/union';\nimport messages from '../Messages';\nimport { intl } from '../Utilities/IntlProvider';\n\nconst selectAllCheckbox = ({ selectedItems, selectorHandler, items, fetchResource, multiRow = false }) => {\n\n    const selectedItemsArray = Array.from(selectedItems); // we might get array or set and there's no common method for size\n    const selectedItemsCount = selectedItemsArray && selectedItemsArray.length;\n    const { meta, data } = items;\n    const selectPageNumber = data && (((Array.isArray(data) && data.length) && multiRow) ? data.length / 2 : data.length);\n\n    const handleSelectPage = () => {\n        const { data } = items;\n        const collectedItems = union(data.filter(item => item.id).map(item => item.id), selectedItemsArray);\n        selectorHandler(true, collectedItems);\n    };\n\n    const handleUnselectAll = () => {\n        selectorHandler(false, []);\n    };\n\n    const handleSelectAll = () => {\n\n        let { payload } = fetchResource && fetchResource({ page_size: meta.total_items, page: 1 });\n        payload &&\n            payload.then(({ data: response }) => {\n                //TODO: current only one new endpoint is introduced. Once, we have all new endpoints,  get rid of this map\n                const items = response.map(item => item.id && item.id || item);\n                selectorHandler(true, items);\n            });\n    };\n\n    const handleOnCheckboxChange = () => {\n        if (selectedItemsCount === 0) {\n            handleSelectAll();\n        } else {\n            handleUnselectAll();\n        }\n    };\n\n    return ({\n        handleOnCheckboxChange,\n        items: [\n            {\n                title: intl.formatMessage(messages.selectNone),\n                onClick: handleUnselectAll\n            },\n            {\n                title: `${intl.formatMessage(messages.selectPage, { count: selectPageNumber })}`,\n                onClick: handleSelectPage\n            },\n            {\n                title: `${intl.formatMessage(messages.selectAll, { count: meta.total_items ? meta.total_items : 0 })}`,\n                onClick: handleSelectAll\n            }\n        ]\n    }\n\n    );\n};\n\nexport default selectAllCheckbox;\n","var baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    baseUniq = require('./_baseUniq'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array of unique values, in order, from all given arrays using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.union([2], [1, 2]);\n * // => [2, 1]\n */\nvar union = baseRest(function(arrays) {\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n});\n\nmodule.exports = union;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components';\nimport { intl } from '../../../../Utilities/IntlProvider';\n\nimport debounce from 'lodash/debounce';\nimport React from 'react';\n\nconst SearchFilter = (label, placeholder, search, apply) => {\n    const [searchValue, setSearchValue] = React.useState();\n    const [handleSearch] = React.useState(() =>\n        debounce(filter =>  {if (filter !== undefined) { apply({ filter, page: 1 }); }}, 400)\n    );\n\n    React.useEffect(() => setSearchValue(search), [search]);\n\n    return {\n        type: conditionalFilterType.text,\n        label: intl.formatMessage(label),\n        filterValues: {\n            'aria-label': 'search-field',\n            id: `search-${label.id}`,\n            onChange: (event, value) => {\n                setSearchValue(value);\n                handleSearch(value);\n            },\n            placeholder: intl.formatMessage(placeholder),\n            value: searchValue\n        }\n    };\n};\n\nexport default SearchFilter;\n","import messages from '../Messages';\nimport { FILTERS } from './constants';\nimport { intl } from '../Utilities/IntlProvider';\n\nexport const handleChangePage = (_event, page, apply) => apply({ page });\n\nexport const handleSetPageSize = (_event, perPage, apply) => apply({ page_size: perPage, page: 1 });\n\nexport const exportConfig = (methods) => (\n    { onSelect: (_event, fileType) =>   methods.downloadReport(fileType) }\n);\n\nexport const buildActiveFilters = (currentFilters, filterRulevalues = []) => {\n\n    const { filter } = currentFilters;\n\n    const buildChip = (key, parameter) => (\n        FILTERS[key].items.reduce((object, item) => {\n            if (parameter === item.value) {\n                object.name = item.label;\n                object.value = item.value ;\n            }\n            else if (key === 'security_rule' && !['true', 'false'].includes(parameter))\n            {\n                const filteredRule = filterRulevalues.find(({ value }) => value === parameter);\n                object.name = filteredRule && filteredRule.label || parameter ;\n                object.value = parameter;\n            }\n\n            return object;\n        }, {})\n    );\n\n    const buildChips = (paramValues, key) => {\n        return paramValues.reduce((values, parameter) => {\n            values.push(buildChip(key, parameter));\n            return values;\n        }, []);\n    };\n\n    const filterChips = Object.keys(FILTERS).reduce((array, key) => {\n        if (key !== 'show_all' && Object.keys(currentFilters).includes(key) && !['', undefined].includes(currentFilters[key])) {\n\n            const multiValue = typeof currentFilters[key] === 'string' && currentFilters[key].split(',');\n            const filteredValues = (multiValue && multiValue.length > 1)\n                                            && buildChips(multiValue, key)\n                                            || [buildChip(key, currentFilters[key])];\n\n            array.push({ key, multiValue, category: FILTERS[key].title, chips: filteredValues });\n        }\n\n        return array;\n    }, []);\n\n    filter && filterChips.push(\n        { key: 'filter',\n            category: intl.formatMessage(messages.searchLabel),\n            chips: [{ name: filter }]\n        }\n    );\n\n    return filterChips;\n};\n\nexport const removeFilters = (chips, apply) =>{\n    const emptyFilter = chips.reduce((obj, item) =>{\n        if (item.key === 'filter' || (item.multiValue && item.multiValue.length === 1)) {\n            obj[item.key] = '';\n        }\n        else {\n            obj[item.key] = item.multiValue.filter(value => !item.chips.some(chip => chip.value === value)).join(',');\n        }\n\n        return obj;\n    }, {});\n\n    apply(emptyFilter);\n};\n","\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components';\nimport { SECURITY_RULE_OPTIONS } from '../../../../Helpers/constants';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\nimport unionWith from 'lodash/unionWith';\nimport isEqual from 'lodash/isEqual';\n\nconst securityRuleFilter = (apply, currentFilter = {}, dynamicFilters = []) => {\n    let { security_rule: currentValue } = currentFilter;\n    if (currentValue === '' || !currentValue) {\n        currentValue = 'all';\n    }\n\n    const filterBySecurityRule = values => {\n        apply({ security_rule: values === 'all' ? '' : values, page: 1 });\n    };\n\n    return {\n        label: intl.formatMessage(messages.securityRules),\n        type: conditionalFilterType.radio,\n        urlParam: 'security_rule',\n        filterValues: {\n            onChange: (event, value) => {\n                filterBySecurityRule(value);\n            },\n            items:\n                unionWith(SECURITY_RULE_OPTIONS, dynamicFilters, isEqual).map(item => ({ label: item.label, value: item.value })),\n            value: currentValue\n        }\n    };\n};\n\nexport default securityRuleFilter;\n","var baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    baseUniq = require('./_baseUniq'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    last = require('./last');\n\n/**\n * This method is like `_.union` except that it accepts `comparator` which\n * is invoked to compare elements of `arrays`. Result values are chosen from\n * the first array in which the value occurs. The comparator is invoked\n * with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.unionWith(objects, others, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n */\nvar unionWith = baseRest(function(arrays) {\n  var comparator = last(arrays);\n  comparator = typeof comparator == 'function' ? comparator : undefined;\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n});\n\nmodule.exports = unionWith;\n","\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components';\nimport { STATUS_OPTIONS } from '../../../../Helpers/constants';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\n\nconst statusFilter = (apply, currentFilter = {}) => {\n\n    let { status_id: currentValue } = currentFilter;\n\n    const filterByStatus = values => {\n        apply({ status_id: (values.length > '0' && values.filter(value => value !== ',').join(',')) || '', page: 1 });\n    };\n\n    return {\n        label: intl.formatMessage(messages.status),\n        type: conditionalFilterType.checkbox,\n        filterValues: {\n            onChange: (event, value) => {\n                filterByStatus(value);\n            },\n            items: STATUS_OPTIONS.map(item => ({ label: item.label, value: item.value })),\n            value: (currentValue ? currentValue.split(',') : [])\n        }\n    };\n};\n\nexport default statusFilter;\n","import { sortable } from '@patternfly/react-table';\n\nexport const initialState = {\n    columns: [],\n    rows: [],\n    entities: [],\n    selectedRows: []\n};\n\nfunction modifyInventory(columns, state) {\n    if (!state.selectedRows) {state.selectedRows = [];}\n\n    if (state.loaded) {\n        let lastSeenColumn = state.columns.filter(({ key }) => key === 'updated');\n        lastSeenColumn = [{ ...lastSeenColumn[0], transforms: [sortable] }];\n\n        return {\n            ...state,\n            rows: state.rows.map(item => ({ ...item, selected: state.selectedRows.some(system => system === item.id) })),\n            columns: [\n                ...columns || [],\n                ...lastSeenColumn || []\n            ]\n        };\n    }\n\n    return state;\n}\n\nfunction selectEntities(state, selected) {\n    const myRows = state.rows.slice();\n    if (!state.selectedRows) {state.selectedRows = [];}\n\n    const retval = {\n        ...state,\n        rows: myRows\n        .map(item => {\n            const newValue =  { ...item, selected: selected.some(system => system === item.id) };\n            return newValue;\n        }),\n        selectedRows: [...selected]\n    };\n    return retval;\n}\n\nexport const inventoryEntitiesReducer = (columns) => (state = initialState, action) => {\n    switch (action.type) {\n        case 'LOAD_ENTITIES_FULFILLED':\n            return modifyInventory(columns, state);\n        case 'SELECT_MULTIPLE_ENTITIES':\n            return selectEntities(state, action.payload);\n        case 'EXPAND_ROW':\n            return {\n                ...state,\n                rows: state.rows.map(row => ({\n                    ...row,\n                    isOpen: row.id === action.payload.id ? action.payload.isOpen : row.isOpen\n                }))\n            };\n        case 'CLEAR_INVENTORY_STORE':\n            return initialState;\n        default:\n            return state;\n    }\n};\n","import { Form, FormGroup, Radio, Stack, StackItem, TextArea } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { setBusinessRisk } from '../../../Helpers/APIHelper';\nimport { BUSINESS_RISK_OPTIONS } from '../../../Helpers/constants';\nimport BaseModal from './BaseModal';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nexport const BusinessRiskModal = ({ cves, updateRef, intl }) => {\n    const [cveList] = useState(cves);\n    const [businessRiskId, setBusinessRiskId] = useState('0');\n    const [label, setLabel] = useState();\n\n    const getDefaultLabel = useCallback(() => {\n        setLabel((cveList && cveList.length === 1 && cveList[0].justification) || '');\n    }, [cveList]);\n\n    useEffect(() => {\n        const getDefaultBusinessRisk = () => {\n            setBusinessRiskId((cveList && cveList.length === 1 && cveList[0].business_risk_id.toString()) || '0');\n        };\n\n        getDefaultBusinessRisk();\n        getDefaultLabel();\n    }, [cves, getDefaultLabel, cveList]);\n\n    useEffect(getDefaultLabel, [cves]);\n\n    const handleOnRadioChange = (_, event) => {\n        const { value } = event.currentTarget;\n        setBusinessRiskId(value);\n    };\n\n    const handleOnLabelChange = value => {\n        setLabel(value);\n    };\n\n    const handleSave = () => {\n        return setBusinessRisk({\n            business_risk_id: parseInt(businessRiskId),\n            cve: cveList.map(item => item.id),\n            business_risk_text: label\n        }).then(updateRef);\n    };\n\n    const successNotification = {\n        variant: 'success',\n        title: intl.formatMessage(messages.businessRiskUpdateSuccessful, { count: cveList.length || 0 })\n    };\n\n    return (\n        <BaseModal\n            items={cveList}\n            onSave={handleSave}\n            onSuccessNotification={successNotification}\n            title={intl.formatMessage(messages.businessRiskModalTitle)}\n        >\n            <Stack hasGutter>\n                <StackItem>\n                    {intl.formatMessage(messages.businessRiskModalInfo)}\n                </StackItem>\n                <StackItem>\n                    <Form>\n                        <FormGroup label={intl.formatMessage(messages.businessRiskLabel)} fieldId={'businessRiskId'}>\n                            {BUSINESS_RISK_OPTIONS.map(item => (\n                                <Radio\n                                    className={'business-risk-radio'}\n                                    value={item.value}\n                                    isChecked={businessRiskId === item.value}\n                                    onChange={handleOnRadioChange}\n                                    label={item.label}\n                                    key={item.value}\n                                    id={item.value}\n                                    name={item.label}\n                                    aria-label={item.label}\n                                />\n                            ))}\n                        </FormGroup>\n                        <FormGroup label={intl.formatMessage(messages.justificationLabel)} fieldId={'label'}>\n                            <TextArea\n                                type=\"text\"\n                                onChange={handleOnLabelChange}\n                                value={label}\n                                resizeOrientation='vertical'\n                                aria-label={'justification'}\n                            />\n                        </FormGroup>\n                    </Form>\n                </StackItem>\n            </Stack>\n        </BaseModal>\n    );\n};\n\nBusinessRiskModal.propTypes = {\n    cves: propTypes.array,\n    updateRef: propTypes.func,\n    intl: propTypes.any\n};\n\nexport default injectIntl(BusinessRiskModal);\n","import { Checkbox, Form, FormGroup, Split, SplitItem, Stack, StackItem, Tooltip } from '@patternfly/react-core';\nimport { InfoCircleIcon, OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport propTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { setCveStatus, setSystemCveStatus } from '../../../Helpers/APIHelper';\nimport BaseModal, { useJustificationInput, useStatusSelect } from './BaseModal';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nexport const CveStatusModal = ({ cves, updateRef, intl }) => {\n    const [cveList] = useState(cves);\n    const { StatusSelect, statusId } = useStatusSelect(getDefaultStatus());\n    const { JustificationInput, justification } = useJustificationInput(getDefaultLabel());\n    const [checkboxState, setCheckboxState] = useState(false);\n\n    const handleSave = () => {\n        const cveIds = cveList.map(item => item.id);\n        return setCveStatus({\n            status_id: parseInt(statusId),\n            cve: cveIds,\n            status_text: justification\n        })\n        .then(() => !checkboxState && setSystemCveStatus({ cve: cveIds }))\n        .then(updateRef);\n    };\n\n    function getDefaultStatus() {\n        return (cveList && cveList.length === 1 && cveList[0].status_id.toString()) || '0';\n    }\n\n    function getDefaultLabel() {\n        return (cveList && cveList.length === 1 && cveList[0].justification) || '';\n    }\n\n    const successNotification = {\n        variant: 'success',\n        title: intl.formatMessage(messages.cveStatusModalUpdateSuccessful, { count: cveList.length || 0 })\n    };\n    const title = intl.formatMessage(messages.cveStatusModalTitle, { count: cveList.length || 0 });\n\n    return (\n        <BaseModal items={cveList} onSave={handleSave} onSuccessNotification={successNotification} title={title}>\n            <Stack hasGutter>\n                <StackItem>\n                    {intl.formatMessage(\n                        messages.cveStatusModalSelected,\n                        {\n                            count: cveList.length || 0,\n                            cveId: cveList[0].id, // only used when length is 1\n                            b: (...chunks) => <b>{chunks}</b> // explicitly specifying what is wrapped <b> should be bold\n                        }\n                    )}\n                </StackItem>\n                <StackItem>\n                    <InfoCircleIcon\n                        className=\"pf-u-mr-xs\"\n                        fontSize=\"var(--pf-global--FontSize--md)\"\n                        color=\"var(--pf-global--active-color--300)\"\n                    />\n                    {intl.formatMessage(messages.cveStatusModalInfo, { count: cveList.length || 0 })}\n                    <Tooltip\n                        trigger='mouseenter focus click'\n                        content={intl.formatMessage(messages.cveStatusModalInfoTooltip)}\n                    >\n                        <React.Fragment>\n                            <OutlinedQuestionCircleIcon\n                                className=\"pf-u-ml-xs\"\n                                color=\"var(--pf-global--Color--200)\"\n                                style={{ verticalAlign: '-0.125em' }}\n                            />\n                        </React.Fragment>\n                    </Tooltip>\n                </StackItem>\n                <StackItem>\n                    <Form key=\"key\">\n                        {StatusSelect}\n                        {JustificationInput}\n                        <FormGroup fieldId={'overwrite'}>\n                            <Split>\n                                <SplitItem>\n                                    <Checkbox\n                                        label={intl.formatMessage(messages.cveStatusModalOverwriteCheckbox)}\n                                        id=\"alt-form-checkbox-1\"\n                                        name=\"alt-form-checkbox-1\"\n                                        isChecked={checkboxState}\n                                        onChange={checked => setCheckboxState(checked)}\n                                    />\n                                </SplitItem>\n                                <SplitItem>\n                                    <Tooltip\n                                        trigger='mouseenter focus click'\n                                        content={intl.formatMessage(messages.cveStatusModalOverwriteTooltip)}\n                                    >\n                                        <OutlinedQuestionCircleIcon\n                                            className=\"pf-u-ml-xs\"\n                                            color=\"var(--pf-global--Color--200)\"\n                                            style={{ verticalAlign: '0' }}\n                                        />\n                                    </Tooltip>\n                                </SplitItem>\n                            </Split>\n                        </FormGroup>\n                    </Form>\n                </StackItem>\n            </Stack>\n        </BaseModal>\n    );\n};\n\nCveStatusModal.propTypes = {\n    cves: propTypes.array,\n    updateRef: propTypes.func,\n    intl: propTypes.any\n};\n\nexport default injectIntl(CveStatusModal);\n","import { Checkbox, Form, FormGroup, Stack, StackItem, Alert, Split, Tooltip, SplitItem } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport propTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { setSystemCveStatus } from '../../../Helpers/APIHelper';\nimport BaseModal, { useJustificationInput, useStatusSelect } from './BaseModal';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nexport const CvePairStatusModal = ({ cves, updateRef, inventories, hasDifferentStatus = false, intl, type }) => {\n    const [cveList] = useState(cves);\n    const [inventoryList] = useState(inventories);\n    const {\n        JustificationInput,\n        justification,\n        setJustification,\n        setProps: setJustificationProps\n    } = useJustificationInput(getDefaultLabel());\n    const [checkboxState, setCheckboxState] = useState(getDefaultCheckboxState());\n    const { StatusSelect, statusId, setStatusId, setProps: setSelectProps } = useStatusSelect(getDefaultStatus());\n    const inventoryIds = inventoryList.map(item => item.id);\n    const inventoryNames = inventoryList.map(item => item.display_name);\n\n    useEffect(() => {\n        setSelectProps({ isDisabled: checkboxState });\n        setJustificationProps({ disabled: checkboxState });\n        setStatusId(getCveStatus());\n        setJustification(getCveJustification());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [checkboxState, setSelectProps, setJustificationProps]);\n\n    useEffect(() => {\n        setStatusId(getCveStatus());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [checkboxState, setStatusId]);\n\n    const handleSave = () => {\n        const cveIds = cveList.map(item => item.id);\n        const setStatusParams = !checkboxState\n            ? {\n                status_id: parseInt(statusId),\n                cve: cveIds,\n                status_text: justification,\n                inventory_id: inventoryIds\n            }\n            : { cve: cveIds, inventory_id: inventoryIds };\n        return setSystemCveStatus(setStatusParams).then(updateRef);\n    };\n\n    function getDefaultStatus() {\n        // system has different status\n        if (inventoryList && inventoryList.length > 0 && inventoryList[0].status_id) {\n            return getSystemsStatus();\n        }\n\n        if (cveList && cveList.length > 0) {\n            return getCveStatus();\n        }\n\n    }\n\n    function getDefaultLabel() {\n        if (inventoryList && inventoryList.length === 1 && inventoryList[0].justification) {\n            return getSystemsJustification();\n        }\n\n        if (cveList && cveList.length === 1) {\n            return getCveJustification();\n        }\n    }\n\n    function getDefaultCheckboxState() {\n\n        const haveSameStatuses = cveList.every(\n            (val, i, arr) => (val.status_id === arr[0].status_id) && (val.cve_status_id === arr[0].cve_status_id)\n        );\n\n        const differFromOverall = cveList.some(item => item.status_id !== item.cve_status_id);\n        if (differFromOverall) { return false; }\n\n        // system has the same status as cve\n        if (inventoryList && inventoryList.length === 1 && inventoryList[0].status_id) {\n            let [inventory] = inventoryList;\n            return cveList.some(cve => (cve.status_id === inventory.status_id));\n        }\n\n        if (cveList && cveList.length === 1 || haveSameStatuses) {\n            return true;\n        }\n\n        return false;\n    }\n\n    function getSystemsStatus() {\n        return (inventoryList && inventoryList[0].status_id.toString()) || '0';\n    }\n\n    function getSystemsJustification() {\n        return (inventoryList && inventoryList.length === 1 && inventoryList[0].justification) || '';\n    }\n\n    function getCveStatus() {\n        switch (type) {\n            case 'systemsExposed' : {\n                return (cveList && cveList.length === 1 && cveList[0].status_id.toString()) || '0';\n            }\n\n            case 'systemDetail': {\n                if (cveList) {\n                    if (checkboxState) { // use overall (CVE) status\n                        return hasDifferentStatus ? '0' : cveList[0].cve_status_id || '0';\n                    }\n                    else { // use system pair status\n                        return hasDifferentStatus ? '0' : cveList[0].status_id || '0';\n                    }\n                }\n                else {\n                    return '0';\n                }\n            }\n\n            default: {\n                return '0';\n            }\n        }\n\n    }\n\n    function getCveJustification() {\n        switch (type) {\n            case 'systemsExposed' : {\n                return (cveList && cveList.length === 1 && cveList[0].justification) || '';\n            }\n\n            case 'systemDetail': {\n                if (checkboxState) { // use overall (CVE) justification\n                    return (cveList && cveList.length === 1 && cveList[0].cve_justification) || '';\n                }\n                else { // use system pair justification\n                    return (cveList && cveList.length === 1 && cveList[0].justification) || '';\n                }\n            }\n\n            default: {\n                return '';\n            }\n        }\n    }\n\n    const successNotification = {\n        variant: 'success',\n        title: intl.formatMessage(messages.cvePairStatusModalUpdateSuccessful)\n    };\n\n    const modalTitle = intl.formatMessage(messages.cvePairStatusModalTitle, { count: inventoryIds.length * cves.length });\n\n    return (\n        <BaseModal items={cveList} onSave={handleSave} onSuccessNotification={successNotification} title={modalTitle}>\n            <Stack hasGutter>\n                {hasDifferentStatus &&\n                    <StackItem>\n                        <Alert\n                            variant=\"warning\"\n                            isInline\n                            title={intl.formatMessage(messages.cvePairStatusModalAlert)}\n                        />\n                    </StackItem>\n                }\n                <StackItem>\n                    {intl.formatMessage(\n                        messages.cvePairStatusModalSelected,\n                        {\n                            cveCount: cveList.length || 0,\n                            cveId: cveList[0].id, // only used when length is 1\n                            systemCount: inventoryList.length || 0,\n                            systemName: inventoryNames[0], // only used when length is 1\n                            b: (...chunks) => <b>{chunks}</b> // explicitly specifying what is wrapped <b> should be bold\n                        }\n                    )}\n                </StackItem>\n                <StackItem>\n                    <Form key=\"key\">\n                        <FormGroup fieldId={'overall'}>\n                            <Split>\n                                <SplitItem>\n                                    <Checkbox\n                                        label={intl.formatMessage(messages.cvePairStatusModalUseOverallCheckbox)}\n                                        id=\"alt-form-checkbox-1\"\n                                        name=\"alt-form-checkbox-1\"\n                                        isChecked={checkboxState}\n                                        onChange={checked => setCheckboxState(checked)}\n                                    />\n                                </SplitItem>\n                                <SplitItem>\n                                    <Tooltip\n                                        trigger='mouseenter focus click'\n                                        content={intl.formatMessage(messages.cvePairStatusModalUseOverallTooltip)}\n                                    >\n                                        <OutlinedQuestionCircleIcon\n                                            className=\"pf-u-ml-xs\"\n                                            color=\"var(--pf-global--Color--200)\"\n                                            style={{ verticalAlign: '0' }}\n                                        />\n                                    </Tooltip>\n                                </SplitItem>\n                            </Split>\n                        </FormGroup>\n                        {StatusSelect}\n                        {JustificationInput}\n                    </Form>\n                </StackItem>\n            </Stack>\n        </BaseModal>\n    );\n};\n\nCvePairStatusModal.propTypes = {\n    cves: propTypes.array,\n    updateRef: propTypes.func,\n    inventories: propTypes.array,\n    hasDifferentStatus: propTypes.bool,\n    intl: propTypes.any,\n    type: propTypes.string\n};\n\nexport default injectIntl(CvePairStatusModal);\n","import { addNotification } from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\nimport RemediationButton from '@redhat-cloud-services/frontend-components-remediations/RemediationButton';\nimport  AnsibeTowerIcon  from '@patternfly/react-icons/dist/js/icons/ansibeTower-icon';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport globalBackgroundColor100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_100';\nimport propTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport messages from '../../../Messages';\nimport { FormattedMessage } from 'react-intl';\n\nclass Remediation extends Component {\n    static propTypes = {\n        cves: propTypes.oneOfType([\n            propTypes.array,\n            propTypes.string\n        ]),\n        systems: propTypes.oneOfType([\n            propTypes.array,\n            propTypes.string\n        ]),\n        addNotification: propTypes.func\n    };\n\n    shouldComponentUpdate(nextProps) {\n        if (nextProps.cves !== this.props.cves) {\n            return true;\n        }\n\n        if (nextProps.systems !== this.props.systems) {\n            return true;\n        }\n\n        return false;\n    }\n\n    remediationProvider = (cves = [], systems = []) => {\n        cves = [].concat(cves);\n        systems = [].concat(systems);\n        return cves.length && systems.length\n            ? {\n                issues: cves.map(cve => ({\n                    id: `vulnerabilities:${cve}`,\n                    description: cve\n                })),\n                systems\n            }\n            : false;\n    };\n\n    render() {\n        const { cves, systems, addNotification: dispatchNotification } = this.props;\n        return (\n            <div>\n                <RemediationButton\n                    dataProvider={() => this.remediationProvider(cves, systems)}\n                    isDisabled={this.remediationProvider(cves, systems) === false}\n                    onRemediationCreated={result => dispatchNotification(result.getNotification())}\n                >\n                    <AnsibeTowerIcon size='sm' color={globalBackgroundColor100.value} />\n                    &nbsp;{<FormattedMessage {...messages.remediateLabel} />}\n                </RemediationButton>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    null,\n    dispatch => ({\n        addNotification: notification => dispatch(addNotification(notification))\n    })\n)(routerParams(Remediation));\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEPageDetailsDescription.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEPageDetailsDescription.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEPageDetailsDescription.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js!@redhat-cloud-services/frontend-components-notifications/index.css\"), \"\");\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js!@redhat-cloud-services/frontend-components/index.css\"), \"\");\n\n// module\nexports.push([module.id, \":root {\\n  --ins-color--orange: #ec7a08; }\\n\\nbutton:focus {\\n  outline: none; }\\n\\n.page__Vulnerabilities {\\n  overflow-x: auto !important; }\\n  .page__Vulnerabilities .pf-c-page__main {\\n    overflow-x: auto; }\\n\\n.csaw-icon {\\n  vertical-align: -0.125em;\\n  margin-right: var(--pf-global--spacer--xs); }\\n\\n.icon-with-label:not(:last-child) {\\n  margin-right: var(--pf-global--spacer--sm); }\\n\\n.icon-with-label > svg {\\n  margin-right: var(--pf-global--spacer--sm); }\\n\\n.business-risk-radio > input {\\n  margin-left: 1px; }\\n\\n.splitter {\\n  margin-bottom: var(--pf-global--spacer--sm) !important;\\n  margin-top: var(--pf-global--spacer--sm) !important; }\\n\\n.status-breakdown-table tr th {\\n  font-weight: normal;\\n  padding-left: 0px;\\n  padding-right: var(--pf-global--spacer--md);\\n  padding-bottom: var(--pf-global--spacer--sm); }\\n  .status-breakdown-table tr th:last-child {\\n    text-align: right;\\n    min-width: 8em; }\\n\\n.status-breakdown-table tr td {\\n  padding-left: 0px;\\n  padding-right: var(--pf-global--spacer--md);\\n  white-space: nowrap;\\n  padding-top: var(--pf-global--spacer--sm);\\n  padding-bottom: var(--pf-global--spacer--sm); }\\n  .status-breakdown-table tr td:last-child {\\n    text-align: right; }\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEInfoBox.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEInfoBox.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEInfoBox.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js!@redhat-cloud-services/frontend-components-notifications/index.css\"), \"\");\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js!@redhat-cloud-services/frontend-components/index.css\"), \"\");\n\n// module\nexports.push([module.id, \":root {\\n  --ins-color--orange: #ec7a08; }\\n\\nbutton:focus {\\n  outline: none; }\\n\\n.page__Vulnerabilities {\\n  overflow-x: auto !important; }\\n  .page__Vulnerabilities .pf-c-page__main {\\n    overflow-x: auto; }\\n\\n.csaw-icon {\\n  vertical-align: -0.125em;\\n  margin-right: var(--pf-global--spacer--xs); }\\n\\n.icon-with-label:not(:last-child) {\\n  margin-right: var(--pf-global--spacer--sm); }\\n\\n.icon-with-label > svg {\\n  margin-right: var(--pf-global--spacer--sm); }\\n\\n.business-risk-radio > input {\\n  margin-left: 1px; }\\n\\n.infobox-square {\\n  background-color: var(--pf-global--BackgroundColor--200);\\n  border: var(--pf-global--BorderColor--300) var(--pf-global--BorderWidth--sm) solid;\\n  height: 65px; }\\n  .infobox-square > .pf-l-split__item:first-child {\\n    width: 65px;\\n    color: black;\\n    background-color: white; }\\n    .infobox-square > .pf-l-split__item:first-child:not(.severity-unknown) > div.pf-l-bullseye svg {\\n      color: white; }\\n  .infobox-square h3,\\n  .infobox-square h6 {\\n    margin: 0; }\\n  .infobox-square > .pf-l-split__item:nth-child(2) {\\n    display: flex;\\n    justify-content: flex-start;\\n    align-items: center; }\\n\\n.severity-low {\\n  background-color: var(--pf-global--Color--200) !important; }\\n\\n.severity-critical {\\n  background-color: var(--pf-global--danger-color--100) !important; }\\n\\n.severity-moderate {\\n  background-color: var(--pf-global--warning-color--100) !important; }\\n\\n.severity-color-important {\\n  background-color: var(--pf-global--palette--orange-300) !important; }\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CvssVector.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CvssVector.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CvssVector.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".severity-info-box > div h6 {\\n  margin: 0; }\\n\\n.severity-info-box > div > div:nth-child(3) h6 .ins-c-skeleton {\\n  max-height: 30px !important;\\n  max-width: 30% !important; }\\n\\n.severity-info-box > div > div:nth-child(3) div > .ins-c-skeleton {\\n  max-height: 25px !important;\\n  max-width: 80% !important; }\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CSAwRuleBox.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CSAwRuleBox.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CSAwRuleBox.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".label {\\n  min-width: 140px; }\\n\\n.l-sm-spacer {\\n  margin-left: var(--pf-global--spacer--sm); }\\n\\n.ansible-success {\\n  color: var(--pf-global--success-color--200); }\\n\\n.card-box-shadow {\\n  box-shadow: var(--pf-global--BoxShadow--md);\\n  border: 1px solid var(--pf-global--BorderColor--dark-100); }\\n\", \"\"]);\n\n// exports\n","import { Popover, Stack, StackItem } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport Label from '../Snippets/Label';\nimport './CVEPageDetailsDescription.scss';\n\nconst SnippetWithHeaderAndPopover = props => {\n    const { title, value, content } = props;\n\n    return (\n        <Popover bodyContent={content} headerContent={''} aria-label={'Business risk popover'} position=\"right\">\n            <Stack style={{ display: 'inline-block', cursor: 'pointer' }}>\n                <StackItem>\n                    <Label>{title}</Label>\n                </StackItem>\n                <StackItem>\n                    <a>{value}</a>\n                </StackItem>\n            </Stack>\n        </Popover>\n    );\n};\n\nSnippetWithHeaderAndPopover.propTypes = {\n    title: propTypes.any,\n    value: propTypes.any,\n    content: propTypes.any\n};\nexport default SnippetWithHeaderAndPopover;\n","import { Stack, StackItem, Text, TextContent, TextVariants, Split, SplitItem } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { PatternFlyThemeProvider, StyledBox, StyledText, StyledConstants } from '@patternfly/react-styled-system';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { STATUS_OPTIONS } from '../../../Helpers/constants';\nimport './CVEPageDetailsDescription.scss';\nimport SnippetWithHeaderAndPopover from './SnippetWithHeaderAndTooltip';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst CVEPageDetailsDescription = ({ cveAttributes, intl }) => {\n    const {\n        public_date: publishDate,\n        description,\n        rh_link: link,\n        business_risk: businessRisk,\n        business_risk_justification: businessRiskJustification,\n        status,\n        status_justification: statusJustification,\n        systems_status_detail: systemsStatusDetail,\n        systems_status_divergent: systemsStatusDivergent\n    } = cveAttributes;\n\n    const detailRows =\n        systemsStatusDetail &&\n        Object.keys(systemsStatusDetail).map(item => [\n            STATUS_OPTIONS.find(status => status.value === item.toString()).label,\n            systemsStatusDetail[item].toString()\n        ]);\n\n    const brPopoverContent = (\n        <TextContent>\n            <Stack>\n                <StackItem>\n                    <StyledText\n                        fontWeight={StyledConstants.fontWeights.bold}\n                        fontSize={StyledConstants.fontSizes.sm}\n                        lineHeight={StyledConstants.lineHeights.sm}\n                    >\n                        {intl.formatMessage(messages.justificationNote)}\n                    </StyledText>\n                </StackItem>\n                <StackItem>{businessRiskJustification || '--'}</StackItem>\n            </Stack>\n        </TextContent>\n    );\n\n    const statusPopoverContent = (\n        <Stack>\n            <StackItem>\n                <StyledText\n                    fontWeight={StyledConstants.fontWeights.bold}\n                    fontSize={StyledConstants.fontSizes.sm}\n                    lineHeight={StyledConstants.lineHeights.sm}\n                >\n                    {intl.formatMessage(messages.cveStatus)}\n                </StyledText>\n                {status || '--'}\n\n                <StyledText\n                    fontWeight={StyledConstants.fontWeights.bold}\n                    fontSize={StyledConstants.fontSizes.sm}\n                    lineHeight={StyledConstants.lineHeights.sm}\n                    style={{ marginTop: 'var(--pf-global--spacer--sm)' }}\n                >\n                    {intl.formatMessage(messages.justificationNote)}\n                </StyledText>\n                {statusJustification || '--'}\n            </StackItem>\n            {systemsStatusDivergent > 0 && (\n                <StackItem>\n                    <TextContent>\n                        <hr className={'splitter'} />\n                    </TextContent>\n                    <StyledText fontWeight={StyledConstants.fontWeights.semi_bold} lineHeight={StyledConstants.lineHeights.sm}>\n                        {intl.formatMessage(messages.cvePageDetailsSystemsWTCves)}\n                    </StyledText>\n                    <Table\n                        aria-label={'Status details'}\n                        borders={false}\n                        gridBreakPoint={null}\n                        cells={[intl.formatMessage(messages.statusLabel), intl.formatMessage(messages.count)]}\n                        rows={detailRows}\n                        className={'status-breakdown-table'}\n                    >\n                        <TableHeader />\n                        <TableBody />\n                    </Table>\n                </StackItem>\n            )}\n        </Stack>\n    );\n    return (\n        <PatternFlyThemeProvider>\n            <Stack hasGutter>\n                <StackItem />\n                <StackItem>\n                    <Split hasGutter>\n                        <SplitItem>\n                            <SnippetWithHeaderAndPopover\n                                title={intl.formatMessage(messages.businessRiskLabel)}\n                                value={businessRisk}\n                                content={brPopoverContent}\n                            />\n                        </SplitItem>\n                        <SplitItem>\n                            <SnippetWithHeaderAndPopover\n                                title={intl.formatMessage(messages.statusLabel)}\n                                content={statusPopoverContent}\n                                value={\n                                    <span>\n                                        {systemsStatusDivergent > 0 && (\n                                            <ExclamationTriangleIcon color={'var(--pf-global--primary-color--100)'} />\n                                        )}{' '}\n                                        {status}\n                                    </span>\n                                }\n                            />\n                        </SplitItem>\n                    </Split>\n                </StackItem>\n                <StackItem>\n                    <TextContent>\n                        <Text component={TextVariants.p}>{description}</Text>\n                    </TextContent>\n                </StackItem>\n                <StackItem>\n                    <StyledBox style={{ marginBottom: 'var(--pf-global--spacer--xs)' }}>\n                        {intl.formatMessage(messages.publishDate)}: {publishDate}\n                    </StyledBox>\n                    <StyledBox>{link}</StyledBox>\n                </StackItem>\n            </Stack>\n        </PatternFlyThemeProvider>\n    );\n};\n\nCVEPageDetailsDescription.propTypes = {\n    cveAttributes: propTypes.any,\n    intl: propTypes.any\n};\n\nexport default injectIntl(CVEPageDetailsDescription);\n","import { Skeleton, SkeletonSize, Spinner } from '@redhat-cloud-services/frontend-components';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport ContentLoader, { BulletList, List } from 'react-content-loader';\n\nconst WithLoader = props => {\n    if (props === undefined || props.loading !== false) {\n        switch (props.variant) {\n            case 'spinner':\n                return <Spinner centered />;\n            case 'cvePageOverviewItem':\n                return <CVEPageOverviewItemLoader />;\n            case 'list':\n                return <List />;\n            case 'bulletList':\n                return <BulletList />;\n            case 'trendBox':\n                return <TrendBoxLoader />;\n            case 'currentVulnerabilitiesItem':\n                return <CurrentVulnerabilitiesItemLoader />;\n            default:\n                return <Skeleton size={SkeletonSize.lg} />;\n        }\n    }\n\n    return props.children;\n};\n\n// Loaders\nconst CVEPageOverviewItemLoader = () => {\n    return (\n        <ContentLoader height={61} width={120}>\n            <rect x=\"35\" y=\"0\" rx=\"0\" ry=\"0\" width=\"50\" height=\"35\" />\n            <rect x=\"0\" y=\"45\" rx=\"0\" ry=\"0\" width=\"120\" height=\"16\" />\n        </ContentLoader>\n    );\n};\n\nconst TrendBoxLoader = () => {\n    return (\n        <ContentLoader height={100} width={300}>\n            <rect x=\"388.58\" y=\"109.13\" rx=\"0\" ry=\"0\" width=\"0\" height=\"0\" />\n            <rect x=\"11.58\" y=\"16.13\" rx=\"0\" ry=\"0\" width=\"37\" height=\"62\" />\n            <rect x=\"52.58\" y=\"52.13\" rx=\"0\" ry=\"0\" width=\"17\" height=\"26\" />\n            <rect x=\"76.58\" y=\"52.13\" rx=\"0\" ry=\"0\" width=\"17\" height=\"26\" />\n            <rect x=\"4.58\" y=\"82.13\" rx=\"0\" ry=\"0\" width=\"154\" height=\"22\" />\n        </ContentLoader>\n    );\n};\n\nconst CurrentVulnerabilitiesItemLoader = () => {\n    return (\n        <ContentLoader height={50} width={200} speed={2} primaryColor=\"#f3f3f3\" secondaryColor=\"#ecebeb\">\n            <rect x=\"82.58\" y=\"15.13\" rx=\"0\" ry=\"0\" width=\"110.88\" height=\"21.42\" />\n            <circle cx=\"25\" cy=\"25\" r=\"25\" />\n        </ContentLoader>\n    );\n};\n\nWithLoader.propTypes = {\n    loading: propTypes.bool,\n    variant: propTypes.string\n};\n\nexport default WithLoader;\n","import { Bullseye, Split, SplitItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { CVEPageContext } from '../../SmartComponents/CVEDetailsPage/CVEDetailsPage';\nimport WithLoader from '../WithLoader/WithLoader';\nimport './CVEInfoBox.scss';\n\nconst CVEInfoBox = (props) => {\n    return (\n        <CVEPageContext.Consumer>\n            {context => (\n                <Split className=\"infobox-square\" hasGutter>\n                    <WithLoader loading={context.isLoading}>\n                        <SplitItem className={props.titleColor}>\n                            <Bullseye>{props.titleContent}</Bullseye>\n                        </SplitItem>\n                        <SplitItem isFilled>\n                            <TextContent>\n                                <Text component={TextVariants.h6}>{props.descriptionTitle}</Text>\n                                <Text component={TextVariants.p}>{props.descriptionContent}</Text>\n                            </TextContent>\n                        </SplitItem>\n                    </WithLoader>\n                </Split>\n            )}\n        </CVEPageContext.Consumer>\n    );\n};\n\nCVEInfoBox.propTypes = {\n    titleContent: propTypes.any,\n    titleColor: propTypes.any,\n    descriptionContent: propTypes.any,\n    descriptionTitle: propTypes.any\n};\n\nexport default CVEInfoBox;\n","import { intl } from '../../../Utilities/IntlProvider';\nimport messages from '../../../Messages';\n\nexport const V3names = {\n    AV: {\n        name: intl.formatMessage(messages.vectorNamesV3AV),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNetwork),\n            A: intl.formatMessage(messages.vectorValuesAdjacent),\n            L: intl.formatMessage(messages.vectorValuesLocal),\n            P: intl.formatMessage(messages.vectorValuesPhysical)\n        }\n    },\n    AC: {\n        name: intl.formatMessage(messages.vectorNamesV3AC),\n        values: {\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    PR: {\n        name: intl.formatMessage(messages.vectorNamesV3PR),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    UI: {\n        name: intl.formatMessage(messages.vectorNamesV3UI),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            R: intl.formatMessage(messages.vectorValuesRequired)\n        }\n    },\n    S: {\n        name: intl.formatMessage(messages.vectorNamesV3S),\n        values: {\n            U: intl.formatMessage(messages.vectorValuesUnchanged),\n            C: intl.formatMessage(messages.vectorValuesChanged)\n        }\n    },\n    C: {\n        name: intl.formatMessage(messages.vectorNamesV3C),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    I: {\n        name: intl.formatMessage(messages.vectorNamesV3I),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    A: {\n        name: intl.formatMessage(messages.vectorNamesV3A),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    CVSS: {\n        name: intl.formatMessage(messages.vectorNamesCvssVersion),\n        values: {\n            '3.0': 3.0\n        }\n    }\n};\n\nexport const V2names = {\n    AV: {\n        name: intl.formatMessage(messages.vectorNamesV2AV),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNetwork),\n            A: intl.formatMessage(messages.vectorValuesAdjacentNetwork),\n            L: intl.formatMessage(messages.vectorValuesLocal)\n        }\n    },\n    AC: {\n        name: intl.formatMessage(messages.vectorNamesV2AC),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    Au: {\n        name: intl.formatMessage(messages.vectorNamesV2AU),\n        values: {\n            M: intl.formatMessage(messages.vectorValuesMultiple),\n            S: intl.formatMessage(messages.vectorValuesSingle),\n            N: intl.formatMessage(messages.vectorValuesNone)\n        }\n    },\n    C: {\n        name: intl.formatMessage(messages.vectorNamesV2C),\n        values: {\n            C: intl.formatMessage(messages.vectorValuesComplete),\n            P: intl.formatMessage(messages.vectorValuesPartial),\n            N: intl.formatMessage(messages.vectorValuesNone)\n        }\n    },\n    I: {\n        name: intl.formatMessage(messages.vectorNamesV2I),\n        values: {\n            C: intl.formatMessage(messages.vectorValuesComplete),\n            P: intl.formatMessage(messages.vectorValuesPartial),\n            N: intl.formatMessage(messages.vectorValuesNone)\n        }\n    },\n    A: {\n        name: intl.formatMessage(messages.vectorNamesV2A),\n        values: {\n            C: intl.formatMessage(messages.vectorValuesComplete),\n            P: intl.formatMessage(messages.vectorValuesPartial),\n            N: intl.formatMessage(messages.vectorValuesNone)\n        }\n    }\n};\n","import { Popover, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { Table, TableBody, TableHeader, TableVariant } from '@patternfly/react-table';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { CVEPageContext } from '../../SmartComponents/CVEDetailsPage/CVEDetailsPage';\nimport WithLoader from '../WithLoader/WithLoader';\nimport './CvssVector.scss';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport { V3names, V2names } from './vectorNames';\n\nexport const parseVector = (vector, namesMapping) => {\n    let res = {};\n    vector &&\n        vector.split('/').forEach(curr => {\n            let [key, val] = curr.split(':');\n            const name = namesMapping[key] && namesMapping[key].name;\n            const value = (namesMapping[key] && namesMapping[key].values[val]) || 'N/A';\n            if (name) {\n                res[name] = value;\n            }\n        });\n    return res;\n};\n\nconst CvssVector = props => {\n    const { cvss2_metrics: CVSS2Vector, cvss3_metrics: CVSS3Vector, intl } = props;\n    const cvssVer = (CVSS3Vector && 'CVSS 3.0') || (CVSS2Vector && 'CVSS 2.0') || 'CVSS 3.0';\n    const cvssVector = CVSS3Vector || CVSS2Vector;\n    const namesMapping = (CVSS3Vector && V3names) || (CVSS2Vector && V2names);\n    const parsedVector = parseVector(cvssVector, namesMapping);\n    const notAvailable = 'N/A';\n    // eslint-disable-next-line no-unused-vars\n    const { cvssVersion, ...values } = parsedVector;\n\n    return (\n        <CVEPageContext.Consumer>\n            {context => (\n                <TextContent>\n                    <WithLoader loading={context.isLoading}>\n                        <Popover\n                            position=\"bottom\"\n                            maxWidth={'100%'}\n                            enableFlip\n                            headerContent={ `${cvssVer} ${intl.formatMessage(messages.cvssVectorPopoverTitle)}` }\n                            bodyContent={\n                                cvssVector ?\n                                    (\n                                        <Table\n                                            aria-label={'Metric breakdown'}\n                                            variant={TableVariant.compact}\n                                            gridBreakPoint={null}\n                                            cells={\n                                                [intl.formatMessage(messages.cvssVectorMetric),\n                                                    intl.formatMessage(messages.cvssVectorValue)]\n                                            }\n                                            rows={Object.entries(values)}\n                                        >\n                                            <TableHeader />\n                                            <TableBody />\n                                        </Table>\n                                    ) : (notAvailable)\n                            }\n                        >\n                            <React.Fragment>\n                                <Text component={TextVariants.h6} style={{ display: 'inline-block', cursor: 'pointer' }}>\n                                    {cvssVer} {intl.formatMessage(messages.cvssVectorVectorString)}\n                                    <OutlinedQuestionCircleIcon color={'var(--pf-global--secondary-color--100)'}/>\n                                </Text>\n                                <br />\n                            </React.Fragment>\n                        </Popover>\n                    </WithLoader>\n\n                    <WithLoader loading={context.isLoading}>{cvssVector || notAvailable} </WithLoader>\n                </TextContent>\n            )}\n        </CVEPageContext.Consumer>\n    );\n};\n\nCvssVector.propTypes = {\n    cvss2_metrics: propTypes.string,\n    cvss3_metrics: propTypes.string,\n    intl: propTypes.any\n};\n\nexport default injectIntl(CvssVector);\n","import { Popover, Stack, StackItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { parseCvssScore } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { getImpactDetails } from '../../../Helpers/MiscHelper';\nimport CVEInfoBox from '../CVEInfoBox/CVEInfoBox';\nimport CvssVector from '../CvssVector/CvssVector';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst learnMorePopover = (cveDetails, intl) => {\n    return (\n        <Popover\n            position=\"bottom\"\n            enableFlip\n            headerContent={<div>{cveDetails.title + intl.formatMessage(messages.cvePageSeverityDetailsImpact)}</div>}\n            bodyContent={\n                <TextContent>\n                    <Text component={TextVariants.p}>{cveDetails.text}</Text>\n                </TextContent>\n            }\n            footerContent={\n                <a href=\"https://access.redhat.com/security/updates/classification/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    {intl.formatMessage(messages.cvePageSeverityDetailsLearnMoreRatings)}  <ExternalLinkAltIcon />\n                </a>\n            }\n        >\n            <a>{intl.formatMessage(messages.cvePageSeverityDetailsLearnMore)}</a>\n        </Popover>\n    );\n};\n\nconst CVEPageDetailsSeverity = props => {\n    const cveDetails = getImpactDetails(props.impact);\n    const cvssVersion = (props.cvss3_score && 'CVSS 3.0') || (props.cvss2_score && 'CVSS 2.0') || 'CVSS 3.0';\n    return (\n        <Stack hasGutter>\n            <StackItem>\n                <CVEInfoBox\n                    titleColor={cveDetails.color}\n                    titleContent={cveDetails.titleContent}\n                    descriptionTitle={cveDetails.title + props.intl.formatMessage(messages.cvePageSeverityDetailsImpact)}\n                    descriptionContent={learnMorePopover(cveDetails, props.intl)}\n                />\n            </StackItem>\n            <StackItem>\n                <CVEInfoBox\n                    titleContent={\n                        <TextContent>\n                            <Text component={TextVariants.h3}>{parseCvssScore(props.cvss2_score, props.cvss3_score)}</Text>\n                        </TextContent>\n                    }\n                    descriptionTitle={cvssVersion + props.intl.formatMessage(messages.cvePageSeverityDetailsBaseScore)}\n                />\n            </StackItem>\n\n            <StackItem>\n                <CvssVector cvss2_metrics={props.cvss2_metrics} cvss3_metrics={props.cvss3_metrics} />\n            </StackItem>\n        </Stack>\n    );\n};\n\nCVEPageDetailsSeverity.propTypes = {\n    impact: propTypes.string,\n    cvss2_score: propTypes.any,\n    cvss3_score: propTypes.any,\n    cvss2_metrics: propTypes.any,\n    cvss3_metrics: propTypes.any,\n    intl: propTypes.any\n};\n\nCVEPageDetailsSeverity.defaultProps = {\n    impact: 'Unknown',\n    cvss2_score: undefined,\n    cvss3_score: undefined,\n    cvss2_metrics: undefined,\n    cvss3_metrics: undefined\n};\n\nexport default injectIntl(CVEPageDetailsSeverity);\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Stack,\n    StackItem,\n    Text,\n    TextContent,\n    TextVariants,\n    Tooltip,\n    SplitItem,\n    Split,\n    Grid,\n    GridItem,\n    Card,\n    CardBody,\n    Button\n} from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/js/icons/check-circle-icon';\nimport OutlinedQuestionCircleIcon from '@patternfly/react-icons/dist/js/icons/outlined-question-circle-icon';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\nimport { injectIntl } from 'react-intl';\nimport Label from '../Snippets/Label';\nimport messages from '../../../Messages';\nimport { RISK_OF_CHANGE_TOOLTIP, RISK_OF_CHANGE_LABEL, RH_KB_URL, CVES_PATH } from '../../../Helpers/constants';\nimport { CSAwIcon } from '../../PresentationalComponents/CSAwIcon/CSAwIcon';\nimport CSAwRuleSummary from './CSAwRuleSummary';\nimport './CSAwRuleBox.scss';\nimport AnsibeTowerIcon from '@patternfly/react-icons/dist/js/icons/ansibeTower-icon';\nimport PowerOffIcon from '@patternfly/react-icons/dist/js/icons/power-off-icon';\n\nconst CSAwRuleBox = ({ rules, synopsis, changeExposedSystemsParameters, intl }) => {\n    const [numberOfCards, setNumberOfCards] = useState(2);\n    const ruleCards = rules.length > numberOfCards && rules.slice(0, numberOfCards) || rules;\n\n    const handleExposedSystemFilter = (ruleId) => {\n        const params = { security_rule: ruleId };\n        changeExposedSystemsParameters(params);\n    };\n\n    return <Fragment>\n        {ruleCards && ruleCards.map(rule => (\n            <Card className=\"card-box-shadow\" key={rule.rule_id}>\n                <CardBody>\n                    <Grid hasGutter>\n                        <GridItem span={12}>\n                            <TextContent className={'icon-with-label'}>\n                                <Text component={TextVariants.h3}>\n                                    <Tooltip\n                                        content={intl.formatMessage(messages.rulesIconTooltip)}\n                                        trigger='mouseenter focus click'\n                                    >\n                                        <CSAwIcon />\n                                    </Tooltip>\n                                    {rule.description}\n                                </Text>\n                            </TextContent>\n                        </GridItem>\n                        <GridItem span={8}>\n                            <Stack hasGutter>\n                                <StackItem>\n                                    <CSAwRuleSummary text={rule.summary} />\n                                </StackItem>\n\n                                <StackItem>\n                                    <TextContent>\n                                        <Text component={TextVariants.p}>\n                                            <div\n                                                style={{ fontSize: 'var(--pf-global--FontSize--lg)' }}\n                                                className=\"pf-u-mb-xs\">\n                                                {intl.formatMessage(messages.associatedCves)}\n                                            </div>\n                                            {synopsis} ({intl.formatMessage(messages.current)})\n                                            {\n                                                rule.associated_cves\n                                                .filter(cve => cve !== synopsis)\n                                                .map((cve, _i) =>\n                                                    <a\n                                                        className=\"associated-cve-link\"\n                                                        key={_i}\n                                                        href={`${CVES_PATH}/${cve}`}\n                                                    >\n                                                        {cve}\n                                                    </a>\n                                                )\n                                                .reduce((prev, curr) => [prev, ', ', curr], [''])\n                                            }\n                                        </Text>\n                                    </TextContent>\n                                </StackItem>\n\n                                {\n                                    rule.kbase_node_id &&\n                                    <StackItem>\n                                        <TextContent>\n                                            <Text\n                                                className={'icon-with-label'}\n                                                component={TextVariants.p}\n                                            >\n                                                <a\n                                                    className=\"kb-link\"\n                                                    href={`${RH_KB_URL}/${rule.kbase_node_id}`}\n                                                    target=\"_blank\"\n                                                    rel=\"noopener noreferrer\"\n                                                >\n                                                    {\n                                                        intl.formatMessage(messages.knowledgebaseArticle)\n                                                    }\n                                                    <ExternalLinkAltIcon className=\"l-sm-spacer\"/>\n                                                </a>\n                                            </Text>\n                                        </TextContent>\n                                    </StackItem>\n                                }\n\n                            </Stack>\n                        </GridItem>\n                        <GridItem span={4}>\n                            <Stack hasGutter>\n                                {rule.rule_id &&\n                                    <StackItem>\n                                        <TextContent>\n                                            <Text\n                                                className={'filter-affected-systems'}\n                                                onClick={() => handleExposedSystemFilter(rule.rule_id)}\n                                            >\n                                                <Link\n                                                    key={rule.rule_id}\n                                                    to={`/cves/${synopsis}/?security_rule=${rule.rule_id}`}\n                                                >\n                                                    {intl.formatMessage(messages.filterByAffectedSystems)}\n                                                </Link>\n                                            </Text>\n                                        </TextContent>\n                                    </StackItem>\n                                }\n                                <StackItem>\n                                    <TextContent>\n                                        <Text style={{ fontSize: 'var(--pf-global--FontSize--lg)' }}>\n                                            {intl.formatMessage(messages.remediationLabel)}\n                                        </Text>\n                                        <Split hasGutter>\n                                            <SplitItem>\n                                                <Label className=\"label\">\n                                                    <AnsibeTowerIcon\n                                                        size=\"md\"\n                                                        className=\"pf-u-mr-xs\"\n                                                        style={{ verticalAlign: '-0.25em', fontSize: 12 }}\n                                                    />\n                                                    {intl.formatMessage(messages.remediationLabel)}\n                                                </Label>\n                                            </SplitItem>\n                                            <SplitItem className=\"icon-with-label\" isFilled>\n                                                { !rule.playbook_count\n                                                    ? intl.formatMessage(messages.no)\n                                                    : (\n                                                        <Fragment>\n                                                            <CheckCircleIcon\n                                                                style={{\n                                                                    color: 'var(--pf-global--success-color--100)',\n                                                                    verticalAlign: '-0.15em'\n                                                                }}\n                                                            />\n                                                            {intl.formatMessage(messages.yes)}\n                                                            <Tooltip\n                                                                content={intl.formatMessage(messages.ansibleRemediationTooltip)}\n                                                                trigger='mouseenter focus click'\n                                                            >\n                                                                <OutlinedQuestionCircleIcon\n                                                                    color={'var(--pf-global--secondary-color--100)'}\n                                                                    className=\"l-sm-spacer\"\n                                                                />\n                                                            </Tooltip>\n                                                        </Fragment>\n                                                    )\n                                                }\n                                            </SplitItem>\n                                        </Split>\n                                        <Split hasGutter className=\"pf-u-mt-md\">\n                                            <SplitItem>\n                                                <Label className=\"label\">\n                                                    {intl.formatMessage(messages.riskOfChange)}\n                                                </Label>\n                                            </SplitItem>\n                                            <SplitItem isFilled className=\"icon-with-label\">\n                                                { RISK_OF_CHANGE_LABEL[rule.change_risk] }\n\n                                                <Tooltip\n                                                    content={RISK_OF_CHANGE_TOOLTIP[rule.change_risk]}\n                                                    trigger='mouseenter focus click'\n                                                >\n                                                    <OutlinedQuestionCircleIcon\n                                                        color={'var(--pf-global--secondary-color--100)'}\n                                                        className=\"l-sm-spacer\"\n                                                    />\n                                                </Tooltip>\n\n                                                <div className=\"pf-u-mt-sm\">\n                                                    { rule.reboot_required &&\n                                                        <Text>\n                                                            <PowerOffIcon\n                                                                style={{\n                                                                    color: 'var(--pf-global--danger-color--100)',\n                                                                    verticalAlign: '-0.125em'\n                                                                }}\n                                                                className=\"pf-u-mr-xs\"\n                                                            />\n                                                            {intl.formatMessage(messages.rebootRequired)}\n                                                        </Text>\n                                                    }\n                                                </div>\n                                            </SplitItem>\n                                        </Split>\n                                    </TextContent>\n                                </StackItem>\n                            </Stack>\n                        </GridItem>\n                    </Grid>\n                </CardBody>\n            </Card>\n        ))}\n        {\n            rules.length > numberOfCards && (\n                <Grid>\n                    <GridItem>\n                        <Button key=\"viewMoreRules\" variant=\"secondary\" onClick={() => setNumberOfCards(rules.length)}>\n                            {intl.formatMessage(messages.viewMoreScurityRules, { rules: (rules.length - numberOfCards) })}\n                        </Button>\n                    </GridItem>\n                </Grid>\n            )\n        }\n    </Fragment>;\n};\n\nCSAwRuleBox.defaultProps = {\n    rules: []\n};\n\nCSAwRuleBox.propTypes = {\n    intl: PropTypes.any,\n    rules: PropTypes.array,\n    synopsis: PropTypes.string,\n    changeExposedSystemsParameters: PropTypes.func\n};\n\nexport default injectIntl(CSAwRuleBox);\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { CVEPageContext } from '../../SmartComponents/CVEDetailsPage/CVEDetailsPage';\nimport CVEPageDetailsDescription from '../CVEPageDetailsDescription/CVEPageDetailsDescription';\nimport CVEPageDetailsSeverity from '../CVEPageDetailsSeverity/CVEPageDetailsSeverity';\nimport WithLoader from '../WithLoader/WithLoader';\nimport CSAwRuleBox from '../CSAwRuleBox/CSAwRuleBox';\n\nconst CVEPageDetails = props => {\n    return (\n        <CVEPageContext.Consumer>\n            {context => (\n                <Grid hasGutter>\n                    <GridItem md={8} sm={12}>\n                        <WithLoader loading={context.isLoading} variant=\"spinner\">\n                            <CVEPageDetailsDescription cveAttributes={props.data.data} />\n                        </WithLoader>\n                    </GridItem>\n\n                    <GridItem md={4} sm={12} className=\"severity-info-box\">\n                        <CVEPageDetailsSeverity\n                            impact={props.data.data.impact}\n                            cvss2_score={props.data.data.cvss2_score}\n                            cvss3_score={props.data.data.cvss3_score}\n                            cvss2_metrics={props.data.data.cvss2_metrics}\n                            cvss3_metrics={props.data.data.cvss3_metrics}\n                        />\n                    </GridItem>\n                    <CSAwRuleBox\n                        changeExposedSystemsParameters = {props.changeExposedSystemsParameters}\n                        synopsis={props.data.data.synopsis}\n                        rules={props.data.data.rules}\n                    />\n                </Grid>\n\n            )}\n        </CVEPageContext.Consumer>\n    );\n};\n\nCVEPageDetails.propTypes = {\n    data: propTypes.object,\n    changeExposedSystemsParameters: propTypes.func\n};\n\nexport default CVEPageDetails;\n","import { Dropdown, KebabToggle } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React, { useState } from 'react';\n\nconst BaseKebab = ({ dropdownItems, disabled, ...props }) => {\n    const [isOpen, setOpen] = useState(false);\n\n    function handleOnKebabToggle(kebabState) {\n        setOpen(kebabState);\n    }\n\n    function handleOnKebabSelect() {\n        setOpen(!isOpen);\n    }\n\n    return (\n        <div>\n            <Dropdown\n                onSelect={handleOnKebabSelect}\n                toggle={<KebabToggle onToggle={handleOnKebabToggle} isDisabled={disabled} />}\n                isOpen={isOpen}\n                isPlain\n                dropdownItems={dropdownItems}\n                {...props}\n            />\n        </div>\n    );\n};\n\nBaseKebab.propTypes = {\n    dropdownItems: propTypes.array,\n    disabled: propTypes.bool\n};\n\nexport default BaseKebab;\n","import { DropdownItem } from '@patternfly/react-core';\nimport React from 'react';\nimport messages from '../../../Messages';\nimport { FormattedMessage } from 'react-intl';\n\nexport const kebabItemDownloadJSON = (downloadReport, { ...props }) => (\n    <DropdownItem key=\"json\" component=\"button\" onClick={() => downloadReport('json')} {...props}>\n        <FormattedMessage {...messages.kebabExportAsJson} />\n    </DropdownItem>\n);\n\nexport const kebabItemDownloadCSV = (downloadReport, { ...props }) => (\n    <DropdownItem key=\"csv\" component=\"button\" onClick={() => downloadReport('csv')} {...props}>\n        <FormattedMessage {...messages.kebabExportAsCsv} />\n    </DropdownItem>\n);\n\nexport const kebabItemEditBusinessRisk = (showBusinessRiskModal, cves, { ...props }) => (\n    <DropdownItem key=\"editBusinessRisk\" component=\"button\" onClick={() => showBusinessRiskModal(cves)} {...props}>\n        <FormattedMessage {...messages.kebabEditBusinessRisk} />\n    </DropdownItem>\n);\n\nexport const kebabItemEditStatus = (showStatusModal, cves, inventoryIds,  { ...props }) => (\n    <DropdownItem key=\"editStatus\" component=\"button\" onClick={() => showStatusModal(cves, inventoryIds)} {...props}>\n        <FormattedMessage {...messages.kebabEditStatus} />\n    </DropdownItem>\n);\n\nexport const kebabItemToggleCvesDescription = (toggleCveDescription, isExpanded, { ...props }) => (\n    <DropdownItem key=\"toggleCveDescription\" component=\"button\" onClick={() => toggleCveDescription()} {...props}>\n        {isExpanded ? <FormattedMessage {...messages.kebabCollapseCves} /> : <FormattedMessage {...messages.kebabExpandCves} /> }\n    </DropdownItem>\n);\n\nexport const kebabItemExcludeSystemAnalysis = (doOptOut, isOptOut,  { ...props }) => (\n    <DropdownItem key=\"do_opt_out_analysis\" component=\"button\" onClick={() => doOptOut()} {...props}>\n        {isOptOut ?\n            <FormattedMessage {...messages.kebabResumeAnalysis} /> :\n            <FormattedMessage {...messages.kebabExcludeVulnerabilityAnalysis} />}\n    </DropdownItem>\n);\n\nexport const kebabItemExcludeSystem = (doOptOut, isOptOut,  { ...props }) => (\n    <DropdownItem key=\"do_opt_out\" component=\"button\" onClick={() => doOptOut()} {...props}>\n        {isOptOut ?\n            <FormattedMessage {...messages.kebabResumeAnalysis} /> :\n            <FormattedMessage {...messages.kebabExcludeAnalysis} />}\n    </DropdownItem>\n);\n\nexport const kebabItemToggleExcludeSystemDisplay = (handleOptOut, isOptedOut,  { ...props }) => (\n    <DropdownItem key=\"toggle_opt_out\" component=\"button\" onClick={() => handleOptOut()} {...props}>\n        {isOptedOut ?\n            <FormattedMessage {...messages.kebabHideExcludedSystems} />  :\n            <FormattedMessage {...messages.kebabShowExcludedSystems} />}\n    </DropdownItem>\n);\n","import propTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport { withRouter } from 'react-router-dom';\nimport * as reactRouterDom from 'react-router-dom';\nimport * as ReactRedux from 'react-redux';\nimport { reactCore } from '@redhat-cloud-services/frontend-components-utilities/files/inventoryDependencies';\nimport { useCreateUrlParams, updateRef, createSortBy, handleSortColumn } from '../../../Helpers/MiscHelper';\nimport {\n    Table as PfTable,\n    TableBody,\n    TableHeader,\n    TableGridBreakpoint,\n    cellWidth,\n    TableVariant,\n    sortable,\n    expandable,\n    SortByDirection\n} from '@patternfly/react-table';\nimport { useDispatch, useSelector } from 'react-redux';\nimport React, { useEffect, useState, useMemo } from 'react';\nimport CvePairStatusModal from '../Modals/CvePairStatusModal';\nimport ReducerRegistry from '../../../Utilities/ReducerRegistry';\nimport { middlewareListener } from '../../../Utilities/ReducerRegistry';\nimport selectAllCheckbox from '../../../Helpers/selectAllCheckboxHelper';\nimport { Text, TextContent, TextVariants, Stack, StackItem } from '@patternfly/react-core';\nimport { systemExposedTableRowActions, createExposedSystemsTable } from '../../../Helpers/CVEHelper';\nimport { inventoryEntitiesReducer } from '../../../Store/Reducers/InventoryEntitiesReducer';\nimport DownloadReport from '../../../Helpers/DownloadReport';\nimport Remediation from '../Remediation/Remediation';\nimport searchFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/SearchFilter';\nimport securityRuleFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/SecurityRuleFilter';\nimport statusFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/StatusFilter';\nimport { exportConfig, buildActiveFilters, removeFilters } from '../../../Helpers/TableToolbarHelper';\nimport {\n    selectMultipleEntities,\n    fetchAffectedSystemsByCVE,\n    fetchCveDetails,\n    expandRow,\n    changeExposedSystemsParameters,\n    clearCveStore,\n    fetchAffectedSystemsIdsByCve,\n    clearInventoryStore\n} from '../../../Store/Actions/Actions';\nimport {\n    SYSTEMS_EXPOSED_HEADER,\n    SYSTEMS_EXPOSED_ALLOWED_PARAMS,\n    SYSTEMS_EXPOSED_SORTING_HEADER\n} from '../../../Helpers/constants';\n\nconst SystemsExposedTable = (props) => {\n    const [InventoryTable, setInventoryTable] = useState(()=> () => <div>Loading...</div>);\n    const [StatusModal, setStatusModal] = useState(() => () => null);\n    const [selectedHosts, setSelectedHosts] = useState(undefined);\n    const [urlParamsAllowed, setUrlParamsAllowed] = useState(false);\n    const [isFirstMount, setIsFirstMount] = useState(true);\n\n    const inventory = React.createRef();\n    const dispatch = useDispatch();\n    const [createUrlParams, urlParameters] = useCreateUrlParams(SYSTEMS_EXPOSED_ALLOWED_PARAMS);\n\n    const affectedSystems = useSelector(\n        ({ CVEDetailsPageStore }) => CVEDetailsPageStore.affectedSystemsByCVE\n    );\n\n    const isLoading = useSelector(\n        ({ CVEDetailsPageStore }) => CVEDetailsPageStore.affectedSystemsByCVE.isLoading\n    );\n\n    const parameters = useSelector(\n        ({ CVEDetailsPageStore }) => CVEDetailsPageStore.parameters\n    );\n\n    const metadata = useSelector(\n        ({ CVEDetailsPageStore }) => CVEDetailsPageStore.affectedSystemsByCVE.payload.meta\n    );\n\n    const items = useMemo(() => createExposedSystemsTable({ ...affectedSystems, ...props.cve }), [affectedSystems]);\n\n    const apply = (config) => dispatch(changeExposedSystemsParameters(config));\n\n    const inventoryRefresh = ({ page, per_page: pageSize, sort }) => {\n        if (inventory.current && (metadata.page !== page || metadata.page_size !== pageSize)) {\n            apply({ page, page_size: pageSize, sort });\n        }\n\n        if (metadata && metadata.total_items <= pageSize && inventory.current) {\n            inventory.current.onRefreshData({ page, page_size: pageSize, sort });\n        }\n    };\n\n    const handleSelect = (isChecked, payload) => {\n        const selectedHosts = payload ? payload : [];\n        setSelectedHosts(selectedHosts);\n    };\n\n    const onSelect = (payload) => {\n        const newSelected = payload.data.selected ? [payload.data.id, ...(selectedHosts || [])]\n            : selectedHosts && selectedHosts.filter(item => item !== payload.data.id);\n\n        handleSelect(false, newSelected);\n    };\n\n    middlewareListener.addNew({\n        on: 'SELECT_ENTITY',\n        callback: payload => onSelect(payload)\n    });\n\n    useEffect(() => {\n        if (!inventory.current && isFirstMount) {\n            apply(urlParameters);\n            setIsFirstMount(false);\n        }\n        else {\n            dispatch(fetchAffectedSystemsByCVE(props.cve, { ...parameters }));\n            urlParamsAllowed\n                && createUrlParams({ ...parameters })\n                || setUrlParamsAllowed(true);\n        }\n    }, [parameters]);\n\n    useEffect(()=>{\n        if (selectedHosts) {\n            dispatch(selectMultipleEntities(selectedHosts));\n        }\n    }, [selectedHosts, dispatch]);\n\n    const loadInventory = async () => {\n        const { inventoryConnector, mergeWithEntities, mergeWithDetail } = await insights.loadInventory({\n            ReactRedux,\n            react: React,\n            reactRouterDom,\n            pfReactTable: {\n                Table: PfTable,\n                TableBody,\n                TableHeader,\n                TableGridBreakpoint,\n                cellWidth,\n                TableVariant,\n                sortable,\n                expandable,\n                SortByDirection\n            },\n            pfReact: reactCore\n        });\n        ReducerRegistry.register({\n            ...mergeWithEntities(inventoryEntitiesReducer(SYSTEMS_EXPOSED_HEADER)),\n            ...mergeWithDetail()\n        });\n\n        const { InventoryTable } = inventoryConnector(ReducerRegistry.getStore());\n        setInventoryTable(() => InventoryTable);\n    };\n\n    useEffect(() => {\n        loadInventory();\n        return () => {\n            dispatch(clearCveStore());\n            dispatch(clearInventoryStore());\n        };\n    }, []);\n\n    const downloadReport = format => {\n        let params = [props.cve, { ...parameters }];\n        DownloadReport.exec(fetchAffectedSystemsByCVE, params, format, 'systems-exposed');\n    };\n\n    const showStatusModal = (cves, inventories) => {\n        setStatusModal(\n            () => () =>\n                <CvePairStatusModal\n                    cves={cves}\n                    updateRef={() => {\n                        updateRef(items.meta, apply);\n                        fetchCveDetails(props.cve);\n                    }}\n                    inventories={ inventories }\n                    type={'systemsExposed'}\n                />\n\n        );\n    };\n\n    const getSelectedSystemsLabel = () => {\n        // we only need display name when we have 1 system selected\n        if (selectedHosts.length === 1) {\n            const { id, display_name: displayName } = items.data.find(({ id }) => id === selectedHosts[0]);\n            return [{ id, displayName }];\n        }\n        else if (selectedHosts.length > 1) {\n            return selectedHosts.map(item => ({ id: item }));\n        }\n\n        return [];\n    };\n\n    const kebabOptions = [\n        (!isLoading && (<Remediation systems={selectedHosts} cves={props.cve} />) || ''),\n        {\n            label: props.intl.formatMessage(messages.editStatus),\n            onClick: () => showStatusModal(\n                [props.cveStatusDetails],\n                getSelectedSystemsLabel()\n            ),\n            props: { isDisabled: !selectedHosts || selectedHosts.length === 0 }\n        }\n    ];\n\n    const selectOptions  = useMemo(() => selectAllCheckbox({\n        selectedItems: selectedHosts || [],\n        selectorHandler: handleSelect,\n        items: items.data && items || { data: [], meta: { total_items: 0 } },\n        fetchResource: ops => fetchAffectedSystemsIdsByCve(props.cve, { ...parameters, ...ops })\n    }), [items, selectedHosts, parameters]);\n\n    const sortBy = () =>\n        createSortBy(\n            SYSTEMS_EXPOSED_SORTING_HEADER,\n            urlParameters.sort\n        );\n\n    const onSort = (event, index, direction) =>\n        handleSortColumn(\n            index,\n            direction,\n            SYSTEMS_EXPOSED_SORTING_HEADER,\n            urlParameters.sort,\n            inventoryRefresh\n        );\n\n    return (\n        <React.Fragment>\n            <Stack hasGutter>\n                <StackItem>\n                    <TextContent>\n                        <Text component={TextVariants.h2}>\n                            {props.intl.formatMessage(messages.systemsExposedTableHeader)}\n                        </Text>\n                    </TextContent>\n                </StackItem>\n                <StackItem>\n                    <InventoryTable\n                        tableProps={{\n                            canSelectAll: false,\n                            onSort: (items.data.length > 0) && onSort,\n                            sortBy: (items.data.length > 0) && sortBy(),\n                            actionResolver: (rowData, rowIndex) =>\n                                systemExposedTableRowActions(showStatusModal, props.cveStatusDetails, rowIndex.rowIndex)\n                        }}\n                        items={items.data}\n                        key={'inventory'}\n                        ref={inventory}\n                        expandable='true'\n                        onRefresh={inventoryRefresh}\n                        page={parameters.page}\n                        total={metadata.total_items}\n                        isLoaded = {!isLoading}\n                        perPage={parameters.page_size }\n                        hasCheckbox={items && items.length !== 0}\n                        showActions={items && items.length !== 0}\n                        exportConfig={{\n                            isDisabled: items.meta.total_items === 0 && (!selectedHosts || selectedHosts.length === 0),\n                            ...exportConfig({ downloadReport })\n                        }}\n                        onExpandClick={(_e, _i, isOpen, { id }) => dispatch(expandRow(id, isOpen))}\n                        actionsConfig={{\n                            actions: kebabOptions,\n                            kebabToggleProps: { isDisabled: !selectedHosts || selectedHosts.length === 0 }\n                        }}\n                        activeFiltersConfig={{\n                            filters: buildActiveFilters({ ...parameters }, props.filterRuleValues),\n                            onDelete: (e, i) => removeFilters(i, apply)\n                        }}\n                        bulkSelect ={ selectOptions && {\n                            count: selectedHosts && selectedHosts.length,\n                            items: selectOptions.items,\n                            isDisabled: items.meta.total_items === 0 && (!selectedHosts || selectedHosts.length === 0),\n                            checked: Boolean(selectedHosts && selectedHosts.length),\n                            onSelect: () => selectOptions.handleOnCheckboxChange()\n                        }}\n                        filterConfig={{\n                            items: [\n                                searchFilter(\n                                    messages.systemsSearchName, messages.searchFilterByName,\n                                    parameters.filter, apply\n                                ),\n                                securityRuleFilter(apply, parameters, props.filterRuleValues),\n                                statusFilter(apply, parameters)\n                            ]\n                        }}\n                    >\n                        {StatusModal && <StatusModal />}\n                    </InventoryTable>\n                </StackItem>\n            </Stack>\n        </React.Fragment>\n    );\n};\n\nSystemsExposedTable.propTypes = {\n    intl: propTypes.object,\n    cve: propTypes.string,\n    cveStatusDetails: propTypes.object,\n    filterRuleValues: propTypes.array\n};\n\nexport default injectIntl(\n    withRouter(\n        SystemsExposedTable\n    )\n);\n","import { DropdownPosition, Page } from '@patternfly/react-core';\nimport { InvalidObject, Main } from '@redhat-cloud-services/frontend-components';\nimport propTypes from 'prop-types';\nimport React, { useMemo, useState, useEffect } from 'react';\nimport { createCveDetailsPage } from '../../../Helpers/CVEHelper';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    fetchCveDetails,\n    setHeader,\n    changeExposedSystemsParameters,\n    fetchAffectedSystemsByCVE\n} from '../../../Store/Actions/Actions';\nimport { withRouter } from 'react-router-dom';\nimport { PATHS } from '../../../Helpers/constants';\nimport CVEPageDetails from '../../PresentationalComponents/CVEPageDetails/CVEPageDetails';\nimport BaseKebab from '../../PresentationalComponents/DownloadReportKebab/BaseKebab';\nimport { kebabItemEditBusinessRisk, kebabItemEditStatus } from '../../PresentationalComponents/DownloadReportKebab/KebabItems';\nimport BusinessRiskModal from '../Modals/BusinessRiskModal';\nimport CveStatusModal from '../Modals/CveStatusModal';\nimport SystemsExposedTable from '../SystemsExposedTable/SystemsExposedTable';\nimport VulnerabilityHeader from '../VulnerabilityHeader/VulnerabilityHeader';\n\nexport const CVEPageContext = React.createContext({ isLoading: true });\n\nconst CVEDetailsPage = (props) => {\n    const dispatch = useDispatch();\n    const [cveName] = useState(props.match.params.cve);\n    const [BusinessModal, setBusinessRisk] = useState(() => () => null);\n    const [StatusModal, setStatusModal] = useState(() => () => null);\n\n    const details = useSelector(\n        ({ CVEDetailsPageStore }) => CVEDetailsPageStore.cveDetails\n    );\n    const cveDetails = useMemo(() => createCveDetailsPage(details), [details]);\n\n    useEffect(() => {\n        dispatch(\n            setHeader({\n                breadcrumbs: [\n                    { title: PATHS.home.title, to: PATHS.home.to },\n                    { title: PATHS.cvesPage.title, to: PATHS.cvesPage.to },\n                    { title: cveName, isActive: true }\n                ]\n            })\n        );\n        dispatch(fetchCveDetails(cveName));\n    }, []);\n\n    const showBusinessRiskModal = cves => {\n        setBusinessRisk(\n            () => () =>\n                <BusinessRiskModal open cves={cves} updateRef={() => dispatch(fetchCveDetails(cveName))} />\n        );\n    };\n\n    const showStatusModal = cves => {\n        setStatusModal(\n            () => () =>\n                <CveStatusModal\n                    cves={cves}\n                    updateRef={() => {\n                        dispatch(fetchCveDetails(cveName));\n                        dispatch(fetchAffectedSystemsByCVE(cveName));\n                    }}\n                />\n        );\n    };\n\n    const { error, data } = cveDetails;\n\n    const cveStatusDetails = {\n        id: cveName,\n        status_id: cveDetails.data.status_id,\n        justification: cveDetails.data.status_justification\n    };\n    const kebabItems = [\n        kebabItemEditBusinessRisk(showBusinessRiskModal, [\n            {\n                business_risk_id: cveDetails.data.business_risk_id,\n                id: cveName,\n                justification: cveDetails.data.business_risk_justification\n            }\n        ]),\n        kebabItemEditStatus(showStatusModal, [cveStatusDetails])\n    ];\n    const { rules } = data;\n    const filterRuleValues = rules && rules.map(\n        ({ rule_id: ruleId, description }) => ({ value: ruleId, label: description })\n    );\n\n    if (!error) {\n        return (\n            <Page>\n                <CVEPageContext.Provider value={cveDetails && { isLoading: cveDetails.isLoading }}>\n                    <VulnerabilityHeader\n                        title={\n                            <span style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                {cveName}\n                                <BaseKebab dropdownItems={kebabItems} position={DropdownPosition.right}></BaseKebab>\n                            </span>\n                        }\n                    >\n                        <CVEPageDetails changeExposedSystemsParameters={changeExposedSystemsParameters} data={cveDetails} />\n                        <StatusModal />\n                        <BusinessModal />\n                    </VulnerabilityHeader>\n                    <Main>\n                        <SystemsExposedTable\n                            cve={cveName}\n                            filterRuleValues={filterRuleValues}\n                            cveStatusDetails={cveStatusDetails}\n                            methods={{ showStatusModal }}\n                        />\n                    </Main>\n                </CVEPageContext.Provider>\n            </Page>\n        );\n    } else {\n        return (\n            <React.Fragment>\n                <VulnerabilityHeader title={cveName}/>\n                <InvalidObject />\n            </React.Fragment>\n        );\n    }\n};\n\nCVEDetailsPage.propTypes = {\n    match: propTypes.object,\n    cveDetails: propTypes.object,\n    fetchCveDetails: propTypes.func,\n    setHeader: propTypes.func,\n    handleCveDetailsError: propTypes.func\n};\nexport default withRouter(CVEDetailsPage);\n","// doT.js\n// 2011-2014, Laura Doktorova, https://github.com/olado/doT\n// Licensed under the MIT license.\n\n(function () {\n\t\"use strict\";\n\n\tvar doT = {\n\t\tname: \"doT\",\n\t\tversion: \"1.1.1\",\n\t\ttemplateSettings: {\n\t\t\tevaluate:    /\\{\\{([\\s\\S]+?(\\}?)+)\\}\\}/g,\n\t\t\tinterpolate: /\\{\\{=([\\s\\S]+?)\\}\\}/g,\n\t\t\tencode:      /\\{\\{!([\\s\\S]+?)\\}\\}/g,\n\t\t\tuse:         /\\{\\{#([\\s\\S]+?)\\}\\}/g,\n\t\t\tuseParams:   /(^|[^\\w$])def(?:\\.|\\[[\\'\\\"])([\\w$\\.]+)(?:[\\'\\\"]\\])?\\s*\\:\\s*([\\w$\\.]+|\\\"[^\\\"]+\\\"|\\'[^\\']+\\'|\\{[^\\}]+\\})/g,\n\t\t\tdefine:      /\\{\\{##\\s*([\\w\\.$]+)\\s*(\\:|=)([\\s\\S]+?)#\\}\\}/g,\n\t\t\tdefineParams:/^\\s*([\\w$]+):([\\s\\S]+)/,\n\t\t\tconditional: /\\{\\{\\?(\\?)?\\s*([\\s\\S]*?)\\s*\\}\\}/g,\n\t\t\titerate:     /\\{\\{~\\s*(?:\\}\\}|([\\s\\S]+?)\\s*\\:\\s*([\\w$]+)\\s*(?:\\:\\s*([\\w$]+))?\\s*\\}\\})/g,\n\t\t\tvarname:\t\"it\",\n\t\t\tstrip:\t\ttrue,\n\t\t\tappend:\t\ttrue,\n\t\t\tselfcontained: false,\n\t\t\tdoNotSkipEncoded: false\n\t\t},\n\t\ttemplate: undefined, //fn, compile template\n\t\tcompile:  undefined, //fn, for express\n\t\tlog: true\n\t}, _globals;\n\n\tdoT.encodeHTMLSource = function(doNotSkipEncoded) {\n\t\tvar encodeHTMLRules = { \"&\": \"&#38;\", \"<\": \"&#60;\", \">\": \"&#62;\", '\"': \"&#34;\", \"'\": \"&#39;\", \"/\": \"&#47;\" },\n\t\t\tmatchHTML = doNotSkipEncoded ? /[&<>\"'\\/]/g : /&(?!#?\\w+;)|<|>|\"|'|\\//g;\n\t\treturn function(code) {\n\t\t\treturn code ? code.toString().replace(matchHTML, function(m) {return encodeHTMLRules[m] || m;}) : \"\";\n\t\t};\n\t};\n\n\t_globals = (function(){ return this || (0,eval)(\"this\"); }());\n\n\t/* istanbul ignore else */\n\tif (typeof module !== \"undefined\" && module.exports) {\n\t\tmodule.exports = doT;\n\t} else if (typeof define === \"function\" && define.amd) {\n\t\tdefine(function(){return doT;});\n\t} else {\n\t\t_globals.doT = doT;\n\t}\n\n\tvar startend = {\n\t\tappend: { start: \"'+(\",      end: \")+'\",      startencode: \"'+encodeHTML(\" },\n\t\tsplit:  { start: \"';out+=(\", end: \");out+='\", startencode: \"';out+=encodeHTML(\" }\n\t}, skip = /$^/;\n\n\tfunction resolveDefs(c, block, def) {\n\t\treturn ((typeof block === \"string\") ? block : block.toString())\n\t\t.replace(c.define || skip, function(m, code, assign, value) {\n\t\t\tif (code.indexOf(\"def.\") === 0) {\n\t\t\t\tcode = code.substring(4);\n\t\t\t}\n\t\t\tif (!(code in def)) {\n\t\t\t\tif (assign === \":\") {\n\t\t\t\t\tif (c.defineParams) value.replace(c.defineParams, function(m, param, v) {\n\t\t\t\t\t\tdef[code] = {arg: param, text: v};\n\t\t\t\t\t});\n\t\t\t\t\tif (!(code in def)) def[code]= value;\n\t\t\t\t} else {\n\t\t\t\t\tnew Function(\"def\", \"def['\"+code+\"']=\" + value)(def);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn \"\";\n\t\t})\n\t\t.replace(c.use || skip, function(m, code) {\n\t\t\tif (c.useParams) code = code.replace(c.useParams, function(m, s, d, param) {\n\t\t\t\tif (def[d] && def[d].arg && param) {\n\t\t\t\t\tvar rw = (d+\":\"+param).replace(/'|\\\\/g, \"_\");\n\t\t\t\t\tdef.__exp = def.__exp || {};\n\t\t\t\t\tdef.__exp[rw] = def[d].text.replace(new RegExp(\"(^|[^\\\\w$])\" + def[d].arg + \"([^\\\\w$])\", \"g\"), \"$1\" + param + \"$2\");\n\t\t\t\t\treturn s + \"def.__exp['\"+rw+\"']\";\n\t\t\t\t}\n\t\t\t});\n\t\t\tvar v = new Function(\"def\", \"return \" + code)(def);\n\t\t\treturn v ? resolveDefs(c, v, def) : v;\n\t\t});\n\t}\n\n\tfunction unescape(code) {\n\t\treturn code.replace(/\\\\('|\\\\)/g, \"$1\").replace(/[\\r\\t\\n]/g, \" \");\n\t}\n\n\tdoT.template = function(tmpl, c, def) {\n\t\tc = c || doT.templateSettings;\n\t\tvar cse = c.append ? startend.append : startend.split, needhtmlencode, sid = 0, indv,\n\t\t\tstr  = (c.use || c.define) ? resolveDefs(c, tmpl, def || {}) : tmpl;\n\n\t\tstr = (\"var out='\" + (c.strip ? str.replace(/(^|\\r|\\n)\\t* +| +\\t*(\\r|\\n|$)/g,\" \")\n\t\t\t\t\t.replace(/\\r|\\n|\\t|\\/\\*[\\s\\S]*?\\*\\//g,\"\"): str)\n\t\t\t.replace(/'|\\\\/g, \"\\\\$&\")\n\t\t\t.replace(c.interpolate || skip, function(m, code) {\n\t\t\t\treturn cse.start + unescape(code) + cse.end;\n\t\t\t})\n\t\t\t.replace(c.encode || skip, function(m, code) {\n\t\t\t\tneedhtmlencode = true;\n\t\t\t\treturn cse.startencode + unescape(code) + cse.end;\n\t\t\t})\n\t\t\t.replace(c.conditional || skip, function(m, elsecase, code) {\n\t\t\t\treturn elsecase ?\n\t\t\t\t\t(code ? \"';}else if(\" + unescape(code) + \"){out+='\" : \"';}else{out+='\") :\n\t\t\t\t\t(code ? \"';if(\" + unescape(code) + \"){out+='\" : \"';}out+='\");\n\t\t\t})\n\t\t\t.replace(c.iterate || skip, function(m, iterate, vname, iname) {\n\t\t\t\tif (!iterate) return \"';} } out+='\";\n\t\t\t\tsid+=1; indv=iname || \"i\"+sid; iterate=unescape(iterate);\n\t\t\t\treturn \"';var arr\"+sid+\"=\"+iterate+\";if(arr\"+sid+\"){var \"+vname+\",\"+indv+\"=-1,l\"+sid+\"=arr\"+sid+\".length-1;while(\"+indv+\"<l\"+sid+\"){\"\n\t\t\t\t\t+vname+\"=arr\"+sid+\"[\"+indv+\"+=1];out+='\";\n\t\t\t})\n\t\t\t.replace(c.evaluate || skip, function(m, code) {\n\t\t\t\treturn \"';\" + unescape(code) + \"out+='\";\n\t\t\t})\n\t\t\t+ \"';return out;\")\n\t\t\t.replace(/\\n/g, \"\\\\n\").replace(/\\t/g, '\\\\t').replace(/\\r/g, \"\\\\r\")\n\t\t\t.replace(/(\\s|;|\\}|^|\\{)out\\+='';/g, '$1').replace(/\\+''/g, \"\");\n\t\t\t//.replace(/(\\s|;|\\}|^|\\{)out\\+=''\\+/g,'$1out+=');\n\n\t\tif (needhtmlencode) {\n\t\t\tif (!c.selfcontained && _globals && !_globals._encodeHTML) _globals._encodeHTML = doT.encodeHTMLSource(c.doNotSkipEncoded);\n\t\t\tstr = \"var encodeHTML = typeof _encodeHTML !== 'undefined' ? _encodeHTML : (\"\n\t\t\t\t+ doT.encodeHTMLSource.toString() + \"(\" + (c.doNotSkipEncoded || '') + \"));\"\n\t\t\t\t+ str;\n\t\t}\n\t\ttry {\n\t\t\treturn new Function(c.varname, str);\n\t\t} catch (e) {\n\t\t\t/* istanbul ignore else */\n\t\t\tif (typeof console !== \"undefined\") console.log(\"Could not create a template function: \" + str);\n\t\t\tthrow e;\n\t\t}\n\t};\n\n\tdoT.compile = function(tmpl, def) {\n\t\treturn doT.template(tmpl, null, def);\n\t};\n}());\n"],"sourceRoot":""}