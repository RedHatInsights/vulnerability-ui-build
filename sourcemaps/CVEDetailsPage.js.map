{"version":3,"sources":["webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/SecurityRuleFilter.js","webpack:///./node_modules/lodash/unionWith.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/StatusFilter.js","webpack:///./src/Store/Reducers/InventoryEntitiesReducer.js","webpack:///./src/Components/SmartComponents/Modals/BusinessRiskModal.js","webpack:///./src/Components/SmartComponents/Modals/CveStatusModal.js","webpack:///./src/Components/SmartComponents/Modals/CvePairStatusModal.js","webpack:///./src/Components/SmartComponents/Remediation/Remediation.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsDescription/CVEPageDetailsDescription.scss?4f52","webpack:///./node_modules/reselect/lib/index.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsDescription/CVEPageDetailsDescription.scss","webpack:///./src/Components/PresentationalComponents/CVEInfoBox/CVEInfoBox.scss?9c01","webpack:///./src/Components/PresentationalComponents/CVEInfoBox/CVEInfoBox.scss","webpack:///./src/Components/PresentationalComponents/CvssVector/CvssVector.scss?e372","webpack:///./src/Components/PresentationalComponents/CvssVector/CvssVector.scss","webpack:///./src/Components/PresentationalComponents/CSAwRuleBox/CSAwRuleBox.scss?7556","webpack:///./src/Components/PresentationalComponents/CSAwRuleBox/CSAwRuleBox.scss","webpack:///./src/Store/Selectors/CVESelectors.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsDescription/SnippetWithHeaderAndTooltip.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsDescription/CVEPageDetailsDescription.js","webpack:///./src/Components/PresentationalComponents/WithLoader/WithLoader.js","webpack:///./src/Components/PresentationalComponents/CVEInfoBox/CVEInfoBox.js","webpack:///./src/Components/PresentationalComponents/CvssVector/vectorNames.js","webpack:///./src/Components/PresentationalComponents/CvssVector/CvssVector.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetailsSeverity/CVEPageDetailsSeverity.js","webpack:///./src/Components/PresentationalComponents/CSAwRuleBox/CSAwRuleBox.js","webpack:///./src/Components/PresentationalComponents/CVEPageDetails/CVEPageDetails.js","webpack:///./src/Components/PresentationalComponents/DownloadReportKebab/BaseKebab.js","webpack:///./src/Components/PresentationalComponents/DownloadReportKebab/KebabItems.js","webpack:///./src/Components/SmartComponents/SystemsExposedTable/SystemsExposedTable.js","webpack:///./src/Components/SmartComponents/CVEDetailsPage/CVEDetailsPage.js","webpack:///./node_modules/dot/doT.js","webpack:///./src/Store/ActionTypes.js","webpack:///./src/Helpers/MiscHelper.js","webpack:///./src/Utilities/interceptors.js","webpack:///./src/Helpers/APIHelper.js","webpack:///./src/Store/Reducers/BreadcrumbStore.js","webpack:///./src/Store/Reducers/CVEDetailsPageStore.js","webpack:///./src/Store/Reducers/SystemCvesStore.js","webpack:///./src/Store/Reducers/SystemsPageStore.js","webpack:///./src/Store/Reducers/CVEsStore.js","webpack:///./src/Store/Actions/Actions.js","webpack:///./node_modules/seamless-immutable/seamless-immutable.development.js","webpack:///./src/Components/SmartComponents/Modals/BaseModal.js","webpack:///./src/Components/SmartComponents/InsightsSystemRule/InsightsSystemRule.js","webpack:///./src/Helpers/CVEHelper.js","webpack:///./src/Helpers/selectAllCheckboxHelper.js","webpack:///./node_modules/lodash/union.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/SearchFilter.js","webpack:///./src/Helpers/TableToolbarHelper.js","webpack:///./src/Helpers/DownloadReport.js"],"names":["securityRuleFilter","apply","currentFilter","dynamicFilters","currentValue","security_rule","filterBySecurityRule","values","page","label","intl","formatMessage","messages","securityRules","type","conditionalFilterType","radio","urlParam","filterValues","onChange","event","value","items","unionWith","SECURITY_RULE_OPTIONS","isEqual","map","item","baseFlatten","baseRest","baseUniq","isArrayLikeObject","last","arrays","comparator","undefined","module","exports","statusFilter","status_id","filterByStatus","length","filter","join","status","checkbox","STATUS_OPTIONS","split","initialState","columns","rows","entities","selectedRows","modifyInventory","state","loaded","lastSeenColumn","key","transforms","sortable","selected","some","system","id","selectEntities","myRows","slice","inventoryEntitiesReducer","action","payload","row","isOpen","BusinessRiskModal","cves","updateRef","useState","cveList","businessRiskId","setBusinessRiskId","setLabel","getDefaultLabel","useCallback","justification","useEffect","business_risk_id","toString","handleOnRadioChange","_","currentTarget","successNotification","variant","title","businessRiskUpdateSuccessful","count","onSave","setBusinessRisk","parseInt","cve","business_risk_text","then","onSuccessNotification","businessRiskModalTitle","hasGutter","businessRiskModalInfo","businessRiskLabel","fieldId","BUSINESS_RISK_OPTIONS","className","isChecked","name","aria-label","justificationLabel","resizeOrientation","propTypes","array","func","any","injectIntl","CveStatusModal","useStatusSelect","StatusSelect","statusId","useJustificationInput","JustificationInput","checkboxState","setCheckboxState","cveStatusModalUpdateSuccessful","cveStatusModalTitle","cveIds","setCveStatus","status_text","setSystemCveStatus","cveStatusModalSelected","cveId","b","chunks","fontSize","color","cveStatusModalInfo","trigger","content","cveStatusModalInfoTooltip","Fragment","style","verticalAlign","cveStatusModalOverwriteCheckbox","checked","cveStatusModalOverwriteTooltip","CvePairStatusModal","inventories","hasDifferentStatus","inventoryList","getCveJustification","setJustification","setJustificationProps","setProps","haveSameStatuses","every","val","i","arr","cve_status_id","inventory","getDefaultCheckboxState","getCveStatus","getDefaultStatus","setStatusId","setSelectProps","inventoryIds","inventoryNames","display_name","isDisabled","disabled","cve_justification","cvePairStatusModalUpdateSuccessful","modalTitle","cvePairStatusModalTitle","setStatusParams","inventory_id","isInline","cvePairStatusModalAlert","cvePairStatusModalSelected","cveCount","systemCount","systemName","cvePairStatusModalUseOverallCheckbox","cvePairStatusModalUseOverallTooltip","bool","string","Remediation","remediationProvider","systems","concat","issues","description","nextProps","this","props","dispatchNotification","addNotification","dataProvider","onRemediationCreated","result","getNotification","size","globalBackgroundColor100","remediateLabel","Component","oneOfType","connect","dispatch","notification","routerParams","options","transform","locals","defaultEqualityCheck","a","areArgumentsShallowlyEqual","equalityCheck","prev","next","defaultMemoize","arguments","lastArgs","lastResult","getDependencies","funcs","dependencies","Array","isArray","dep","dependencyTypes","Error","createSelectorCreator","memoize","_len","memoizeOptions","_key","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","selector","params","push","resetRecomputations","__esModule","createStructuredSelector","selectors","selectorCreator","createSelector","objectKeys","Object","keys","_len3","_key3","reduce","composition","index","sCveDetailsPage","CVEDetailsPageStore","cveDetails","createCveDetailsPage","affectedSystemsByCVE","createExposedSystemsTable","SystemsStore","createSystemsListTable","SnippetWithHeaderAndPopover","Popover","bodyContent","headerContent","position","Stack","display","cursor","StackItem","Label","CVEPageDetailsDescription","cveAttributes","publishDate","public_date","link","rh_link","businessRisk","business_risk","businessRiskJustification","business_risk_justification","statusJustification","status_justification","systemsStatusDetail","systems_status_detail","systemsStatusDivergent","systems_status_divergent","detailRows","find","brPopoverContent","TextContent","StyledText","fontWeight","StyledConstants","fontWeights","bold","fontSizes","sm","lineHeight","lineHeights","justificationNote","statusPopoverContent","cveStatus","marginTop","semi_bold","cvePageDetailsSystemsWTCves","Table","borders","gridBreakPoint","cells","statusLabel","Split","SplitItem","Text","component","TextVariants","p","StyledBox","marginBottom","WithLoader","loading","Spinner","centered","Skeleton","SkeletonSize","lg","children","CVEPageOverviewItemLoader","height","width","x","y","rx","ry","TrendBoxLoader","CurrentVulnerabilitiesItemLoader","speed","primaryColor","secondaryColor","cx","cy","r","CVEInfoBox","CVEPageContext","Consumer","context","isLoading","titleColor","Bullseye","titleContent","isFilled","h6","descriptionTitle","descriptionContent","V3names","AV","vectorNamesV3AV","N","vectorValuesNetwork","A","vectorValuesAdjacent","L","vectorValuesLocal","P","vectorValuesPhysical","AC","vectorNamesV3AC","vectorValuesLow","H","vectorValuesHigh","PR","vectorNamesV3PR","vectorValuesNone","UI","vectorNamesV3UI","R","vectorValuesRequired","S","vectorNamesV3S","U","vectorValuesUnchanged","C","vectorValuesChanged","vectorNamesV3C","I","vectorNamesV3I","vectorNamesV3A","CVSS","vectorNamesCvssVersion","V2names","vectorNamesV2AV","vectorValuesAdjacentNetwork","vectorNamesV2AC","Au","vectorNamesV2AU","M","vectorValuesMultiple","vectorValuesSingle","vectorNamesV2C","vectorValuesComplete","vectorValuesPartial","vectorNamesV2I","vectorNamesV2A","CvssVector","CVSS2Vector","cvss2_metrics","CVSS3Vector","cvss3_metrics","cvssVer","cvssVector","parsedVector","vector","namesMapping","res","forEach","curr","parseVector","cvssVersion","maxWidth","enableFlip","cvssVectorPopoverTitle","TableVariant","compact","cvssVectorMetric","cvssVectorValue","entries","cvssVectorVectorString","learnMorePopover","cvePageSeverityDetailsImpact","text","footerContent","href","target","rel","cvePageSeverityDetailsLearnMoreRatings","cvePageSeverityDetailsLearnMore","CVEPageDetailsSeverity","getImpactDetails","impact","cvss3_score","cvss2_score","h3","parseCvssScore","cvePageSeverityDetailsBaseScore","defaultProps","CSAwRuleBox","rules","synopsis","changeExposedSystemsParameters","numberOfCards","setNumberOfCards","ruleCards","rule","Card","rule_id","CardBody","Grid","GridItem","span","Tooltip","rulesIconTooltip","CSAwIcon","CSAwRuleSummary","summary","h4","associatedCves","current","associated_cves","_i","CVES_PATH","kbase_node_id","RH_KB_URL","knowledgebaseArticle","onClick","ruleId","to","filterByAffectedSystems","remediationLabel","ansibleRemediation","playbook_count","yes","ansibleRemediationTooltip","no","riskOfChange","RISK_OF_CHANGE_LABEL","change_risk","RISK_OF_CHANGE_TOOLTIP","reboot_required","Reboot","red","Button","viewMoreScurityRules","PropTypes","CVEPageDetails","md","data","object","BaseKebab","dropdownItems","setOpen","Dropdown","onSelect","toggle","KebabToggle","onToggle","kebabState","isPlain","kebabItemEditStatus","showStatusModal","DropdownItem","kebabEditStatus","SystemsExposedTable","InventoryTable","setInventoryTable","StatusModal","setStatusModal","selectedHosts","setSelectedHosts","urlParamsAllowed","setUrlParamsAllowed","React","createRef","useDispatch","useCreateUrlParams","SYSTEMS_EXPOSED_ALLOWED_PARAMS","createUrlParams","urlParameters","affectedSystems","useSelector","parameters","metadata","meta","useMemo","config","inventoryRefresh","pageSize","per_page","sort","page_size","total_items","onRefreshData","handleSelect","middlewareListener","addNew","on","callback","newSelected","fetchAffectedSystemsByCVE","selectMultipleEntities","loadInventory","insights","ReactRedux","react","reactRouterDom","pfReactTable","PfTable","TableBody","TableHeader","TableGridBreakpoint","cellWidth","expandable","SortByDirection","inventoryConnector","mergeWithEntities","mergeWithDetail","ReducerRegistry","register","SYSTEMS_EXPOSED_HEADER","getStore","clearCveStore","clearInventoryStore","fetchCveDetails","kebabOptions","editStatus","cveStatusDetails","displayName","getSelectedSystemsLabel","selectOptions","selectAllCheckbox","selectedItems","selectorHandler","fetchResource","ops","fetchAffectedSystemsIdsByCve","h2","systemsExposedTableHeader","tableProps","canSelectAll","onSort","direction","handleSortColumn","SYSTEMS_EXPOSED_SORTING_HEADER","sortBy","createSortBy","actionResolver","rowData","rowIndex","systemExposedTableRowActions","ref","onRefresh","total","isLoaded","perPage","hasCheckbox","showActions","exportConfig","downloadReport","format","DownloadReport","exec","onExpandClick","_e","expandRow","actionsConfig","actions","kebabToggleProps","activeFiltersConfig","filters","buildActiveFilters","filterRuleValues","onDelete","e","removeFilters","bulkSelect","Boolean","handleOnCheckboxChange","filterConfig","searchFilter","systemsSearchName","searchFilterByName","withRouter","createContext","CVEDetailsPage","showBusinessRiskModal","setState","open","cveName","fetchAffectedSystems","match","handleCveDetailsError","setHeader","breadcrumbs","PATHS","home","cvesPage","isActive","error","kebabItems","kebabEditBusinessRisk","VulnerabilityHeader","InvalidObject","Page","Provider","justifyContent","DropdownPosition","right","Main","fetchData","methods","header","_globals","doT","version","templateSettings","evaluate","interpolate","encode","use","useParams","define","defineParams","conditional","iterate","varname","strip","append","selfcontained","doNotSkipEncoded","template","compile","log","encodeHTMLSource","encodeHTMLRules","matchHTML","code","replace","m","eval","startend","start","end","startencode","skip","unescape","tmpl","c","def","needhtmlencode","indv","cse","sid","str","resolveDefs","block","assign","indexOf","substring","param","v","arg","Function","s","d","rw","__exp","RegExp","elsecase","vname","iname","_encodeHTML","console","FETCH_CVE_LIST","FETCH_CVE_DETAILS","HANDLE_CVE_DETAILS_ERROR","FETCH_SYSTEM_DETAILS","FETCH_AFFECTED_SYSTEMS_BY_CVE","FETCH_SYSTEMS","SET_HEADER","SYSTEM_OPT_OUT","FETCH_SYSTEM_CVE_LIST","CHANGE_SYSTEM_CVE_STATUS","CHANGE_EXPOSED_SYSTEMS_PARAMETERS","CHANGE_CVE_LIST_PARAMETERS","SELECT_CVE","SELECT_SYSTEM_CVE","SELECT_ENTITIES","SELECT_MULTIPLE_ENTITIES","EXPAND_CVE","EXPAND_ROW","EXPAND_SYSTEM_CVE","CHANGE_SYSTEMS_PARAMS","CHANGE_SYSTEM_CVE_LIST_PARAMETERS","CLEAR_SYSTEMS_STORE","CLEAR_SYSTEM_CVES_STORE","CLEAR_CVE_STORE","CLEAR_INVENTORY_STORE","CLEAR_CVES_STORE","FETCH_AFFECTED_SYSTEM_IDS_BY_CVE","FETCH_SYSTEMS_IDS","FETCH_CVE_LIST_IDS","FETCH_SYTEM_DETAILS_IDS","dataShape","shape","constructParameters","apiProps","allowedParams","constructURLParameters","urlParams","includes","formatDate","date","Date","prepend","number","toFormat","isNaN","year","getFullYear","month","getMonth","day","getDate","constructFilterParameters","filterParams","prototype","hasOwnProperty","call","cvssEntry","CVSS_OPTIONS","cvss_filter","parseFloat","from","cvss_from","cvss_to","publicEntry","PUBLIC_DATE_OPTIONS","publish_date","public_from","public_to","impactList","impactColorList","unknown","desc","asc","findIndex","currentSort","columnName","useDefault","substr","window","history","pushState","location","pathname","qs","stringify","parse","search","pages","cvesCount","instance","axios","create","interceptors","request","authInterceptor","response","responseDataInterceptor","interceptor401","ReadOnlyNotification","err","isCancel","errObject","errors","api","GitApi","getCveDetails","getSystemDetails","getAffectedSystemsByCVE","parameterArray","getAffectedSystemsByCve","getSystems","getSystemsList","getCveListByAccount","getCveList","optOutSystem","setSystemOptOut","getCveListBySystem","setStatus","optOutSystems","optOut","opt_out","setSystemsOptOut","setCveBusinessRisk","getExecutiveReport","getAffectedSystemsIdsByCve","getSystemsIds","getCveIdsList","getCveIdsBySystem","Immutable","openedRows","openedCves","selectedCves","expandCveDescription","SystemCvesStore","applyReducerHash","timestamp","newState","splice","element","limit","offet","show_all","isValid","stateTimestamp","actionTimestamp","ActionTypes","setIn","CVEsStore","SystemsPageStore","BreadcrumbStore","set","Promise","resolve","HeaderHelper","APIHelper","fetchSystems","fetchSystemDetails","noError","fetchCveListByAccount","optOutSystemAction","fetchCveListBySystem","optOutSystemsAction","changeCveListParameters","changeSystemCVEsParameters","selectCve","expandCve","selectSystemCve","expandSystemCve","changeSystemsParams","clearSystemStore","clearSystemCvesStore","fetchSystemsIds","fetchCvesIds","fetchSystemDetailsIds","clearCVEsStore","immutableInit","REACT_ELEMENT_TYPE","Symbol","for","globalConfig","use_static","instantiateEmptyObject","obj","getPrototypeOf","addPropertyTo","methodName","defineProperty","enumerable","configurable","writable","banProperty","ImmutableError","isImmutable","getOwnPropertyDescriptor","isMergableObject","mutatingObjectMethods","mutatingArrayMethods","nonMutatingArrayMethods","mutatingDateMethods","message","stack","makeImmutable","bannedMethods","freeze","makeMethodReturnImmutable","currentMethod","arraySet","idx","deep","merge","mode","mutable","asMutableArray","makeImmutableArray","constructor","immutableEmptyArray","arraySetIn","pth","head","newValue","tail","thisHead","nextHead","isFinite","objectSetIn","immutableEmptyObject","flatMap","asObject","update","updateIn","getIn","asMutableDate","getTime","iterator","iteratorResult","without","remove","keysToRemoveArray","el","makeImmutableObject","opts","asDeepMutable","pair","asMutable","quickCopy","src","dest","other","TypeError","JSON","receivedArray","merger","addToResult","currentObj","otherObj","immutableValue","mergerResult","clearDroppedKeys","otherFromArray","objectReplace","fnObject","fnArray","fnDate","path","objectSet","property","updater","restArgs","initialVal","getInPath","l","defaultValue","asMutableObject","instantiatePlainObject","stackRemaining","$$typeof","isReactElement","File","isFileObject","Blob","isBlobObject","isError","isPromise","clone","toStatic","fn","args","self","shift","toStaticObjectOrArray","static","initialValue","selection","BaseModal","targetItems","setTargetItems","handleClose","clearNotifications","onClose","save","cancel","InsightsSystemRule","paddingLeft","InsightsReportCard","report","PropType","details","resulotion","isRequired","InsightsNoSystemRule","exposedSystemNoRules","exposedSystemNoRulesInfo","exposedSystemNoRulesInfoLink","attributes","status_name","onlyThisSystemCvePair","option","processDate","RHDBLink","mitre_link","createMitreLink","MITRELink","cveTableRowActions","editBusinessRisk","rowId","systemCveTableRowActions","entity","cve_status_justification","systemTableRowActions","isOptOut","kebabResumeAnalysis","kebabExcludeAnalysis","multiRow","selectedItemsArray","selectedItemsCount","selectPageNumber","handleUnselectAll","handleSelectAll","selectNone","selectPage","collectedItems","union","selectAll","SearchFilter","placeholder","searchValue","setSearchValue","debounce","handleSearch","handleChangePage","_event","handleSetPageSize","fileType","currentFilters","filterRulevalues","buildChip","parameter","FILTERS","filteredRule","buildChips","paramValues","filterChips","multiValue","filteredValues","category","chips","searchLabel","chip","filename","defaultParams","checkTypes","formats","data_format","downloadFile","Number","MAX_SAFE_INTEGER","toISOString"],"mappings":"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","file":"js/CVEDetailsPage.js","sourcesContent":["\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components';\nimport { SECURITY_RULE_OPTIONS } from '../../../../Helpers/constants';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\nimport unionWith from 'lodash/unionWith';\nimport isEqual from 'lodash/isEqual';\n\nconst securityRuleFilter = (apply, currentFilter = {}, dynamicFilters = []) => {\n    let { security_rule: currentValue } = currentFilter;\n    if (currentValue === '' || !currentValue) {\n        currentValue = 'all';\n    }\n\n    const filterBySecurityRule = values => {\n        apply({ security_rule: values === 'all' ? '' : values, page: 1 });\n    };\n\n    return {\n        label: intl.formatMessage(messages.securityRules),\n        type: conditionalFilterType.radio,\n        urlParam: 'security_rule',\n        filterValues: {\n            onChange: (event, value) => {\n                filterBySecurityRule(value);\n            },\n            items:\n                unionWith(SECURITY_RULE_OPTIONS, dynamicFilters, isEqual).map(item => ({ label: item.label, value: item.value })),\n            value: currentValue\n        }\n    };\n};\n\nexport default securityRuleFilter;\n","var baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    baseUniq = require('./_baseUniq'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    last = require('./last');\n\n/**\n * This method is like `_.union` except that it accepts `comparator` which\n * is invoked to compare elements of `arrays`. Result values are chosen from\n * the first array in which the value occurs. The comparator is invoked\n * with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.unionWith(objects, others, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n */\nvar unionWith = baseRest(function(arrays) {\n  var comparator = last(arrays);\n  comparator = typeof comparator == 'function' ? comparator : undefined;\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n});\n\nmodule.exports = unionWith;\n","\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components';\nimport { STATUS_OPTIONS } from '../../../../Helpers/constants';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\n\nconst statusFilter = (apply, currentFilter = {}) => {\n\n    let { status_id: currentValue } = currentFilter;\n\n    const filterByStatus = values => {\n        apply({ status_id: (values.length > '0' && values.filter(value => value !== ',').join(',')) || '', page: 1 });\n    };\n\n    return {\n        label: intl.formatMessage(messages.status),\n        type: conditionalFilterType.checkbox,\n        filterValues: {\n            onChange: (event, value) => {\n                filterByStatus(value);\n            },\n            items: STATUS_OPTIONS.map(item => ({ label: item.label, value: item.value })),\n            value: (currentValue ? currentValue.split(',') : [])\n        }\n    };\n};\n\nexport default statusFilter;\n","import { sortable } from '@patternfly/react-table';\n\nexport const initialState = {\n    columns: [],\n    rows: [],\n    entities: [],\n    selectedRows: []\n};\n\nfunction modifyInventory(columns, state) {\n    if (!state.selectedRows) {state.selectedRows = [];}\n\n    if (state.loaded) {\n        let lastSeenColumn = state.columns.filter(({ key }) => key === 'updated');\n        lastSeenColumn = [{ ...lastSeenColumn[0], transforms: [sortable] }];\n\n        return {\n            ...state,\n            rows: state.rows.map(item => ({ ...item, selected: state.selectedRows.some(system => system === item.id) })),\n            columns: [\n                ...columns || [],\n                ...lastSeenColumn || []\n            ]\n        };\n    }\n\n    return state;\n}\n\nfunction selectEntities(state, selected) {\n    const myRows = state.rows.slice();\n    if (!state.selectedRows) {state.selectedRows = [];}\n\n    const retval = {\n        ...state,\n        rows: myRows\n        .map(item => {\n            const newValue =  { ...item, selected: selected.some(system => system === item.id) };\n            return newValue;\n        }),\n        selectedRows: [...selected]\n    };\n    return retval;\n}\n\nexport const inventoryEntitiesReducer = (columns) => (state = initialState, action) => {\n    switch (action.type) {\n        case 'LOAD_ENTITIES_FULFILLED':\n            return modifyInventory(columns, state);\n        case 'SELECT_MULTIPLE_ENTITIES':\n            return selectEntities(state, action.payload);\n        case 'EXPAND_ROW':\n            return {\n                ...state,\n                rows: state.rows.map(row => ({\n                    ...row,\n                    isOpen: row.id === action.payload.id ? action.payload.isOpen : row.isOpen\n                }))\n            };\n        case 'CLEAR_INVENTORY_STORE':\n            return initialState;\n        default:\n            return state;\n    }\n};\n","import { Form, FormGroup, Radio, Stack, StackItem, TextArea } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { setBusinessRisk } from '../../../Helpers/APIHelper';\nimport { BUSINESS_RISK_OPTIONS } from '../../../Helpers/constants';\nimport BaseModal from './BaseModal';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nexport const BusinessRiskModal = ({ cves, updateRef, intl }) => {\n    const [cveList] = useState(cves);\n    const [businessRiskId, setBusinessRiskId] = useState('0');\n    const [label, setLabel] = useState();\n\n    const getDefaultLabel = useCallback(() => {\n        setLabel((cveList && cveList.length === 1 && cveList[0].justification) || '');\n    }, [cveList]);\n\n    useEffect(() => {\n        const getDefaultBusinessRisk = () => {\n            setBusinessRiskId((cveList && cveList.length === 1 && cveList[0].business_risk_id.toString()) || '0');\n        };\n\n        getDefaultBusinessRisk();\n        getDefaultLabel();\n    }, [cves, getDefaultLabel, cveList]);\n\n    useEffect(getDefaultLabel, [cves]);\n\n    const handleOnRadioChange = (_, event) => {\n        const { value } = event.currentTarget;\n        setBusinessRiskId(value);\n    };\n\n    const handleOnLabelChange = value => {\n        setLabel(value);\n    };\n\n    const handleSave = () => {\n        return setBusinessRisk({\n            business_risk_id: parseInt(businessRiskId),\n            cve: cveList.map(item => item.id),\n            business_risk_text: label\n        }).then(updateRef);\n    };\n\n    const successNotification = {\n        variant: 'success',\n        title: intl.formatMessage(messages.businessRiskUpdateSuccessful, { count: cveList.length || 0 })\n    };\n\n    return (\n        <BaseModal\n            items={cveList}\n            onSave={handleSave}\n            onSuccessNotification={successNotification}\n            title={intl.formatMessage(messages.businessRiskModalTitle)}\n        >\n            <Stack hasGutter>\n                <StackItem>\n                    {intl.formatMessage(messages.businessRiskModalInfo)}\n                </StackItem>\n                <StackItem>\n                    <Form>\n                        <FormGroup label={intl.formatMessage(messages.businessRiskLabel)} fieldId={'businessRiskId'}>\n                            {BUSINESS_RISK_OPTIONS.map(item => (\n                                <Radio\n                                    className={'business-risk-radio'}\n                                    value={item.value}\n                                    isChecked={businessRiskId === item.value}\n                                    onChange={handleOnRadioChange}\n                                    label={item.label}\n                                    key={item.value}\n                                    id={item.value}\n                                    name={item.label}\n                                    aria-label={item.label}\n                                />\n                            ))}\n                        </FormGroup>\n                        <FormGroup label={intl.formatMessage(messages.justificationLabel)} fieldId={'label'}>\n                            <TextArea\n                                type=\"text\"\n                                onChange={handleOnLabelChange}\n                                value={label}\n                                resizeOrientation='vertical'\n                                aria-label={'justification'}\n                            />\n                        </FormGroup>\n                    </Form>\n                </StackItem>\n            </Stack>\n        </BaseModal>\n    );\n};\n\nBusinessRiskModal.propTypes = {\n    cves: propTypes.array,\n    updateRef: propTypes.func,\n    intl: propTypes.any\n};\n\nexport default injectIntl(BusinessRiskModal);\n","import { Checkbox, Form, FormGroup, Split, SplitItem, Stack, StackItem, Tooltip } from '@patternfly/react-core';\nimport { InfoCircleIcon, OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport propTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { setCveStatus, setSystemCveStatus } from '../../../Helpers/APIHelper';\nimport BaseModal, { useJustificationInput, useStatusSelect } from './BaseModal';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nexport const CveStatusModal = ({ cves, updateRef, intl }) => {\n    const [cveList] = useState(cves);\n    const { StatusSelect, statusId } = useStatusSelect(getDefaultStatus());\n    const { JustificationInput, justification } = useJustificationInput(getDefaultLabel());\n    const [checkboxState, setCheckboxState] = useState(false);\n\n    const handleSave = () => {\n        const cveIds = cveList.map(item => item.id);\n        return setCveStatus({\n            status_id: parseInt(statusId),\n            cve: cveIds,\n            status_text: justification\n        })\n        .then(() => !checkboxState && setSystemCveStatus({ cve: cveIds }))\n        .then(updateRef);\n    };\n\n    function getDefaultStatus() {\n        return (cveList && cveList.length === 1 && cveList[0].status_id.toString()) || '0';\n    }\n\n    function getDefaultLabel() {\n        return (cveList && cveList.length === 1 && cveList[0].justification) || '';\n    }\n\n    const successNotification = {\n        variant: 'success',\n        title: intl.formatMessage(messages.cveStatusModalUpdateSuccessful, { count: cveList.length || 0 })\n    };\n    const title = intl.formatMessage(messages.cveStatusModalTitle, { count: cveList.length || 0 });\n\n    return (\n        <BaseModal items={cveList} onSave={handleSave} onSuccessNotification={successNotification} title={title}>\n            <Stack hasGutter>\n                <StackItem>\n                    {intl.formatMessage(\n                        messages.cveStatusModalSelected,\n                        {\n                            count: cveList.length || 0,\n                            cveId: cveList[0].id, // only used when length is 1\n                            b: (...chunks) => <b>{chunks}</b> // explicitly specifying what is wrapped <b> should be bold\n                        }\n                    )}\n                </StackItem>\n                <StackItem>\n                    <InfoCircleIcon\n                        className=\"pf-u-mr-xs\"\n                        fontSize=\"var(--pf-global--FontSize--md)\"\n                        color=\"var(--pf-global--active-color--300)\"\n                    />\n                    {intl.formatMessage(messages.cveStatusModalInfo, { count: cveList.length || 0 })}\n                    <Tooltip\n                        trigger='mouseenter focus click'\n                        content={intl.formatMessage(messages.cveStatusModalInfoTooltip)}\n                    >\n                        <React.Fragment>\n                            <OutlinedQuestionCircleIcon\n                                className=\"pf-u-ml-xs\"\n                                color=\"var(--pf-global--Color--200)\"\n                                style={{ verticalAlign: '-0.125em' }}\n                            />\n                        </React.Fragment>\n                    </Tooltip>\n                </StackItem>\n                <StackItem>\n                    <Form key=\"key\">\n                        {StatusSelect}\n                        {JustificationInput}\n                        <FormGroup fieldId={'overwrite'}>\n                            <Split>\n                                <SplitItem>\n                                    <Checkbox\n                                        label={intl.formatMessage(messages.cveStatusModalOverwriteCheckbox)}\n                                        id=\"alt-form-checkbox-1\"\n                                        name=\"alt-form-checkbox-1\"\n                                        isChecked={checkboxState}\n                                        onChange={checked => setCheckboxState(checked)}\n                                    />\n                                </SplitItem>\n                                <SplitItem>\n                                    <Tooltip\n                                        trigger='mouseenter focus click'\n                                        content={intl.formatMessage(messages.cveStatusModalOverwriteTooltip)}\n                                    >\n                                        <OutlinedQuestionCircleIcon\n                                            className=\"pf-u-ml-xs\"\n                                            color=\"var(--pf-global--Color--200)\"\n                                            style={{ verticalAlign: '0' }}\n                                        />\n                                    </Tooltip>\n                                </SplitItem>\n                            </Split>\n                        </FormGroup>\n                    </Form>\n                </StackItem>\n            </Stack>\n        </BaseModal>\n    );\n};\n\nCveStatusModal.propTypes = {\n    cves: propTypes.array,\n    updateRef: propTypes.func,\n    intl: propTypes.any\n};\n\nexport default injectIntl(CveStatusModal);\n","import { Checkbox, Form, FormGroup, Stack, StackItem, Alert, Split, Tooltip, SplitItem } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport propTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { setSystemCveStatus } from '../../../Helpers/APIHelper';\nimport BaseModal, { useJustificationInput, useStatusSelect } from './BaseModal';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nexport const CvePairStatusModal = ({ cves, updateRef, inventories, hasDifferentStatus = false, intl, type }) => {\n    const [cveList] = useState(cves);\n    const [inventoryList] = useState(inventories);\n    const {\n        JustificationInput,\n        justification,\n        setJustification,\n        setProps: setJustificationProps\n    } = useJustificationInput(getDefaultLabel());\n    const [checkboxState, setCheckboxState] = useState(getDefaultCheckboxState());\n    const { StatusSelect, statusId, setStatusId, setProps: setSelectProps } = useStatusSelect(getDefaultStatus());\n    const inventoryIds = inventoryList.map(item => item.id);\n    const inventoryNames = inventoryList.map(item => item.display_name);\n\n    useEffect(() => {\n        setSelectProps({ isDisabled: checkboxState });\n        setJustificationProps({ disabled: checkboxState });\n        setStatusId(getCveStatus());\n        setJustification(getCveJustification());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [checkboxState, setSelectProps, setJustificationProps]);\n\n    useEffect(() => {\n        setStatusId(getCveStatus());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [checkboxState, setStatusId]);\n\n    const handleSave = () => {\n        const cveIds = cveList.map(item => item.id);\n        const setStatusParams = !checkboxState\n            ? {\n                status_id: parseInt(statusId),\n                cve: cveIds,\n                status_text: justification,\n                inventory_id: inventoryIds\n            }\n            : { cve: cveIds, inventory_id: inventoryIds };\n        return setSystemCveStatus(setStatusParams).then(updateRef);\n    };\n\n    function getDefaultStatus() {\n        // system has different status\n        if (inventoryList && inventoryList.length > 0 && inventoryList[0].status_id) {\n            return getSystemsStatus();\n        }\n\n        if (cveList && cveList.length > 0) {\n            return getCveStatus();\n        }\n\n    }\n\n    function getDefaultLabel() {\n        if (inventoryList && inventoryList.length === 1 && inventoryList[0].justification) {\n            return getSystemsJustification();\n        }\n\n        if (cveList && cveList.length === 1) {\n            return getCveJustification();\n        }\n    }\n\n    function getDefaultCheckboxState() {\n\n        const haveSameStatuses = cveList.every(\n            (val, i, arr) => (val.status_id === arr[0].status_id) && (val.cve_status_id === arr[0].cve_status_id)\n        );\n        // system has the same status as cve\n        if (inventoryList && inventoryList.length === 1 && inventoryList[0].status_id) {\n            let [inventory] = inventoryList;\n            return cveList.some(cve => (cve.status_id === inventory.status_id));\n        }\n\n        if (cveList && cveList.length === 1 || haveSameStatuses) {\n            return true;\n        }\n\n        return false;\n    }\n\n    function getSystemsStatus() {\n        return (inventoryList && inventoryList[0].status_id.toString()) || '0';\n    }\n\n    function getSystemsJustification() {\n        return (inventoryList && inventoryList.length === 1 && inventoryList[0].justification) || '';\n    }\n\n    function getCveStatus() {\n        switch (type) {\n            case 'systemsExposed' : {\n                return (cveList && cveList.length === 1 && cveList[0].status_id.toString()) || '0';\n            }\n\n            case 'systemDetail': {\n                if (cveList) {\n                    if (checkboxState) { // use overall (CVE) status\n                        return hasDifferentStatus ? '0' : cveList[0].cve_status_id || '0';\n                    }\n                    else { // use system pair status\n                        return hasDifferentStatus ? '0' : cveList[0].status_id || '0';\n                    }\n                }\n                else {\n                    return '0';\n                }\n            }\n\n            default: {\n                return '0';\n            }\n        }\n\n    }\n\n    function getCveJustification() {\n        switch (type) {\n            case 'systemsExposed' : {\n                return (cveList && cveList.length === 1 && cveList[0].justification) || '';\n            }\n\n            case 'systemDetail': {\n                if (checkboxState) { // use overall (CVE) justification\n                    return (cveList && cveList.length === 1 && cveList[0].cve_justification) || '';\n                }\n                else { // use system pair justification\n                    return (cveList && cveList.length === 1 && cveList[0].justification) || '';\n                }\n            }\n\n            default: {\n                return '';\n            }\n        }\n    }\n\n    const successNotification = {\n        variant: 'success',\n        title: intl.formatMessage(messages.cvePairStatusModalUpdateSuccessful)\n    };\n\n    const modalTitle = intl.formatMessage(messages.cvePairStatusModalTitle, { count: inventoryIds.length * cves.length });\n\n    return (\n        <BaseModal items={cveList} onSave={handleSave} onSuccessNotification={successNotification} title={modalTitle}>\n            <Stack hasGutter>\n                {hasDifferentStatus &&\n                    <StackItem>\n                        <Alert\n                            variant=\"warning\"\n                            isInline\n                            title={intl.formatMessage(messages.cvePairStatusModalAlert)}\n                        />\n                    </StackItem>\n                }\n                <StackItem>\n                    {intl.formatMessage(\n                        messages.cvePairStatusModalSelected,\n                        {\n                            cveCount: cveList.length || 0,\n                            cveId: cveList[0].id, // only used when length is 1\n                            systemCount: inventoryList.length || 0,\n                            systemName: inventoryNames[0], // only used when length is 1\n                            b: (...chunks) => <b>{chunks}</b> // explicitly specifying what is wrapped <b> should be bold\n                        }\n                    )}\n                </StackItem>\n                <StackItem>\n                    <Form key=\"key\">\n                        <FormGroup fieldId={'overall'}>\n                            <Split>\n                                <SplitItem>\n                                    <Checkbox\n                                        label={intl.formatMessage(messages.cvePairStatusModalUseOverallCheckbox)}\n                                        id=\"alt-form-checkbox-1\"\n                                        name=\"alt-form-checkbox-1\"\n                                        isChecked={checkboxState}\n                                        onChange={checked => setCheckboxState(checked)}\n                                    />\n                                </SplitItem>\n                                <SplitItem>\n                                    <Tooltip\n                                        trigger='mouseenter focus click'\n                                        content={intl.formatMessage(messages.cvePairStatusModalUseOverallTooltip)}\n                                    >\n                                        <OutlinedQuestionCircleIcon\n                                            className=\"pf-u-ml-xs\"\n                                            color=\"var(--pf-global--Color--200)\"\n                                            style={{ verticalAlign: '0' }}\n                                        />\n                                    </Tooltip>\n                                </SplitItem>\n                            </Split>\n                        </FormGroup>\n                        {StatusSelect}\n                        {JustificationInput}\n                    </Form>\n                </StackItem>\n            </Stack>\n        </BaseModal>\n    );\n};\n\nCvePairStatusModal.propTypes = {\n    cves: propTypes.array,\n    updateRef: propTypes.func,\n    inventories: propTypes.array,\n    hasDifferentStatus: propTypes.bool,\n    intl: propTypes.any,\n    type: propTypes.string\n};\n\nexport default injectIntl(CvePairStatusModal);\n","import { addNotification } from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\nimport RemediationButton from '@redhat-cloud-services/frontend-components-remediations/RemediationButton';\nimport  AnsibeTowerIcon  from '@patternfly/react-icons/dist/js/icons/ansibeTower-icon';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport globalBackgroundColor100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_100';\nimport propTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport messages from '../../../Messages';\nimport { FormattedMessage } from 'react-intl';\n\nclass Remediation extends Component {\n    static propTypes = {\n        cves: propTypes.oneOfType([\n            propTypes.array,\n            propTypes.string\n        ]),\n        systems: propTypes.oneOfType([\n            propTypes.array,\n            propTypes.string\n        ]),\n        addNotification: propTypes.func\n    };\n\n    shouldComponentUpdate(nextProps) {\n        if (nextProps.cves !== this.props.cves) {\n            return true;\n        }\n\n        if (nextProps.systems !== this.props.systems) {\n            return true;\n        }\n\n        return false;\n    }\n\n    remediationProvider = (cves = [], systems = []) => {\n        cves = [].concat(cves);\n        systems = [].concat(systems);\n        return cves.length && systems.length\n            ? {\n                issues: cves.map(cve => ({\n                    id: `vulnerabilities:${cve}`,\n                    description: cve\n                })),\n                systems\n            }\n            : false;\n    };\n\n    render() {\n        const { cves, systems, addNotification: dispatchNotification } = this.props;\n        return (\n            <div>\n                <RemediationButton\n                    dataProvider={() => this.remediationProvider(cves, systems)}\n                    isDisabled={this.remediationProvider(cves, systems) === false}\n                    onRemediationCreated={result => dispatchNotification(result.getNotification())}\n                >\n                    <AnsibeTowerIcon size='sm' color={globalBackgroundColor100.value} />\n                    &nbsp;{<FormattedMessage {...messages.remediateLabel} />}\n                </RemediationButton>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    null,\n    dispatch => ({\n        addNotification: notification => dispatch(addNotification(notification))\n    })\n)(routerParams(Remediation));\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEPageDetailsDescription.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEPageDetailsDescription.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEPageDetailsDescription.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","'use strict';\n\nexports.__esModule = true;\nexports.defaultMemoize = defaultMemoize;\nexports.createSelectorCreator = createSelectorCreator;\nexports.createStructuredSelector = createStructuredSelector;\nfunction defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nfunction createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = defaultMemoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nvar createSelector = exports.createSelector = createSelectorCreator(defaultMemoize);\n\nfunction createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js!@redhat-cloud-services/frontend-components-notifications/index.css\"), \"\");\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js!@redhat-cloud-services/frontend-components/index.css\"), \"\");\n\n// module\nexports.push([module.id, \":root {\\n  --ins-color--orange: #ec7a08; }\\n\\nbutton:focus {\\n  outline: none; }\\n\\n.page__Vulnerabilities {\\n  overflow-x: auto !important; }\\n  .page__Vulnerabilities .pf-c-page__main {\\n    overflow-x: auto; }\\n\\n.csaw-icon {\\n  vertical-align: -0.125em;\\n  margin-right: var(--pf-global--spacer--xs); }\\n\\n.icon-with-label:not(:last-child) {\\n  margin-right: var(--pf-global--spacer--sm); }\\n\\n.icon-with-label > svg {\\n  margin-right: var(--pf-global--spacer--sm); }\\n\\n.business-risk-radio > input {\\n  margin-left: 1px; }\\n\\n.splitter {\\n  margin-bottom: var(--pf-global--spacer--sm) !important;\\n  margin-top: var(--pf-global--spacer--sm) !important; }\\n\\n.status-breakdown-table tr th {\\n  font-weight: normal;\\n  padding-left: 0px;\\n  padding-right: var(--pf-global--spacer--md);\\n  padding-bottom: var(--pf-global--spacer--sm); }\\n  .status-breakdown-table tr th:last-child {\\n    text-align: right;\\n    min-width: 8em; }\\n\\n.status-breakdown-table tr td {\\n  padding-left: 0px;\\n  padding-right: var(--pf-global--spacer--md);\\n  white-space: nowrap;\\n  padding-top: var(--pf-global--spacer--sm);\\n  padding-bottom: var(--pf-global--spacer--sm); }\\n  .status-breakdown-table tr td:last-child {\\n    text-align: right; }\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEInfoBox.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEInfoBox.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CVEInfoBox.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js!@redhat-cloud-services/frontend-components-notifications/index.css\"), \"\");\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js!@redhat-cloud-services/frontend-components/index.css\"), \"\");\n\n// module\nexports.push([module.id, \":root {\\n  --ins-color--orange: #ec7a08; }\\n\\nbutton:focus {\\n  outline: none; }\\n\\n.page__Vulnerabilities {\\n  overflow-x: auto !important; }\\n  .page__Vulnerabilities .pf-c-page__main {\\n    overflow-x: auto; }\\n\\n.csaw-icon {\\n  vertical-align: -0.125em;\\n  margin-right: var(--pf-global--spacer--xs); }\\n\\n.icon-with-label:not(:last-child) {\\n  margin-right: var(--pf-global--spacer--sm); }\\n\\n.icon-with-label > svg {\\n  margin-right: var(--pf-global--spacer--sm); }\\n\\n.business-risk-radio > input {\\n  margin-left: 1px; }\\n\\n.infobox-square {\\n  background-color: var(--pf-global--BackgroundColor--200);\\n  border: var(--pf-global--BorderColor--300) var(--pf-global--BorderWidth--sm) solid;\\n  height: 65px; }\\n  .infobox-square > .pf-l-split__item:first-child {\\n    width: 65px;\\n    color: black;\\n    background-color: white; }\\n    .infobox-square > .pf-l-split__item:first-child:not(.severity-unknown) > div.pf-l-bullseye svg {\\n      color: white; }\\n  .infobox-square h3,\\n  .infobox-square h6 {\\n    margin: 0; }\\n  .infobox-square > .pf-l-split__item:nth-child(2) {\\n    display: flex;\\n    justify-content: flex-start;\\n    align-items: center; }\\n\\n.severity-low {\\n  background-color: var(--pf-global--Color--200) !important; }\\n\\n.severity-critical {\\n  background-color: var(--pf-global--danger-color--100) !important; }\\n\\n.severity-moderate {\\n  background-color: var(--pf-global--warning-color--100) !important; }\\n\\n.severity-color-important {\\n  background-color: var(--pf-global--palette--orange-300) !important; }\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CvssVector.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CvssVector.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CvssVector.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".severity-info-box > div h6 {\\n  margin: 0; }\\n\\n.severity-info-box > div > div:nth-child(3) h6 .ins-c-skeleton {\\n  max-height: 30px !important;\\n  max-width: 30% !important; }\\n\\n.severity-info-box > div > div:nth-child(3) div > .ins-c-skeleton {\\n  max-height: 25px !important;\\n  max-width: 80% !important; }\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CSAwRuleBox.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CSAwRuleBox.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./CSAwRuleBox.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".label {\\n  min-width: 140px; }\\n\\n.l-sm-spacer {\\n  margin-left: var(--pf-global--spacer--sm); }\\n\\n.ansible-success {\\n  color: var(--pf-global--success-color--200); }\\n\\n.card-box-shadow {\\n  box-shadow: var(--pf-global--BoxShadow--md);\\n  border: 1px solid var(--pf-global--BorderColor--dark-100); }\\n\", \"\"]);\n\n// exports\n","import { createSelector } from 'reselect';\nimport { createCveDetailsPage, createExposedSystemsTable, createSystemsListTable } from '../../Helpers/CVEHelper';\n\nconst cveListWithSystemsSelector = (state, cve) => ({ ...state.CVEDetailsPageStore.affectedSystemsByCVE, cve });\nconst systemsListAllSelector = state => state.SystemsStore;\nconst cveDetailsPageSelector = state => state.CVEDetailsPageStore.cveDetails;\n\nexport const sCveDetailsPage = createSelector(\n    [cveDetailsPageSelector],\n    createCveDetailsPage\n);\nexport const sExposedSystemsTable = createSelector(\n    [cveListWithSystemsSelector],\n    createExposedSystemsTable\n);\n\nexport const sAllSystems = createSelector(\n    [systemsListAllSelector],\n    createSystemsListTable\n);\n","import { Popover, Stack, StackItem } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport Label from '../Snippets/Label';\nimport './CVEPageDetailsDescription.scss';\n\nconst SnippetWithHeaderAndPopover = props => {\n    const { title, value, content } = props;\n\n    return (\n        <Popover bodyContent={content} headerContent={''} aria-label={'Business risk popover'} position=\"right\">\n            <Stack style={{ display: 'inline-block', cursor: 'pointer' }}>\n                <StackItem>\n                    <Label>{title}</Label>\n                </StackItem>\n                <StackItem>\n                    <a>{value}</a>\n                </StackItem>\n            </Stack>\n        </Popover>\n    );\n};\n\nSnippetWithHeaderAndPopover.propTypes = {\n    title: propTypes.any,\n    value: propTypes.any,\n    content: propTypes.any\n};\nexport default SnippetWithHeaderAndPopover;\n","import { Stack, StackItem, Text, TextContent, TextVariants, Split, SplitItem } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { PatternFlyThemeProvider, StyledBox, StyledText, StyledConstants } from '@patternfly/react-styled-system';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { STATUS_OPTIONS } from '../../../Helpers/constants';\nimport './CVEPageDetailsDescription.scss';\nimport SnippetWithHeaderAndPopover from './SnippetWithHeaderAndTooltip';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst CVEPageDetailsDescription = ({ cveAttributes, intl }) => {\n    const {\n        public_date: publishDate,\n        description,\n        rh_link: link,\n        business_risk: businessRisk,\n        business_risk_justification: businessRiskJustification,\n        status,\n        status_justification: statusJustification,\n        systems_status_detail: systemsStatusDetail,\n        systems_status_divergent: systemsStatusDivergent\n    } = cveAttributes;\n\n    const detailRows =\n        systemsStatusDetail &&\n        Object.keys(systemsStatusDetail).map(item => [\n            STATUS_OPTIONS.find(status => status.value === item.toString()).label,\n            systemsStatusDetail[item].toString()\n        ]);\n\n    const brPopoverContent = (\n        <TextContent>\n            <Stack>\n                <StackItem>\n                    <StyledText\n                        fontWeight={StyledConstants.fontWeights.bold}\n                        fontSize={StyledConstants.fontSizes.sm}\n                        lineHeight={StyledConstants.lineHeights.sm}\n                    >\n                        {intl.formatMessage(messages.justificationNote)}\n                    </StyledText>\n                </StackItem>\n                <StackItem>{businessRiskJustification || '--'}</StackItem>\n            </Stack>\n        </TextContent>\n    );\n\n    const statusPopoverContent = (\n        <Stack>\n            <StackItem>\n                <StyledText\n                    fontWeight={StyledConstants.fontWeights.bold}\n                    fontSize={StyledConstants.fontSizes.sm}\n                    lineHeight={StyledConstants.lineHeights.sm}\n                >\n                    {intl.formatMessage(messages.cveStatus)}\n                </StyledText>\n                {status || '--'}\n\n                <StyledText\n                    fontWeight={StyledConstants.fontWeights.bold}\n                    fontSize={StyledConstants.fontSizes.sm}\n                    lineHeight={StyledConstants.lineHeights.sm}\n                    style={{ marginTop: 'var(--pf-global--spacer--sm)' }}\n                >\n                    {intl.formatMessage(messages.justificationNote)}\n                </StyledText>\n                {statusJustification || '--'}\n            </StackItem>\n            {systemsStatusDivergent > 0 && (\n                <StackItem>\n                    <TextContent>\n                        <hr className={'splitter'} />\n                    </TextContent>\n                    <StyledText fontWeight={StyledConstants.fontWeights.semi_bold} lineHeight={StyledConstants.lineHeights.sm}>\n                        {intl.formatMessage(messages.cvePageDetailsSystemsWTCves)}\n                    </StyledText>\n                    <Table\n                        aria-label={'Status details'}\n                        borders={false}\n                        gridBreakPoint={null}\n                        cells={[intl.formatMessage(messages.statusLabel), intl.formatMessage(messages.count)]}\n                        rows={detailRows}\n                        className={'status-breakdown-table'}\n                    >\n                        <TableHeader />\n                        <TableBody />\n                    </Table>\n                </StackItem>\n            )}\n        </Stack>\n    );\n    return (\n        <PatternFlyThemeProvider>\n            <Stack hasGutter>\n                <StackItem />\n                <StackItem>\n                    <Split hasGutter>\n                        <SplitItem>\n                            <SnippetWithHeaderAndPopover\n                                title={intl.formatMessage(messages.businessRiskLabel)}\n                                value={businessRisk}\n                                content={brPopoverContent}\n                            />\n                        </SplitItem>\n                        <SplitItem>\n                            <SnippetWithHeaderAndPopover\n                                title={intl.formatMessage(messages.statusLabel)}\n                                content={statusPopoverContent}\n                                value={\n                                    <span>\n                                        {systemsStatusDivergent > 0 && (\n                                            <ExclamationTriangleIcon color={'var(--pf-global--primary-color--100)'} />\n                                        )}{' '}\n                                        {status}\n                                    </span>\n                                }\n                            />\n                        </SplitItem>\n                    </Split>\n                </StackItem>\n                <StackItem>\n                    <TextContent>\n                        <Text component={TextVariants.p}>{description}</Text>\n                    </TextContent>\n                </StackItem>\n                <StackItem>\n                    <StyledBox style={{ marginBottom: 'var(--pf-global--spacer--xs)' }}>\n                        {intl.formatMessage(messages.publishDate)}: {publishDate}\n                    </StyledBox>\n                    <StyledBox>{link}</StyledBox>\n                </StackItem>\n            </Stack>\n        </PatternFlyThemeProvider>\n    );\n};\n\nCVEPageDetailsDescription.propTypes = {\n    cveAttributes: propTypes.any,\n    intl: propTypes.any\n};\n\nexport default injectIntl(CVEPageDetailsDescription);\n","import { Skeleton, SkeletonSize, Spinner } from '@redhat-cloud-services/frontend-components';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport ContentLoader, { BulletList, List } from 'react-content-loader';\n\nconst WithLoader = props => {\n    if (props === undefined || props.loading !== false) {\n        switch (props.variant) {\n            case 'spinner':\n                return <Spinner centered />;\n            case 'cvePageOverviewItem':\n                return <CVEPageOverviewItemLoader />;\n            case 'list':\n                return <List />;\n            case 'bulletList':\n                return <BulletList />;\n            case 'trendBox':\n                return <TrendBoxLoader />;\n            case 'currentVulnerabilitiesItem':\n                return <CurrentVulnerabilitiesItemLoader />;\n            default:\n                return <Skeleton size={SkeletonSize.lg} />;\n        }\n    }\n\n    return props.children;\n};\n\n// Loaders\nconst CVEPageOverviewItemLoader = () => {\n    return (\n        <ContentLoader height={61} width={120}>\n            <rect x=\"35\" y=\"0\" rx=\"0\" ry=\"0\" width=\"50\" height=\"35\" />\n            <rect x=\"0\" y=\"45\" rx=\"0\" ry=\"0\" width=\"120\" height=\"16\" />\n        </ContentLoader>\n    );\n};\n\nconst TrendBoxLoader = () => {\n    return (\n        <ContentLoader height={100} width={300}>\n            <rect x=\"388.58\" y=\"109.13\" rx=\"0\" ry=\"0\" width=\"0\" height=\"0\" />\n            <rect x=\"11.58\" y=\"16.13\" rx=\"0\" ry=\"0\" width=\"37\" height=\"62\" />\n            <rect x=\"52.58\" y=\"52.13\" rx=\"0\" ry=\"0\" width=\"17\" height=\"26\" />\n            <rect x=\"76.58\" y=\"52.13\" rx=\"0\" ry=\"0\" width=\"17\" height=\"26\" />\n            <rect x=\"4.58\" y=\"82.13\" rx=\"0\" ry=\"0\" width=\"154\" height=\"22\" />\n        </ContentLoader>\n    );\n};\n\nconst CurrentVulnerabilitiesItemLoader = () => {\n    return (\n        <ContentLoader height={50} width={200} speed={2} primaryColor=\"#f3f3f3\" secondaryColor=\"#ecebeb\">\n            <rect x=\"82.58\" y=\"15.13\" rx=\"0\" ry=\"0\" width=\"110.88\" height=\"21.42\" />\n            <circle cx=\"25\" cy=\"25\" r=\"25\" />\n        </ContentLoader>\n    );\n};\n\nWithLoader.propTypes = {\n    loading: propTypes.bool,\n    variant: propTypes.string\n};\n\nexport default WithLoader;\n","import { Bullseye, Split, SplitItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { CVEPageContext } from '../../SmartComponents/CVEDetailsPage/CVEDetailsPage';\nimport WithLoader from '../WithLoader/WithLoader';\nimport './CVEInfoBox.scss';\n\nconst CVEInfoBox = (props) => {\n    return (\n        <CVEPageContext.Consumer>\n            {context => (\n                <Split className=\"infobox-square\" hasGutter>\n                    <WithLoader loading={context.isLoading}>\n                        <SplitItem className={props.titleColor}>\n                            <Bullseye>{props.titleContent}</Bullseye>\n                        </SplitItem>\n                        <SplitItem isFilled>\n                            <TextContent>\n                                <Text component={TextVariants.h6}>{props.descriptionTitle}</Text>\n                                <Text component={TextVariants.p}>{props.descriptionContent}</Text>\n                            </TextContent>\n                        </SplitItem>\n                    </WithLoader>\n                </Split>\n            )}\n        </CVEPageContext.Consumer>\n    );\n};\n\nCVEInfoBox.propTypes = {\n    titleContent: propTypes.any,\n    titleColor: propTypes.any,\n    descriptionContent: propTypes.any,\n    descriptionTitle: propTypes.any\n};\n\nexport default CVEInfoBox;\n","import { intl } from '../../../Utilities/IntlProvider';\nimport messages from '../../../Messages';\n\nexport const V3names = {\n    AV: {\n        name: intl.formatMessage(messages.vectorNamesV3AV),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNetwork),\n            A: intl.formatMessage(messages.vectorValuesAdjacent),\n            L: intl.formatMessage(messages.vectorValuesLocal),\n            P: intl.formatMessage(messages.vectorValuesPhysical)\n        }\n    },\n    AC: {\n        name: intl.formatMessage(messages.vectorNamesV3AC),\n        values: {\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    PR: {\n        name: intl.formatMessage(messages.vectorNamesV3PR),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    UI: {\n        name: intl.formatMessage(messages.vectorNamesV3UI),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            R: intl.formatMessage(messages.vectorValuesRequired)\n        }\n    },\n    S: {\n        name: intl.formatMessage(messages.vectorNamesV3S),\n        values: {\n            U: intl.formatMessage(messages.vectorValuesUnchanged),\n            C: intl.formatMessage(messages.vectorValuesChanged)\n        }\n    },\n    C: {\n        name: intl.formatMessage(messages.vectorNamesV3C),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    I: {\n        name: intl.formatMessage(messages.vectorNamesV3I),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    A: {\n        name: intl.formatMessage(messages.vectorNamesV3A),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    CVSS: {\n        name: intl.formatMessage(messages.vectorNamesCvssVersion),\n        values: {\n            '3.0': 3.0\n        }\n    }\n};\n\nexport const V2names = {\n    AV: {\n        name: intl.formatMessage(messages.vectorNamesV2AV),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNetwork),\n            A: intl.formatMessage(messages.vectorValuesAdjacentNetwork),\n            L: intl.formatMessage(messages.vectorValuesLocal)\n        }\n    },\n    AC: {\n        name: intl.formatMessage(messages.vectorNamesV2AC),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    Au: {\n        name: intl.formatMessage(messages.vectorNamesV2AU),\n        values: {\n            M: intl.formatMessage(messages.vectorValuesMultiple),\n            S: intl.formatMessage(messages.vectorValuesSingle),\n            N: intl.formatMessage(messages.vectorValuesNone)\n        }\n    },\n    C: {\n        name: intl.formatMessage(messages.vectorNamesV2C),\n        values: {\n            C: intl.formatMessage(messages.vectorValuesComplete),\n            P: intl.formatMessage(messages.vectorValuesPartial),\n            N: intl.formatMessage(messages.vectorValuesNone)\n        }\n    },\n    I: {\n        name: intl.formatMessage(messages.vectorNamesV2I),\n        values: {\n            C: intl.formatMessage(messages.vectorValuesComplete),\n            P: intl.formatMessage(messages.vectorValuesPartial),\n            N: intl.formatMessage(messages.vectorValuesNone)\n        }\n    },\n    A: {\n        name: intl.formatMessage(messages.vectorNamesV2A),\n        values: {\n            C: intl.formatMessage(messages.vectorValuesComplete),\n            P: intl.formatMessage(messages.vectorValuesPartial),\n            N: intl.formatMessage(messages.vectorValuesNone)\n        }\n    }\n};\n","import { Popover, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { Table, TableBody, TableHeader, TableVariant } from '@patternfly/react-table';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { CVEPageContext } from '../../SmartComponents/CVEDetailsPage/CVEDetailsPage';\nimport WithLoader from '../WithLoader/WithLoader';\nimport './CvssVector.scss';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport { V3names, V2names } from './vectorNames';\n\nexport const parseVector = (vector, namesMapping) => {\n    let res = {};\n    vector &&\n        vector.split('/').forEach(curr => {\n            let [key, val] = curr.split(':');\n            const name = namesMapping[key] && namesMapping[key].name;\n            const value = (namesMapping[key] && namesMapping[key].values[val]) || 'N/A';\n            if (name) {\n                res[name] = value;\n            }\n        });\n    return res;\n};\n\nconst CvssVector = props => {\n    const { cvss2_metrics: CVSS2Vector, cvss3_metrics: CVSS3Vector, intl } = props;\n    const cvssVer = (CVSS3Vector && 'CVSS 3.0') || (CVSS2Vector && 'CVSS 2.0') || 'CVSS 3.0';\n    const cvssVector = CVSS3Vector || CVSS2Vector;\n    const namesMapping = (CVSS3Vector && V3names) || (CVSS2Vector && V2names);\n    const parsedVector = parseVector(cvssVector, namesMapping);\n    const notAvailable = 'N/A';\n    // eslint-disable-next-line no-unused-vars\n    const { cvssVersion, ...values } = parsedVector;\n\n    return (\n        <CVEPageContext.Consumer>\n            {context => (\n                <TextContent>\n                    <WithLoader loading={context.isLoading}>\n                        <Popover\n                            position=\"bottom\"\n                            maxWidth={'100%'}\n                            enableFlip\n                            headerContent={ `${cvssVer} ${intl.formatMessage(messages.cvssVectorPopoverTitle)}` }\n                            bodyContent={\n                                cvssVector ?\n                                    (\n                                        <Table\n                                            aria-label={'Metric breakdown'}\n                                            variant={TableVariant.compact}\n                                            gridBreakPoint={null}\n                                            cells={\n                                                [intl.formatMessage(messages.cvssVectorMetric),\n                                                    intl.formatMessage(messages.cvssVectorValue)]\n                                            }\n                                            rows={Object.entries(values)}\n                                        >\n                                            <TableHeader />\n                                            <TableBody />\n                                        </Table>\n                                    ) : (notAvailable)\n                            }\n                        >\n                            <React.Fragment>\n                                <Text component={TextVariants.h6} style={{ display: 'inline-block', cursor: 'pointer' }}>\n                                    {cvssVer} {intl.formatMessage(messages.cvssVectorVectorString)}\n                                    <OutlinedQuestionCircleIcon color={'var(--pf-global--secondary-color--100)'}/>\n                                </Text>\n                                <br />\n                            </React.Fragment>\n                        </Popover>\n                    </WithLoader>\n\n                    <WithLoader loading={context.isLoading}>{cvssVector || notAvailable} </WithLoader>\n                </TextContent>\n            )}\n        </CVEPageContext.Consumer>\n    );\n};\n\nCvssVector.propTypes = {\n    cvss2_metrics: propTypes.string,\n    cvss3_metrics: propTypes.string,\n    intl: propTypes.any\n};\n\nexport default injectIntl(CvssVector);\n","import { Popover, Stack, StackItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { parseCvssScore } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { getImpactDetails } from '../../../Helpers/MiscHelper';\nimport CVEInfoBox from '../CVEInfoBox/CVEInfoBox';\nimport CvssVector from '../CvssVector/CvssVector';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst learnMorePopover = (cveDetails, intl) => {\n    return (\n        <Popover\n            position=\"bottom\"\n            enableFlip\n            headerContent={<div>{cveDetails.title + intl.formatMessage(messages.cvePageSeverityDetailsImpact)}</div>}\n            bodyContent={\n                <TextContent>\n                    <Text component={TextVariants.p}>{cveDetails.text}</Text>\n                </TextContent>\n            }\n            footerContent={\n                <a href=\"https://access.redhat.com/security/updates/classification/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    {intl.formatMessage(messages.cvePageSeverityDetailsLearnMoreRatings)}  <ExternalLinkAltIcon />\n                </a>\n            }\n        >\n            <a>{intl.formatMessage(messages.cvePageSeverityDetailsLearnMore)}</a>\n        </Popover>\n    );\n};\n\nconst CVEPageDetailsSeverity = props => {\n    const cveDetails = getImpactDetails(props.impact);\n    const cvssVersion = (props.cvss3_score && 'CVSS 3.0') || (props.cvss2_score && 'CVSS 2.0') || 'CVSS 3.0';\n    return (\n        <Stack hasGutter>\n            <StackItem>\n                <CVEInfoBox\n                    titleColor={cveDetails.color}\n                    titleContent={cveDetails.titleContent}\n                    descriptionTitle={cveDetails.title + props.intl.formatMessage(messages.cvePageSeverityDetailsImpact)}\n                    descriptionContent={learnMorePopover(cveDetails, props.intl)}\n                />\n            </StackItem>\n            <StackItem>\n                <CVEInfoBox\n                    titleContent={\n                        <TextContent>\n                            <Text component={TextVariants.h3}>{parseCvssScore(props.cvss2_score, props.cvss3_score)}</Text>\n                        </TextContent>\n                    }\n                    descriptionTitle={cvssVersion + props.intl.formatMessage(messages.cvePageSeverityDetailsBaseScore)}\n                />\n            </StackItem>\n\n            <StackItem>\n                <CvssVector cvss2_metrics={props.cvss2_metrics} cvss3_metrics={props.cvss3_metrics} />\n            </StackItem>\n        </Stack>\n    );\n};\n\nCVEPageDetailsSeverity.propTypes = {\n    impact: propTypes.string,\n    cvss2_score: propTypes.any,\n    cvss3_score: propTypes.any,\n    cvss2_metrics: propTypes.any,\n    cvss3_metrics: propTypes.any,\n    intl: propTypes.any\n};\n\nCVEPageDetailsSeverity.defaultProps = {\n    impact: 'Unknown',\n    cvss2_score: undefined,\n    cvss3_score: undefined,\n    cvss2_metrics: undefined,\n    cvss3_metrics: undefined\n};\n\nexport default injectIntl(CVEPageDetailsSeverity);\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Stack,\n    StackItem,\n    Text,\n    TextContent,\n    TextVariants,\n    Tooltip,\n    SplitItem,\n    Split,\n    Grid,\n    GridItem,\n    Card,\n    CardBody,\n    Button\n} from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\nimport { Reboot } from '@redhat-cloud-services/frontend-components/components/Reboot';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/js/icons/check-circle-icon';\nimport OutlinedQuestionCircleIcon from '@patternfly/react-icons/dist/js/icons/outlined-question-circle-icon';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\nimport { injectIntl } from 'react-intl';\nimport Label from '../Snippets/Label';\nimport messages from '../../../Messages';\nimport { RISK_OF_CHANGE_TOOLTIP, RISK_OF_CHANGE_LABEL, RH_KB_URL, CVES_PATH } from '../../../Helpers/constants';\nimport { CSAwIcon } from '../../PresentationalComponents/CSAwIcon/CSAwIcon';\nimport CSAwRuleSummary from './CSAwRuleSummary';\nimport './CSAwRuleBox.scss';\n\nconst CSAwRuleBox = ({ rules, synopsis, changeExposedSystemsParameters,  intl }) => {\n    const [numberOfCards, setNumberOfCards] = useState(2);\n    const ruleCards = rules.length > numberOfCards && rules.slice(0, numberOfCards) || rules;\n\n    const handleExposedSystemFilter = (ruleId) => {\n        const params = { security_rule: ruleId };\n        changeExposedSystemsParameters(params);\n    };\n\n    return <Fragment>\n        {ruleCards && ruleCards.map(rule => (\n            <Card className=\"card-box-shadow\" key={rule.rule_id}>\n                <CardBody>\n                    <Grid hasGutter>\n                        <GridItem span={12}>\n                            <TextContent className={'icon-with-label'}>\n                                <Text component={TextVariants.h3}>\n                                    <Tooltip\n                                        content={intl.formatMessage(messages.rulesIconTooltip)}\n                                        trigger='mouseenter focus click'\n                                    >\n                                        <CSAwIcon />\n                                    </Tooltip>\n                                    {rule.description}\n                                </Text>\n                            </TextContent>\n                        </GridItem>\n                        <GridItem span={8}>\n                            <Stack hasGutter>\n                                <StackItem>\n                                    <CSAwRuleSummary text={rule.summary} />\n                                </StackItem>\n\n                                <StackItem>\n                                    <TextContent>\n                                        <Text component={TextVariants.h4}>{intl.formatMessage(messages.associatedCves)}</Text>\n                                        <Text component={TextVariants.p}>\n                                            {synopsis} ({intl.formatMessage(messages.current)})\n                                            {\n                                                rule.associated_cves\n                                                .filter(cve => cve !== synopsis)\n                                                .map((cve, _i) =>\n                                                    <a\n                                                        className=\"associated-cve-link\"\n                                                        key={_i}\n                                                        href={`${CVES_PATH}/${cve}`}\n                                                    >\n                                                        {cve}\n                                                    </a>\n                                                )\n                                                .reduce((prev, curr) => [prev, ', ', curr], [''])\n                                            }\n                                        </Text>\n                                    </TextContent>\n                                </StackItem>\n\n                                {\n                                    rule.kbase_node_id &&\n                                    <StackItem>\n                                        <TextContent>\n                                            <Text\n                                                className={'icon-with-label'}\n                                                component={TextVariants.p}\n                                            >\n                                                <a\n                                                    className=\"kb-link\"\n                                                    href={`${RH_KB_URL}/${rule.kbase_node_id}`}\n                                                    target=\"_blank\"\n                                                    rel=\"noopener noreferrer\"\n                                                >\n                                                    {\n                                                        intl.formatMessage(messages.knowledgebaseArticle)\n                                                    }\n                                                    <ExternalLinkAltIcon className=\"l-sm-spacer\"/>\n                                                </a>\n                                            </Text>\n                                        </TextContent>\n                                    </StackItem>\n                                }\n\n                            </Stack>\n                        </GridItem>\n                        <GridItem span={4}>\n                            <Stack hasGutter>\n                                {rule.rule_id &&\n                                    <StackItem>\n                                        <TextContent>\n                                            <Text\n                                                className={'filter-affected-systems'}\n                                                onClick={() => handleExposedSystemFilter(rule.rule_id)}\n                                            >\n                                                <Link\n                                                    key={rule.rule_id}\n                                                    to={`/cves/${synopsis}/?security_rule=${rule.rule_id}`}\n                                                >\n                                                    {intl.formatMessage(messages.filterByAffectedSystems)}\n\n                                                </Link>\n\n                                            </Text>\n                                        </TextContent>\n                                    </StackItem>\n                                }\n                                <StackItem>\n                                    <TextContent>\n                                        <Text component={TextVariants.h4}>\n                                            {intl.formatMessage(messages.remediationLabel)}\n                                        </Text>\n                                        <Split hasGutter>\n                                            <SplitItem>\n                                                <Label className=\"label\">\n                                                    {intl.formatMessage(messages.ansibleRemediation)}\n\n                                                </Label>\n                                            </SplitItem>\n                                            <SplitItem className=\"icon-with-label\" isFilled>\n                                                { !rule.playbook_count\n                                                    ? intl.formatMessage(messages.no)\n                                                    : (\n                                                        <Fragment>\n                                                            <CheckCircleIcon className=\"ansible-success\" />\n                                                            {intl.formatMessage(messages.yes)}\n                                                            <Tooltip\n                                                                content={intl.formatMessage(messages.ansibleRemediationTooltip)}\n                                                                trigger='mouseenter focus click'\n                                                            >\n                                                                <OutlinedQuestionCircleIcon\n                                                                    color={'var(--pf-global--secondary-color--100)'}\n                                                                    className=\"l-sm-spacer\"\n                                                                />\n                                                            </Tooltip>\n                                                        </Fragment>\n                                                    )\n                                                }\n                                            </SplitItem>\n                                        </Split>\n                                        <Split hasGutter className=\"pf-u-mt-md\">\n                                            <SplitItem>\n                                                <Label className=\"label\">\n                                                    {intl.formatMessage(messages.riskOfChange)}\n                                                </Label>\n                                            </SplitItem>\n                                            <SplitItem isFilled className=\"icon-with-label\">\n                                                { RISK_OF_CHANGE_LABEL[rule.change_risk] }\n\n                                                <Tooltip\n                                                    content={RISK_OF_CHANGE_TOOLTIP[rule.change_risk]}\n                                                    trigger='mouseenter focus click'\n                                                >\n                                                    <OutlinedQuestionCircleIcon\n                                                        color={'var(--pf-global--secondary-color--100)'}\n                                                        className=\"l-sm-spacer\"\n                                                    />\n                                                </Tooltip>\n\n                                                <div className=\"pf-u-mt-sm\">\n                                                    { rule.reboot_required && <strong><Reboot red /></strong> }\n                                                </div>\n                                            </SplitItem>\n                                        </Split>\n                                    </TextContent>\n                                </StackItem>\n                            </Stack>\n                        </GridItem>\n                    </Grid>\n                </CardBody>\n            </Card>\n        ))}\n        {\n            rules.length > numberOfCards && (\n                <Grid>\n                    <GridItem>\n                        <Button key=\"viewMoreRules\" variant=\"secondary\" onClick={() => setNumberOfCards(rules.length)}>\n                            {intl.formatMessage(messages.viewMoreScurityRules, { rules: (rules.length - numberOfCards) })}\n                        </Button>\n                    </GridItem>\n                </Grid>\n            )\n        }\n    </Fragment>;\n};\n\nCSAwRuleBox.defaultProps = {\n    rules: []\n};\n\nCSAwRuleBox.propTypes = {\n    intl: PropTypes.any,\n    rules: PropTypes.array,\n    synopsis: PropTypes.string,\n    changeExposedSystemsParameters: PropTypes.func\n};\n\nexport default injectIntl(CSAwRuleBox);\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { CVEPageContext } from '../../SmartComponents/CVEDetailsPage/CVEDetailsPage';\nimport CVEPageDetailsDescription from '../CVEPageDetailsDescription/CVEPageDetailsDescription';\nimport CVEPageDetailsSeverity from '../CVEPageDetailsSeverity/CVEPageDetailsSeverity';\nimport WithLoader from '../WithLoader/WithLoader';\nimport CSAwRuleBox from '../CSAwRuleBox/CSAwRuleBox';\n\nconst CVEPageDetails = props => {\n    return (\n        <CVEPageContext.Consumer>\n            {context => (\n                <Grid hasGutter>\n                    <GridItem md={8} sm={12}>\n                        <WithLoader loading={context.isLoading} variant=\"spinner\">\n                            <CVEPageDetailsDescription cveAttributes={props.data.data} />\n                        </WithLoader>\n                    </GridItem>\n\n                    <GridItem md={4} sm={12} className=\"severity-info-box\">\n                        <CVEPageDetailsSeverity\n                            impact={props.data.data.impact}\n                            cvss2_score={props.data.data.cvss2_score}\n                            cvss3_score={props.data.data.cvss3_score}\n                            cvss2_metrics={props.data.data.cvss2_metrics}\n                            cvss3_metrics={props.data.data.cvss3_metrics}\n                        />\n                    </GridItem>\n                    <CSAwRuleBox\n                        changeExposedSystemsParameters = {props.changeExposedSystemsParameters}\n                        synopsis={props.data.data.synopsis}\n                        rules={props.data.data.rules}\n                    />\n                </Grid>\n\n            )}\n        </CVEPageContext.Consumer>\n    );\n};\n\nCVEPageDetails.propTypes = {\n    data: propTypes.object,\n    changeExposedSystemsParameters: propTypes.func\n};\n\nexport default CVEPageDetails;\n","import { Dropdown, KebabToggle } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React, { useState } from 'react';\n\nconst BaseKebab = ({ dropdownItems, disabled, ...props }) => {\n    const [isOpen, setOpen] = useState(false);\n\n    function handleOnKebabToggle(kebabState) {\n        setOpen(kebabState);\n    }\n\n    function handleOnKebabSelect() {\n        setOpen(!isOpen);\n    }\n\n    return (\n        <div>\n            <Dropdown\n                onSelect={handleOnKebabSelect}\n                toggle={<KebabToggle onToggle={handleOnKebabToggle} isDisabled={disabled} />}\n                isOpen={isOpen}\n                isPlain\n                dropdownItems={dropdownItems}\n                {...props}\n            />\n        </div>\n    );\n};\n\nBaseKebab.propTypes = {\n    dropdownItems: propTypes.array,\n    disabled: propTypes.bool\n};\n\nexport default BaseKebab;\n","import { DropdownItem } from '@patternfly/react-core';\nimport React from 'react';\nimport messages from '../../../Messages';\nimport { FormattedMessage } from 'react-intl';\n\nexport const kebabItemDownloadJSON = (downloadReport, { ...props }) => (\n    <DropdownItem key=\"json\" component=\"button\" onClick={() => downloadReport('json')} {...props}>\n        <FormattedMessage {...messages.kebabExportAsJson} />\n    </DropdownItem>\n);\n\nexport const kebabItemDownloadCSV = (downloadReport, { ...props }) => (\n    <DropdownItem key=\"csv\" component=\"button\" onClick={() => downloadReport('csv')} {...props}>\n        <FormattedMessage {...messages.kebabExportAsCsv} />\n    </DropdownItem>\n);\n\nexport const kebabItemEditBusinessRisk = (showBusinessRiskModal, cves, { ...props }) => (\n    <DropdownItem key=\"editBusinessRisk\" component=\"button\" onClick={() => showBusinessRiskModal(cves)} {...props}>\n        <FormattedMessage {...messages.kebabEditBusinessRisk} />\n    </DropdownItem>\n);\n\nexport const kebabItemEditStatus = (showStatusModal, cves, inventoryIds,  { ...props }) => (\n    <DropdownItem key=\"editStatus\" component=\"button\" onClick={() => showStatusModal(cves, inventoryIds)} {...props}>\n        <FormattedMessage {...messages.kebabEditStatus} />\n    </DropdownItem>\n);\n\nexport const kebabItemToggleCvesDescription = (toggleCveDescription, isExpanded, { ...props }) => (\n    <DropdownItem key=\"toggleCveDescription\" component=\"button\" onClick={() => toggleCveDescription()} {...props}>\n        {isExpanded ? <FormattedMessage {...messages.kebabCollapseCves} /> : <FormattedMessage {...messages.kebabExpandCves} /> }\n    </DropdownItem>\n);\n\nexport const kebabItemExcludeSystemAnalysis = (doOptOut, isOptOut,  { ...props }) => (\n    <DropdownItem key=\"do_opt_out_analysis\" component=\"button\" onClick={() => doOptOut()} {...props}>\n        {isOptOut ?\n            <FormattedMessage {...messages.kebabResumeAnalysis} /> :\n            <FormattedMessage {...messages.kebabExcludeVulnerabilityAnalysis} />}\n    </DropdownItem>\n);\n\nexport const kebabItemExcludeSystem = (doOptOut, isOptOut,  { ...props }) => (\n    <DropdownItem key=\"do_opt_out\" component=\"button\" onClick={() => doOptOut()} {...props}>\n        {isOptOut ?\n            <FormattedMessage {...messages.kebabResumeAnalysis} /> :\n            <FormattedMessage {...messages.kebabExcludeAnalysis} />}\n    </DropdownItem>\n);\n\nexport const kebabItemToggleExcludeSystemDisplay = (handleOptOut, isOptedOut,  { ...props }) => (\n    <DropdownItem key=\"toggle_opt_out\" component=\"button\" onClick={() => handleOptOut()} {...props}>\n        {isOptedOut ?\n            <FormattedMessage {...messages.kebabHideExcludedSystems} />  :\n            <FormattedMessage {...messages.kebabShowExcludedSystems} />}\n    </DropdownItem>\n);\n","import propTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport { withRouter } from 'react-router-dom';\nimport * as reactRouterDom from 'react-router-dom';\nimport * as ReactRedux from 'react-redux';\nimport { useCreateUrlParams, updateRef, createSortBy, handleSortColumn } from '../../../Helpers/MiscHelper';\nimport {\n    Table as PfTable,\n    TableBody,\n    TableHeader,\n    TableGridBreakpoint,\n    cellWidth,\n    TableVariant,\n    sortable,\n    expandable,\n    SortByDirection\n} from '@patternfly/react-table';\nimport { useDispatch, useSelector } from 'react-redux';\nimport React, { useEffect, useState, useMemo } from 'react';\nimport CvePairStatusModal from '../Modals/CvePairStatusModal';\nimport ReducerRegistry from '../../../Utilities/ReducerRegistry';\nimport { middlewareListener } from '../../../Utilities/ReducerRegistry';\nimport selectAllCheckbox from '../../../Helpers/selectAllCheckboxHelper';\nimport { Text, TextContent, TextVariants, Stack, StackItem } from '@patternfly/react-core';\nimport { systemExposedTableRowActions, createExposedSystemsTable } from '../../../Helpers/CVEHelper';\nimport { inventoryEntitiesReducer } from '../../../Store/Reducers/InventoryEntitiesReducer';\nimport DownloadReport from '../../../Helpers/DownloadReport';\nimport Remediation from '../Remediation/Remediation';\nimport searchFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/SearchFilter';\nimport securityRuleFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/SecurityRuleFilter';\nimport statusFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/StatusFilter';\nimport { exportConfig, buildActiveFilters, removeFilters } from '../../../Helpers/TableToolbarHelper';\nimport {\n    selectMultipleEntities,\n    fetchAffectedSystemsByCVE,\n    fetchCveDetails,\n    expandRow,\n    changeExposedSystemsParameters,\n    clearCveStore,\n    fetchAffectedSystemsIdsByCve,\n    clearInventoryStore\n} from '../../../Store/Actions/Actions';\nimport {\n    SYSTEMS_EXPOSED_HEADER,\n    SYSTEMS_EXPOSED_ALLOWED_PARAMS,\n    SYSTEMS_EXPOSED_SORTING_HEADER\n} from '../../../Helpers/constants';\n\nconst SystemsExposedTable = (props) => {\n    const [InventoryTable, setInventoryTable] = useState(()=> () => <div>Loading...</div>);\n    const [StatusModal, setStatusModal] = useState(() => () => null);\n    const [selectedHosts, setSelectedHosts] = useState(undefined);\n    const [urlParamsAllowed, setUrlParamsAllowed] = useState(false);\n\n    const inventory = React.createRef();\n    const dispatch = useDispatch();\n    const [createUrlParams, urlParameters] = useCreateUrlParams(SYSTEMS_EXPOSED_ALLOWED_PARAMS);\n\n    const affectedSystems = useSelector(\n        ({ CVEDetailsPageStore }) => CVEDetailsPageStore.affectedSystemsByCVE\n    );\n\n    const isLoading = useSelector(\n        ({ CVEDetailsPageStore }) => CVEDetailsPageStore.affectedSystemsByCVE.isLoading\n    );\n\n    const parameters = useSelector(\n        ({ CVEDetailsPageStore }) => CVEDetailsPageStore.parameters\n    );\n\n    const metadata = useSelector(\n        ({ CVEDetailsPageStore }) => CVEDetailsPageStore.affectedSystemsByCVE.payload.meta\n    );\n\n    const items = useMemo(() => createExposedSystemsTable({ ...affectedSystems, ...props.cve }), [affectedSystems]);\n\n    const apply = (config) => dispatch(changeExposedSystemsParameters(config));\n\n    const inventoryRefresh = ({ page, per_page: pageSize, sort }) => {\n        if (inventory.current && (metadata.page !== page || metadata.page_size !== pageSize)) {\n            apply({ page, page_size: pageSize, sort });\n        }\n\n        if (metadata && metadata.total_items <= pageSize && inventory.current) {\n            inventory.current.onRefreshData({ page, page_size: pageSize, sort });\n        }\n    };\n\n    const handleSelect = (isChecked, payload) => {\n        const selectedHosts = payload ? payload : [];\n        setSelectedHosts(selectedHosts);\n    };\n\n    const onSelect = (payload) => {\n        const newSelected = payload.data.selected ? [payload.data.id, ...(selectedHosts || [])]\n            : selectedHosts && selectedHosts.filter(item => item !== payload.data.id);\n\n        handleSelect(false, newSelected);\n    };\n\n    middlewareListener.addNew({\n        on: 'SELECT_ENTITY',\n        callback: payload => onSelect(payload)\n    });\n\n    useEffect(() => {\n        if (!inventory.current) {\n            apply(urlParameters);\n        }\n        else {\n            dispatch(fetchAffectedSystemsByCVE(props.cve, { ...parameters }));\n            urlParamsAllowed\n                && createUrlParams({ ...parameters })\n                || setUrlParamsAllowed(true);\n        }\n    }, [parameters]);\n\n    useEffect(()=>{\n        if (selectedHosts) {\n            dispatch(selectMultipleEntities(selectedHosts));\n        }\n    }, [selectedHosts, dispatch]);\n\n    const loadInventory = async () => {\n        const { inventoryConnector, mergeWithEntities, mergeWithDetail } = await insights.loadInventory({\n            ReactRedux,\n            react: React,\n            reactRouterDom,\n            pfReactTable: {\n                Table: PfTable,\n                TableBody,\n                TableHeader,\n                TableGridBreakpoint,\n                cellWidth,\n                TableVariant,\n                sortable,\n                expandable,\n                SortByDirection\n            }\n        });\n        ReducerRegistry.register({\n            ...mergeWithEntities(inventoryEntitiesReducer(SYSTEMS_EXPOSED_HEADER)),\n            ...mergeWithDetail()\n        });\n\n        const { InventoryTable } = inventoryConnector(ReducerRegistry.getStore());\n        setInventoryTable(() => InventoryTable);\n    };\n\n    useEffect(() => {\n        loadInventory();\n        return () => {\n            dispatch(clearCveStore());\n            dispatch(clearInventoryStore());\n        };\n    }, []);\n\n    const downloadReport = format => {\n        let params = [props.cve, { ...parameters }];\n        DownloadReport.exec(fetchAffectedSystemsByCVE, params, format, 'systems-exposed');\n    };\n\n    const showStatusModal = (cves, inventories) => {\n        setStatusModal(\n            () => () =>\n                <CvePairStatusModal\n                    cves={cves}\n                    updateRef={() => {\n                        updateRef(items.meta, apply);\n                        fetchCveDetails(props.cve);\n                    }}\n                    inventories={ inventories }\n                    type={'systemsExposed'}\n                />\n\n        );\n    };\n\n    const getSelectedSystemsLabel = () => {\n        // we only need display name when we have 1 system selected\n        if (selectedHosts.length === 1) {\n            const { id, display_name: displayName } = items.data.find(({ id }) => id === selectedHosts[0]);\n            return [{ id, displayName }];\n        }\n        else if (selectedHosts.length > 1) {\n            return selectedHosts.map(item => ({ id: item }));\n        }\n\n        return [];\n    };\n\n    const kebabOptions = [\n        (!isLoading && (<Remediation systems={selectedHosts} cves={props.cve} />) || ''),\n        {\n            label: props.intl.formatMessage(messages.editStatus),\n            onClick: () => showStatusModal(\n                [props.cveStatusDetails],\n                getSelectedSystemsLabel()\n            ),\n            props: { isDisabled: !selectedHosts || selectedHosts.length === 0 }\n        }\n    ];\n\n    const selectOptions  = useMemo(() => selectAllCheckbox({\n        selectedItems: selectedHosts || [],\n        selectorHandler: handleSelect,\n        items: items.data && items || { data: [], meta: { total_items: 0 } },\n        fetchResource: ops => fetchAffectedSystemsIdsByCve(props.cve, { ...parameters, ...ops })\n    }), [items, selectedHosts, parameters]);\n\n    const sortBy = () =>\n        createSortBy(\n            SYSTEMS_EXPOSED_SORTING_HEADER,\n            urlParameters.sort\n        );\n\n    const onSort = (event, index, direction) =>\n        handleSortColumn(\n            index,\n            direction,\n            SYSTEMS_EXPOSED_SORTING_HEADER,\n            urlParameters.sort,\n            inventoryRefresh\n        );\n\n    return (\n        <React.Fragment>\n            <Stack hasGutter>\n                <StackItem>\n                    <TextContent>\n                        <Text component={TextVariants.h2}>\n                            {props.intl.formatMessage(messages.systemsExposedTableHeader)}\n                        </Text>\n                    </TextContent>\n                </StackItem>\n                <StackItem>\n                    <InventoryTable\n                        tableProps={{\n                            canSelectAll: false,\n                            onSort: (items.data.length > 0) && onSort,\n                            sortBy: (items.data.length > 0) && sortBy(),\n                            actionResolver: (rowData, rowIndex) =>\n                                systemExposedTableRowActions(showStatusModal, props.cveStatusDetails, rowIndex.rowIndex)\n                        }}\n                        items={items.data}\n                        key={'inventory'}\n                        ref={inventory}\n                        expandable='true'\n                        onRefresh={inventoryRefresh}\n                        page={parameters.page}\n                        total={metadata.total_items}\n                        isLoaded = {!isLoading}\n                        perPage={parameters.page_size }\n                        hasCheckbox={items && items.length !== 0}\n                        showActions={items && items.length !== 0}\n                        exportConfig={{\n                            isDisabled: items.meta.total_items === 0 && (!selectedHosts || selectedHosts.length === 0),\n                            ...exportConfig({ downloadReport })\n                        }}\n                        onExpandClick={(_e, _i, isOpen, { id }) => dispatch(expandRow(id, isOpen))}\n                        actionsConfig={{\n                            actions: kebabOptions,\n                            kebabToggleProps: { isDisabled: !selectedHosts || selectedHosts.length === 0 }\n                        }}\n                        activeFiltersConfig={{\n                            filters: buildActiveFilters({ ...parameters }, props.filterRuleValues),\n                            onDelete: (e, i) => removeFilters(i, apply)\n                        }}\n                        bulkSelect ={ selectOptions && {\n                            count: selectedHosts && selectedHosts.length,\n                            items: selectOptions.items,\n                            isDisabled: items.meta.total_items === 0 && (!selectedHosts || selectedHosts.length === 0),\n                            checked: Boolean(selectedHosts && selectedHosts.length),\n                            onSelect: () => selectOptions.handleOnCheckboxChange()\n                        }}\n                        filterConfig={{\n                            items: [\n                                searchFilter(\n                                    messages.systemsSearchName, messages.searchFilterByName,\n                                    parameters.filter, apply\n                                ),\n                                securityRuleFilter(apply, parameters, props.filterRuleValues),\n                                statusFilter(apply, parameters)\n                            ]\n                        }}\n                    >\n                        {StatusModal && <StatusModal />}\n                    </InventoryTable>\n                </StackItem>\n            </Stack>\n        </React.Fragment>\n    );\n};\n\nSystemsExposedTable.propTypes = {\n    intl: propTypes.object,\n    cve: propTypes.string,\n    cveStatusDetails: propTypes.object,\n    filterRuleValues: propTypes.array\n};\n\nexport default injectIntl(\n    withRouter(\n        SystemsExposedTable\n    )\n);\n","import { DropdownPosition, Page } from '@patternfly/react-core';\nimport { InvalidObject, Main } from '@redhat-cloud-services/frontend-components';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {\n    fetchAffectedSystemsByCVE,\n    fetchCveDetails,\n    handleCveDetailsError,\n    setHeader,\n    changeExposedSystemsParameters\n} from '../../../Store/Actions/Actions';\nimport { sCveDetailsPage } from '../../../Store/Selectors/CVESelectors';\nimport { PATHS } from '../../../Helpers/constants';\nimport CVEPageDetails from '../../PresentationalComponents/CVEPageDetails/CVEPageDetails';\nimport BaseKebab from '../../PresentationalComponents/DownloadReportKebab/BaseKebab';\nimport { kebabItemEditBusinessRisk, kebabItemEditStatus } from '../../PresentationalComponents/DownloadReportKebab/KebabItems';\nimport BusinessRiskModal from '../Modals/BusinessRiskModal';\nimport CveStatusModal from '../Modals/CveStatusModal';\nimport SystemsExposedTable from '../SystemsExposedTable/SystemsExposedTable';\nimport VulnerabilityHeader from '../VulnerabilityHeader/VulnerabilityHeader';\n\nexport const CVEPageContext = React.createContext({ isLoading: true });\n\nclass CVEDetailsPage extends React.Component {\n    static propTypes = {\n        match: propTypes.object,\n        cveDetails: propTypes.object,\n        fetchCveDetails: propTypes.func,\n        setHeader: propTypes.func,\n        handleCveDetailsError: propTypes.func,\n        fetchAffectedSystems: propTypes.func,\n        changeExposedSystemsParameters: propTypes.func\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = { cveName: this.props.match.params.cve, BusinessRiskModal: () => null, StatusModal: () => null };\n    }\n\n    componentDidMount() {\n        const { fetchCveDetails, handleCveDetailsError, setHeader } = this.props;\n\n        setHeader({\n            breadcrumbs: [\n                { title: PATHS.home.title, to: PATHS.home.to },\n                { title: PATHS.cvesPage.title, to: PATHS.cvesPage.to },\n                { title: this.state.cveName, isActive: true }\n            ]\n        });\n\n        fetchCveDetails(this.state.cveName).catch(() => {\n            handleCveDetailsError();\n        });\n    }\n\n    showBusinessRiskModal = cves => {\n        this.setState({\n            BusinessRiskModal: () => (\n                <BusinessRiskModal open cves={cves} updateRef={() => this.props.fetchCveDetails(this.state.cveName)} />\n            )\n        });\n    };\n\n    showStatusModal = cves => {\n        this.setState({\n            StatusModal: () => (\n                <CveStatusModal\n                    cves={cves}\n                    updateRef={() => {\n                        this.props.fetchCveDetails(this.state.cveName);\n                        this.props.fetchAffectedSystems(this.state.cveName);\n                    }}\n                />\n            )\n        });\n    };\n\n    render() {\n        const { showStatusModal } = this;\n        const { cveDetails, fetchAffectedSystems, changeExposedSystemsParameters } = this.props;\n        const { error, data } = cveDetails;\n        const { cveName, BusinessRiskModal, StatusModal } = this.state;\n        const cveStatusDetails = {\n            id: cveName,\n            status_id: cveDetails.data.status_id,\n            justification: cveDetails.data.status_justification\n        };\n        const kebabItems = [\n            kebabItemEditBusinessRisk(this.showBusinessRiskModal, [\n                {\n                    business_risk_id: cveDetails.data.business_risk_id,\n                    id: cveName,\n                    justification: cveDetails.data.business_risk_justification\n                }\n            ]),\n            kebabItemEditStatus(this.showStatusModal, [cveStatusDetails])\n        ];\n        const { rules } = data;\n        const filterRuleValues = rules && rules.map(\n            ({ rule_id: ruleId, description }) => ({ value: ruleId, label: description })\n        );\n        if (!error) {\n            return (\n                <Page>\n                    <CVEPageContext.Provider value={cveDetails && { isLoading: cveDetails.isLoading }}>\n                        <VulnerabilityHeader\n                            title={\n                                <span style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                    {cveName}\n                                    <BaseKebab dropdownItems={kebabItems} position={DropdownPosition.right}></BaseKebab>\n                                </span>\n                            }\n                        >\n                            <CVEPageDetails changeExposedSystemsParameters={changeExposedSystemsParameters} data={cveDetails} />\n                            <StatusModal />\n                            <BusinessRiskModal />\n                        </VulnerabilityHeader>\n                        <Main>\n                            <SystemsExposedTable\n                                cve={cveName}\n                                filterRuleValues={filterRuleValues}\n                                cveStatusDetails={cveStatusDetails}\n                                fetchData={fetchAffectedSystems}\n                                methods={{ showStatusModal }}\n                            />\n                        </Main>\n                    </CVEPageContext.Provider>\n                </Page>\n            );\n        } else {\n            return (\n                <React.Fragment>\n                    <VulnerabilityHeader title={cveName}/>\n                    <InvalidObject />\n                </React.Fragment>\n            );\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        cveDetails: sCveDetailsPage(state)\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchCveDetails: cveName => dispatch(fetchCveDetails(cveName)),\n        changeExposedSystemsParameters: params => dispatch(changeExposedSystemsParameters(params)),\n        setHeader: header => dispatch(setHeader(header)),\n        handleCveDetailsError: () => dispatch(handleCveDetailsError()),\n        fetchAffectedSystems: (cve, options) => dispatch(fetchAffectedSystemsByCVE(cve, options))\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(CVEDetailsPage)\n);\n","// doT.js\n// 2011-2014, Laura Doktorova, https://github.com/olado/doT\n// Licensed under the MIT license.\n\n(function () {\n\t\"use strict\";\n\n\tvar doT = {\n\t\tname: \"doT\",\n\t\tversion: \"1.1.1\",\n\t\ttemplateSettings: {\n\t\t\tevaluate:    /\\{\\{([\\s\\S]+?(\\}?)+)\\}\\}/g,\n\t\t\tinterpolate: /\\{\\{=([\\s\\S]+?)\\}\\}/g,\n\t\t\tencode:      /\\{\\{!([\\s\\S]+?)\\}\\}/g,\n\t\t\tuse:         /\\{\\{#([\\s\\S]+?)\\}\\}/g,\n\t\t\tuseParams:   /(^|[^\\w$])def(?:\\.|\\[[\\'\\\"])([\\w$\\.]+)(?:[\\'\\\"]\\])?\\s*\\:\\s*([\\w$\\.]+|\\\"[^\\\"]+\\\"|\\'[^\\']+\\'|\\{[^\\}]+\\})/g,\n\t\t\tdefine:      /\\{\\{##\\s*([\\w\\.$]+)\\s*(\\:|=)([\\s\\S]+?)#\\}\\}/g,\n\t\t\tdefineParams:/^\\s*([\\w$]+):([\\s\\S]+)/,\n\t\t\tconditional: /\\{\\{\\?(\\?)?\\s*([\\s\\S]*?)\\s*\\}\\}/g,\n\t\t\titerate:     /\\{\\{~\\s*(?:\\}\\}|([\\s\\S]+?)\\s*\\:\\s*([\\w$]+)\\s*(?:\\:\\s*([\\w$]+))?\\s*\\}\\})/g,\n\t\t\tvarname:\t\"it\",\n\t\t\tstrip:\t\ttrue,\n\t\t\tappend:\t\ttrue,\n\t\t\tselfcontained: false,\n\t\t\tdoNotSkipEncoded: false\n\t\t},\n\t\ttemplate: undefined, //fn, compile template\n\t\tcompile:  undefined, //fn, for express\n\t\tlog: true\n\t}, _globals;\n\n\tdoT.encodeHTMLSource = function(doNotSkipEncoded) {\n\t\tvar encodeHTMLRules = { \"&\": \"&#38;\", \"<\": \"&#60;\", \">\": \"&#62;\", '\"': \"&#34;\", \"'\": \"&#39;\", \"/\": \"&#47;\" },\n\t\t\tmatchHTML = doNotSkipEncoded ? /[&<>\"'\\/]/g : /&(?!#?\\w+;)|<|>|\"|'|\\//g;\n\t\treturn function(code) {\n\t\t\treturn code ? code.toString().replace(matchHTML, function(m) {return encodeHTMLRules[m] || m;}) : \"\";\n\t\t};\n\t};\n\n\t_globals = (function(){ return this || (0,eval)(\"this\"); }());\n\n\t/* istanbul ignore else */\n\tif (typeof module !== \"undefined\" && module.exports) {\n\t\tmodule.exports = doT;\n\t} else if (typeof define === \"function\" && define.amd) {\n\t\tdefine(function(){return doT;});\n\t} else {\n\t\t_globals.doT = doT;\n\t}\n\n\tvar startend = {\n\t\tappend: { start: \"'+(\",      end: \")+'\",      startencode: \"'+encodeHTML(\" },\n\t\tsplit:  { start: \"';out+=(\", end: \");out+='\", startencode: \"';out+=encodeHTML(\" }\n\t}, skip = /$^/;\n\n\tfunction resolveDefs(c, block, def) {\n\t\treturn ((typeof block === \"string\") ? block : block.toString())\n\t\t.replace(c.define || skip, function(m, code, assign, value) {\n\t\t\tif (code.indexOf(\"def.\") === 0) {\n\t\t\t\tcode = code.substring(4);\n\t\t\t}\n\t\t\tif (!(code in def)) {\n\t\t\t\tif (assign === \":\") {\n\t\t\t\t\tif (c.defineParams) value.replace(c.defineParams, function(m, param, v) {\n\t\t\t\t\t\tdef[code] = {arg: param, text: v};\n\t\t\t\t\t});\n\t\t\t\t\tif (!(code in def)) def[code]= value;\n\t\t\t\t} else {\n\t\t\t\t\tnew Function(\"def\", \"def['\"+code+\"']=\" + value)(def);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn \"\";\n\t\t})\n\t\t.replace(c.use || skip, function(m, code) {\n\t\t\tif (c.useParams) code = code.replace(c.useParams, function(m, s, d, param) {\n\t\t\t\tif (def[d] && def[d].arg && param) {\n\t\t\t\t\tvar rw = (d+\":\"+param).replace(/'|\\\\/g, \"_\");\n\t\t\t\t\tdef.__exp = def.__exp || {};\n\t\t\t\t\tdef.__exp[rw] = def[d].text.replace(new RegExp(\"(^|[^\\\\w$])\" + def[d].arg + \"([^\\\\w$])\", \"g\"), \"$1\" + param + \"$2\");\n\t\t\t\t\treturn s + \"def.__exp['\"+rw+\"']\";\n\t\t\t\t}\n\t\t\t});\n\t\t\tvar v = new Function(\"def\", \"return \" + code)(def);\n\t\t\treturn v ? resolveDefs(c, v, def) : v;\n\t\t});\n\t}\n\n\tfunction unescape(code) {\n\t\treturn code.replace(/\\\\('|\\\\)/g, \"$1\").replace(/[\\r\\t\\n]/g, \" \");\n\t}\n\n\tdoT.template = function(tmpl, c, def) {\n\t\tc = c || doT.templateSettings;\n\t\tvar cse = c.append ? startend.append : startend.split, needhtmlencode, sid = 0, indv,\n\t\t\tstr  = (c.use || c.define) ? resolveDefs(c, tmpl, def || {}) : tmpl;\n\n\t\tstr = (\"var out='\" + (c.strip ? str.replace(/(^|\\r|\\n)\\t* +| +\\t*(\\r|\\n|$)/g,\" \")\n\t\t\t\t\t.replace(/\\r|\\n|\\t|\\/\\*[\\s\\S]*?\\*\\//g,\"\"): str)\n\t\t\t.replace(/'|\\\\/g, \"\\\\$&\")\n\t\t\t.replace(c.interpolate || skip, function(m, code) {\n\t\t\t\treturn cse.start + unescape(code) + cse.end;\n\t\t\t})\n\t\t\t.replace(c.encode || skip, function(m, code) {\n\t\t\t\tneedhtmlencode = true;\n\t\t\t\treturn cse.startencode + unescape(code) + cse.end;\n\t\t\t})\n\t\t\t.replace(c.conditional || skip, function(m, elsecase, code) {\n\t\t\t\treturn elsecase ?\n\t\t\t\t\t(code ? \"';}else if(\" + unescape(code) + \"){out+='\" : \"';}else{out+='\") :\n\t\t\t\t\t(code ? \"';if(\" + unescape(code) + \"){out+='\" : \"';}out+='\");\n\t\t\t})\n\t\t\t.replace(c.iterate || skip, function(m, iterate, vname, iname) {\n\t\t\t\tif (!iterate) return \"';} } out+='\";\n\t\t\t\tsid+=1; indv=iname || \"i\"+sid; iterate=unescape(iterate);\n\t\t\t\treturn \"';var arr\"+sid+\"=\"+iterate+\";if(arr\"+sid+\"){var \"+vname+\",\"+indv+\"=-1,l\"+sid+\"=arr\"+sid+\".length-1;while(\"+indv+\"<l\"+sid+\"){\"\n\t\t\t\t\t+vname+\"=arr\"+sid+\"[\"+indv+\"+=1];out+='\";\n\t\t\t})\n\t\t\t.replace(c.evaluate || skip, function(m, code) {\n\t\t\t\treturn \"';\" + unescape(code) + \"out+='\";\n\t\t\t})\n\t\t\t+ \"';return out;\")\n\t\t\t.replace(/\\n/g, \"\\\\n\").replace(/\\t/g, '\\\\t').replace(/\\r/g, \"\\\\r\")\n\t\t\t.replace(/(\\s|;|\\}|^|\\{)out\\+='';/g, '$1').replace(/\\+''/g, \"\");\n\t\t\t//.replace(/(\\s|;|\\}|^|\\{)out\\+=''\\+/g,'$1out+=');\n\n\t\tif (needhtmlencode) {\n\t\t\tif (!c.selfcontained && _globals && !_globals._encodeHTML) _globals._encodeHTML = doT.encodeHTMLSource(c.doNotSkipEncoded);\n\t\t\tstr = \"var encodeHTML = typeof _encodeHTML !== 'undefined' ? _encodeHTML : (\"\n\t\t\t\t+ doT.encodeHTMLSource.toString() + \"(\" + (c.doNotSkipEncoded || '') + \"));\"\n\t\t\t\t+ str;\n\t\t}\n\t\ttry {\n\t\t\treturn new Function(c.varname, str);\n\t\t} catch (e) {\n\t\t\t/* istanbul ignore else */\n\t\t\tif (typeof console !== \"undefined\") console.log(\"Could not create a template function: \" + str);\n\t\t\tthrow e;\n\t\t}\n\t};\n\n\tdoT.compile = function(tmpl, def) {\n\t\treturn doT.template(tmpl, null, def);\n\t};\n}());\n","export const FETCH_CVE_LIST = 'FETCH_CVE_LIST';\nexport const EMPTY_CVE_LIST = 'EMPTY_CVE_LIST';\nexport const FETCH_CVE_DETAILS = 'FETCH_CVE_DETAILS';\nexport const HANDLE_CVE_DETAILS_ERROR = 'HANDLE_CVE_DETAILS_ERROR';\nexport const FETCH_SYSTEM_DETAILS = 'FETCH_SYSTEM_DETAILS';\nexport const FETCH_AFFECTED_SYSTEMS_BY_CVE = 'FETCH_AFFECTED_SYSTEMS_BY_CVE';\nexport const FETCH_SYSTEMS = 'FETCH_SYSTEMS';\nexport const SET_HEADER = 'SET_HEADER';\nexport const SYSTEM_OPT_OUT = 'SYSTEM_OPT_OUT';\nexport const FETCH_SYSTEM_CVE_LIST = 'FETCH_SYSTEM_CVE_LIST';\nexport const CHANGE_SYSTEM_CVE_STATUS = 'CHANGE_SYSTEM_CVE_STATUS';\nexport const CHANGE_EXPOSED_SYSTEMS_PARAMETERS = 'CHANGE_EXPOSED_SYSTEMS_PARAMETERS';\nexport const CHANGE_CVE_LIST_PARAMETERS = 'CHANGE_CVE_LIST_PARAMETERS';\nexport const SELECT_CVE = 'SELECT_CVE';\nexport const SELECT_SYSTEM_CVE = 'SELECT_SYSTEM_CVE';\nexport const SELECT_ENTITIES = 'SELECT_ENTITIES';\nexport const SELECT_MULTIPLE_ENTITIES = 'SELECT_MULTIPLE_ENTITIES';\nexport const EXPAND_CVE = 'EXPAND_CVE';\nexport const EXPAND_ROW = 'EXPAND_ROW'; //TODO unify it with EXPAND_CVE action\nexport const EXPAND_SYSTEM_CVE = 'EXPAND_SYSTEM_CVE';\nexport const FETCH_INSIGHTS_SYSTEM_RULES = 'FETCH_INSIGHTS_SYSTEM_RULES';\nexport const CHANGE_SYSTEMS_PARAMS = 'CHANGE_SYSTEMS_PARAMS';\nexport const CHANGE_SYSTEM_CVE_LIST_PARAMETERS = 'CHANGE_SYSTEM_CVE_LIST_PARAMETERS';\nexport const CLEAR_SYSTEMS_STORE = 'CLEAR_SYSTEMS_STORE';\nexport const CLEAR_SYSTEM_CVES_STORE = 'CLEAR_SYSTEM_CVES_STORE';\nexport const CLEAR_CVE_STORE = 'CLEAR_CVE_STORE';\nexport const CLEAR_INVENTORY_STORE = 'CLEAR_INVENTORY_STORE';\nexport const CLEAR_CVES_STORE = 'CLEAR_CVEs_STORE';\nexport const FETCH_AFFECTED_SYSTEM_IDS_BY_CVE = 'FETCH_AFFECTED_SYSTEM_IDS_BY_CVE';\nexport const FETCH_SYSTEMS_IDS = 'FETCH_SYSTEMS_IDS';\nexport const FETCH_CVE_LIST_IDS = 'FETCH_CVE_LIST_IDS';\nexport const FETCH_SYTEM_DETAILS_IDS = 'FETCH_SYTEM_DETAILS_IDS';\n","import { SecurityIcon, UnknownIcon } from '@patternfly/react-icons';\nimport { SortByDirection } from '@patternfly/react-table';\nimport findIndex from 'lodash/findIndex';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { impactColorList, impactList, CVSS_OPTIONS, PUBLIC_DATE_OPTIONS } from './constants';\nimport qs from 'query-string';\nimport { IntlProvider } from '@redhat-cloud-services/frontend-components-translations';\n\nexport const dataShape = propTypes.shape({\n    data: propTypes.oneOfType([propTypes.object, propTypes.array]),\n    meta: propTypes.object,\n    isLoading: propTypes.bool\n});\n\n/**\n * Based on the  allowedParams it will construct the arguments for the API call\n * which is defined in the vulnerabilities-client. vulnerabilities-client is written is typescript\n * so we need to define and pass every single parameter. Order in allowedParams is important\n *\n * @param {Object} apiProps\n * @param {Array} allowedParams - order should align with the params in the vulnerabilities-client\n */\nexport function constructParameters(apiProps, allowedParams) {\n    if (apiProps) {\n        Object.keys(apiProps).forEach(\n            key => (\n                apiProps[key] === undefined\n                || apiProps[key] === ''\n            )\n            && delete apiProps[key]\n        );\n\n        const params = allowedParams.map(item => apiProps[item]);\n\n        return params;\n    }\n\n    return [];\n}\n\n// TODO DRY:similar to constructParameters\nexport function constructURLParameters(urlParams, allowedParams) {\n    if (urlParams) {\n        const params = { ...urlParams };\n        Object.keys(urlParams).forEach(\n            key => (\n                params[key] === undefined\n                || params[key] === ''\n                || !allowedParams.includes(key)\n                || params[key] === false\n            )\n            && delete params[key]\n\n        );\n        return params;\n    }\n}\n\nexport function formatDate(date = new Date()) {\n    const prepend = (number) => `${`${number}`.length === 1 ? '0' : ''}${number}`;\n    const toFormat = new Date(date);\n    if (toFormat instanceof Date && !isNaN(toFormat)) {\n        const year = toFormat.getFullYear();\n        const month = toFormat.getMonth();\n        const day = toFormat.getDate();\n        return `${year}-${prepend(month)}-${prepend(day)}`;\n    }\n\n    return toFormat;\n}\n\n/**\n * Contructs the filters which have more than one parameter that needs to be passed\n * and resets all the parameteres when it's needed\n *\n * @param {Object} filterParams\n * @return {Object}\n */\nexport function constructFilterParameters(filterParams) {\n    if (Object.prototype.hasOwnProperty.call(filterParams, 'cvss_filter')) {\n        let cvssEntry = CVSS_OPTIONS.find(({ value }) => value === filterParams.cvss_filter);\n\n        if (typeof cvssEntry === 'undefined' && typeof filterParams.cvss_filter !== 'undefined') {\n            let values = filterParams.cvss_filter.split(/[^0-9]+/).filter(item => parseFloat(item));\n            let [from, to] = values;\n            cvssEntry = { from, to };\n        } else if (typeof cvssEntry === 'undefined' && typeof filterParams.cvss_filter === 'undefined') {\n            cvssEntry = { from: undefined, to: undefined };\n        } else if ((cvssEntry && cvssEntry.label === 'N/A') && filterParams.cvss_filter === 'from-1to-1') {\n            cvssEntry = { from: -1, to: -1 };\n        }\n\n        filterParams.cvss_from = cvssEntry.from;\n        filterParams.cvss_to = cvssEntry.to;\n    }\n\n    if (Object.prototype.hasOwnProperty.call(filterParams, 'publish_date')) {\n        let publicEntry = PUBLIC_DATE_OPTIONS.find(item => item.value === filterParams.publish_date);\n\n        if (typeof publicEntry !== 'undefined') {\n            filterParams.public_from = publicEntry.from && formatDate(publicEntry.from);\n            filterParams.public_to = publicEntry.to && formatDate(publicEntry.to);\n        } else {\n            filterParams.public_from = undefined;\n            filterParams.public_to = undefined;\n            filterParams.publish_date = undefined;\n        }\n    }\n\n    return filterParams;\n}\n\nexport function getImpactDetails(impact) {\n    if (Object.keys(impactList).includes(impact)) {\n        return {\n            title: impactList[impact].title,\n            color: impactList[impact].color,\n            text: impactList[impact].text,\n            titleContent: (\n                <SecurityIcon size=\"lg\" />\n            )\n        };\n    } else {\n        return {\n            title: 'Unknown',\n            color: impactColorList.unknown,\n            text: '',\n            titleContent: (\n                <UnknownIcon size=\"lg\" />\n            )\n        };\n    }\n}\n\nexport const createSortBy = (header, value) => {\n    if (value) {\n        let direction = value.indexOf('-') === 0 ? SortByDirection.desc : SortByDirection.asc;\n        value = value.replace(/^(-|\\+)/, '');\n        const index = findIndex(header, item => item.key === value);\n        let sort = {\n            index,\n            direction\n        };\n        return sort;\n    }\n\n    return {};\n};\n\nexport const handleSortColumn = (key, direction, header, currentSort, apply) => {\n    let columnName = header[key].key;\n    const useDefault = currentSort && currentSort.substr(1) !== columnName;\n    if (direction === SortByDirection.desc || useDefault) {\n        columnName = '-' + columnName;\n    }\n\n    apply({ sort: columnName });\n};\n\nexport const updateStateSet = (stateSet, names, value) => {\n    [].concat(names).forEach(name => {\n        value ? stateSet.add(name) : stateSet.delete(name);\n    });\n    return stateSet;\n};\n\nexport const useCreateUrlParams = (allowedParams) => {\n    const urlParams = qs.parse(window.location.search);\n\n    const createUrlParams = (parameters) => {\n        window.history.pushState(\n            {},\n            '',\n            `${\n                window.location.pathname\n            }?${\n                qs.stringify(constructURLParameters(parameters, allowedParams))\n            }`\n        );\n    };\n\n    return [createUrlParams, urlParams];\n};\n\nexport const updateRef = (meta, apply) => {\n    const pages = parseInt(meta.pages);\n    const page = parseInt(meta.page);\n    const cvesCount = parseInt(meta.cvesCount);\n    const goTo = (pages === page && page > 1 && cvesCount === 1) ? (pages - 1) : page;\n\n    apply({ page: goTo });\n};\n\nexport const mountWithIntl = (Component) => {\n    const wrapper = mount(Component, {\n        wrappingComponent: IntlProvider\n    });\n    const provider = wrapper.getWrappingComponent();\n    provider.setProps({ locale: 'en' });\n\n    return wrapper;\n};\n","import {\n    authInterceptor,\n    interceptor401,\n    responseDataInterceptor\n} from '@redhat-cloud-services/frontend-components-utilities/files/interceptors';\nimport axios from 'axios';\nimport { ReadOnlyNotification } from '../Helpers/constants';\nconst instance = axios.create();\n\nexport function errorInterceptor(err) {\n    if (!axios.isCancel(err)) {\n        const errObject = { ...err };\n\n        if (errObject.response && errObject.response.data && errObject.response.data.errors) {\n            const data = errObject.response.data.errors[0];\n            throw data;\n        }\n\n        throw err;\n    }\n}\n\nexport function readOnlyInterceptor(error) {\n    if (error.response && error.response.status === 503) {\n        const data = ReadOnlyNotification;\n        throw data;\n    }\n\n    throw error;\n}\n\ninstance.interceptors.request.use(authInterceptor);\ninstance.interceptors.response.use(responseDataInterceptor);\ninstance.interceptors.response.use(null, interceptor401);\ninstance.interceptors.response.use(null, readOnlyInterceptor);\ninstance.interceptors.response.use(null, errorInterceptor);\n\nexport default instance;\n","let BASE_ROUTE = '/api/vulnerability/';\nimport { GitApi } from '@redhat-cloud-services/vulnerabilities-client';\nimport instance from '../Utilities/interceptors';\nimport { constructParameters } from './MiscHelper';\n\nlet api = new GitApi(undefined, BASE_ROUTE, instance);\n\nexport function getCveDetails(synopsis) {\n    const result = api.getCveDetails(synopsis);\n    return result;\n}\n\nexport function getSystemDetails(system) {\n    const result = api.getSystemDetails(system);\n    return result;\n}\n\nexport function getAffectedSystemsByCVE(synopsis, apiProps) {\n    let parameterNames = [\n        'filter',\n        'limit',\n        'offset',\n        'page',\n        'page_size',\n        'sort',\n        'status_id',\n        'data_format',\n        'security_rule',\n        'rule_name'\n    ];\n    let parameterArray = constructParameters(apiProps, parameterNames);\n    let result = api.getAffectedSystemsByCve(synopsis, ...parameterArray);\n    return result;\n}\n\nexport function getSystems(apiProps) {\n    let parameterNames = ['filter', 'limit', 'offset', 'page', 'page_size', 'sort', 'data_format', 'stale', 'uuid', 'opt_out'];\n    let parameterArray = constructParameters(apiProps, parameterNames);\n    let result = api.getSystemsList(...parameterArray);\n    return result;\n}\n\nexport function getCveListByAccount(apiProps) {\n    let parameterNames = [\n        'filter',\n        'limit',\n        'offset',\n        'page',\n        'page_size',\n        'sort',\n        'cvss_from',\n        'cvss_to',\n        'public_from',\n        'public_to',\n        'impact',\n        'data_format',\n        'business_risk_id',\n        'status_id',\n        'security_rule',\n        'show_all'\n    ];\n    let parameterArray = constructParameters(apiProps, parameterNames);\n    let result = api.getCveList(...parameterArray);\n    return result;\n}\n\nexport function optOutSystem(system, status) {\n    let result = api.setSystemOptOut(system, status);\n    return result;\n}\n\nexport function getCveListBySystem(apiProps) {\n    const { system } = apiProps;\n    let parameterNames = [\n        'filter',\n        'limit',\n        'offset',\n        'page',\n        'page_size',\n        'sort',\n        'cvss_from',\n        'cvss_to',\n        'public_from',\n        'public_to',\n        'impact',\n        'status_id',\n        'data_format',\n        'business_risk_id',\n        'security_rule'\n    ];\n    if (apiProps && system) {\n        Object.keys(apiProps).forEach(key => (apiProps[key] === undefined || apiProps[key] === '') && delete apiProps[key]);\n        const params = parameterNames.map(item => apiProps[item]);\n        return api.getCveListBySystem(system, ...params).catch(err => {\n            if (err && err.status === '404') {\n                return { errors: err };\n            }\n\n            throw err;\n        });\n    }\n}\n\nexport function setSystemCveStatus(params) {\n    let result = api.setStatus(params);\n    return result;\n}\n\nexport function optOutSystems(systems, optOut) {\n    const data = { opt_out: optOut, inventory_id: new Array(...systems) };\n    let result = api.setSystemsOptOut(data);\n    return result;\n}\n\nexport function setBusinessRisk(params) {\n    let result = api.setCveBusinessRisk(params);\n    return result;\n}\n\nexport function setCveStatus(params) {\n    let result = api.setCveStatus(params);\n    return result;\n}\n\nexport function getExecutiveReport() {\n    let result = api.getExecutiveReport();\n    return result;\n}\n\nexport function getAffectedSystemsIdsByCve(synopsis, apiProps) {\n    //TODO: Once all new endpoints for selecting IDs are introduced optimize all parameterNames arrays in this page\n    let parameterNames = [\n        'filter',\n        'limit',\n        'offset',\n        'page',\n        'page_size',\n        'sort',\n        'status_id',\n        'data_format',\n        'security_rule'\n    ];\n    let parameterArray = constructParameters(apiProps, parameterNames);\n    let result = api.getAffectedSystemsIdsByCve(synopsis, ...parameterArray);\n    return result;\n}\n\nexport function getSystemsIds(apiProps) {\n    let parameterNames = ['filter', 'limit', 'offset', 'page', 'page_size', 'sort', 'data_format', 'stale', 'uuid', 'opt_out'];\n    let parameterArray = constructParameters(apiProps, parameterNames);\n    let result = api.getSystemsIds(...parameterArray);\n    return result;\n}\n\nexport function getCveIdsList(apiProps) {\n    let parameterNames = [\n        'filter',\n        'limit',\n        'offset',\n        'page',\n        'page_size',\n        'sort',\n        'cvss_from',\n        'cvss_to',\n        'public_from',\n        'public_to',\n        'impact',\n        'data_format',\n        'business_risk_id',\n        'status_id',\n        'security_rule',\n        'show_all'\n    ];\n    let parameterArray = constructParameters(apiProps, parameterNames);\n    let result = api.getCveIdsList(...parameterArray);\n    return result;\n}\n\nexport function getCveIdsBySystem(apiProps) {\n    const { system } = apiProps;\n    let parameterNames = [\n        'filter',\n        'limit',\n        'offset',\n        'page',\n        'page_size',\n        'sort',\n        'cvss_from',\n        'cvss_to',\n        'public_from',\n        'public_to',\n        'impact',\n        'status_id',\n        'data_format',\n        'business_risk_id',\n        'security_rule'\n    ];\n    if (apiProps && system) {\n        Object.keys(apiProps).forEach(key => (apiProps[key] === undefined || apiProps[key] === '') && delete apiProps[key]);\n        const params = parameterNames.map(item => apiProps[item]);\n        return api.getCveIdsBySystem(system, ...params);\n    }\n}\n","import Immutable from 'seamless-immutable';\nimport * as ActionTypes from '../ActionTypes';\n\n// Initial State\nexport const initialState = Immutable({\n    title: 'Vulnerability',\n    breadcrumbs: []\n});\n\n// Reducer\nexport const BreadcrumbStore = (state = initialState, action) => {\n    let newState;\n    switch (action.type) {\n        case ActionTypes.SET_HEADER + '_FULFILLED':\n            newState = state.set('title', (action.payload && action.payload.title) || initialState.title);\n            newState = newState.set('breadcrumbs', (action.payload && action.payload.breadcrumbs) || initialState.breadcrumbs);\n            return newState;\n\n        default:\n            return state;\n    }\n};\n","import Immutable from 'seamless-immutable';\nimport * as ActionTypes from '../ActionTypes';\n\n// Initial State\nexport const initialState = Immutable({\n    affectedSystemsByCVE: {\n        isLoading: true,\n        openedRows: [],\n        payload: {\n            meta: {\n                total_items: 0,\n                page: 1,\n                page_size: 20\n            }\n        }\n    },\n    parameters: {\n        page: 1,\n        page_size: 20,\n        selectedHosts: [],\n        security_rule: undefined,\n        status_id: undefined\n    },\n    cveDetails: {\n        isLoading: true,\n        payload: {},\n        error: false\n    }\n});\n\n// Reducer\nexport const CVEDetailsPageStore = (state = initialState, action) => {\n    let newState;\n    switch (action.type) {\n        case ActionTypes.HANDLE_CVE_DETAILS_ERROR:\n            newState = state.setIn(['cveDetails', 'error'], action.payload.error);\n            newState = newState.setIn(['cveDetails', 'isLoading'], false);\n            return newState;\n        case ActionTypes.FETCH_CVE_DETAILS + '_PENDING':\n            newState = state.setIn(['cveDetails', 'isLoading'], true);\n            return newState;\n\n        case ActionTypes.FETCH_CVE_DETAILS + '_FULFILLED':\n            newState = state.setIn(['cveDetails', 'payload'], action.payload);\n            newState = newState.setIn(['cveDetails', 'isLoading'], false);\n            return newState;\n\n        case ActionTypes.FETCH_AFFECTED_SYSTEMS_BY_CVE + '_PENDING':\n            newState = state.setIn(['affectedSystemsByCVE', 'isLoading'], true);\n            return newState;\n\n        case ActionTypes.FETCH_AFFECTED_SYSTEMS_BY_CVE + '_FULFILLED':\n            newState = state.setIn(['affectedSystemsByCVE', 'payload'], action.payload);\n            newState = newState.setIn(['affectedSystemsByCVE', 'isLoading'], false);\n            return newState;\n        case ActionTypes.CHANGE_EXPOSED_SYSTEMS_PARAMETERS:\n            newState = state.setIn(['parameters'], {\n                ...state.parameters,\n                ...action.payload,\n                page_size: action.payload.page_size || state.parameters.page_size\n            });\n            return newState;\n        case ActionTypes.CLEAR_CVE_STORE:\n            return initialState;\n        default:\n            return state;\n    }\n};\n\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/files/esm/ReducerRegistry';\nimport { FETCH_SYSTEM_CVE_LIST } from '../ActionTypes';\n\nexport const initialState = {\n    parameters: {\n        page: 1,\n        page_size: 20\n    },\n    cveList: {\n        isLoading: true,\n        payload: [],\n        meta: new Date(),\n        error: false\n    },\n    openedCves: [],\n    selectedCves: [],\n    expandCveDescription: false\n};\n\nfunction pendingVulnerabilities(state, { meta }) {\n    return {\n        ...state,\n        timestamp: meta,\n        cveList: {\n            ...state.cveList,\n            isLoading: true\n        }\n    };\n}\n\nfunction rejectedVulnerabilities(state, { meta, payload }) {\n    return {\n        ...state,\n        timestamp: meta,\n        cveList: {\n            payload: { errors: payload },\n            isLoading: false\n        }\n    };\n}\n\nfunction fulfilledVulnerabilities(state, action) {\n    const { payload, meta } = action;\n    if (meta >= state.timestamp) {\n        return {\n            ...state,\n            timestamp: meta,\n            cveList: {\n                payload,\n                isLoading: false\n            }\n        };\n    }\n\n    return state;\n}\n\nfunction selectEntity(state, action) {\n    let newState = state;\n    let selectedCves = newState.selectedCves.slice();\n    if (Array.isArray(action.payload)) {\n        selectedCves = action.payload;\n    } else {\n        (selectedCves.includes(action.payload) && selectedCves.splice(selectedCves.indexOf(action.payload), 1)) ||\n            selectedCves.push(action.payload);\n    }\n\n    return { ...newState, selectedCves };\n}\n\nfunction expandCve(state, action) {\n    let newState = state;\n    const { isOpen, cves, expandCveDescription } = action.payload;\n    let openedCves = newState.openedCves.slice();\n\n    if (cves.length > 0) {\n        cves.map(cve =>{\n            const index = openedCves.findIndex(element => element.id === cve);\n            if (index > -1) { openedCves[index] = ({ id: cve, isOpen });}\n            else {openedCves.push({ id: cve, isOpen });}\n        });\n    }\n    else {\n        openedCves = openedCves.map(cve => ({ id: cve.id, isOpen: false }));\n    }\n\n    return { ...newState, openedCves, expandCveDescription };\n}\n\nfunction changeParameters(state, action) {\n    let newState = state;\n    newState.parameters = { ...state.parameters, ...action.payload };\n    return newState;\n}\n\nfunction clearSystemCvesStore(state) {\n    let newState = state;\n    newState.selectedCves = [];\n    newState.openedCves = [];\n    newState.parameters = {\n        page: 1,\n        page_size: 20\n    };\n    return newState;\n}\n\nexport const SystemCvesStore = applyReducerHash(\n    {\n        [`${FETCH_SYSTEM_CVE_LIST}_PENDING`]: pendingVulnerabilities,\n        [`${FETCH_SYSTEM_CVE_LIST}_REJECTED`]: rejectedVulnerabilities,\n        [`${FETCH_SYSTEM_CVE_LIST}_FULFILLED`]: fulfilledVulnerabilities,\n        ['CHANGE_SYSTEM_CVE_LIST_PARAMETERS']: changeParameters,\n        ['SELECT_SYSTEM_CVE']: selectEntity,\n        ['EXPAND_SYSTEM_CVE']: expandCve,\n        ['CLEAR_SYSTEM_CVES_STORE']: clearSystemCvesStore\n    },\n    initialState\n);\n","import * as ActionTypes from '../ActionTypes';\n\nexport const initialState = {\n    isLoading: true,\n    payload: {},\n    metadata: {\n        page: 1,\n        limit: 20,\n        offet: 0,\n        total_items: 0\n    },\n    params: {\n        filter: undefined,\n        opt_out: false,\n        page: 1,\n        page_size: 20,\n        sort: '-last_upload'\n    }\n};\n\nexport const SystemsPageStore = (state = initialState, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case ActionTypes.FETCH_SYSTEMS + '_PENDING':\n            newState.isLoading = true;\n            return newState;\n\n        case ActionTypes.FETCH_SYSTEMS + '_FULFILLED':\n            newState.payload = action.payload;\n            newState.metadata = action.payload.meta;\n            newState.isLoading = false;\n            return newState;\n        case ActionTypes.CHANGE_SYSTEMS_PARAMS:\n            newState.params = {\n                ...newState.params,\n                ...action.payload,\n                page_size: action.payload.page_size || newState.params.page_size\n            };\n            return newState;\n        case ActionTypes.CLEAR_SYSTEMS_STORE:\n            return initialState;\n        default:\n            return state;\n    }\n};\n","import * as ActionTypes from '../ActionTypes';\n\n// Initial State\nexport const initialState = {\n    cveList: {\n        isLoading: true,\n        payload: [],\n        timestamp: new Date()\n    },\n    parameters: {\n        show_all: false,\n        sort: '-public_date'\n    },\n    selectedCves: [],\n    openedCves: [],\n    expandCveDescription: false\n};\n\nfunction isValid(stateTimestamp, actionTimestamp) {\n    return actionTimestamp >= stateTimestamp;\n}\n\n// Reducer\nexport const CVEsStore = (state = initialState, action) => {\n    let newState = { ...state };\n\n    switch (action.type) {\n        case ActionTypes.FETCH_CVE_LIST + '_PENDING':\n            newState.cveList = {\n                timestamp: action.meta,\n                isLoading: true\n            };\n            return newState;\n\n        case ActionTypes.FETCH_CVE_LIST + '_REJECTED':\n            newState.cveList = {\n                isLoading: false,\n                payload: { errors: action.payload }\n            };\n            return newState;\n\n        case ActionTypes.FETCH_CVE_LIST + '_FULFILLED':\n            if (isValid(state.cveList.timestamp, action.meta)) {\n                newState.cveList = {\n                    payload: action.payload,\n                    isLoading: false\n                };\n\n                return newState;\n            }\n\n            return state;\n\n        case ActionTypes.CHANGE_CVE_LIST_PARAMETERS + '_FULFILLED':\n            newState.parameters = { ...newState.parameters, ...action.payload };\n            return newState;\n\n        case ActionTypes.SELECT_CVE: {\n            let selectedCves = newState.selectedCves.slice();\n            if (Array.isArray(action.payload)) {\n                selectedCves = action.payload;\n            } else {\n                (selectedCves.includes(action.payload) && selectedCves.splice(selectedCves.indexOf(action.payload), 1)) ||\n                    selectedCves.push(action.payload);\n            }\n\n            return { ...newState, selectedCves  };\n        }\n\n        case ActionTypes.EXPAND_CVE: {\n            if (Array.isArray(action.payload)) {\n                const openedCves = action.payload;\n                const expandCveDescription = action.payload.length === 0 ? false : true;\n                return { ...newState,  openedCves, expandCveDescription };\n            }\n\n            const cveName = newState.cveList.payload.data[action.payload / 2].id;\n            const openedCves = newState.openedCves.slice();\n            (openedCves.includes(cveName) && openedCves.splice(openedCves.indexOf(cveName), 1)) || openedCves.push(cveName);\n\n            const expandCveDescription = (openedCves.length === newState.cveList.payload.data.length);\n\n            return { ...newState, openedCves, expandCveDescription };\n        }\n\n        case ActionTypes.CLEAR_CVES_STORE: {\n            return initialState;\n        }\n\n        default:\n            return state;\n    }\n};\n","import * as APIHelper from '../../Helpers/APIHelper';\nimport * as HeaderHelper from '../../Helpers/HeaderHelper';\nimport ReducerRegistry from '../../Utilities/ReducerRegistry';\nimport * as ActionTypes from '../ActionTypes';\nimport { BreadcrumbStore } from '../Reducers/BreadcrumbStore';\nimport { CVEDetailsPageStore } from '../Reducers/CVEDetailsPageStore';\nimport { SystemCvesStore } from '../Reducers/SystemCvesStore';\nimport { SystemsPageStore } from '../Reducers/SystemsPageStore';\nimport { CVEsStore } from '../Reducers/CVEsStore';\n\nReducerRegistry.register({ CVEDetailsPageStore });\nReducerRegistry.register({ CVEsStore });\nReducerRegistry.register({ SystemsPageStore });\nReducerRegistry.register({ BreadcrumbStore });\nReducerRegistry.register({ SystemCvesStore });\n\nexport const setHeader = props => ({\n    type: ActionTypes.SET_HEADER,\n    payload: new Promise(resolve => {\n        resolve(HeaderHelper.setHeader(props));\n    }).then(result => result)\n});\n\nexport const fetchAffectedSystemsByCVE = (cve, apiProps) =>({\n    type: ActionTypes.FETCH_AFFECTED_SYSTEMS_BY_CVE,\n    payload: new Promise(resolve => {\n        resolve(APIHelper.getAffectedSystemsByCVE(cve, apiProps));\n    }).then(result => result)\n});\n\nexport const fetchSystems = options => ({\n    type: ActionTypes.FETCH_SYSTEMS,\n    payload: new Promise(resolve => {\n        resolve(APIHelper.getSystems(options));\n    }).then(result => result)\n});\n\nexport const fetchCveDetails = synopsis => ({\n    type: ActionTypes.FETCH_CVE_DETAILS,\n    payload: new Promise(resolve => {\n        resolve(APIHelper.getCveDetails(synopsis));\n    }).then(result => result)\n});\n\nexport const handleCveDetailsError = () => ({\n    type: ActionTypes.HANDLE_CVE_DETAILS_ERROR,\n    payload: { error: true }\n});\n\nexport const fetchSystemDetails = system => ({\n    type: ActionTypes.FETCH_SYSTEM_DETAILS,\n    meta: { noError: true },\n    payload: new Promise(resolve => {\n        resolve(APIHelper.getSystemDetails(system));\n    }).then(result => result)\n});\n\nexport const fetchCveListByAccount = apiProps => ({\n    type: ActionTypes.FETCH_CVE_LIST,\n    meta: new Date(),\n    payload: APIHelper.getCveListByAccount(apiProps)\n});\n\nexport const optOutSystemAction = (system, status) => ({\n    type: ActionTypes.SYSTEM_OPT_OUT,\n    payload: new Promise(resolve => {\n        resolve(APIHelper.optOutSystem(system, status));\n    }).then(result => result)\n});\n\nexport const fetchCveListBySystem = apiProps => ({\n    type: ActionTypes.FETCH_SYSTEM_CVE_LIST,\n    meta: new Date(),\n    payload: APIHelper.getCveListBySystem(apiProps)\n});\n\nexport const changeSystemCveStatusAction = (inventoryId, cve, statusId, callback) => ({\n    type: ActionTypes.CHANGE_SYSTEM_CVE_STATUS,\n    payload: APIHelper.setSystemCveStatus(inventoryId, cve, statusId, callback)\n});\n\nexport const optOutSystemsAction = (system, status) => ({\n    type: ActionTypes.SYSTEM_OPT_OUT,\n    payload: new Promise(resolve => {\n        resolve(APIHelper.optOutSystems(system, status));\n    }).then(result => result)\n});\n\nexport const changeCveListParameters = apiProps => ({\n    type: ActionTypes.CHANGE_CVE_LIST_PARAMETERS,\n    payload: new Promise(resolve => {\n        resolve(apiProps);\n    }).then(result => result)\n});\n\nexport const changeExposedSystemsParameters = (params) => ({\n    type: ActionTypes.CHANGE_EXPOSED_SYSTEMS_PARAMETERS,\n    payload: params\n});\n\nexport const changeSystemCVEsParameters = (params) => ({\n    type: ActionTypes.CHANGE_SYSTEM_CVE_LIST_PARAMETERS,\n    payload: params\n});\n\nexport const selectCve = apiProps => ({\n    type: ActionTypes.SELECT_CVE,\n    payload: apiProps\n});\n\nexport const expandCve = apiProps => ({\n    type: ActionTypes.EXPAND_CVE,\n    payload: apiProps\n});\n\nexport const selectSystemCve = apiProps => ({\n    type: ActionTypes.SELECT_SYSTEM_CVE,\n    payload: apiProps\n});\n\nexport const expandSystemCve = apiProps => ({\n    type: ActionTypes.EXPAND_SYSTEM_CVE,\n    payload: apiProps\n});\n\nexport const expandRow = (id, isOpen) => ({\n    type: ActionTypes.EXPAND_ROW,\n    payload: { id, isOpen }\n});\n\nexport const selectEntities = (value, ids) => ({\n    type: ActionTypes.SELECT_ENTITIES,\n    payload: ids\n});\n\nexport const selectMultipleEntities = (selectedHosts) => ({\n    type: ActionTypes.SELECT_MULTIPLE_ENTITIES,\n    payload: selectedHosts\n});\n\nexport const changeSystemsParams = (params) => ({\n    type: ActionTypes.CHANGE_SYSTEMS_PARAMS,\n    payload: params\n});\n\nexport const clearSystemStore = () => ({\n    type: ActionTypes.CLEAR_SYSTEMS_STORE,\n    payload: []\n});\n\nexport const clearSystemCvesStore = () => ({\n    type: ActionTypes.CLEAR_SYSTEM_CVES_STORE,\n    payload: []\n});\n\nexport const clearCveStore = () => ({\n    type: ActionTypes.CLEAR_CVE_STORE,\n    payload: []\n});\n\nexport const fetchAffectedSystemsIdsByCve = (cve, apiProps) => ({\n    type: ActionTypes.FETCH_AFFECTED_SYSTEM_IDS_BY_CVE,\n    payload: APIHelper.getAffectedSystemsIdsByCve(cve, apiProps)\n});\n\nexport const fetchSystemsIds = (apiProps) => ({\n    type: ActionTypes.FETCH_SYSTEMS_IDS,\n    payload: APIHelper.getSystemsIds(apiProps)\n});\n\nexport const fetchCvesIds = (apiProps) => ({\n    type: ActionTypes.FETCH_CVE_LIST_IDS,\n    payload: APIHelper.getCveIdsList(apiProps)\n});\n\nexport const fetchSystemDetailsIds = (apiProps) =>({\n    type: ActionTypes.FETCH_SYTEM_DETAILS_IDS,\n    payload: APIHelper.getCveIdsBySystem(apiProps)\n});\n\nexport const clearInventoryStore = () =>({\n    type: ActionTypes.CLEAR_INVENTORY_STORE,\n    payload: []\n});\n\nexport const clearCVEsStore = () =>({\n    type: ActionTypes.CLEAR_CVES_STORE,\n    payload: []\n});\n","(function() {\n  \"use strict\";\n\nfunction immutableInit(config) {\n\n  // https://github.com/facebook/react/blob/v15.0.1/src/isomorphic/classic/element/ReactElement.js#L21\n  var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol.for && Symbol.for('react.element');\n  var REACT_ELEMENT_TYPE_FALLBACK = 0xeac7;\n\n  var globalConfig = {\n    use_static: false\n  };\n  if (isObject(config)) {\n      if (config.use_static !== undefined) {\n          globalConfig.use_static = Boolean(config.use_static);\n      }\n  }\n\n  function isObject(data) {\n    return (\n      typeof data === 'object' &&\n      !Array.isArray(data) &&\n      data !== null\n    );\n  }\n\n  function instantiateEmptyObject(obj) {\n      var prototype = Object.getPrototypeOf(obj);\n      if (!prototype) {\n          return {};\n      } else {\n          return Object.create(prototype);\n      }\n  }\n\n  function addPropertyTo(target, methodName, value) {\n    Object.defineProperty(target, methodName, {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: value\n    });\n  }\n\n  function banProperty(target, methodName) {\n    addPropertyTo(target, methodName, function() {\n      throw new ImmutableError(\"The \" + methodName +\n        \" method cannot be invoked on an Immutable data structure.\");\n    });\n  }\n\n  var immutabilityTag = \"__immutable_invariants_hold\";\n\n  function addImmutabilityTag(target) {\n    addPropertyTo(target, immutabilityTag, true);\n  }\n\n  function isImmutable(target) {\n    if (typeof target === \"object\") {\n      return target === null || Boolean(\n        Object.getOwnPropertyDescriptor(target, immutabilityTag)\n      );\n    } else {\n      // In JavaScript, only objects are even potentially mutable.\n      // strings, numbers, null, and undefined are all naturally immutable.\n      return true;\n    }\n  }\n\n  function isEqual(a, b) {\n    // Avoid false positives due to (NaN !== NaN) evaluating to true\n    return (a === b || (a !== a && b !== b));\n  }\n\n  function isMergableObject(target) {\n    return target !== null && typeof target === \"object\" && !(Array.isArray(target)) && !(target instanceof Date);\n  }\n\n  var mutatingObjectMethods = [\n    \"setPrototypeOf\"\n  ];\n\n  var nonMutatingObjectMethods = [\n    \"keys\"\n  ];\n\n  var mutatingArrayMethods = mutatingObjectMethods.concat([\n    \"push\", \"pop\", \"sort\", \"splice\", \"shift\", \"unshift\", \"reverse\"\n  ]);\n\n  var nonMutatingArrayMethods = nonMutatingObjectMethods.concat([\n    \"map\", \"filter\", \"slice\", \"concat\", \"reduce\", \"reduceRight\"\n  ]);\n\n  var mutatingDateMethods = mutatingObjectMethods.concat([\n    \"setDate\", \"setFullYear\", \"setHours\", \"setMilliseconds\", \"setMinutes\", \"setMonth\", \"setSeconds\",\n    \"setTime\", \"setUTCDate\", \"setUTCFullYear\", \"setUTCHours\", \"setUTCMilliseconds\", \"setUTCMinutes\",\n    \"setUTCMonth\", \"setUTCSeconds\", \"setYear\"\n  ]);\n\n  function ImmutableError(message) {\n    this.name = 'MyError';\n    this.message = message;\n    this.stack = (new Error()).stack;\n  }\n  ImmutableError.prototype = new Error();\n  ImmutableError.prototype.constructor = Error;\n\n  function makeImmutable(obj, bannedMethods) {\n    // Tag it so we can quickly tell it's immutable later.\n    addImmutabilityTag(obj);\n\n    if (\"development\" !== \"production\") {\n      // Make all mutating methods throw exceptions.\n      for (var index in bannedMethods) {\n        if (bannedMethods.hasOwnProperty(index)) {\n          banProperty(obj, bannedMethods[index]);\n        }\n      }\n\n      // Freeze it and return it.\n      Object.freeze(obj);\n    }\n\n    return obj;\n  }\n\n  function makeMethodReturnImmutable(obj, methodName) {\n    var currentMethod = obj[methodName];\n\n    addPropertyTo(obj, methodName, function() {\n      return Immutable(currentMethod.apply(obj, arguments));\n    });\n  }\n\n  function arraySet(idx, value, config) {\n    var deep          = config && config.deep;\n\n    if (idx in this) {\n      if (deep && this[idx] !== value && isMergableObject(value) && isMergableObject(this[idx])) {\n        value = Immutable.merge(this[idx], value, {deep: true, mode: 'replace'});\n      }\n      if (isEqual(this[idx], value)) {\n        return this;\n      }\n    }\n\n    var mutable = asMutableArray.call(this);\n    mutable[idx] = Immutable(value);\n    return makeImmutableArray(mutable);\n  }\n\n  var immutableEmptyArray = Immutable([]);\n\n  function arraySetIn(pth, value, config) {\n    var head = pth[0];\n\n    if (pth.length === 1) {\n      return arraySet.call(this, head, value, config);\n    } else {\n      var tail = pth.slice(1);\n      var thisHead = this[head];\n      var newValue;\n\n      if (typeof(thisHead) === \"object\" && thisHead !== null) {\n        // Might (validly) be object or array\n        newValue = Immutable.setIn(thisHead, tail, value);\n      } else {\n        var nextHead = tail[0];\n        // If the next path part is a number, then we are setting into an array, else an object.\n        if (nextHead !== '' && isFinite(nextHead)) {\n          newValue = arraySetIn.call(immutableEmptyArray, tail, value);\n        } else {\n          newValue = objectSetIn.call(immutableEmptyObject, tail, value);\n        }\n      }\n\n      if (head in this && thisHead === newValue) {\n        return this;\n      }\n\n      var mutable = asMutableArray.call(this);\n      mutable[head] = newValue;\n      return makeImmutableArray(mutable);\n    }\n  }\n\n  function makeImmutableArray(array) {\n    // Don't change their implementations, but wrap these functions to make sure\n    // they always return an immutable value.\n    for (var index in nonMutatingArrayMethods) {\n      if (nonMutatingArrayMethods.hasOwnProperty(index)) {\n        var methodName = nonMutatingArrayMethods[index];\n        makeMethodReturnImmutable(array, methodName);\n      }\n    }\n\n    if (!globalConfig.use_static) {\n      addPropertyTo(array, \"flatMap\",  flatMap);\n      addPropertyTo(array, \"asObject\", asObject);\n      addPropertyTo(array, \"asMutable\", asMutableArray);\n      addPropertyTo(array, \"set\", arraySet);\n      addPropertyTo(array, \"setIn\", arraySetIn);\n      addPropertyTo(array, \"update\", update);\n      addPropertyTo(array, \"updateIn\", updateIn);\n      addPropertyTo(array, \"getIn\", getIn);\n    }\n\n    for(var i = 0, length = array.length; i < length; i++) {\n      array[i] = Immutable(array[i]);\n    }\n\n    return makeImmutable(array, mutatingArrayMethods);\n  }\n\n  function makeImmutableDate(date) {\n    if (!globalConfig.use_static) {\n      addPropertyTo(date, \"asMutable\", asMutableDate);\n    }\n\n    return makeImmutable(date, mutatingDateMethods);\n  }\n\n  function asMutableDate() {\n    return new Date(this.getTime());\n  }\n\n  /**\n   * Effectively performs a map() over the elements in the array, using the\n   * provided iterator, except that whenever the iterator returns an array, that\n   * array's elements are added to the final result instead of the array itself.\n   *\n   * @param {function} iterator - The iterator function that will be invoked on each element in the array. It will receive three arguments: the current value, the current index, and the current object.\n   */\n  function flatMap(iterator) {\n    // Calling .flatMap() with no arguments is a no-op. Don't bother cloning.\n    if (arguments.length === 0) {\n      return this;\n    }\n\n    var result = [],\n        length = this.length,\n        index;\n\n    for (index = 0; index < length; index++) {\n      var iteratorResult = iterator(this[index], index, this);\n\n      if (Array.isArray(iteratorResult)) {\n        // Concatenate Array results into the return value we're building up.\n        result.push.apply(result, iteratorResult);\n      } else {\n        // Handle non-Array results the same way map() does.\n        result.push(iteratorResult);\n      }\n    }\n\n    return makeImmutableArray(result);\n  }\n\n  /**\n   * Returns an Immutable copy of the object without the given keys included.\n   *\n   * @param {array} keysToRemove - A list of strings representing the keys to exclude in the return value. Instead of providing a single array, this method can also be called by passing multiple strings as separate arguments.\n   */\n  function without(remove) {\n    // Calling .without() with no arguments is a no-op. Don't bother cloning.\n    if (typeof remove === \"undefined\" && arguments.length === 0) {\n      return this;\n    }\n\n    if (typeof remove !== \"function\") {\n      // If we weren't given an array, use the arguments list.\n      var keysToRemoveArray = (Array.isArray(remove)) ?\n         remove.slice() : Array.prototype.slice.call(arguments);\n\n      // Convert numeric keys to strings since that's how they'll\n      // come from the enumeration of the object.\n      keysToRemoveArray.forEach(function(el, idx, arr) {\n        if(typeof(el) === \"number\") {\n          arr[idx] = el.toString();\n        }\n      });\n\n      remove = function(val, key) {\n        return keysToRemoveArray.indexOf(key) !== -1;\n      };\n    }\n\n    var result = instantiateEmptyObject(this);\n\n    for (var key in this) {\n      if (this.hasOwnProperty(key) && remove(this[key], key) === false) {\n        result[key] = this[key];\n      }\n    }\n\n    return makeImmutableObject(result);\n  }\n\n  function asMutableArray(opts) {\n    var result = [], i, length;\n\n    if(opts && opts.deep) {\n      for(i = 0, length = this.length; i < length; i++) {\n        result.push(asDeepMutable(this[i]));\n      }\n    } else {\n      for(i = 0, length = this.length; i < length; i++) {\n        result.push(this[i]);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Effectively performs a [map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map) over the elements in the array, expecting that the iterator function\n   * will return an array of two elements - the first representing a key, the other\n   * a value. Then returns an Immutable Object constructed of those keys and values.\n   *\n   * @param {function} iterator - A function which should return an array of two elements - the first representing the desired key, the other the desired value.\n   */\n  function asObject(iterator) {\n    // If no iterator was provided, assume the identity function\n    // (suggesting this array is already a list of key/value pairs.)\n    if (typeof iterator !== \"function\") {\n      iterator = function(value) { return value; };\n    }\n\n    var result = {},\n        length = this.length,\n        index;\n\n    for (index = 0; index < length; index++) {\n      var pair  = iterator(this[index], index, this),\n          key   = pair[0],\n          value = pair[1];\n\n      result[key] = value;\n    }\n\n    return makeImmutableObject(result);\n  }\n\n  function asDeepMutable(obj) {\n    if (\n      (!obj) ||\n      (typeof obj !== 'object') ||\n      (!Object.getOwnPropertyDescriptor(obj, immutabilityTag)) ||\n      (obj instanceof Date)\n    ) { return obj; }\n    return Immutable.asMutable(obj, {deep: true});\n  }\n\n  function quickCopy(src, dest) {\n    for (var key in src) {\n      if (Object.getOwnPropertyDescriptor(src, key)) {\n        dest[key] = src[key];\n      }\n    }\n\n    return dest;\n  }\n\n  /**\n   * Returns an Immutable Object containing the properties and values of both\n   * this object and the provided object, prioritizing the provided object's\n   * values whenever the same key is present in both objects.\n   *\n   * @param {object} other - The other object to merge. Multiple objects can be passed as an array. In such a case, the later an object appears in that list, the higher its priority.\n   * @param {object} config - Optional config object that contains settings. Supported settings are: {deep: true} for deep merge and {merger: mergerFunc} where mergerFunc is a function\n   *                          that takes a property from both objects. If anything is returned it overrides the normal merge behaviour.\n   */\n  function merge(other, config) {\n    // Calling .merge() with no arguments is a no-op. Don't bother cloning.\n    if (arguments.length === 0) {\n      return this;\n    }\n\n    if (other === null || (typeof other !== \"object\")) {\n      throw new TypeError(\"Immutable#merge can only be invoked with objects or arrays, not \" + JSON.stringify(other));\n    }\n\n    var receivedArray = (Array.isArray(other)),\n        deep          = config && config.deep,\n        mode          = config && config.mode || 'merge',\n        merger        = config && config.merger,\n        result;\n\n    // Use the given key to extract a value from the given object, then place\n    // that value in the result object under the same key. If that resulted\n    // in a change from this object's value at that key, set anyChanges = true.\n    function addToResult(currentObj, otherObj, key) {\n      var immutableValue = Immutable(otherObj[key]);\n      var mergerResult = merger && merger(currentObj[key], immutableValue, config);\n      var currentValue = currentObj[key];\n\n      if ((result !== undefined) ||\n        (mergerResult !== undefined) ||\n        (!currentObj.hasOwnProperty(key)) ||\n        !isEqual(immutableValue, currentValue)) {\n\n        var newValue;\n\n        if (mergerResult !== undefined) {\n          newValue = mergerResult;\n        } else if (deep && isMergableObject(currentValue) && isMergableObject(immutableValue)) {\n          newValue = Immutable.merge(currentValue, immutableValue, config);\n        } else {\n          newValue = immutableValue;\n        }\n\n        if (!isEqual(currentValue, newValue) || !currentObj.hasOwnProperty(key)) {\n          if (result === undefined) {\n            // Make a shallow clone of the current object.\n            result = quickCopy(currentObj, instantiateEmptyObject(currentObj));\n          }\n\n          result[key] = newValue;\n        }\n      }\n    }\n\n    function clearDroppedKeys(currentObj, otherObj) {\n      for (var key in currentObj) {\n        if (!otherObj.hasOwnProperty(key)) {\n          if (result === undefined) {\n            // Make a shallow clone of the current object.\n            result = quickCopy(currentObj, instantiateEmptyObject(currentObj));\n          }\n          delete result[key];\n        }\n      }\n    }\n\n    var key;\n\n    // Achieve prioritization by overriding previous values that get in the way.\n    if (!receivedArray) {\n      // The most common use case: just merge one object into the existing one.\n      for (key in other) {\n        if (Object.getOwnPropertyDescriptor(other, key)) {\n          addToResult(this, other, key);\n        }\n      }\n      if (mode === 'replace') {\n        clearDroppedKeys(this, other);\n      }\n    } else {\n      // We also accept an Array\n      for (var index = 0, length = other.length; index < length; index++) {\n        var otherFromArray = other[index];\n\n        for (key in otherFromArray) {\n          if (otherFromArray.hasOwnProperty(key)) {\n            addToResult(result !== undefined ? result : this, otherFromArray, key);\n          }\n        }\n      }\n    }\n\n    if (result === undefined) {\n      return this;\n    } else {\n      return makeImmutableObject(result);\n    }\n  }\n\n  function objectReplace(value, config) {\n    var deep          = config && config.deep;\n\n    // Calling .replace() with no arguments is a no-op. Don't bother cloning.\n    if (arguments.length === 0) {\n      return this;\n    }\n\n    if (value === null || typeof value !== \"object\") {\n      throw new TypeError(\"Immutable#replace can only be invoked with objects or arrays, not \" + JSON.stringify(value));\n    }\n\n    return Immutable.merge(this, value, {deep: deep, mode: 'replace'});\n  }\n\n  var immutableEmptyObject = Immutable({});\n\n  function objectSetIn(path, value, config) {\n    if (!(Array.isArray(path)) || path.length === 0) {\n      throw new TypeError(\"The first argument to Immutable#setIn must be an array containing at least one \\\"key\\\" string.\");\n    }\n\n    var head = path[0];\n    if (path.length === 1) {\n      return objectSet.call(this, head, value, config);\n    }\n\n    var tail = path.slice(1);\n    var newValue;\n    var thisHead = this[head];\n\n    if (this.hasOwnProperty(head) && typeof(thisHead) === \"object\" && thisHead !== null) {\n      // Might (validly) be object or array\n      newValue = Immutable.setIn(thisHead, tail, value);\n    } else {\n      newValue = objectSetIn.call(immutableEmptyObject, tail, value);\n    }\n\n    if (this.hasOwnProperty(head) && thisHead === newValue) {\n      return this;\n    }\n\n    var mutable = quickCopy(this, instantiateEmptyObject(this));\n    mutable[head] = newValue;\n    return makeImmutableObject(mutable);\n  }\n\n  function objectSet(property, value, config) {\n    var deep          = config && config.deep;\n\n    if (this.hasOwnProperty(property)) {\n      if (deep && this[property] !== value && isMergableObject(value) && isMergableObject(this[property])) {\n        value = Immutable.merge(this[property], value, {deep: true, mode: 'replace'});\n      }\n      if (isEqual(this[property], value)) {\n        return this;\n      }\n    }\n\n    var mutable = quickCopy(this, instantiateEmptyObject(this));\n    mutable[property] = Immutable(value);\n    return makeImmutableObject(mutable);\n  }\n\n  function update(property, updater) {\n    var restArgs = Array.prototype.slice.call(arguments, 2);\n    var initialVal = this[property];\n    return Immutable.set(this, property, updater.apply(initialVal, [initialVal].concat(restArgs)));\n  }\n\n  function getInPath(obj, path) {\n    /*jshint eqnull:true */\n    for (var i = 0, l = path.length; obj != null && i < l; i++) {\n      obj = obj[path[i]];\n    }\n\n    return (i && i == l) ? obj : undefined;\n  }\n\n  function updateIn(path, updater) {\n    var restArgs = Array.prototype.slice.call(arguments, 2);\n    var initialVal = getInPath(this, path);\n\n    return Immutable.setIn(this, path, updater.apply(initialVal, [initialVal].concat(restArgs)));\n  }\n\n  function getIn(path, defaultValue) {\n    var value = getInPath(this, path);\n    return value === undefined ? defaultValue : value;\n  }\n\n  function asMutableObject(opts) {\n    var result = instantiateEmptyObject(this), key;\n\n    if(opts && opts.deep) {\n      for (key in this) {\n        if (this.hasOwnProperty(key)) {\n          result[key] = asDeepMutable(this[key]);\n        }\n      }\n    } else {\n      for (key in this) {\n        if (this.hasOwnProperty(key)) {\n          result[key] = this[key];\n        }\n      }\n    }\n\n    return result;\n  }\n\n  // Creates plain object to be used for cloning\n  function instantiatePlainObject() {\n    return {};\n  }\n\n  // Finalizes an object with immutable methods, freezes it, and returns it.\n  function makeImmutableObject(obj) {\n    if (!globalConfig.use_static) {\n      addPropertyTo(obj, \"merge\", merge);\n      addPropertyTo(obj, \"replace\", objectReplace);\n      addPropertyTo(obj, \"without\", without);\n      addPropertyTo(obj, \"asMutable\", asMutableObject);\n      addPropertyTo(obj, \"set\", objectSet);\n      addPropertyTo(obj, \"setIn\", objectSetIn);\n      addPropertyTo(obj, \"update\", update);\n      addPropertyTo(obj, \"updateIn\", updateIn);\n      addPropertyTo(obj, \"getIn\", getIn);\n    }\n\n    return makeImmutable(obj, mutatingObjectMethods);\n  }\n\n  // Returns true if object is a valid react element\n  // https://github.com/facebook/react/blob/v15.0.1/src/isomorphic/classic/element/ReactElement.js#L326\n  function isReactElement(obj) {\n    return typeof obj === 'object' &&\n           obj !== null &&\n           (obj.$$typeof === REACT_ELEMENT_TYPE_FALLBACK || obj.$$typeof === REACT_ELEMENT_TYPE);\n  }\n\n  function isFileObject(obj) {\n    return typeof File !== 'undefined' &&\n           obj instanceof File;\n  }\n\n  function isBlobObject(obj) {\n    return typeof Blob !== 'undefined' &&\n           obj instanceof Blob;\n  }\n\n  function isPromise(obj) {\n    return typeof obj === 'object' &&\n           typeof obj.then === 'function';\n  }\n\n  function isError(obj) {\n    return obj instanceof Error;\n  }\n\n  function Immutable(obj, options, stackRemaining) {\n    if (isImmutable(obj) || isReactElement(obj) || isFileObject(obj) || isBlobObject(obj) || isError(obj)) {\n      return obj;\n    } else if (isPromise(obj)) {\n      return obj.then(Immutable);\n    } else if (Array.isArray(obj)) {\n      return makeImmutableArray(obj.slice());\n    } else if (obj instanceof Date) {\n      return makeImmutableDate(new Date(obj.getTime()));\n    } else {\n      // Don't freeze the object we were given; make a clone and use that.\n      var prototype = options && options.prototype;\n      var instantiateEmptyObject =\n        (!prototype || prototype === Object.prototype) ?\n          instantiatePlainObject : (function() { return Object.create(prototype); });\n      var clone = instantiateEmptyObject();\n\n      if (\"development\" !== \"production\") {\n        /*jshint eqnull:true */\n        if (stackRemaining == null) {\n          stackRemaining = 64;\n        }\n        if (stackRemaining <= 0) {\n          throw new ImmutableError(\"Attempt to construct Immutable from a deeply nested object was detected.\" +\n            \" Have you tried to wrap an object with circular references (e.g. React element)?\" +\n            \" See https://github.com/rtfeldman/seamless-immutable/wiki/Deeply-nested-object-was-detected for details.\");\n        }\n        stackRemaining -= 1;\n      }\n\n      for (var key in obj) {\n        if (Object.getOwnPropertyDescriptor(obj, key)) {\n          clone[key] = Immutable(obj[key], undefined, stackRemaining);\n        }\n      }\n\n      return makeImmutableObject(clone);\n    }\n  }\n\n  // Wrapper to allow the use of object methods as static methods of Immutable.\n  function toStatic(fn) {\n    function staticWrapper() {\n      var args = [].slice.call(arguments);\n      var self = args.shift();\n      return fn.apply(self, args);\n    }\n\n    return staticWrapper;\n  }\n\n  // Wrapper to allow the use of object methods as static methods of Immutable.\n  // with the additional condition of choosing which function to call depending\n  // if argument is an array or an object.\n  function toStaticObjectOrArray(fnObject, fnArray) {\n    function staticWrapper() {\n      var args = [].slice.call(arguments);\n      var self = args.shift();\n      if (Array.isArray(self)) {\n          return fnArray.apply(self, args);\n      } else {\n          return fnObject.apply(self, args);\n      }\n    }\n\n    return staticWrapper;\n  }\n\n  // Wrapper to allow the use of object methods as static methods of Immutable.\n  // with the additional condition of choosing which function to call depending\n  // if argument is an array or an object or a date.\n  function toStaticObjectOrDateOrArray(fnObject, fnArray, fnDate) {\n    function staticWrapper() {\n      var args = [].slice.call(arguments);\n      var self = args.shift();\n      if (Array.isArray(self)) {\n          return fnArray.apply(self, args);\n      } else if (self instanceof Date) {\n          return fnDate.apply(self, args);\n      } else {\n          return fnObject.apply(self, args);\n      }\n    }\n\n    return staticWrapper;\n  }\n\n  // Export the library\n  Immutable.from           = Immutable;\n  Immutable.isImmutable    = isImmutable;\n  Immutable.ImmutableError = ImmutableError;\n  Immutable.merge          = toStatic(merge);\n  Immutable.replace        = toStatic(objectReplace);\n  Immutable.without        = toStatic(without);\n  Immutable.asMutable      = toStaticObjectOrDateOrArray(asMutableObject, asMutableArray, asMutableDate);\n  Immutable.set            = toStaticObjectOrArray(objectSet, arraySet);\n  Immutable.setIn          = toStaticObjectOrArray(objectSetIn, arraySetIn);\n  Immutable.update         = toStatic(update);\n  Immutable.updateIn       = toStatic(updateIn);\n  Immutable.getIn          = toStatic(getIn);\n  Immutable.flatMap        = toStatic(flatMap);\n  Immutable.asObject       = toStatic(asObject);\n  if (!globalConfig.use_static) {\n      Immutable.static = immutableInit({\n          use_static: true\n      });\n  }\n\n  Object.freeze(Immutable);\n\n  return Immutable;\n}\n\n  var Immutable = immutableInit();\n  /* istanbul ignore if */\n  if (typeof define === 'function' && define.amd) {\n    define(function() {\n      return Immutable;\n    });\n  } else if (typeof module === \"object\") {\n    module.exports = Immutable;\n  } else if (typeof exports === \"object\") {\n    exports.Immutable = Immutable;\n  } else if (typeof window === \"object\") {\n    window.Immutable = Immutable;\n  } else if (typeof global === \"object\") {\n    global.Immutable = Immutable;\n  }\n})();\n","import { Button, FormGroup, FormSelect, FormSelectOption, Modal, TextArea } from '@patternfly/react-core';\nimport {\n    addNotification,\n    clearNotifications\n} from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\nimport propTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { STATUS_OPTIONS } from '../../../Helpers/constants';\nimport messages from '../../../Messages';\nimport { FormattedMessage } from 'react-intl';\n\nexport function useStatusSelect(initialValue) {\n    const [statusId, setStatusId] = useState(initialValue);\n    const [props, setProps] = useState({});\n    const StatusSelect = (\n        <FormGroup label={<FormattedMessage {...messages.statusLabel} />} fieldId={'statusId'}>\n            <FormSelect aria-label=\"Select Input\" onChange={selection => setStatusId(selection)} value={statusId} {...props}>\n                {STATUS_OPTIONS.map(({ value, label }) => (\n                    <FormSelectOption key={value} value={value} label={label} />\n                ))}\n            </FormSelect>\n        </FormGroup>\n    );\n    return { StatusSelect, statusId, setStatusId, setProps };\n}\n\nexport function useJustificationInput(initialValue) {\n    const [justification, setJustification] = useState(initialValue);\n    const [props, setProps] = useState({});\n    const JustificationInput = (\n        <FormGroup label={<FormattedMessage {...messages.justificationLabel} />} fieldId={'label'}>\n            <TextArea\n                key=\"input\"\n                type=\"text\"\n                onChange={value => setJustification(value)}\n                value={justification}\n                resizeOrientation='vertical'\n                aria-label={'justification note'}\n                {...props}\n            />\n        </FormGroup>\n    );\n    return { JustificationInput, justification, setJustification, setProps };\n}\n\nexport const BaseModal = ({ items, title, onSave, onSuccessNotification, ...props }) => {\n    const [targetItems, setTargetItems] = useState(items);\n\n    const createNotification = notification => {\n        return props.addNotification(notification);\n    };\n\n    const handleClose = () => {\n        setTargetItems(undefined);\n    };\n\n    const handleSave = () => {\n        onSave().then(() => createNotification(onSuccessNotification));\n        handleClose();\n    };\n\n    useEffect(() => {\n        return () => {\n            props.clearNotifications();\n        };\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Modal\n                variant=\"small\"\n                title={title}\n                isOpen={Boolean(targetItems)}\n                onClose={handleClose}\n                actions={[\n                    <Button key=\"save\" variant=\"primary\" onClick={handleSave}>\n                        {<FormattedMessage {...messages.save} />}\n                    </Button>,\n                    <Button key=\"cancel\" variant=\"secondary\" onClick={handleClose}>\n                        {<FormattedMessage {...messages.cancel} />}\n                    </Button>\n                ]}\n            >\n                {props.children}\n            </Modal>\n        </React.Fragment>\n    );\n};\n\nBaseModal.propTypes = {\n    children: propTypes.any,\n    onClose: propTypes.func,\n    items: propTypes.array,\n    updateRef: propTypes.func,\n    addNotification: propTypes.func,\n    title: propTypes.string,\n    onSave: propTypes.func,\n    onSuccessNotification: propTypes.object,\n    clearNotifications: propTypes.func\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addNotification: data => dispatch(addNotification(data)),\n        clearNotifications: () => dispatch(clearNotifications())\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(BaseModal);\n","import React, { Fragment } from 'react';\nimport { Text, TextContent, TextVariants, Tooltip } from '@patternfly/react-core';\nimport PropType from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport InsightsReportCard from '@redhat-cloud-services/frontend-components-inventory-insights/esm/InsightsReportCard';\nimport { CSAwIcon } from '../../PresentationalComponents/CSAwIcon/CSAwIcon';\nimport Label from '../../PresentationalComponents/Snippets/Label';\nimport messages from '../../../Messages';\n\nexport const InsightsSystemRule = ({ rule, cve }) => {\n    return (\n        <Fragment>\n            { !rule ? <InsightsNoSystemRule cve={cve}/> :\n                <Fragment>\n                    <TextContent className=\"icon-with-label\">\n                        <Text component={TextVariants.h3} style={{ paddingLeft: 'var(--pf-global--spacer--lg)' }}>\n                            <Label>\n                                <Tooltip content={<FormattedMessage {...messages.rulesIconTooltip} />}>\n                                    <CSAwIcon />\n                                </Tooltip>\n                            </Label>\n                            <span className=\"rule-name\">{rule.rule.description || rule.rule.rule_id}</span>\n                        </Text>\n                    </TextContent>\n\n                    <InsightsReportCard report={rule} />\n                </Fragment>\n            }\n        </Fragment>\n\n    );\n};\n\nInsightsSystemRule.propTypes = {\n    rule: PropType.shape({\n        rule: PropType.object,\n        details: PropType.object,\n        resulotion: PropType.object\n    }).isRequired,\n    cve: PropType.string\n};\n\nexport const InsightsNoSystemRule = ({ cve }) => {\n    return (\n        <TextContent className=\"icon-with-label\">\n            <Text component={TextVariants.p}>\n                <FormattedMessage {...messages.exposedSystemNoRules} values={{ cve }} />\n            </Text>\n            <Text component={TextVariants.p} className=\"pf-u-mb-sm\">\n                <FormattedMessage {...messages.exposedSystemNoRulesInfo}/> <CSAwIcon/>\n            </Text>\n            <Text\n                component={TextVariants.a}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://access.redhat.com/articles/2968471\"\n            >\n                <FormattedMessage {...messages.exposedSystemNoRulesInfoLink} />\n            </Text>\n        </TextContent>\n    );\n};\n\nInsightsNoSystemRule.propTypes = {\n    cve: PropType.string\n};\n","import { Tooltip } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon, ServerAltIcon } from '@patternfly/react-icons';\nimport { processDate } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport React from 'react';\nimport { BUSINESS_RISK_OPTIONS, STATUS_OPTIONS } from './constants';\nimport { FormattedMessage } from 'react-intl';\nimport { InsightsSystemRule, InsightsNoSystemRule } from '../Components/SmartComponents/InsightsSystemRule/InsightsSystemRule';\nimport messages from '../Messages';\n\n/**\n * Creates the tables rows for systems exposed table\n *\n * @param {Boolean} isLoading\n * @param {Array} payload fetched data\n * @param {Array} openedRows id of opened(expaned) row\n *\n */\nexport const createExposedSystemsTable = ({ isLoading, payload, openedRows, cve }) => {\n    if (isLoading) {\n        return { data: (payload && payload.data) || [], meta: {}, isLoading };\n    }\n\n    let { data, meta } = payload;\n    const cvesCount = data && data.length;\n    const tableRows = data.map(item => ({\n        ...item.attributes,\n        id: item.id,\n        isOpen: openedRows.includes(item.id),\n        status: item.attributes.status_name,\n        children: item.attributes.rule\n            ? <InsightsSystemRule cve={cve} rule={item.attributes.rule} />\n            : <InsightsNoSystemRule cve={cve}/>\n    }));\n\n    return { data: tableRows, meta: { ...meta, cvesCount },  isLoading };\n\n};\n\nexport function createSystemsListTable(affectedSystems) {\n    let isLoading = affectedSystems.isLoading;\n    if (!isLoading) {\n        let payload = affectedSystems.payload.asMutable();\n        let { data, meta } = payload;\n        const dataWithStatus = data.map(item => ({\n            ...item,\n            attributes: {\n                ...item.attributes,\n                status: (\n                    <span>\n                        {item.attributes.cve_status_id !== item.attributes.status_id ? (\n                            <Tooltip content={<FormattedMessage {...messages.onlyThisSystemCvePair} />}>\n                                <ServerAltIcon />\n                            </Tooltip>\n                        ) : (\n                            ''\n                        )}{' '}\n                        {item.attributes.status_id !== undefined &&\n                            STATUS_OPTIONS.find(option => parseInt(option.value) === item.attributes.status_id).label}\n                    </span>\n                )\n            }\n        }));\n        return { data: dataWithStatus, meta, isLoading };\n    }\n\n    return { data: (affectedSystems.payload && affectedSystems.payload.data) || [], meta: {}, isLoading };\n}\n\nexport function createCveDetailsPage(cves) {\n    let isLoading = cves.isLoading;\n    let error = cves.error;\n    if (!isLoading && !error) {\n        let payload = cves.payload.asMutable();\n        let { data, meta } = payload;\n\n        data = {\n            impact: data.attributes.impact,\n            public_date: processDate(data.attributes.public_date),\n            description: data.attributes.description,\n            synopsis: data.attributes.synopsis,\n            rh_link: createRHDBLink(data.attributes.synopsis),\n            mitre_link: createMitreLink(data.attributes.synopsis),\n            cvss3_score: data.attributes.cvss3_score,\n            cvss2_score: data.attributes.cvss2_score,\n            cvss2_metrics: data.attributes.cvss2_metrics,\n            cvss3_metrics: data.attributes.cvss3_metrics,\n            business_risk: BUSINESS_RISK_OPTIONS.find(\n                option => option.value === data.attributes.business_risk_id.toString()\n            ).label,\n            business_risk_justification: data.attributes.business_risk_text,\n            business_risk_id: data.attributes.business_risk_id,\n            status: STATUS_OPTIONS.find(option => option.value === data.attributes.status_id.toString()).label,\n            status_id: data.attributes.status_id,\n            status_justification: data.attributes.status_text,\n            systems_status_detail: data.attributes.systems_status_detail,\n            systems_status_divergent: data.attributes.systems_status_divergent,\n            rules: data.attributes.rules\n        };\n\n        return { data, meta, isLoading };\n    }\n\n    return { data: [], meta: {}, isLoading, error };\n}\n\nexport function createRHDBLink(item) {\n    return (\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href={'https://access.redhat.com/security/cve/' + item}>\n            {<FormattedMessage {...messages.RHDBLink} />}{<ExternalLinkAltIcon className=\"pf-u-ml-sm\"/>}\n        </a>\n    );\n}\n\nexport function createMitreLink(item) {\n    return (\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href={'https://cve.mitre.org/cgi-bin/cvename.cgi?name=' + item}>\n            {<FormattedMessage {...messages.MITRELink} />}{<ExternalLinkAltIcon />}\n        </a>\n    );\n}\n\nexport const cveTableRowActions = (methods, rowIndex) => {\n    return (rowIndex % 2 === 0) ?\n        [\n            {\n                title: <FormattedMessage {...messages.editBusinessRisk} />,\n                onClick: (event, rowId, rowData) =>\n                    methods.showBusinessRiskModal([\n                        {\n                            id: rowData.id,\n                            business_risk_id: rowData.business_risk_id,\n                            justification: rowData.business_risk_justification\n                        }\n                    ])\n            },\n            {\n                title: <FormattedMessage {...messages.editStatus} />,\n                onClick: (event, rowId, rowData) =>\n                    methods.showStatusModal([\n                        {\n                            id: rowData.id,\n                            status_id: rowData.status_id,\n                            justification: rowData.status_justification\n                        }\n                    ])\n            }\n        ] : null;\n};\n\nexport const systemCveTableRowActions = (methods, entity, rowIndex) => {\n    return (rowIndex % 2 === 0) ?\n        [{\n            title: <FormattedMessage {...messages.editStatus} />,\n            onClick: (event, rowId, rowData) =>\n                methods.showStatusModal([\n                    {\n                        id: rowData.id,\n                        display_name: entity.display_name,\n                        status_id: rowData.status_id,\n                        cve_status_id: rowData.cve_status_id,\n                        justification: rowData.status_justification,\n                        cve_justification: rowData.cve_status_justification\n                    }\n                ],\n                entity\n                )\n        }] : null;\n};\n\nexport const systemExposedTableRowActions = (showStatusModal, cve, rowIndex) => {\n    return (rowIndex % 2 === 0) ?\n        [{\n            title: <FormattedMessage {...messages.editStatus} />,\n            onClick: (event, rowId, rowData) => {\n                showStatusModal(\n                    [{\n                        id: cve.id,\n                        status_id: cve.status_id,\n                        justification: cve.justification\n                    }],\n                    [{\n                        id: rowData.id,\n                        display_name: rowData.display_name,\n                        status_id: rowData.status_id,\n                        justification: rowData.status_text\n                    }]\n                );\n            }\n        }] : null;\n};\n\nexport const systemTableRowActions = (optOut, isOptOut) => [\n    {\n        title: (\n            isOptOut\n                ? <FormattedMessage {...messages.kebabResumeAnalysis} />\n                : <FormattedMessage {...messages.kebabExcludeAnalysis} />\n        ),\n        onClick: (event, rowId, rowData) => {\n            optOut([rowData.id]);\n        }\n    }\n];\n","import union from 'lodash/union';\nimport messages from '../Messages';\nimport { intl } from '../Utilities/IntlProvider';\n\nconst selectAllCheckbox = ({ selectedItems, selectorHandler, items, fetchResource, multiRow = false }) => {\n\n    const selectedItemsArray = Array.from(selectedItems); // we might get array or set and there's no common method for size\n    const selectedItemsCount = selectedItemsArray && selectedItemsArray.length;\n    const { meta, data } = items;\n    const selectPageNumber = data && (((Array.isArray(data) && data.length) && multiRow) ? data.length / 2 : data.length);\n\n    const handleSelectPage = () => {\n        const { data } = items;\n        const collectedItems = union(data.filter(item => item.id).map(item => item.id), selectedItemsArray);\n        selectorHandler(true, collectedItems);\n    };\n\n    const handleUnselectAll = () => {\n        selectorHandler(false, []);\n    };\n\n    const handleSelectAll = () => {\n\n        let { payload } = fetchResource && fetchResource({ page_size: meta.total_items, page: 1 });\n        payload &&\n            payload.then(({ data: response }) => {\n                //TODO: current only one new endpoint is introduced. Once, we have all new endpoints,  get rid of this map\n                const items = response.map(item => item.id && item.id || item);\n                selectorHandler(true, items);\n            });\n    };\n\n    const handleOnCheckboxChange = () => {\n        if (selectedItemsCount === 0) {\n            handleSelectAll();\n        } else {\n            handleUnselectAll();\n        }\n    };\n\n    return ({\n        handleOnCheckboxChange,\n        items: [\n            {\n                title: intl.formatMessage(messages.selectNone),\n                onClick: handleUnselectAll\n            },\n            {\n                title: `${intl.formatMessage(messages.selectPage, { count: selectPageNumber })}`,\n                onClick: handleSelectPage\n            },\n            {\n                title: `${intl.formatMessage(messages.selectAll, { count: meta.total_items ? meta.total_items : 0 })}`,\n                onClick: handleSelectAll\n            }\n        ]\n    }\n\n    );\n};\n\nexport default selectAllCheckbox;\n","var baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    baseUniq = require('./_baseUniq'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array of unique values, in order, from all given arrays using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.union([2], [1, 2]);\n * // => [2, 1]\n */\nvar union = baseRest(function(arrays) {\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n});\n\nmodule.exports = union;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components';\nimport { intl } from '../../../../Utilities/IntlProvider';\n\nimport debounce from 'lodash/debounce';\nimport React from 'react';\n\nconst SearchFilter = (label, placeholder, search, apply) => {\n    const [searchValue, setSearchValue] = React.useState();\n    const [handleSearch] = React.useState(() =>\n        debounce(filter =>  {if (filter !== undefined) { apply({ filter, page: 1 }); }}, 400)\n    );\n\n    React.useEffect(() => setSearchValue(search), [search]);\n\n    return {\n        type: conditionalFilterType.text,\n        label: intl.formatMessage(label),\n        filterValues: {\n            'aria-label': 'search-field',\n            id: `search-${label.id}`,\n            onChange: (event, value) => {\n                setSearchValue(value);\n                handleSearch(value);\n            },\n            placeholder: intl.formatMessage(placeholder),\n            value: searchValue\n        }\n    };\n};\n\nexport default SearchFilter;\n","import messages from '../Messages';\nimport { FILTERS } from './constants';\nimport { intl } from '../Utilities/IntlProvider';\n\nexport const handleChangePage = (_event, page, apply) => apply({ page });\n\nexport const handleSetPageSize = (_event, perPage, apply) => apply({ page_size: perPage, page: 1 });\n\nexport const exportConfig = (methods) => (\n    { onSelect: (_event, fileType) =>   methods.downloadReport(fileType) }\n);\n\nexport const buildActiveFilters = (currentFilters, filterRulevalues = []) => {\n\n    const { filter } = currentFilters;\n\n    const buildChip = (key, parameter) => (\n        FILTERS[key].items.reduce((object, item) => {\n            if (parameter === item.value) {\n                object.name = item.label;\n                object.value = item.value ;\n            }\n            else if (key === 'security_rule' && !['true', 'false'].includes(parameter))\n            {\n                const filteredRule = filterRulevalues.find(({ value }) => value === parameter);\n                object.name = filteredRule && filteredRule.label || parameter ;\n                object.value = parameter;\n            }\n\n            return object;\n        }, {})\n    );\n\n    const buildChips = (paramValues, key) => {\n        return paramValues.reduce((values, parameter) => {\n            values.push(buildChip(key, parameter));\n            return values;\n        }, []);\n    };\n\n    const filterChips = Object.keys(FILTERS).reduce((array, key) => {\n        if (key !== 'show_all' && Object.keys(currentFilters).includes(key) && !['', undefined].includes(currentFilters[key])) {\n\n            const multiValue = typeof currentFilters[key] === 'string' && currentFilters[key].split(',');\n            const filteredValues = (multiValue && multiValue.length > 1)\n                                            && buildChips(multiValue, key)\n                                            || [buildChip(key, currentFilters[key])];\n\n            array.push({ key, multiValue, category: FILTERS[key].title, chips: filteredValues });\n        }\n\n        return array;\n    }, []);\n\n    filter && filterChips.push(\n        { key: 'filter',\n            category: intl.formatMessage(messages.searchLabel),\n            chips: [{ name: filter }]\n        }\n    );\n\n    return filterChips;\n};\n\nexport const removeFilters = (chips, apply) =>{\n    const emptyFilter = chips.reduce((obj, item) =>{\n        if (item.key === 'filter' || (item.multiValue && item.multiValue.length === 1)) {\n            obj[item.key] = '';\n        }\n        else {\n            obj[item.key] = item.multiValue.filter(value => !item.chips.some(chip => chip.value === value)).join(',');\n        }\n\n        return obj;\n    }, {});\n\n    apply(emptyFilter);\n};\n","import { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\n\nclass DownloadReport  {\n    constructor() {\n        this.defaultParams = {\n            page: 1,\n            page_size: Number.MAX_SAFE_INTEGER,\n            date: new Date().toISOString().replace(/[T:]/g, '-').split('.')[0] + '-utc'\n        };\n\n        this.params = {\n            cve: ''\n        };\n\n        this.pages = ['systems-exposed', 'system-cves', 'cves', 'system-list'];\n        this.formats = ['csv', 'json'];\n    }\n\n    filename = (page) => {\n        switch (page) {\n            case 'systems-exposed':\n                return `vulnerability_systems-exposed-${this.params.cve}--${this.defaultParams.date}`;\n            case 'system-list':\n                return `vulnerability_systems--${this.defaultParams.date}`;\n            default:\n                return `vulnerability_cves--${this.defaultParams.date}`;\n\n        }\n    }\n\n    checkTypes = (fetchData, page, format) => {\n        if (typeof fetchData !== 'function') {\n            throw `exec expects the 1st param to be funtion. Received ${typeof fetchData}`;\n        }\n\n        if (!this.pages.includes(page)) {\n            throw `Page ${page} does not exist`;\n        }\n\n        if (!this.formats.includes(format)) {\n            throw `Format ${format} is not supported`;\n        }\n    }\n\n    /**\n     * Execute and download the report\n     *\n     * @param {Function} fetchData - Function to be called in order to fetch data.\n     * @param {Object || Array} params - Object to be sent as request params. If you need to pass extra argument, pass an array.\n     * @param {String} format - Supported formats to download are CSV and JSON.\n     * @param {String} page - Name of the page based on which the filename will be determined.\n     * @returns {void}\n     */\n    exec = async (fetchData, params, format, page) => {\n        this.checkTypes(fetchData, page, format);\n        this.params.cve = Array.isArray(params) ? params[0] : '';\n\n        try {\n            let { payload } = Array.isArray(params)\n                ? await fetchData(this.params.cve, {\n                    ...params[1],\n                    ...this.defaultParams,\n                    data_format: format\n                }) :\n                await fetchData({\n                    ...params,\n                    ...this.defaultParams,\n                    data_format: format\n                });\n\n            let { data: response } = await payload;\n            let data = format === 'json' ? JSON.stringify(response) : response;\n            // downaloads the files\n            downloadFile(data, this.filename(page), format);\n        } catch (error) {\n            throw `${error}`;\n        }\n\n    }\n\n}\n\nexport default new DownloadReport();\n"],"sourceRoot":""}