{"version":3,"sources":["webpack:///./src/Components/PresentationalComponents/PaginationWrapper/PaginationWrapper.js","webpack:///./src/Helpers/VulnerabilitiesHelper.js","webpack:///./node_modules/lodash/flatMap.js","webpack:///./node_modules/lodash/_baseFlatten.js","webpack:///./node_modules/lodash/_arrayPush.js","webpack:///./node_modules/lodash/_isFlattenable.js","webpack:///./node_modules/lodash/_Symbol.js","webpack:///./node_modules/lodash/isArguments.js","webpack:///./node_modules/lodash/isArray.js","webpack:///./node_modules/lodash/map.js","webpack:///./src/Components/SmartComponents/CVEs/vulnerabilities.scss?f1f2","webpack:///./src/Components/SmartComponents/CVEs/vulnerabilities.scss","webpack:///./src/Components/SmartComponents/Remediation/Remediation.js","webpack:///./src/Components/SmartComponents/SelectAllCheckbox/SelectAllCheckbox.js","webpack:///./src/Components/SmartComponents/VulnerabilitiesCVEs/VulnerabilitiesCVEs.scss?a20a","webpack:///./src/Components/SmartComponents/VulnerabilitiesCVEs/VulnerabilitiesCVEs.scss","webpack:///./src/Components/SmartComponents/CVEs/VulnerabilitiesTable.js","webpack:///./src/Components/SmartComponents/CVEs/VulnerabilitiesTableToolbar.js","webpack:///./src/Components/SmartComponents/CVEs/VulnerabilitiesCves.js","webpack:///./src/Components/SmartComponents/CVEs/CVEs.js","webpack:///./src/Components/SmartComponents/VulnerabilitiesCVEs/VulnerabilitiesCVEs.js"],"names":["PaginationWrapper","handleChangePage","_event","pageNumber","props","apply","page","handleSetPageSize","perPage","page_size","nextProps","meta","this","variant","total_items","Fragment","itemCount","DEFAULT_PAGE_SIZE","perPageOptions","PER_PAGE_OPTIONS","onSetPage","onPerPageSelect","PaginationVariant","Component","propTypes","func","object","string","defaultProps","createCveListByAccount","cveList","parameters","isLoading","payload","data","errors","row","index","id","business_risk_id","attributes","business_risk_justification","business_risk_text","cells","title","key","to","synopsis","processDate","public_date","impact","hasLabel","parseCvssScore","cvss2_score","cvss3_score","systems_affected","toString","businessRiskOptions","find","option","value","label","isOpen","openedCves","includes","selected","selectedCves","component","TextVariants","h6","p","description","parent","createCveListBySystem","systemId","handleCVELink","tooltipPosition","currentStatusName","status","currentStatusId","status_id","cveName","hasNotification","location","href","indexOf","document","baseURI","baseFlatten","map","module","exports","collection","iteratee","arrayPush","isFlattenable","array","depth","predicate","isStrict","result","length","values","offset","Symbol","isArguments","isArray","spreadableSymbol","isConcatSpreadable","undefined","Array","content","i","options","transform","locals","push","Remediation","remediationProvider","size","issues","cve","systems","dispatchNotification","addNotification","dataProvider","isDisabled","onRemediationCreated","getNotification","className","connect","dispatch","notification","routerParams","SelectAllCheckbox","handleOnToggle","setState","handleOnSelect","state","handleSelectPage","cves","selectorHandler","filter","item","handleSelectAll","fetchResource","then","cveNames","handleUnselectAll","handleOnCheckboxChange","selectedItems","nextState","checkboxlabel","Boolean","dropdownItems","onClick","onSelect","toggle","splitButtonItems","isChecked","onChange","onToggle","number","VulnerabilitiesTableWithContext","noCves","entity","context","hasOwnProperty","FilterNotFoundForCVE","EmptyCVEListForSystem","EmptyCVEList","handleOnCollapse","event","rowKey","rows","isSelected","rowId","methods","selectCves","handleBusinessRiskToggle","isBusinessRiskOpen","header","actions","rowData","showBusinessRiskModal","justification","colSize","rowSize","Table","aria-label","onCollapse","openCve","sortBy","createSortBy","sort","onSort","direction","handleSortColumn","gridBreakPoint","any","params","expandCve","CVETableContext","Consumer","VulnerabilitiesToolbarWithContext","showRemediationButton","selectedCvesCount","filterCategories","filtersShowAll","filtersCVSSScore","filtersSeverity","filtersBusinessRisk","filtersPublishDate","kebabOptions","kebabItemEditBusinessRisk","kebabItemDownloadJSON","downloadReport","kebabItemDownloadCSV","ToolbarGroup","ops","show_all","Filters","searchPlaceholder","filterValues","BaseKebab","ToolbarItem","FilterChips","bool","totalNumber","VulnerabilitiesToolbar","React","createContext","transforms","sortable","classNames","columnTransforms","cellFormatters","expandable","VulnerabilitiesCves","processError","GenericError","config","cvssEntry","CVSSOptions","cvss_filter","split","parseFloat","from","cvss_from","cvss_to","publicEntry","PublicDateOptions","publish_date","public_from","format","public_to","changeParameters","sendRequest","selectCve","createUrlParams","allParams","show_irrelevant","allowedParams","Object","keys","forEach","queryString","qs","stringify","history","fetchData","showAllParam","fetchCveListByAccount","Number","MAX_SAFE_INTEGER","data_format","response","JSON","downloadFile","Date","toISOString","BusinessRiskModal","open","updateRef","StatusDropdown","setCallback","queryObject","parse","search","Provider","Stack","StackItem","showAllCheckbox","withRouter","VulnerabilitiesStore","changeCveListParameters","CVEs","setHeader","breadcrumbs","dispatchSetHeader","dispatchAction","VulnerabilitiesCVEs","Page","VulnerabilityHeader"],"mappings":"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","file":"js/VulnerabilitiesCVEs.js","sourcesContent":["/* eslint-disable camelcase */\n\nimport { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { DEFAULT_PAGE_SIZE, PER_PAGE_OPTIONS } from '../../../Helpers/constants';\n\nclass PaginationWrapper extends Component {\n    static propTypes = {\n        apply: propTypes.func,\n        meta: propTypes.object,\n        variant: propTypes.string\n    };\n\n    static defaultProps = {\n        variant: 'top'\n    };\n    shouldComponentUpdate(nextProps) {\n        if (nextProps.meta === this.props.meta) {\n            return false;\n        }\n\n        return true;\n    }\n    handleChangePage = (_event, pageNumber) => this.props.apply({ page: pageNumber });\n\n    handleSetPageSize = (_event, perPage) => this.props.apply({ page_size: perPage, page: 1 });\n\n    render() {\n        const { meta, variant } = this.props;\n        const { page, total_items, page_size } = meta;\n        return (\n            <React.Fragment>\n                <Pagination\n                    page={page || 1}\n                    itemCount={total_items || 0}\n                    perPage={page_size || DEFAULT_PAGE_SIZE}\n                    perPageOptions={PER_PAGE_OPTIONS}\n                    onSetPage={this.handleChangePage}\n                    onPerPageSelect={this.handleSetPageSize}\n                    variant={PaginationVariant[variant]}\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default PaginationWrapper;\n","import { Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { Shield } from '@redhat-cloud-services/frontend-components';\nimport { parseCvssScore, processDate } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport { flatMap } from 'lodash';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport StatusDropdown from '../Components/SmartComponents/StatusDropdown/StatusDropdown';\nimport { businessRiskOptions } from './constants';\n\nexport function createCveListByAccount({ cveList, parameters }) {\n    let isLoading = cveList.isLoading;\n    if (!isLoading) {\n        let payload = cveList.payload;\n\n        let { data, meta, errors } = payload;\n\n        data =\n            data &&\n            flatMap(data, (row, index) => [\n                {\n                    id: row.id,\n                    business_risk_id: row.attributes.business_risk_id,\n                    business_risk_justification: row.attributes.business_risk_text,\n                    cells: [\n                        {\n                            title: (\n                                <span key={row.id}>\n                                    <Link to={'/cves/' + row.attributes.synopsis}>{row.attributes.synopsis}</Link>\n                                </span>\n                            )\n                        },\n\n                        { title: <span key={row.id}>{processDate(row.attributes.public_date)}</span> },\n                        {\n                            title: (\n                                <span key={row.id}>\n                                    <Shield impact={row.attributes.impact} hasLabel />\n                                </span>\n                            )\n                        },\n                        {\n                            title: (\n                                <span key={row.id}>\n                                    {parseCvssScore(row.attributes.cvss2_score, row.attributes.cvss3_score, true)}\n                                </span>\n                            )\n                        },\n\n                        { title: <span key={row.id}>{row.attributes.systems_affected.toString()}</span> },\n                        {\n                            title: (\n                                <span key={row.id}>\n                                    {\n                                        businessRiskOptions.find(\n                                            option => option.value === row.attributes.business_risk_id.toString()\n                                        ).label\n                                    }\n                                </span>\n                            )\n                        }\n                    ],\n                    isOpen: parameters.openedCves.includes(row.id),\n                    selected: parameters.selectedCves.includes(row.id)\n                },\n                {\n                    cells: [\n                        {\n                            title: (\n                                <TextContent>\n                                    <Text component={TextVariants.h6}>Description</Text>\n                                    <Text component={TextVariants.p}>{row.attributes.description}</Text>\n                                </TextContent>\n                            )\n                        }\n                    ],\n                    parent: index * 2\n                }\n            ]);\n        return { data, meta, isLoading, errors };\n    }\n\n    return { data: [], meta: (cveList.payload && cveList.payload.meta) || {}, isLoading };\n}\n\nexport function createCveListBySystem(systemId, cveList) {\n    let isLoading = cveList && cveList.isLoading;\n    if (!isLoading) {\n        const {\n            payload: { data, meta, errors }\n        } = cveList;\n        return {\n            data:\n                data &&\n                flatMap(data, (row, index) => [\n                    {\n                        id: row.id,\n                        business_risk_id: row.attributes.business_risk_id,\n                        business_risk_justification: row.attributes.business_risk_text,\n                        cells: [\n                            {\n                                title: <span key={row.id}>{handleCVELink(row.attributes.synopsis)}</span>\n                            },\n                            {\n                                title: <span key={row.id}>{processDate(row.attributes.public_date)}</span>\n                            },\n                            {\n                                title: (\n                                    <span key={row.id}>\n                                        {parseCvssScore(row.attributes.cvss2_score, row.attributes.cvss3_score, true)}\n                                    </span>\n                                )\n                            },\n                            {\n                                title: (\n                                    <span key={row.id}>\n                                        <Shield impact={row.attributes.impact} tooltipPosition={'right'} hasLabel />\n                                    </span>\n                                )\n                            },\n                            {\n                                title: (\n                                    <span key={row.attributes.synopsis}>\n                                        <StatusDropdown\n                                            currentStatusName={row.attributes.status}\n                                            systemId={systemId}\n                                            currentStatusId={row.attributes.status_id}\n                                            cveName={row.attributes.synopsis}\n                                            hasNotification\n                                        />\n                                    </span>\n                                )\n                            },\n                            {\n                                title: (\n                                    <span key={row.id}>\n                                        {\n                                            businessRiskOptions.find(\n                                                option => option.value === row.attributes.business_risk_id.toString()\n                                            ).label\n                                        }\n                                    </span>\n                                )\n                            }\n                        ],\n                        isOpen: false,\n                        selected: false\n                    },\n                    {\n                        cells: [\n                            {\n                                title: row.attributes.description\n                            }\n                        ],\n                        parent: index * 2\n                    }\n                ]),\n            meta,\n            errors,\n            isLoading\n        };\n    }\n\n    return { data: [], meta: (cveList.payload && cveList.payload.meta) || {}, isLoading };\n}\n\nfunction handleCVELink(synopsis) {\n    if (location.href.indexOf('vulnerability') !== -1) {\n        return <Link to={'/cves/' + synopsis}>{synopsis}</Link>;\n    } else {\n        return <a href={`${document.baseURI}rhel/vulnerability/cves/${synopsis}`}>{synopsis}</a>;\n    }\n}\n","var baseFlatten = require('./_baseFlatten'),\n    map = require('./map');\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nmodule.exports = flatMap;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./vulnerabilities.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./vulnerabilities.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./vulnerabilities.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".ins-active-app-vulnerabilities .cvetable-toolbar,\\n.page__Vulnerabilities .cvetable-toolbar {\\n  justify-content: space-between; }\\n  .ins-active-app-vulnerabilities .cvetable-toolbar > div,\\n  .page__Vulnerabilities .cvetable-toolbar > div {\\n    align-self: flex-end; }\\n\\n.ins-active-app-vulnerabilities .space-between-toolbar-items,\\n.page__Vulnerabilities .space-between-toolbar-items {\\n  justify-content: space-between;\\n  flex-wrap: nowrap; }\\n  .ins-active-app-vulnerabilities .space-between-toolbar-items > div,\\n  .page__Vulnerabilities .space-between-toolbar-items > div {\\n    flex-wrap: nowrap; }\\n\\n.ins-active-app-vulnerabilities .vulnerability-toolbar-spacing,\\n.page__Vulnerabilities .vulnerability-toolbar-spacing {\\n  justify-content: flex-start; }\\n  .ins-active-app-vulnerabilities .vulnerability-toolbar-spacing > div:not(:last-child),\\n  .page__Vulnerabilities .vulnerability-toolbar-spacing > div:not(:last-child) {\\n    margin-right: var(--pf-global--spacer--sm); }\\n\\n@media screen and (max-width: 1100px) {\\n  .ins-active-app-vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-options-menu,\\n  .ins-active-app-vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-pagination__nav,\\n  .page__Vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-options-menu,\\n  .page__Vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-pagination__nav {\\n    display: none;\\n    visibility: hidden; }\\n  .ins-active-app-vulnerabilities .pf-c-pagination__total-items,\\n  .page__Vulnerabilities .pf-c-pagination__total-items {\\n    display: flex;\\n    visibility: visible; } }\\n\\n.ins-active-app-vulnerabilities .pf-c-pagination.pf-m-footer.ins-c-pagination-next,\\n.page__Vulnerabilities .pf-c-pagination.pf-m-footer.ins-c-pagination-next {\\n  margin-left: auto; }\\n\\n.ins-active-app-vulnerabilities #download-report,\\n.page__Vulnerabilities #download-report {\\n  cursor: pointer; }\\n\\n.ins-active-app-vulnerabilities .number-of-results,\\n.page__Vulnerabilities .number-of-results {\\n  display: inline-block;\\n  min-width: 55px;\\n  text-align: right;\\n  margin-right: 5px; }\\n\\n.ins-active-app-vulnerabilities .table-header-icon,\\n.page__Vulnerabilities .table-header-icon {\\n  margin-right: 5px;\\n  margin-right: 0.3125rem; }\\n\\n.ins-active-app-vulnerabilities .status-dropdown-column > svg,\\n.page__Vulnerabilities .status-dropdown-column > svg {\\n  color: var(--pf-global--primary-color--100); }\\n\\n.ins-active-app-vulnerabilities .status-dropdown-column:hover,\\n.page__Vulnerabilities .status-dropdown-column:hover {\\n  cursor: pointer; }\\n  .ins-active-app-vulnerabilities .status-dropdown-column:hover > svg,\\n  .page__Vulnerabilities .status-dropdown-column:hover > svg {\\n    visibility: visible; }\\n\\n.ins-active-app-vulnerabilities .status-dropdown-column > svg,\\n.page__Vulnerabilities .status-dropdown-column > svg {\\n  visibility: hidden; }\\n\\n.ins-active-app-vulnerabilities tbody > tr > td.pf-c-table__check,\\n.page__Vulnerabilities tbody > tr > td.pf-c-table__check {\\n  vertical-align: middle;\\n  padding-top: 0px !important;\\n  padding-bottom: 0px !important; }\\n\\n.ins-active-app-vulnerabilities thead > tr > td.pf-c-table__check,\\n.page__Vulnerabilities thead > tr > td.pf-c-table__check {\\n  visibility: hidden; }\\n\\n.ins-active-app-vulnerabilities .pf-c-table tr > *,\\n.page__Vulnerabilities .pf-c-table tr > * {\\n  vertical-align: middle !important; }\\n\\n.ins-active-app-vulnerabilities p.pf-c-empty-state__body ul,\\n.page__Vulnerabilities p.pf-c-empty-state__body ul {\\n  margin-top: 0px;\\n  margin-bottom: var(--pf-global--spacer--sm); }\\n  .ins-active-app-vulnerabilities p.pf-c-empty-state__body ul li,\\n  .page__Vulnerabilities p.pf-c-empty-state__body ul li {\\n    margin-top: 0px; }\\n\\n@media (max-width: 1400px) and (min-width: 992px) {\\n  .ins-active-app-vulnerabilities .hide-description,\\n  .page__Vulnerabilities .hide-description {\\n    --pf-hidden-visible--Display: var(\\n                --pf-hidden-visible--hidden--Display\\n            );\\n    --pf-hidden-visible--Visibility: var(\\n                --pf-hidden-visible--hidden--Visibility\\n            ); } }\\n\\n@media (min-width: 1400px) {\\n  .ins-active-app-vulnerabilities .remediation-btn-sml,\\n  .page__Vulnerabilities .remediation-btn-sml {\\n    display: none;\\n    visibility: hidden; } }\\n\\n@media (max-width: 1400px) {\\n  .ins-active-app-vulnerabilities .remediation-btn-lg,\\n  .page__Vulnerabilities .remediation-btn-lg {\\n    display: none;\\n    visibility: none; } }\\n\\n.ins-active-app-vulnerabilities .col-width-10,\\n.page__Vulnerabilities .col-width-10 {\\n  width: 10%; }\\n\\n.ins-active-app-vulnerabilities .col-width-15,\\n.page__Vulnerabilities .col-width-15 {\\n  width: 15%; }\\n\\n.ins-active-app-vulnerabilities .col-width-description,\\n.page__Vulnerabilities .col-width-description {\\n  width: 35%; }\\n\\n.ins-active-app-vulnerabilities .no-wrap,\\n.page__Vulnerabilities .no-wrap {\\n  white-space: nowrap; }\\n\\n.ins-active-app-vulnerabilities .pf-c-table__expandable-row-content,\\n.page__Vulnerabilities .pf-c-table__expandable-row-content {\\n  white-space: normal; }\\n\\n.ins-active-app-vulnerabilities tr.pf-m-expanded .pf-c-table__action,\\n.page__Vulnerabilities tr.pf-m-expanded .pf-c-table__action {\\n  display: none; }\\n\", \"\"]);\n\n// exports\n","/* eslint-disable camelcase */\n\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport RemediationButton from '@redhat-cloud-services/frontend-components-remediations/RemediationButton';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport propTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass Remediation extends Component {\n    static propTypes = {\n        systemId: propTypes.string,\n        selectedCves: propTypes.object,\n        addNotification: propTypes.func\n    };\n\n    shouldComponentUpdate(nextProps) {\n        if (nextProps.selectedCves !== this.props.selectedCves) {\n            return true;\n        }\n\n        return false;\n    }\n\n    remediationProvider = selectedCves => {\n        if (!selectedCves || selectedCves.size === 0) {\n            return false;\n        }\n\n        return {\n            issues: [...selectedCves].map(cve => ({ id: `vulnerabilities:${cve}`, description: cve })),\n            systems: [this.props.systemId]\n        };\n    };\n\n    render() {\n        const { selectedCves, addNotification: dispatchNotification } = this.props;\n        return (\n            <div>\n                <RemediationButton\n                    dataProvider={() => this.remediationProvider(selectedCves)}\n                    isDisabled={this.remediationProvider(selectedCves) === false}\n                    onRemediationCreated={result => dispatchNotification(result.getNotification())}\n                >\n                    <span className={'remediation-btn-lg'}>Remediate with Ansible</span>\n                    <span className={'remediation-btn-sml'}>Remediate</span>\n                </RemediationButton>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    null,\n    dispatch => ({\n        addNotification: notification => dispatch(addNotification(notification))\n    })\n)(routerParams(Remediation));\n","import { Checkbox, Dropdown, DropdownItem, DropdownToggle } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nclass SelectAllCheckbox extends Component {\n    static propTypes = {\n        selectedItems: propTypes.number,\n        selectorHandler: propTypes.func,\n        fetchResource: propTypes.func,\n        cves: propTypes.object\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.isOpen !== this.state.isOpen || nextProps.selectedItems !== this.props.selectedItems) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOnToggle = isOpen => {\n        this.setState({\n            isOpen\n        });\n    };\n\n    handleOnSelect = () => {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    };\n\n    handleSelectPage = () => {\n        const {\n            cves: { data },\n            selectorHandler\n        } = this.props;\n        const cveNames = data.filter(item => item.id).map(cve => cve.id);\n        selectorHandler(true, cveNames);\n    };\n\n    handleSelectAll = () => {\n        const {\n            cves: { meta },\n            selectorHandler,\n            fetchResource\n        } = this.props;\n        // eslint-disable-next-line camelcase\n        let { payload } = fetchResource && fetchResource({ page_size: meta.total_items, page: 1 });\n        payload &&\n            payload.then(({ data: response }) => {\n                const cveNames = response.map(cve => cve.id);\n                selectorHandler(true, cveNames);\n            });\n    };\n\n    handleUnselectAll = () => {\n        const { selectorHandler } = this.props;\n        selectorHandler(false, undefined);\n    };\n\n    handleOnCheckboxChange = () => {\n        const { selectedItems } = this.props;\n        if (selectedItems === 0) {\n            this.handleSelectAll();\n        } else {\n            this.handleUnselectAll();\n        }\n    };\n\n    render() {\n        const { selectedItems, cves } = this.props;\n        const { meta } = cves;\n        const { isOpen } = this.state;\n        const checkboxlabel = Boolean(selectedItems) && `${selectedItems} selected`;\n\n        const dropdownItems = [\n            <DropdownItem key=\"none\" onClick={this.handleUnselectAll}>\n                Select none (0 items)\n            </DropdownItem>,\n            <DropdownItem key=\"page\" onClick={this.handleSelectPage}>\n                Select page ({meta.page_size} items)\n            </DropdownItem>,\n            <DropdownItem key=\"all\" onClick={this.handleSelectAll}>\n                Select all ({meta.total_items} items)\n            </DropdownItem>\n        ];\n        return (\n            <Dropdown\n                onSelect={this.handleOnSelect}\n                toggle={\n                    <DropdownToggle\n                        splitButtonItems={[\n                            <Checkbox\n                                key={'selectAllcheckbox'}\n                                isChecked={meta.total_items === selectedItems ? true : selectedItems === 0 ? false : null}\n                                onChange={this.handleOnCheckboxChange}\n                            />,\n                            checkboxlabel\n                        ]}\n                        onToggle={this.handleOnToggle}\n                    />\n                }\n                isOpen={isOpen}\n                dropdownItems={dropdownItems}\n            />\n        );\n    }\n}\n\nexport default SelectAllCheckbox;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./VulnerabilitiesCVEs.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./VulnerabilitiesCVEs.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./VulnerabilitiesCVEs.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".pf-c-tabs.vulnerability-tabs {\\n  background-color: var(--pf-global--BackgroundColor--100);\\n  padding-left: var(--pf-c-page__main-section--md--PaddingLeft); }\\n\", \"\"]);\n\n// exports\n","import { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { SkeletonTable, TableToolbar } from '@redhat-cloud-services/frontend-components';\nimport propTypes from 'prop-types';\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { EmptyCVEList, EmptyCVEListForSystem, FilterNotFoundForCVE } from '../../../Helpers/constants';\nimport { createSortBy, handleSortColumn } from '../../../Helpers/MiscHelper';\nimport { expandCve } from '../../../Store/Actions/Actions';\nimport PaginationWrapper from '../../PresentationalComponents/PaginationWrapper/PaginationWrapper';\nimport { CVETableContext } from './VulnerabilitiesCves';\n\nclass VulnerabilitiesTableWithContext extends Component {\n    static propTypes = {\n        context: propTypes.any,\n        header: propTypes.array,\n        entity: propTypes.object,\n        openCve: propTypes.func\n    };\n\n    noCves = () => {\n        const { entity, context } = this.props;\n        const { cves } = context;\n        const filterFields = ['filter', 'cvss_from', 'cvss_to', 'public_from', 'public_to', 'impact', 'status_id'].filter(\n            item => cves.meta.hasOwnProperty(item) && cves.meta[item]\n        );\n        if (filterFields.length !== 0) {\n            return FilterNotFoundForCVE;\n        } else if (entity) {\n            return EmptyCVEListForSystem;\n        } else if (cves.data.length === 0) {\n            return EmptyCVEList;\n        }\n    };\n\n    handleOnCollapse = (event, rowKey, isOpen) => {\n        const { rows } = this.state;\n        /**\n         * Please do not use rowKey as row index for more complex tables.\n         * Rather use some kind of identifier like ID passed with each row.\n         */\n        rows[rowKey].isOpen = isOpen;\n        this.setState({\n            rows\n        });\n    };\n\n    handleOnSelect = (event, isSelected, rowId) => {\n        const { context } = this.props;\n        const { cves, methods } = context;\n        const cveName = cves.data[rowId] && cves.data[rowId].id;\n        methods.selectCves(isSelected, cveName);\n    };\n\n    handleBusinessRiskToggle = () => {\n        this.setState(({ isBusinessRiskOpen }) => ({\n            isBusinessRiskOpen: !isBusinessRiskOpen\n        }));\n    };\n\n    render() {\n        const { context, header } = this.props;\n        const { cves, methods } = context;\n        const actions = [\n            {\n                title: 'Edit business risk',\n                onClick: (event, rowId, rowData) =>\n                    methods.showBusinessRiskModal([\n                        {\n                            id: rowData.id,\n                            business_risk_id: rowData.business_risk_id,\n                            justification: rowData.business_risk_justification\n                        }\n                    ])\n            }\n        ];\n        return (\n            <Fragment>\n                {!cves.isLoading ? (\n                    <Fragment>\n                        <Table\n                            aria-label={'Vulnerability CVE table'}\n                            onSelect={this.handleOnSelect}\n                            cells={header}\n                            rows={cves.data}\n                            onCollapse={(event, rowKey) => this.props.openCve(rowKey)}\n                            actions={actions}\n                            sortBy={createSortBy([{ key: 'collapse' }, { key: 'checkbox' }, ...header], cves.meta.sort)}\n                            onSort={(event, key, direction) =>\n                                handleSortColumn(\n                                    key,\n                                    direction,\n                                    [{ key: 'collapse' }, { key: 'checkbox' }, ...header],\n                                    cves.meta.sort,\n                                    methods.apply\n                                )\n                            }\n                            gridBreakPoint={'grid-lg'}\n                        >\n                            {(!cves.isLoading && cves.data.length === 0 && this.noCves()) || (\n                                <Fragment>\n                                    <TableHeader />\n                                    <TableBody />\n                                </Fragment>\n                            )}\n                        </Table>\n                        <TableToolbar>\n                            <PaginationWrapper variant=\"bottom\" meta={cves.meta} apply={methods.apply} />\n                        </TableToolbar>\n                    </Fragment>\n                ) : (\n                    <SkeletonTable colSize={6} rowSize={20} />\n                )}\n            </Fragment>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        openCve: params => dispatch(expandCve(params))\n    };\n};\n\nconst VulnerabilitiesTable = props => (\n    <CVETableContext.Consumer>\n        {context => <VulnerabilitiesTableWithContext context={context} {...props} />}\n    </CVETableContext.Consumer>\n);\nexport default connect(\n    null,\n    mapDispatchToProps\n)(VulnerabilitiesTable);\n","/* eslint-disable camelcase */\nimport { ToolbarGroup, ToolbarItem } from '@patternfly/react-core';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components';\nimport propTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport {\n    filtersBusinessRisk,\n    filtersCVSSScore,\n    filtersPublishDate,\n    filtersSeverity,\n    filtersShowAll\n} from '../../../Helpers/constants';\nimport BaseKebab from '../../PresentationalComponents/DownloadReportKebab/BaseKebab';\nimport {\n    kebabItemDownloadCSV,\n    kebabItemDownloadJSON,\n    kebabItemEditBusinessRisk\n} from '../../PresentationalComponents/DownloadReportKebab/KebabItems';\nimport FilterChips from '../../PresentationalComponents/Filters/FilterChips';\nimport Filters from '../../PresentationalComponents/Filters/Filters';\nimport PaginationWrapper from '../../PresentationalComponents/PaginationWrapper/PaginationWrapper';\nimport Remediation from '../Remediation/Remediation';\nimport SelectAllCheckbox from '../SelectAllCheckbox/SelectAllCheckbox';\nimport { CVETableContext } from './VulnerabilitiesCves';\n\nclass VulnerabilitiesToolbarWithContext extends Component {\n    static propTypes = {\n        showRemediationButton: propTypes.bool,\n        entity: propTypes.object,\n        context: propTypes.object\n    };\n\n    static defaultProps = {\n        showRemediationButton: false,\n        totalNumber: 0,\n        apply: () => undefined,\n        downloadReport: () => undefined\n    };\n\n    render() {\n        const { showRemediationButton, entity, context } = this.props;\n        const { cves, params, methods } = context;\n        const { selectedCves } = params;\n        const selectedCvesCount = selectedCves && selectedCves.length;\n        const filterCategories = [filtersShowAll, filtersCVSSScore, filtersSeverity, filtersBusinessRisk, filtersPublishDate];\n        const kebabOptions = [\n            kebabItemEditBusinessRisk(\n                methods.showBusinessRiskModal,\n                selectedCves.map(item => ({ id: item, business_risk_id: '0' })),\n                { isDisabled: !selectedCvesCount }\n            ),\n            kebabItemDownloadJSON(methods.downloadReport),\n            kebabItemDownloadCSV(methods.downloadReport)\n        ];\n        return (\n            <React.Fragment>\n                <TableToolbar className=\"space-between-toolbar-items\">\n                    <ToolbarGroup className=\"vulnerability-toolbar-spacing\">\n                        <SelectAllCheckbox\n                            selectedItems={selectedCvesCount}\n                            selectorHandler={methods.selectCves}\n                            cves={cves}\n                            fetchResource={ops => methods.fetchResource({ ...params, ...ops, show_all: !params.show_all })}\n                        />\n                        <Filters\n                            searchPlaceholder=\"Find a CVE…\"\n                            apply={methods.apply}\n                            filterValues={params}\n                            filterCategories={filterCategories}\n                        />\n\n                        {showRemediationButton && <Remediation systemId={entity.id} selectedCves={selectedCves} />}\n                        <BaseKebab dropdownItems={kebabOptions} />\n                    </ToolbarGroup>\n\n                    <ToolbarGroup>\n                        <PaginationWrapper apply={methods.apply} meta={cves.meta} />\n                    </ToolbarGroup>\n                </TableToolbar>\n                <TableToolbar className=\"pf-u-pt-0\">\n                    <ToolbarGroup>\n                        <ToolbarItem>\n                            <FilterChips filterValues={params} filterCategories={filterCategories} apply={methods.apply} />\n                        </ToolbarItem>\n                    </ToolbarGroup>\n                </TableToolbar>\n            </React.Fragment>\n        );\n    }\n}\n\nconst VulnerabilitiesToolbar = props => (\n    <CVETableContext.Consumer>\n        {context => <VulnerabilitiesToolbarWithContext context={context} {...props} />}\n    </CVETableContext.Consumer>\n);\nexport default VulnerabilitiesToolbar;\n","/* eslint-disable camelcase */\nimport { Stack, StackItem } from '@patternfly/react-core';\nimport { classNames, expandable, sortable } from '@patternfly/react-table';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport propTypes from 'prop-types';\nimport qs from 'query-string';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { CVSSOptions, GenericError, PublicDateOptions } from '../../../Helpers/constants';\nimport { createCveListByAccount } from '../../../Helpers/VulnerabilitiesHelper';\nimport { changeCveListParameters, fetchCveListByAccount, selectCve } from '../../../Store/Actions/Actions';\nimport BusinessRiskModal from '../BusinessRiskModal/BusinessRiskModal';\nimport StatusDropdown from '../StatusDropdown/StatusDropdown';\nimport './vulnerabilities.scss';\nimport SystemCveTable from './VulnerabilitiesTable';\nimport SystemCveTableToolbar from './VulnerabilitiesTableToolbar';\n\nexport const CVETableContext = React.createContext({});\n\nconst header = [\n    {\n        title: 'Name',\n        key: 'synopsis',\n        transforms: [sortable, classNames('col-width-10')],\n        columnTransforms: [classNames('no-wrap')],\n        cellFormatters: [expandable]\n    },\n    {\n        title: 'Publish date',\n        key: 'public_date',\n        transforms: [sortable, classNames('col-width-10')],\n        columnTransforms: [classNames('hide-description')]\n    },\n    {\n        title: 'Impact',\n        key: 'impact',\n        transforms: [sortable, classNames('col-width-10')],\n        columnTransforms: [classNames('no-wrap')]\n    },\n    {\n        title: 'CVSS base score',\n        key: 'cvss_score',\n        transforms: [sortable, classNames('col-width-10')]\n    },\n\n    { title: 'Systems exposed', key: 'systems_affected', transforms: [sortable, classNames('col-width-10')] },\n    { title: 'Business risk', key: 'business_risk', transforms: [sortable, classNames('col-width-10')] }\n];\n\nclass VulnerabilitiesCves extends Component {\n    static propTypes = {\n        cveList: propTypes.any,\n        fetchData: propTypes.func,\n        history: propTypes.object,\n        location: propTypes.object,\n        parameters: propTypes.object,\n        changeParameters: propTypes.func,\n        selectCve: propTypes.func\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isBusinessRiskOpen: false,\n            BusinessRiskModal: () => null\n        };\n    }\n\n    componentDidMount() {\n        const { parameters } = this.props;\n        StatusDropdown.setCallback(this.sendRequest);\n        const queryObject = qs.parse(this.props.location.search);\n        queryObject.show_irrelevant = queryObject.show_irrelevant === 'true';\n        if (queryObject.show_irrelevant) {\n            queryObject.show_all = undefined;\n        }\n\n        this.apply({ ...parameters, ...queryObject });\n    }\n\n    processError = () => {\n        return GenericError;\n    };\n\n    apply = (config = {}) => {\n        if (config.hasOwnProperty('cvss_filter')) {\n            let cvssEntry = CVSSOptions.find(item => item.value === config.cvss_filter);\n\n            if (typeof cvssEntry === 'undefined' &&\n                typeof config.cvss_filter !== 'undefined'\n            ) {\n                let values = config.cvss_filter.split(/[^0-9]+/).filter(item => parseFloat(item));\n                cvssEntry = { from: values[0], to: values[1] };\n            }\n            else if (typeof cvssEntry === 'undefined' &&\n                typeof config.cvss_filter === 'undefined') {\n                cvssEntry = { from: undefined, to: undefined };\n            }\n\n            config.cvss_from = cvssEntry.from;\n            config.cvss_to = cvssEntry.to;\n        }\n\n        if (config.hasOwnProperty('publish_date')) {\n            let publicEntry = PublicDateOptions.find(item => item.value === config.publish_date);\n\n            if (typeof publicEntry !== 'undefined') {\n                config.public_from = publicEntry.from && publicEntry.from.format('YYYY-MM-DD');\n                config.public_to = publicEntry.to && publicEntry.to.format('YYYY-MM-DD');\n            } else {\n                config.public_from = undefined;\n                config.public_to = undefined;\n                config.publish_date = undefined;\n            }\n\n        }\n\n        this.props.changeParameters(config).then(this.sendRequest);\n    };\n\n    selectCves = (isSelected, cveNames) => {\n        this.props.selectCve(cveNames || []);\n    };\n\n    createUrlParams = allParams => {\n        const params = { ...allParams };\n        params.show_irrelevant = !params.show_all;\n        const allowedParams = [\n            'show_irrelevant',\n            'cvss_filter',\n            'publish_date',\n            'filter',\n            'limit',\n            'offset',\n            'page',\n            'page_size',\n            'sort',\n            'impact',\n            'business_risk_id'\n        ];\n        Object.keys(allParams).forEach(\n            key =>\n                (params[key] === undefined || params[key] === '' || !allowedParams.includes(key) || params[key] === false) &&\n                delete params[key]\n        );\n        const queryString = qs.stringify(params);\n        this.props.history.push('?' + queryString);\n    };\n\n    sendRequest = () => {\n        const { fetchData, parameters } = this.props;\n        //TODO: need a better way of doing this\n        const showAllParam = parameters.hasOwnProperty('show_all') && !parameters.show_all;\n        // eslint-disable-next-line camelcase\n        fetchData && fetchData({ ...parameters, show_all: showAllParam });\n        this.createUrlParams(parameters);\n    };\n\n    downloadReport = format => {\n        const { parameters } = this.props;\n        const params = { ...parameters, show_all: !parameters.show_all };\n        let { payload } = fetchCveListByAccount({ ...params, page_size: Number.MAX_SAFE_INTEGER, data_format: format, page: 1 });\n        payload &&\n            payload.then(({ data: response }) => {\n                const data = format === 'json' ? JSON.stringify(response) : response;\n                return downloadFile(data, `vulnerability_cves-${new Date().toISOString()}`, format);\n            });\n    };\n\n    showBusinessRiskModal = cves => {\n        this.setState({\n            BusinessRiskModal: () => <BusinessRiskModal open cves={cves} updateRef={this.apply} />\n        });\n    };\n\n    render() {\n        const { cveList, parameters } = this.props;\n        const { apply, downloadReport, selectCves, showBusinessRiskModal } = this;\n        const { BusinessRiskModal } = this.state;\n        const cves = cveList;\n        const { errors } = cves;\n        if (!errors) {\n            return (\n                <CVETableContext.Provider\n                    value={{\n                        cves,\n                        params: { ...this.state, ...parameters },\n                        methods: {\n                            apply,\n                            downloadReport,\n                            selectCves,\n                            showBusinessRiskModal,\n                            fetchResource: fetchCveListByAccount\n                        }\n                    }}\n                >\n                    <BusinessRiskModal />\n\n                    <Stack>\n                        <StackItem>\n                            <SystemCveTableToolbar showAllCheckbox />\n                        </StackItem>\n                        <StackItem>\n                            <SystemCveTable header={header} showAllCheckbox />\n                        </StackItem>\n                    </Stack>\n                </CVETableContext.Provider>\n            );\n        } else {\n            return this.processError(errors);\n        }\n    }\n}\n\nfunction mapStateToProps({ VulnerabilitiesStore }) {\n    return {\n        cveList: VulnerabilitiesStore && createCveListByAccount(VulnerabilitiesStore),\n        parameters: VulnerabilitiesStore && VulnerabilitiesStore.parameters\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchData: params => dispatch(fetchCveListByAccount(params)),\n        selectCve: params => dispatch(selectCve(params)),\n        changeParameters: params => dispatch(changeCveListParameters(params))\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(VulnerabilitiesCves)\n);\n","import propTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { dispatchAction } from '../../../Helpers/Dispatcher';\nimport { setHeader } from '../../../Store/Actions/Actions';\nimport VulnerabilitiesCves from './VulnerabilitiesCves';\n\nclass CVEs extends React.Component {\n    static propTypes = {\n        setHeader: propTypes.func\n    };\n\n    constructor(props) {\n        super(props);\n    }\n\n    dispatchSetHeader() {\n        this.props.setHeader({\n            title: 'Vulnerability',\n            breadcrumbs: []\n        });\n    }\n\n    render() {\n        this.dispatchSetHeader();\n        return <VulnerabilitiesCves />;\n    }\n}\n\nconst mapDispatchToProps = () => {\n    return {\n        setHeader: header => dispatchAction(setHeader(header))\n    };\n};\n\nexport default withRouter(\n    connect(\n        null,\n        mapDispatchToProps\n    )(CVEs)\n);\n","import { Page } from '@patternfly/react-core';\nimport { Main } from '@redhat-cloud-services/frontend-components';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { dispatchAction } from '../../../Helpers/Dispatcher';\nimport { setHeader } from '../../../Store/Actions/Actions';\nimport CVEs from '../CVEs/CVEs';\nimport VulnerabilityHeader from '../VulnerabilityHeader/VulnerabilityHeader';\nimport './VulnerabilitiesCVEs.scss';\n\nclass VulnerabilitiesCVEs extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Page>\n                <VulnerabilityHeader />\n                <Main>\n                    <CVEs />\n                </Main>\n            </Page>\n        );\n    }\n}\n\nconst mapDispatchToProps = () => {\n    return {\n        setHeader: header => dispatchAction(setHeader(header))\n    };\n};\n\nexport default withRouter(\n    connect(\n        null,\n        mapDispatchToProps\n    )(VulnerabilitiesCVEs)\n);\n"],"sourceRoot":""}