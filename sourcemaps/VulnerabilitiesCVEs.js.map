{"version":3,"sources":["webpack:///./src/Components/PresentationalComponents/PaginationWrapper/PaginationWrapper.js","webpack:///./src/Helpers/VulnerabilitiesHelper.js","webpack:///./node_modules/lodash/flatMap.js","webpack:///./node_modules/lodash/_baseFlatten.js","webpack:///./node_modules/lodash/_arrayPush.js","webpack:///./node_modules/lodash/_isFlattenable.js","webpack:///./node_modules/lodash/_Symbol.js","webpack:///./node_modules/lodash/isArguments.js","webpack:///./node_modules/lodash/isArray.js","webpack:///./node_modules/lodash/map.js","webpack:///./src/Components/SmartComponents/Modals/CveStatusModal.js","webpack:///./src/Components/SmartComponents/CVEs/vulnerabilities.scss?f1f2","webpack:///./src/Components/SmartComponents/CVEs/vulnerabilities.scss","webpack:///./src/Components/SmartComponents/Remediation/Remediation.js","webpack:///./src/Components/SmartComponents/SelectAllCheckbox/SelectAllCheckbox.js","webpack:///./src/Components/SmartComponents/VulnerabilitiesCVEs/VulnerabilitiesCVEs.scss?a20a","webpack:///./src/Components/SmartComponents/VulnerabilitiesCVEs/VulnerabilitiesCVEs.scss","webpack:///./src/Components/SmartComponents/CVEs/VulnerabilitiesTable.js","webpack:///./src/Components/SmartComponents/CVEs/VulnerabilitiesTableToolbar.js","webpack:///./src/Components/SmartComponents/CVEs/VulnerabilitiesCves.js","webpack:///./src/Components/SmartComponents/CVEs/CVEs.js","webpack:///./src/Components/SmartComponents/VulnerabilitiesCVEs/VulnerabilitiesCVEs.js"],"names":["PaginationWrapper","handleChangePage","_event","pageNumber","props","apply","page","handleSetPageSize","perPage","page_size","nextProps","meta","this","variant","total_items","Fragment","itemCount","DEFAULT_PAGE_SIZE","perPageOptions","PER_PAGE_OPTIONS","onSetPage","onPerPageSelect","PaginationVariant","Component","propTypes","func","object","string","defaultProps","createCveListByAccount","cveList","parameters","isLoading","payload","data","errors","row","index","id","business_risk_id","attributes","business_risk_justification","business_risk_text","status_id","status_justification","status_text","cells","title","key","to","synopsis","processDate","public_date","impact","hasLabel","parseCvssScore","cvss2_score","cvss3_score","systems_affected","toString","businessRiskOptions","find","option","value","label","systems_status_divergent","content","color","STATUS_OPTIONS","isOpen","openedCves","includes","selected","selectedCves","component","TextVariants","h6","p","description","parent","createCveListBySystem","systemId","handleCVELink","tooltipPosition","cve_status_id","location","href","indexOf","document","baseURI","baseFlatten","map","module","exports","collection","iteratee","arrayPush","isFlattenable","array","depth","predicate","isStrict","result","length","values","offset","Symbol","isArguments","isArray","spreadableSymbol","isConcatSpreadable","undefined","Array","CveStatusModal","cves","updateRef","useState","useStatusSelect","StatusSelect","statusId","useJustificationInput","justification","JustificationInput","checkboxState","setCheckboxState","successNotification","items","onSave","cveIds","item","setCveStatus","parseInt","cve","then","setSystemCveStatus","onSuccessNotification","gutter","fieldId","name","isChecked","onChange","checked","size","isFilled","i","options","transform","locals","push","Remediation","remediationProvider","issues","systems","dispatchNotification","addNotification","dataProvider","isDisabled","onRemediationCreated","getNotification","className","connect","dispatch","notification","routerParams","SelectAllCheckbox","handleOnToggle","setState","handleOnSelect","state","handleSelectPage","selectorHandler","filter","handleSelectAll","fetchResource","cveNames","handleUnselectAll","handleOnCheckboxChange","selectedItems","nextState","checkboxlabel","Boolean","selectPageNumber","itemLabel","number","dropdownItems","onClick","onSelect","toggle","splitButtonItems","onToggle","VulnerabilitiesTableWithContext","noCves","entity","context","hasOwnProperty","FilterNotFoundForCVE","EmptyCVEListForSystem","EmptyCVEList","handleOnCollapse","event","rowKey","rows","isSelected","rowId","methods","cveName","selectCves","handleBusinessRiskToggle","isBusinessRiskOpen","header","colSize","rowSize","Table","aria-label","onCollapse","openCve","actions","cveTableRowActions","sortBy","createSortBy","sort","onSort","direction","handleSortColumn","gridBreakPoint","any","params","expandCve","CVETableContext","Consumer","VulnerabilitiesToolbarWithContext","showRemediationButton","selectedCvesCount","filterCategories","filtersShowAll","filtersCVSSScore","filtersSeverity","filtersBusinessRisk","filtersPublishDate","kebabOptions","kebabItemEditBusinessRisk","showBusinessRiskModal","kebabItemEditStatus","showStatusModal","kebabItemDownloadJSON","downloadReport","kebabItemDownloadCSV","ToolbarGroup","ops","show_all","Filters","searchPlaceholder","filterValues","BaseKebab","ToolbarItem","FilterChips","bool","totalNumber","VulnerabilitiesToolbar","React","createContext","transforms","sortable","classNames","columnTransforms","cellFormatters","expandable","VulnerabilitiesCves","processError","GenericError","config","cvssEntry","CVSSOptions","cvss_filter","split","parseFloat","from","cvss_from","cvss_to","publicEntry","PublicDateOptions","publish_date","public_from","format","public_to","changeParameters","sendRequest","selectCve","createUrlParams","allParams","show_irrelevant","allowedParams","Object","keys","forEach","queryString","qs","stringify","history","fetchData","showAllParam","fetchCveListByAccount","Number","MAX_SAFE_INTEGER","data_format","response","JSON","downloadFile","Date","toISOString","BusinessRiskModal","StatusModal","isStatuskOpen","queryObject","parse","search","Provider","Stack","StackItem","showAllCheckbox","withRouter","VulnerabilitiesStore","changeCveListParameters","CVEs","setHeader","breadcrumbs","dispatchSetHeader","VulnerabilitiesCVEs","Page","VulnerabilityHeader"],"mappings":"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","file":"js/VulnerabilitiesCVEs.js","sourcesContent":["/* eslint-disable camelcase */\n\nimport { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { DEFAULT_PAGE_SIZE, PER_PAGE_OPTIONS } from '../../../Helpers/constants';\n\nclass PaginationWrapper extends Component {\n    static propTypes = {\n        apply: propTypes.func,\n        meta: propTypes.object,\n        variant: propTypes.string\n    };\n\n    static defaultProps = {\n        variant: 'top'\n    };\n    shouldComponentUpdate(nextProps) {\n        if (nextProps.meta === this.props.meta) {\n            return false;\n        }\n\n        return true;\n    }\n    handleChangePage = (_event, pageNumber) => this.props.apply({ page: pageNumber });\n\n    handleSetPageSize = (_event, perPage) => this.props.apply({ page_size: perPage, page: 1 });\n\n    render() {\n        const { meta, variant } = this.props;\n        const { page, total_items, page_size } = meta;\n        return (\n            <React.Fragment>\n                <Pagination\n                    page={page || 1}\n                    itemCount={total_items || 0}\n                    perPage={page_size || DEFAULT_PAGE_SIZE}\n                    perPageOptions={PER_PAGE_OPTIONS}\n                    onSetPage={this.handleChangePage}\n                    onPerPageSelect={this.handleSetPageSize}\n                    variant={PaginationVariant[variant]}\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default PaginationWrapper;\n","import { Text, TextContent, TextVariants, Tooltip } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon, ServerAltIcon } from '@patternfly/react-icons';\nimport { Shield } from '@redhat-cloud-services/frontend-components';\nimport { parseCvssScore, processDate } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport { flatMap } from 'lodash';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { businessRiskOptions, STATUS_OPTIONS } from './constants';\n\nexport function createCveListByAccount({ cveList, parameters }) {\n    let isLoading = cveList.isLoading;\n    if (!isLoading) {\n        let payload = cveList.payload;\n\n        let { data, meta, errors } = payload;\n\n        data =\n            data &&\n            flatMap(data, (row, index) => [\n                {\n                    id: row.id,\n                    business_risk_id: row.attributes.business_risk_id,\n                    business_risk_justification: row.attributes.business_risk_text,\n                    status_id: row.attributes.status_id,\n                    status_justification: row.attributes.status_text,\n                    cells: [\n                        {\n                            title: (\n                                <span key={row.id}>\n                                    <Link to={'/cves/' + row.attributes.synopsis}>{row.attributes.synopsis}</Link>\n                                </span>\n                            )\n                        },\n\n                        { title: <span key={row.id}>{processDate(row.attributes.public_date)}</span> },\n                        {\n                            title: (\n                                <span key={row.id}>\n                                    <Shield impact={row.attributes.impact} hasLabel />\n                                </span>\n                            )\n                        },\n                        {\n                            title: (\n                                <span key={row.id}>\n                                    {parseCvssScore(row.attributes.cvss2_score, row.attributes.cvss3_score, true)}\n                                </span>\n                            )\n                        },\n\n                        { title: <span key={row.id}>{row.attributes.systems_affected.toString()}</span> },\n                        {\n                            title: (\n                                <span key={row.id}>\n                                    {\n                                        businessRiskOptions.find(\n                                            option => option.value === row.attributes.business_risk_id.toString()\n                                        ).label\n                                    }\n                                </span>\n                            )\n                        },\n                        {\n                            title: (\n                                <span key={row.id}>\n                                    {row.attributes.systems_status_divergent > 0 ? (\n                                        <Tooltip content=\"Individual CVE-Status pairs have differences from overall CVE status\">\n                                            <ExclamationTriangleIcon color={'var(--pf-global--warning-color--100)'} />\n                                        </Tooltip>\n                                    ) : (\n                                        ''\n                                    )}{' '}\n                                    {STATUS_OPTIONS.find(option => option.value === row.attributes.status_id.toString()).label}\n                                </span>\n                            )\n                        }\n                    ],\n                    isOpen: parameters.openedCves.includes(row.id),\n                    selected: parameters.selectedCves.includes(row.id)\n                },\n                {\n                    cells: [\n                        {\n                            title: (\n                                <TextContent>\n                                    <Text component={TextVariants.h6}>Description</Text>\n                                    <Text component={TextVariants.p}>{row.attributes.description}</Text>\n                                </TextContent>\n                            )\n                        }\n                    ],\n                    parent: index * 2\n                }\n            ]);\n        return { data, meta, isLoading, errors };\n    }\n\n    return { data: [], meta: (cveList.payload && cveList.payload.meta) || {}, isLoading };\n}\n\nexport function createCveListBySystem(systemId, cveList) {\n    let isLoading = cveList && cveList.isLoading;\n    if (!isLoading) {\n        const {\n            payload: { data, meta, errors }\n        } = cveList;\n        return {\n            data:\n                data &&\n                flatMap(data, (row, index) => [\n                    {\n                        id: row.id,\n                        business_risk_id: row.attributes.business_risk_id,\n                        business_risk_justification: row.attributes.business_risk_text,\n                        status_id: row.attributes.status_id,\n                        status_justification: row.attributes.status_text,\n                        cells: [\n                            {\n                                title: <span key={row.id}>{handleCVELink(row.attributes.synopsis)}</span>\n                            },\n                            {\n                                title: <span key={row.id}>{processDate(row.attributes.public_date)}</span>\n                            },\n                            {\n                                title: (\n                                    <span key={row.id}>\n                                        {parseCvssScore(row.attributes.cvss2_score, row.attributes.cvss3_score, true)}\n                                    </span>\n                                )\n                            },\n                            {\n                                title: (\n                                    <span key={row.id}>\n                                        <Shield impact={row.attributes.impact} tooltipPosition={'right'} hasLabel />\n                                    </span>\n                                )\n                            },\n                            {\n                                title: (\n                                    <span key={row.id}>\n                                        {\n                                            businessRiskOptions.find(\n                                                option => option.value === row.attributes.business_risk_id.toString()\n                                            ).label\n                                        }\n                                    </span>\n                                )\n                            },\n                            {\n                                title: (\n                                    <span key={row.id}>\n                                        {row.attributes.cve_status_id !== row.attributes.status_id ? (\n                                            <Tooltip content=\"Applies only to this system-CVE pair\">\n                                                <ServerAltIcon />\n                                            </Tooltip>\n                                        ) : (\n                                            ''\n                                        )}{' '}\n                                        {\n                                            STATUS_OPTIONS.find(option => option.value === row.attributes.status_id.toString())\n                                            .label\n                                        }\n                                    </span>\n                                )\n                            }\n                        ],\n                        isOpen: false,\n                        selected: false\n                    },\n                    {\n                        cells: [\n                            {\n                                title: row.attributes.description\n                            }\n                        ],\n                        parent: index * 2\n                    }\n                ]),\n            meta,\n            errors,\n            isLoading\n        };\n    }\n\n    return { data: [], meta: (cveList.payload && cveList.payload.meta) || {}, isLoading };\n}\n\nfunction handleCVELink(synopsis) {\n    if (location.href.indexOf('vulnerability') !== -1) {\n        return <Link to={'/cves/' + synopsis}>{synopsis}</Link>;\n    } else {\n        return <a href={`${document.baseURI}rhel/vulnerability/cves/${synopsis}`}>{synopsis}</a>;\n    }\n}\n","var baseFlatten = require('./_baseFlatten'),\n    map = require('./map');\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nmodule.exports = flatMap;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","import { Checkbox, Form, FormGroup, Split, SplitItem, Stack, StackItem } from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons';\nimport propTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { setCveStatus, setSystemCveStatus } from '../../../Helpers/APIHelper';\nimport BaseModal, { useJustificationInput, useStatusSelect } from './BaseModal';\n\nexport const CveStatusModal = ({ cves, updateRef }) => {\n    const [cveList] = useState(cves);\n    const { StatusSelect, statusId } = useStatusSelect(getDefaultStatus());\n    const { JustificationInput, justification } = useJustificationInput(getDefaultLabel());\n    const [checkboxState, setCheckboxState] = useState(false);\n\n    const handleSave = () => {\n        const cveIds = cveList.map(item => item.id);\n        return setCveStatus({\n            status_id: parseInt(statusId),\n            cve: cveIds,\n            status_text: justification\n        })\n        .then(() => !checkboxState && setSystemCveStatus({ cve: cveIds }))\n        .then(updateRef);\n    };\n\n    function getDefaultStatus() {\n        return (cveList && cveList.length === 1 && cveList[0].status_id.toString()) || '0';\n    }\n\n    function getDefaultLabel() {\n        return (cveList && cveList.length === 1 && cveList[0].justification) || '';\n    }\n\n    const successNotification = {\n        variant: 'success',\n        title: `Status updated for ${cveList.length} CVEs`\n    };\n\n    return (\n        <BaseModal\n            items={cveList}\n            onSave={handleSave}\n            onSuccessNotification={successNotification}\n            title=\"Set status for this CVE and all hosts\"\n        >\n            <Stack gutter={'md'}>\n                <StackItem>\n                    <Form key=\"key\">\n                        {StatusSelect}\n                        {JustificationInput}\n                        <FormGroup fieldId={'overwrite'}>\n                            <Checkbox\n                                label=\"Do not overwrite individual host status\"\n                                id=\"alt-form-checkbox-1\"\n                                name=\"alt-form-checkbox-1\"\n                                isChecked={checkboxState}\n                                onChange={checked => setCheckboxState(checked)}\n                            />\n                        </FormGroup>\n                        <FormGroup fieldId={'info'}>\n                            <Split>\n                                <SplitItem>\n                                    <InfoCircleIcon size=\"md\" color=\"var(--pf-global--active-color--400)\" />\n                                </SplitItem>\n                                <SplitItem isFilled>\n                                    This status is applied to all existing matching hosts. Any new matching hosts will have the\n                                    status &quot;Not review&quot;\n                                </SplitItem>\n                            </Split>\n                        </FormGroup>\n                    </Form>\n                </StackItem>\n            </Stack>\n        </BaseModal>\n    );\n};\n\nCveStatusModal.propTypes = {\n    cves: propTypes.array,\n    updateRef: propTypes.func\n};\n\nexport default CveStatusModal;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./vulnerabilities.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./vulnerabilities.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./vulnerabilities.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".ins-active-app-vulnerabilities .cvetable-toolbar,\\n.page__Vulnerabilities .cvetable-toolbar {\\n  justify-content: space-between; }\\n  .ins-active-app-vulnerabilities .cvetable-toolbar > div,\\n  .page__Vulnerabilities .cvetable-toolbar > div {\\n    align-self: flex-end; }\\n\\n.ins-active-app-vulnerabilities .space-between-toolbar-items,\\n.page__Vulnerabilities .space-between-toolbar-items {\\n  justify-content: space-between;\\n  flex-wrap: nowrap; }\\n  .ins-active-app-vulnerabilities .space-between-toolbar-items > div,\\n  .page__Vulnerabilities .space-between-toolbar-items > div {\\n    flex-wrap: nowrap; }\\n\\n.ins-active-app-vulnerabilities .vulnerability-toolbar-spacing,\\n.page__Vulnerabilities .vulnerability-toolbar-spacing {\\n  justify-content: flex-start; }\\n  .ins-active-app-vulnerabilities .vulnerability-toolbar-spacing > div:not(:last-child),\\n  .page__Vulnerabilities .vulnerability-toolbar-spacing > div:not(:last-child) {\\n    margin-right: var(--pf-global--spacer--sm); }\\n\\n@media screen and (max-width: 1100px) {\\n  .ins-active-app-vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-options-menu,\\n  .ins-active-app-vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-pagination__nav,\\n  .page__Vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-options-menu,\\n  .page__Vulnerabilities .pf-c-pagination:not(.pf-m-footer) .pf-c-pagination__nav {\\n    display: none;\\n    visibility: hidden; }\\n  .ins-active-app-vulnerabilities .pf-c-pagination__total-items,\\n  .page__Vulnerabilities .pf-c-pagination__total-items {\\n    display: flex;\\n    visibility: visible; } }\\n\\n.ins-active-app-vulnerabilities .pf-c-pagination.pf-m-footer.ins-c-pagination-next,\\n.page__Vulnerabilities .pf-c-pagination.pf-m-footer.ins-c-pagination-next {\\n  margin-left: auto; }\\n\\n.ins-active-app-vulnerabilities #download-report,\\n.page__Vulnerabilities #download-report {\\n  cursor: pointer; }\\n\\n.ins-active-app-vulnerabilities .number-of-results,\\n.page__Vulnerabilities .number-of-results {\\n  display: inline-block;\\n  min-width: 55px;\\n  text-align: right;\\n  margin-right: 5px; }\\n\\n.ins-active-app-vulnerabilities .table-header-icon,\\n.page__Vulnerabilities .table-header-icon {\\n  margin-right: 5px;\\n  margin-right: 0.3125rem; }\\n\\n.ins-active-app-vulnerabilities .status-dropdown-column > svg,\\n.page__Vulnerabilities .status-dropdown-column > svg {\\n  color: var(--pf-global--primary-color--100); }\\n\\n.ins-active-app-vulnerabilities .status-dropdown-column:hover,\\n.page__Vulnerabilities .status-dropdown-column:hover {\\n  cursor: pointer; }\\n  .ins-active-app-vulnerabilities .status-dropdown-column:hover > svg,\\n  .page__Vulnerabilities .status-dropdown-column:hover > svg {\\n    visibility: visible; }\\n\\n.ins-active-app-vulnerabilities .status-dropdown-column > svg,\\n.page__Vulnerabilities .status-dropdown-column > svg {\\n  visibility: hidden; }\\n\\n.ins-active-app-vulnerabilities tbody > tr > td.pf-c-table__check,\\n.page__Vulnerabilities tbody > tr > td.pf-c-table__check {\\n  vertical-align: middle;\\n  padding-top: 0px !important;\\n  padding-bottom: 0px !important; }\\n\\n.ins-active-app-vulnerabilities thead > tr > td.pf-c-table__check,\\n.page__Vulnerabilities thead > tr > td.pf-c-table__check {\\n  visibility: hidden; }\\n\\n.ins-active-app-vulnerabilities .pf-c-table tr > *,\\n.page__Vulnerabilities .pf-c-table tr > * {\\n  vertical-align: middle !important; }\\n\\n.ins-active-app-vulnerabilities p.pf-c-empty-state__body ul,\\n.page__Vulnerabilities p.pf-c-empty-state__body ul {\\n  margin-top: 0px;\\n  margin-bottom: var(--pf-global--spacer--sm); }\\n  .ins-active-app-vulnerabilities p.pf-c-empty-state__body ul li,\\n  .page__Vulnerabilities p.pf-c-empty-state__body ul li {\\n    margin-top: 0px; }\\n\\n@media (max-width: 1400px) and (min-width: 992px) {\\n  .ins-active-app-vulnerabilities .hide-description,\\n  .page__Vulnerabilities .hide-description {\\n    --pf-hidden-visible--Display: var(\\n                --pf-hidden-visible--hidden--Display\\n            );\\n    --pf-hidden-visible--Visibility: var(\\n                --pf-hidden-visible--hidden--Visibility\\n            ); } }\\n\\n@media (min-width: 1400px) {\\n  .ins-active-app-vulnerabilities .remediation-btn-sml,\\n  .page__Vulnerabilities .remediation-btn-sml {\\n    display: none;\\n    visibility: hidden; } }\\n\\n@media (max-width: 1400px) {\\n  .ins-active-app-vulnerabilities .remediation-btn-lg,\\n  .page__Vulnerabilities .remediation-btn-lg {\\n    display: none;\\n    visibility: none; } }\\n\\n.ins-active-app-vulnerabilities .col-width-10,\\n.page__Vulnerabilities .col-width-10 {\\n  width: 10%; }\\n\\n.ins-active-app-vulnerabilities .col-width-15,\\n.page__Vulnerabilities .col-width-15 {\\n  width: 15%; }\\n\\n.ins-active-app-vulnerabilities .col-width-description,\\n.page__Vulnerabilities .col-width-description {\\n  width: 35%; }\\n\\n.ins-active-app-vulnerabilities .no-wrap,\\n.page__Vulnerabilities .no-wrap {\\n  white-space: nowrap; }\\n\\n.ins-active-app-vulnerabilities .pf-c-table__expandable-row-content,\\n.page__Vulnerabilities .pf-c-table__expandable-row-content {\\n  white-space: normal; }\\n\\n.ins-active-app-vulnerabilities tr.pf-m-expanded .pf-c-table__action,\\n.page__Vulnerabilities tr.pf-m-expanded .pf-c-table__action {\\n  display: none; }\\n\", \"\"]);\n\n// exports\n","/* eslint-disable camelcase */\n\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport RemediationButton from '@redhat-cloud-services/frontend-components-remediations/RemediationButton';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport propTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass Remediation extends Component {\n    static propTypes = {\n        systemId: propTypes.string,\n        selectedCves: propTypes.object,\n        addNotification: propTypes.func\n    };\n\n    shouldComponentUpdate(nextProps) {\n        if (nextProps.selectedCves !== this.props.selectedCves) {\n            return true;\n        }\n\n        return false;\n    }\n\n    remediationProvider = selectedCves => {\n        if (!selectedCves || selectedCves.size === 0) {\n            return false;\n        }\n\n        return {\n            issues: [...selectedCves].map(cve => ({ id: `vulnerabilities:${cve}`, description: cve })),\n            systems: [this.props.systemId]\n        };\n    };\n\n    render() {\n        const { selectedCves, addNotification: dispatchNotification } = this.props;\n        return (\n            <div>\n                <RemediationButton\n                    dataProvider={() => this.remediationProvider(selectedCves)}\n                    isDisabled={this.remediationProvider(selectedCves) === false}\n                    onRemediationCreated={result => dispatchNotification(result.getNotification())}\n                >\n                    <span className={'remediation-btn-lg'}>Remediate with Ansible</span>\n                    <span className={'remediation-btn-sml'}>Remediate</span>\n                </RemediationButton>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    null,\n    dispatch => ({\n        addNotification: notification => dispatch(addNotification(notification))\n    })\n)(routerParams(Remediation));\n","import { Checkbox, Dropdown, DropdownItem, DropdownToggle } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nclass SelectAllCheckbox extends Component {\n    static propTypes = {\n        selectedItems: propTypes.number,\n        selectorHandler: propTypes.func,\n        fetchResource: propTypes.func,\n        cves: propTypes.object\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.isOpen !== this.state.isOpen || nextProps.selectedItems !== this.props.selectedItems) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOnToggle = isOpen => {\n        this.setState({\n            isOpen\n        });\n    };\n\n    handleOnSelect = () => {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    };\n\n    handleSelectPage = () => {\n        const {\n            cves: { data },\n            selectorHandler\n        } = this.props;\n        const cveNames = data.filter(item => item.id).map(cve => cve.id);\n        selectorHandler(true, cveNames);\n    };\n\n    handleSelectAll = () => {\n        const {\n            cves: { meta },\n            selectorHandler,\n            fetchResource\n        } = this.props;\n        // eslint-disable-next-line camelcase\n        let { payload } = fetchResource && fetchResource({ page_size: meta.total_items, page: 1 });\n        payload &&\n            payload.then(({ data: response }) => {\n                const cveNames = response.map(cve => cve.id);\n                selectorHandler(true, cveNames);\n            });\n    };\n\n    handleUnselectAll = () => {\n        const { selectorHandler } = this.props;\n        selectorHandler(false, undefined);\n    };\n\n    handleOnCheckboxChange = () => {\n        const { selectedItems } = this.props;\n        if (selectedItems === 0) {\n            this.handleSelectAll();\n        } else {\n            this.handleUnselectAll();\n        }\n    };\n\n    render() {\n        const { selectedItems, cves } = this.props;\n        const { meta, data } = cves;\n        const { isOpen } = this.state;\n        const checkboxlabel = Boolean(selectedItems) && `${selectedItems} selected`;\n        const selectPageNumber = data.length / 2;\n        const itemLabel = number => (number > 1 && 'items') || 'item';\n\n        const dropdownItems = [\n            <DropdownItem key=\"none\" onClick={this.handleUnselectAll}>\n                Select none (0 items)\n            </DropdownItem>,\n            <DropdownItem key=\"page\" onClick={this.handleSelectPage}>\n                Select page ({selectPageNumber} {itemLabel(selectPageNumber)})\n            </DropdownItem>,\n            <DropdownItem key=\"all\" onClick={this.handleSelectAll}>\n                Select all ({meta.total_items} {itemLabel(meta.total_items)})\n            </DropdownItem>\n        ];\n        return (\n            <Dropdown\n                onSelect={this.handleOnSelect}\n                toggle={\n                    <DropdownToggle\n                        splitButtonItems={[\n                            <Checkbox\n                                key={'selectAllcheckbox'}\n                                isChecked={meta.total_items === selectedItems ? true : selectedItems === 0 ? false : null}\n                                onChange={this.handleOnCheckboxChange}\n                            />,\n                            checkboxlabel\n                        ]}\n                        onToggle={this.handleOnToggle}\n                    />\n                }\n                isOpen={isOpen}\n                dropdownItems={dropdownItems}\n            />\n        );\n    }\n}\n\nexport default SelectAllCheckbox;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./VulnerabilitiesCVEs.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./VulnerabilitiesCVEs.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./VulnerabilitiesCVEs.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".pf-c-tabs.vulnerability-tabs {\\n  background-color: var(--pf-global--BackgroundColor--100);\\n  padding-left: var(--pf-c-page__main-section--md--PaddingLeft); }\\n\", \"\"]);\n\n// exports\n","import { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { SkeletonTable, TableToolbar } from '@redhat-cloud-services/frontend-components';\nimport propTypes from 'prop-types';\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { EmptyCVEList, EmptyCVEListForSystem, FilterNotFoundForCVE } from '../../../Helpers/constants';\nimport { cveTableRowActions } from '../../../Helpers/CVEHelper';\nimport { createSortBy, handleSortColumn } from '../../../Helpers/MiscHelper';\nimport { expandCve } from '../../../Store/Actions/Actions';\nimport PaginationWrapper from '../../PresentationalComponents/PaginationWrapper/PaginationWrapper';\nimport { CVETableContext } from './VulnerabilitiesCves';\n\nclass VulnerabilitiesTableWithContext extends Component {\n    static propTypes = {\n        context: propTypes.any,\n        header: propTypes.array,\n        entity: propTypes.object,\n        openCve: propTypes.func\n    };\n\n    noCves = () => {\n        const { entity, context } = this.props;\n        const { cves } = context;\n        const filterFields = ['filter', 'cvss_from', 'cvss_to', 'public_from', 'public_to', 'impact', 'status_id'].filter(\n            item => cves.meta.hasOwnProperty(item) && cves.meta[item]\n        );\n        if (filterFields.length !== 0) {\n            return FilterNotFoundForCVE;\n        } else if (entity) {\n            return EmptyCVEListForSystem;\n        } else if (cves.data.length === 0) {\n            return EmptyCVEList;\n        }\n    };\n\n    handleOnCollapse = (event, rowKey, isOpen) => {\n        const { rows } = this.state;\n        /**\n         * Please do not use rowKey as row index for more complex tables.\n         * Rather use some kind of identifier like ID passed with each row.\n         */\n        rows[rowKey].isOpen = isOpen;\n        this.setState({\n            rows\n        });\n    };\n\n    handleOnSelect = (event, isSelected, rowId) => {\n        const { context } = this.props;\n        const { cves, methods } = context;\n        const cveName = cves.data[rowId] && cves.data[rowId].id;\n        methods.selectCves(isSelected, cveName);\n    };\n\n    handleBusinessRiskToggle = () => {\n        this.setState(({ isBusinessRiskOpen }) => ({\n            isBusinessRiskOpen: !isBusinessRiskOpen\n        }));\n    };\n\n    render() {\n        const { context, header } = this.props;\n        const { cves, methods } = context;\n        return (\n            <Fragment>\n                {!cves.isLoading ? (\n                    <Fragment>\n                        <Table\n                            aria-label={'Vulnerability CVE table'}\n                            onSelect={this.handleOnSelect}\n                            cells={header}\n                            rows={cves.data}\n                            onCollapse={(event, rowKey) => this.props.openCve(rowKey)}\n                            actions={cveTableRowActions(methods)}\n                            sortBy={createSortBy([{ key: 'collapse' }, { key: 'checkbox' }, ...header], cves.meta.sort)}\n                            onSort={(event, key, direction) =>\n                                handleSortColumn(\n                                    key,\n                                    direction,\n                                    [{ key: 'collapse' }, { key: 'checkbox' }, ...header],\n                                    cves.meta.sort,\n                                    methods.apply\n                                )\n                            }\n                            gridBreakPoint={'grid-lg'}\n                        >\n                            {(!cves.isLoading && cves.data.length === 0 && this.noCves()) || (\n                                <Fragment>\n                                    <TableHeader />\n                                    <TableBody />\n                                </Fragment>\n                            )}\n                        </Table>\n                        <TableToolbar>\n                            <PaginationWrapper variant=\"bottom\" meta={cves.meta} apply={methods.apply} />\n                        </TableToolbar>\n                    </Fragment>\n                ) : (\n                    <SkeletonTable colSize={6} rowSize={20} />\n                )}\n            </Fragment>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        openCve: params => dispatch(expandCve(params))\n    };\n};\n\nconst VulnerabilitiesTable = props => (\n    <CVETableContext.Consumer>\n        {context => <VulnerabilitiesTableWithContext context={context} {...props} />}\n    </CVETableContext.Consumer>\n);\nexport default connect(\n    null,\n    mapDispatchToProps\n)(VulnerabilitiesTable);\n","/* eslint-disable camelcase */\nimport { ToolbarGroup, ToolbarItem } from '@patternfly/react-core';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components';\nimport propTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport {\n    filtersBusinessRisk,\n    filtersCVSSScore,\n    filtersPublishDate,\n    filtersSeverity,\n    filtersShowAll\n} from '../../../Helpers/constants';\nimport BaseKebab from '../../PresentationalComponents/DownloadReportKebab/BaseKebab';\nimport {\n    kebabItemDownloadCSV,\n    kebabItemDownloadJSON,\n    kebabItemEditBusinessRisk,\n    kebabItemEditStatus\n} from '../../PresentationalComponents/DownloadReportKebab/KebabItems';\nimport FilterChips from '../../PresentationalComponents/Filters/FilterChips';\nimport Filters from '../../PresentationalComponents/Filters/Filters';\nimport PaginationWrapper from '../../PresentationalComponents/PaginationWrapper/PaginationWrapper';\nimport Remediation from '../Remediation/Remediation';\nimport SelectAllCheckbox from '../SelectAllCheckbox/SelectAllCheckbox';\nimport { CVETableContext } from './VulnerabilitiesCves';\n\nclass VulnerabilitiesToolbarWithContext extends Component {\n    static propTypes = {\n        showRemediationButton: propTypes.bool,\n        entity: propTypes.object,\n        context: propTypes.object\n    };\n\n    static defaultProps = {\n        showRemediationButton: false,\n        totalNumber: 0,\n        apply: () => undefined,\n        downloadReport: () => undefined\n    };\n\n    render() {\n        const { showRemediationButton, entity, context } = this.props;\n        const { cves, params, methods } = context;\n        const { selectedCves } = params;\n        const selectedCvesCount = selectedCves && selectedCves.length;\n        const filterCategories = [filtersShowAll, filtersCVSSScore, filtersSeverity, filtersBusinessRisk, filtersPublishDate];\n        const kebabOptions = [\n            kebabItemEditBusinessRisk(\n                methods.showBusinessRiskModal,\n                selectedCves.map(item => ({ id: item, business_risk_id: '0' })),\n                { isDisabled: !selectedCvesCount }\n            ),\n            kebabItemEditStatus(methods.showStatusModal, selectedCves.map(item => ({ id: item, status_id: '0' })), {\n                isDisabled: !selectedCvesCount\n            }),\n            kebabItemDownloadJSON(methods.downloadReport),\n            kebabItemDownloadCSV(methods.downloadReport)\n        ];\n        return (\n            <React.Fragment>\n                <TableToolbar className=\"space-between-toolbar-items\">\n                    <ToolbarGroup className=\"vulnerability-toolbar-spacing\">\n                        <SelectAllCheckbox\n                            selectedItems={selectedCvesCount}\n                            selectorHandler={methods.selectCves}\n                            cves={cves}\n                            fetchResource={ops => methods.fetchResource({ ...params, ...ops, show_all: !params.show_all })}\n                        />\n                        <Filters\n                            searchPlaceholder=\"Find a CVE…\"\n                            apply={methods.apply}\n                            filterValues={params}\n                            filterCategories={filterCategories}\n                        />\n\n                        {showRemediationButton && <Remediation systemId={entity.id} selectedCves={selectedCves} />}\n                        <BaseKebab dropdownItems={kebabOptions} />\n                    </ToolbarGroup>\n\n                    <ToolbarGroup>\n                        <PaginationWrapper apply={methods.apply} meta={cves.meta} />\n                    </ToolbarGroup>\n                </TableToolbar>\n                <TableToolbar className=\"pf-u-pt-0\">\n                    <ToolbarGroup>\n                        <ToolbarItem>\n                            <FilterChips filterValues={params} filterCategories={filterCategories} apply={methods.apply} />\n                        </ToolbarItem>\n                    </ToolbarGroup>\n                </TableToolbar>\n            </React.Fragment>\n        );\n    }\n}\n\nconst VulnerabilitiesToolbar = props => (\n    <CVETableContext.Consumer>\n        {context => <VulnerabilitiesToolbarWithContext context={context} {...props} />}\n    </CVETableContext.Consumer>\n);\nexport default VulnerabilitiesToolbar;\n","/* eslint-disable camelcase */\nimport { Stack, StackItem } from '@patternfly/react-core';\nimport { classNames, expandable, sortable } from '@patternfly/react-table';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport propTypes from 'prop-types';\nimport qs from 'query-string';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { CVSSOptions, GenericError, PublicDateOptions } from '../../../Helpers/constants';\nimport { createCveListByAccount } from '../../../Helpers/VulnerabilitiesHelper';\nimport { changeCveListParameters, fetchCveListByAccount, selectCve } from '../../../Store/Actions/Actions';\nimport BusinessRiskModal from '../Modals/BusinessRiskModal';\nimport StatusModal from '../Modals/CveStatusModal';\nimport './vulnerabilities.scss';\nimport SystemCveTable from './VulnerabilitiesTable';\nimport SystemCveTableToolbar from './VulnerabilitiesTableToolbar';\n\nexport const CVETableContext = React.createContext({});\n\nconst header = [\n    {\n        title: 'Name',\n        key: 'synopsis',\n        transforms: [sortable, classNames('col-width-10')],\n        columnTransforms: [classNames('no-wrap')],\n        cellFormatters: [expandable]\n    },\n    {\n        title: 'Publish date',\n        key: 'public_date',\n        transforms: [sortable, classNames('col-width-10')],\n        columnTransforms: [classNames('hide-description')]\n    },\n    {\n        title: 'Impact',\n        key: 'impact',\n        transforms: [sortable, classNames('col-width-10')],\n        columnTransforms: [classNames('no-wrap')]\n    },\n    {\n        title: 'CVSS base score',\n        key: 'cvss_score',\n        transforms: [sortable, classNames('col-width-10')]\n    },\n\n    { title: 'Systems exposed', key: 'systems_affected', transforms: [sortable, classNames('col-width-10')] },\n    { title: 'Business risk', key: 'business_risk', transforms: [sortable, classNames('col-width-10')] },\n    { title: 'Status', key: 'status', transforms: [sortable, classNames('col-width-10')] }\n];\n\nclass VulnerabilitiesCves extends Component {\n    static propTypes = {\n        cveList: propTypes.any,\n        fetchData: propTypes.func,\n        history: propTypes.object,\n        location: propTypes.object,\n        parameters: propTypes.object,\n        changeParameters: propTypes.func,\n        selectCve: propTypes.func\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isBusinessRiskOpen: false,\n            isStatuskOpen: false,\n            BusinessRiskModal: () => null,\n            StatusModal: () => null\n        };\n    }\n\n    componentDidMount() {\n        const { parameters } = this.props;\n        const queryObject = qs.parse(this.props.location.search);\n        queryObject.show_irrelevant = queryObject.show_irrelevant === 'true';\n        if (queryObject.show_irrelevant) {\n            queryObject.show_all = undefined;\n        }\n\n        this.apply({ ...parameters, ...queryObject });\n    }\n\n    processError = () => {\n        return GenericError;\n    };\n\n    apply = (config = {}) => {\n        if (config.hasOwnProperty('cvss_filter')) {\n            let cvssEntry = CVSSOptions.find(item => item.value === config.cvss_filter);\n\n            if (typeof cvssEntry === 'undefined' &&\n                typeof config.cvss_filter !== 'undefined'\n            ) {\n                let values = config.cvss_filter.split(/[^0-9]+/).filter(item => parseFloat(item));\n                cvssEntry = { from: values[0], to: values[1] };\n            }\n            else if (typeof cvssEntry === 'undefined' &&\n                typeof config.cvss_filter === 'undefined') {\n                cvssEntry = { from: undefined, to: undefined };\n            }\n\n            config.cvss_from = cvssEntry.from;\n            config.cvss_to = cvssEntry.to;\n        }\n\n        if (config.hasOwnProperty('publish_date')) {\n            let publicEntry = PublicDateOptions.find(item => item.value === config.publish_date);\n\n            if (typeof publicEntry !== 'undefined') {\n                config.public_from = publicEntry.from && publicEntry.from.format('YYYY-MM-DD');\n                config.public_to = publicEntry.to && publicEntry.to.format('YYYY-MM-DD');\n            } else {\n                config.public_from = undefined;\n                config.public_to = undefined;\n                config.publish_date = undefined;\n            }\n        }\n\n        this.props.changeParameters(config).then(this.sendRequest);\n    };\n\n    selectCves = (isSelected, cveNames) => {\n        this.props.selectCve(cveNames || []);\n    };\n\n    createUrlParams = allParams => {\n        const params = { ...allParams };\n        params.show_irrelevant = !params.show_all;\n        const allowedParams = [\n            'show_irrelevant',\n            'cvss_filter',\n            'publish_date',\n            'filter',\n            'limit',\n            'offset',\n            'page',\n            'page_size',\n            'sort',\n            'impact',\n            'business_risk_id'\n        ];\n        Object.keys(allParams).forEach(\n            key =>\n                (params[key] === undefined || params[key] === '' || !allowedParams.includes(key) || params[key] === false) &&\n                delete params[key]\n        );\n        const queryString = qs.stringify(params);\n        this.props.history.push('?' + queryString);\n    };\n\n    sendRequest = () => {\n        const { fetchData, parameters } = this.props;\n        //TODO: need a better way of doing this\n        const showAllParam = parameters.hasOwnProperty('show_all') && !parameters.show_all;\n        // eslint-disable-next-line camelcase\n        fetchData && fetchData({ ...parameters, show_all: showAllParam });\n        this.createUrlParams(parameters);\n    };\n\n    downloadReport = format => {\n        const { parameters } = this.props;\n        const params = { ...parameters, show_all: !parameters.show_all };\n        let { payload } = fetchCveListByAccount({ ...params, page_size: Number.MAX_SAFE_INTEGER, data_format: format, page: 1 });\n        payload &&\n            payload.then(({ data: response }) => {\n                const data = format === 'json' ? JSON.stringify(response) : response;\n                return downloadFile(data, `vulnerability_cves-${new Date().toISOString()}`, format);\n            });\n    };\n\n    showBusinessRiskModal = cves => {\n        this.setState({\n            BusinessRiskModal: () => <BusinessRiskModal cves={cves} updateRef={this.apply} />\n        });\n    };\n\n    showStatusModal = cves => {\n        this.setState({\n            StatusModal: () => <StatusModal cves={cves} updateRef={this.apply} />\n        });\n    };\n\n    render() {\n        const { cveList, parameters } = this.props;\n        const { apply, downloadReport, selectCves, showBusinessRiskModal, showStatusModal } = this;\n        const { BusinessRiskModal, StatusModal } = this.state;\n        const cves = cveList;\n        const { errors } = cves;\n        if (!errors) {\n            return (\n                <CVETableContext.Provider\n                    value={{\n                        cves,\n                        params: { ...this.state, ...parameters },\n                        methods: {\n                            apply,\n                            downloadReport,\n                            selectCves,\n                            showBusinessRiskModal,\n                            showStatusModal,\n                            fetchResource: fetchCveListByAccount\n                        }\n                    }}\n                >\n                    <BusinessRiskModal />\n                    <StatusModal />\n\n                    <Stack>\n                        <StackItem>\n                            <SystemCveTableToolbar showAllCheckbox />\n                        </StackItem>\n                        <StackItem>\n                            <SystemCveTable header={header} showAllCheckbox />\n                        </StackItem>\n                    </Stack>\n                </CVETableContext.Provider>\n            );\n        } else {\n            return this.processError(errors);\n        }\n    }\n}\n\nfunction mapStateToProps({ VulnerabilitiesStore }) {\n    return {\n        cveList: VulnerabilitiesStore && createCveListByAccount(VulnerabilitiesStore),\n        parameters: VulnerabilitiesStore && VulnerabilitiesStore.parameters\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchData: params => dispatch(fetchCveListByAccount(params)),\n        selectCve: params => dispatch(selectCve(params)),\n        changeParameters: params => dispatch(changeCveListParameters(params))\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(VulnerabilitiesCves)\n);\n","import propTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { setHeader } from '../../../Store/Actions/Actions';\nimport VulnerabilitiesCves from './VulnerabilitiesCves';\n\nclass CVEs extends React.Component {\n    static propTypes = {\n        setHeader: propTypes.func\n    };\n\n    constructor(props) {\n        super(props);\n    }\n\n    dispatchSetHeader() {\n        this.props.setHeader({\n            title: 'Vulnerability',\n            breadcrumbs: []\n        });\n    }\n\n    render() {\n        this.dispatchSetHeader();\n        return <VulnerabilitiesCves />;\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setHeader: header => dispatch(setHeader(header))\n    };\n};\n\nexport default withRouter(\n    connect(\n        null,\n        mapDispatchToProps\n    )(CVEs)\n);\n","import { Page } from '@patternfly/react-core';\nimport { Main } from '@redhat-cloud-services/frontend-components';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { setHeader } from '../../../Store/Actions/Actions';\nimport CVEs from '../CVEs/CVEs';\nimport VulnerabilityHeader from '../VulnerabilityHeader/VulnerabilityHeader';\nimport './VulnerabilitiesCVEs.scss';\n\nclass VulnerabilitiesCVEs extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Page>\n                <VulnerabilityHeader />\n                <Main>\n                    <CVEs />\n                </Main>\n            </Page>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setHeader: header => dispatch(setHeader(header))\n    };\n};\n\nexport default withRouter(\n    connect(\n        null,\n        mapDispatchToProps\n    )(VulnerabilitiesCVEs)\n);\n"],"sourceRoot":""}