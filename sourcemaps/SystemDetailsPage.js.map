{"version":3,"sources":["webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/SecurityRuleFilter.js","webpack:///./node_modules/lodash/unionWith.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/StatusFilter.js","webpack:///./src/Components/PresentationalComponents/PaginationWrapper/PaginationWrapper.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/PublishDateFilter.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/CvssBaseScoreFilter.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/ImpactFilter.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/BusinessRiskFilter.js","webpack:///./src/Components/SmartComponents/Modals/CvePairStatusModal.js","webpack:///./src/Components/SmartComponents/Remediation/Remediation.js","webpack:///./src/Components/SmartComponents/SystemCves/SystemCveTable.js","webpack:///./src/Components/SmartComponents/SystemCves/SystemCveTableToolbar.js","webpack:///./src/Components/SmartComponents/SystemCves/SystemCves.js","webpack:///./src/Components/SmartComponents/SystemDetailsPage/SystemDetails.js","webpack:///./src/Store/Reducers/SystemDetailsPageStore.js","webpack:///./src/Components/SmartComponents/SystemDetailsPage/SystemDetailsPage.js","webpack:///./node_modules/dot/doT.js","webpack:///./src/Store/ActionTypes.js","webpack:///./src/Helpers/MiscHelper.js","webpack:///./src/Utilities/interceptors.js","webpack:///./src/Helpers/APIHelper.js","webpack:///./src/Store/Reducers/BreadcrumbStore.js","webpack:///./src/Store/Reducers/CVEDetailsPageStore.js","webpack:///./src/Store/Reducers/SystemCvesStore.js","webpack:///./src/Store/Reducers/SystemsPageStore.js","webpack:///./src/Store/Reducers/CVEsStore.js","webpack:///./src/Store/Actions/Actions.js","webpack:///./node_modules/seamless-immutable/seamless-immutable.development.js","webpack:///./src/Components/SmartComponents/Modals/BaseModal.js","webpack:///./src/Components/SmartComponents/InsightsSystemRule/InsightsSystemRule.js","webpack:///./src/Helpers/CVEHelper.js","webpack:///./src/Helpers/selectAllCheckboxHelper.js","webpack:///./node_modules/lodash/union.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/SearchFilter.js","webpack:///./src/Helpers/TableToolbarHelper.js","webpack:///./src/Helpers/DownloadReport.js","webpack:///./src/Components/PresentationalComponents/EmptyStates/EmptyStates.js"],"names":["securityRuleFilter","apply","currentFilter","dynamicFilters","currentValue","security_rule","filterBySecurityRule","values","page","label","intl","formatMessage","messages","securityRules","type","conditionalFilterType","radio","urlParam","filterValues","onChange","event","value","items","unionWith","SECURITY_RULE_OPTIONS","isEqual","map","item","baseFlatten","baseRest","baseUniq","isArrayLikeObject","last","arrays","comparator","undefined","module","exports","statusFilter","status_id","filterByStatus","length","filter","join","status","checkbox","STATUS_OPTIONS","split","PaginationWrapper","handleChangePage","_event","pageNumber","props","handleSetPageSize","perPage","page_size","nextProps","meta","this","variant","totalItems","total_items","pageSize","Fragment","itemCount","DEFAULT_PAGE_SIZE","onSetPage","onPerPageSelect","PaginationVariant","Component","propTypes","func","object","string","defaultProps","publishDateFilter","publish_date","filterByPublishDate","publishDate","PUBLIC_DATE_OPTIONS","cvssBaseScoreFilter","cvss_filter","filterByCvssScore","cvssBaseScore","CVSS_OPTIONS","impactFilter","impact","filterByImpact","IMPACT_OPTIONS","hasIcon","className","color","iconColor","businessRiskFilter","business_risk_id","filterByBusinessRisk","businessRisk","BUSINESS_RISK_OPTIONS","CvePairStatusModal","cves","updateRef","inventories","hasDifferentStatus","useState","cveList","inventoryList","useJustificationInput","justification","getCveJustification","getDefaultLabel","JustificationInput","setJustification","setJustificationProps","setProps","haveSameStatuses","every","val","i","arr","cve_status_id","inventory","some","cve","getDefaultCheckboxState","checkboxState","setCheckboxState","useStatusSelect","toString","getCveStatus","getDefaultStatus","StatusSelect","statusId","setStatusId","setSelectProps","inventoryIds","id","inventoryNames","display_name","useEffect","isDisabled","disabled","cve_justification","successNotification","title","cvePairStatusModalUpdateSuccessful","modalTitle","cvePairStatusModalTitle","count","onSave","cveIds","setStatusParams","inventory_id","parseInt","status_text","setSystemCveStatus","then","onSuccessNotification","hasGutter","isInline","cvePairStatusModalAlert","cvePairStatusModalSelected","cveCount","cveId","systemCount","systemName","b","chunks","key","fieldId","cvePairStatusModalUseOverallCheckbox","name","isChecked","checked","trigger","content","cvePairStatusModalUseOverallTooltip","style","verticalAlign","array","bool","any","injectIntl","Remediation","remediationProvider","systems","concat","issues","description","dispatchNotification","addNotification","dataProvider","onRemediationCreated","result","getNotification","size","globalBackgroundColor100","remediateLabel","oneOfType","connect","dispatch","notification","routerParams","SystemCvesTableWithContext","context","header","entity","methods","selectedCves","openedCves","isEmpty","data","rows","includes","selected","index","current","find","opened","isOpen","isLoading","SkeletonTable","colSize","rowSize","Table","canSelectAll","aria-label","cells","heightAuto","colSpan","Object","prototype","hasOwnProperty","call","FilterNotFoundForSystem","EmptyCVEListForSystem","EmptyCVEList","noCves","onSelect","isSelected","rowId","cveName","selectCves","actionResolver","rowData","rowIndex","systemCveTableRowActions","sortBy","createSortBy","sort","onCollapse","rowKey","expandCveDescription","openCves","handleOnCollapse","onSort","direction","handleSortColumn","gridBreakPoint","TableToolbar","SystemCvesTable","CVETableContext","Consumer","SystemCveToolbarWithContext","showRemediationButton","parameters","selectedCvesCount","selectOptions","useMemo","selectAllCheckbox","selectedItems","selectorHandler","fetchResource","ops","show_all","multiRow","actions","editStatus","onClick","showStatusModal","kebabCollapseCves","kebabExpandCves","PrimaryToolbar","pagination","actionsConfig","kebabToggleProps","bulkSelect","Boolean","handleOnCheckboxChange","filterConfig","searchFilter","searchFilterByCveID","activeFiltersConfig","filters","buildActiveFilters","onDelete","e","removeFilters","exportConfig","totalNumber","downloadReport","createContext","SystemCVEs","useDispatch","StatusModal","setStatusModal","urlParamsAllowed","setUrlParamsAllowed","isFirstLoad","setIsFirstLoad","systemCVEs","useSelector","SystemCvesStore","createCveListBySystem","useCreateUrlParams","CVES_ALLOWED_PARAMS","createUrlParams","urlParameters","filterParams","params","constructFilterParameters","changeSystemCVEsParameters","fetchCveListBySystem","system","clearSystemCvesStore","error","errors","EmptyVulnerabilityData","GenericError","Provider","format","DownloadReport","exec","iSelected","payload","selectSystemCve","expandSystemCve","cvesList","Array","from","element","fetchSystemDetailsIds","Stack","StackItem","TextContent","Text","component","TextVariants","h2","systemCvesTableHeader","SystemCveTableToolbar","SystemCveTable","SYSTEM_DETAILS_HEADER","fetchData","history","location","ConnectedSystemCves","withRouter","TranslateSystemCves","customItnlProvider","customRouter","RouterWrapper","Router","Wrapper","IntlProvider","locale","navigator","language","slice","basename","window","pathname","SystemDetails","isOptOut","optOutSystemHandler","loaded","setHeader","breadcrumbs","PATHS","home","to","systemsPage","invalidSystem","isActive","buttonAction","React","entityDetails","opt_out","initialState","systemDetailsPageStore","INVENTORY_ACTION_TYPES","state","action","FETCH_SYSTEM_DETAILS","LOAD_ENTITY_FULFILLED","activeApps","LOAD_ENTITY_REJECTED","InventoryDetail","checkItem","newList","systemList","setState","toggleLinkHover","linkHovered","optOutSystem","inventoryId","fetchSystemDetails","inventoryOptOutSuccess","inventoryResumeAnalysisTitle","inventoryResumeAnalysisDescription","match","removeListener","fetchInventory","insights","loadInventory","ReactRedux","react","reactRouterDom","pfReactTable","PfTable","TableBody","TableHeader","TableGridBreakpoint","cellWidth","TableVariant","sortable","expandable","SortByDirection","inventoryConnector","mergeWithEntities","mergeWithDetail","ReducerRegistry","register","InventoryHeader","getStore","InventoryDetailHead","InventoryBody","AppInfo","systemDetails","Page","VulnerabilityHeader","hideBack","inventoryKebabOptionsResume","inventoryKebabOptionsExclude","Main","optOutSystemAction","_globals","doT","version","templateSettings","evaluate","interpolate","encode","use","useParams","define","defineParams","conditional","iterate","varname","strip","append","selfcontained","doNotSkipEncoded","template","compile","log","encodeHTMLSource","encodeHTMLRules","matchHTML","code","replace","m","eval","startend","start","end","startencode","skip","unescape","tmpl","c","def","needhtmlencode","indv","cse","sid","str","resolveDefs","block","assign","indexOf","substring","param","v","arg","text","Function","s","d","rw","__exp","RegExp","elsecase","vname","iname","_encodeHTML","console","FETCH_CVE_LIST","FETCH_CVE_DETAILS","HANDLE_CVE_DETAILS_ERROR","FETCH_AFFECTED_SYSTEMS_BY_CVE","FETCH_SYSTEMS","SET_HEADER","SYSTEM_OPT_OUT","FETCH_SYSTEM_CVE_LIST","CHANGE_SYSTEM_CVE_STATUS","CHANGE_EXPOSED_SYSTEMS_PARAMETERS","CHANGE_CVE_LIST_PARAMETERS","SELECT_CVE","SELECT_SYSTEM_CVE","SELECT_ENTITIES","SELECT_MULTIPLE_ENTITIES","EXPAND_CVE","EXPAND_ROW","EXPAND_SYSTEM_CVE","CHANGE_SYSTEMS_PARAMS","CHANGE_SYSTEM_CVE_LIST_PARAMETERS","CLEAR_SYSTEMS_STORE","CLEAR_SYSTEM_CVES_STORE","CLEAR_CVE_STORE","CLEAR_INVENTORY_STORE","CLEAR_CVES_STORE","FETCH_AFFECTED_SYSTEM_IDS_BY_CVE","FETCH_SYSTEMS_IDS","FETCH_CVE_LIST_IDS","FETCH_SYTEM_DETAILS_IDS","dataShape","shape","constructParameters","apiProps","allowedParams","keys","forEach","constructURLParameters","urlParams","formatDate","date","Date","prepend","number","toFormat","isNaN","year","getFullYear","month","getMonth","day","getDate","cvssEntry","parseFloat","cvss_from","cvss_to","publicEntry","public_from","public_to","getImpactDetails","impactList","titleContent","impactColorList","unknown","desc","asc","findIndex","currentSort","columnName","useDefault","substr","pushState","qs","stringify","parse","search","pages","cvesCount","instance","axios","create","interceptors","request","authInterceptor","response","responseDataInterceptor","interceptor401","ReadOnlyNotification","err","isCancel","errObject","api","GitApi","getCveDetails","synopsis","getSystemDetails","getAffectedSystemsByCVE","parameterArray","getAffectedSystemsByCve","getSystems","getSystemsList","getCveListByAccount","getCveList","setSystemOptOut","getCveListBySystem","setStatus","optOutSystems","optOut","setSystemsOptOut","setBusinessRisk","setCveBusinessRisk","setCveStatus","getExecutiveReport","getAffectedSystemsIdsByCve","getSystemsIds","getCveIdsList","getCveIdsBySystem","Immutable","affectedSystemsByCVE","openedRows","selectedHosts","cveDetails","applyReducerHash","timestamp","newState","isArray","splice","push","metadata","limit","offet","isValid","stateTimestamp","actionTimestamp","CVEDetailsPageStore","ActionTypes","setIn","CVEsStore","SystemsPageStore","BreadcrumbStore","set","Promise","resolve","HeaderHelper","fetchAffectedSystemsByCVE","APIHelper","fetchSystems","options","fetchCveDetails","handleCveDetailsError","noError","fetchCveListByAccount","optOutSystemsAction","changeCveListParameters","changeExposedSystemsParameters","selectCve","expandCve","expandRow","selectMultipleEntities","changeSystemsParams","clearSystemStore","clearCveStore","fetchAffectedSystemsIdsByCve","fetchSystemsIds","fetchCvesIds","clearInventoryStore","clearCVEsStore","immutableInit","config","REACT_ELEMENT_TYPE","Symbol","for","globalConfig","use_static","instantiateEmptyObject","obj","getPrototypeOf","addPropertyTo","target","methodName","defineProperty","enumerable","configurable","writable","banProperty","ImmutableError","isImmutable","getOwnPropertyDescriptor","a","isMergableObject","mutatingObjectMethods","mutatingArrayMethods","nonMutatingArrayMethods","mutatingDateMethods","message","stack","Error","makeImmutable","bannedMethods","freeze","makeMethodReturnImmutable","currentMethod","arguments","arraySet","idx","deep","merge","mode","mutable","asMutableArray","makeImmutableArray","constructor","immutableEmptyArray","arraySetIn","pth","head","newValue","tail","thisHead","nextHead","isFinite","objectSetIn","immutableEmptyObject","flatMap","asObject","update","updateIn","getIn","asMutableDate","getTime","iterator","iteratorResult","without","remove","keysToRemoveArray","el","makeImmutableObject","opts","asDeepMutable","pair","asMutable","quickCopy","src","dest","other","TypeError","JSON","receivedArray","merger","addToResult","currentObj","otherObj","immutableValue","mergerResult","clearDroppedKeys","otherFromArray","objectReplace","fnObject","fnArray","fnDate","path","objectSet","property","updater","restArgs","initialVal","getInPath","l","defaultValue","asMutableObject","instantiatePlainObject","stackRemaining","$$typeof","isReactElement","File","isFileObject","Blob","isBlobObject","isError","isPromise","clone","toStatic","fn","args","self","shift","toStaticObjectOrArray","static","initialValue","statusLabel","selection","justificationLabel","resizeOrientation","BaseModal","targetItems","setTargetItems","handleClose","clearNotifications","onClose","save","cancel","children","InsightsSystemRule","rule","h3","paddingLeft","Label","Tooltip","rulesIconTooltip","CSAwIcon","rule_id","InsightsReportCard","report","PropType","details","resulotion","isRequired","InsightsNoSystemRule","p","exposedSystemNoRules","exposedSystemNoRulesInfo","rel","href","exposedSystemNoRulesInfoLink","createExposedSystemsTable","attributes","status_name","createSystemsListTable","affectedSystems","onlyThisSystemCvePair","option","createCveDetailsPage","public_date","processDate","rh_link","RHDBLink","mitre_link","createMitreLink","cvss3_score","cvss2_score","cvss2_metrics","cvss3_metrics","business_risk","business_risk_justification","business_risk_text","status_justification","systems_status_detail","systems_status_divergent","rules","MITRELink","cveTableRowActions","editBusinessRisk","showBusinessRiskModal","cve_status_justification","systemExposedTableRowActions","systemTableRowActions","kebabResumeAnalysis","kebabExcludeAnalysis","selectedItemsArray","selectedItemsCount","selectPageNumber","handleUnselectAll","handleSelectAll","selectNone","selectPage","collectedItems","union","selectAll","SearchFilter","placeholder","searchValue","setSearchValue","debounce","handleSearch","fileType","currentFilters","filterRulevalues","buildChip","parameter","FILTERS","reduce","filteredRule","buildChips","paramValues","filterChips","multiValue","filteredValues","category","chips","searchLabel","chip","filename","defaultParams","checkTypes","formats","data_format","downloadFile","Number","MAX_SAFE_INTEGER","toISOString","FilterNotFoundForCVE","height","EmptyStateVariant","large","headingLevel","emptyStateNoMatchingCves","whiteSpace","emptyStateMaybeFollowing","emptyStateNoCveReported","emptyStateForMoreInfo","emptyStateForMoreLink","emptyStateNoCvesReported","emptyStateIfCveForSystem","emptyStateNoReportedSystem","emptyStateNoCveAffects","EmptyExcludedSystem","icon","SecurityIcon","emptyStateSystemExcludedTitle","emptyStateSystemExcludedBody","emptyStateSystemResumeAnalysis","emptyStateIfCveForSystems","CubesIcon","emptyStateNoData","emptyStateActivateInsights","emptyStateLearnInsights","errorReload"],"mappings":"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","file":"js/SystemDetailsPage.js","sourcesContent":["\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components';\nimport { SECURITY_RULE_OPTIONS } from '../../../../Helpers/constants';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\nimport unionWith from 'lodash/unionWith';\nimport isEqual from 'lodash/isEqual';\n\nconst securityRuleFilter = (apply, currentFilter = {}, dynamicFilters = []) => {\n    let { security_rule: currentValue } = currentFilter;\n    if (currentValue === '' || !currentValue) {\n        currentValue = 'all';\n    }\n\n    const filterBySecurityRule = values => {\n        apply({ security_rule: values === 'all' ? '' : values, page: 1 });\n    };\n\n    return {\n        label: intl.formatMessage(messages.securityRules),\n        type: conditionalFilterType.radio,\n        urlParam: 'security_rule',\n        filterValues: {\n            onChange: (event, value) => {\n                filterBySecurityRule(value);\n            },\n            items:\n                unionWith(SECURITY_RULE_OPTIONS, dynamicFilters, isEqual).map(item => ({ label: item.label, value: item.value })),\n            value: currentValue\n        }\n    };\n};\n\nexport default securityRuleFilter;\n","var baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    baseUniq = require('./_baseUniq'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    last = require('./last');\n\n/**\n * This method is like `_.union` except that it accepts `comparator` which\n * is invoked to compare elements of `arrays`. Result values are chosen from\n * the first array in which the value occurs. The comparator is invoked\n * with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.unionWith(objects, others, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n */\nvar unionWith = baseRest(function(arrays) {\n  var comparator = last(arrays);\n  comparator = typeof comparator == 'function' ? comparator : undefined;\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n});\n\nmodule.exports = unionWith;\n","\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components';\nimport { STATUS_OPTIONS } from '../../../../Helpers/constants';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\n\nconst statusFilter = (apply, currentFilter = {}) => {\n\n    let { status_id: currentValue } = currentFilter;\n\n    const filterByStatus = values => {\n        apply({ status_id: (values.length > '0' && values.filter(value => value !== ',').join(',')) || '', page: 1 });\n    };\n\n    return {\n        label: intl.formatMessage(messages.status),\n        type: conditionalFilterType.checkbox,\n        filterValues: {\n            onChange: (event, value) => {\n                filterByStatus(value);\n            },\n            items: STATUS_OPTIONS.map(item => ({ label: item.label, value: item.value })),\n            value: (currentValue ? currentValue.split(',') : [])\n        }\n    };\n};\n\nexport default statusFilter;\n","\nimport { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { DEFAULT_PAGE_SIZE } from '../../../Helpers/constants';\n\nclass PaginationWrapper extends Component {\n    static propTypes = {\n        apply: propTypes.func,\n        meta: propTypes.object,\n        variant: propTypes.string\n    };\n\n    static defaultProps = {\n        variant: 'top'\n    };\n    shouldComponentUpdate(nextProps) {\n        if (nextProps.meta === this.props.meta) {\n            return false;\n        }\n\n        return true;\n    }\n    handleChangePage = (_event, pageNumber) => this.props.apply({ page: pageNumber });\n\n    handleSetPageSize = (_event, perPage) => this.props.apply({ page_size: perPage, page: 1 });\n\n    render() {\n        const { meta, variant } = this.props;\n        const { page, total_items: totalItems, page_size: pageSize } = meta;\n        return (\n            <React.Fragment>\n                <Pagination\n                    page={page || 1}\n                    itemCount={totalItems || 0}\n                    perPage={pageSize || DEFAULT_PAGE_SIZE}\n                    onSetPage={this.handleChangePage}\n                    onPerPageSelect={this.handleSetPageSize}\n                    variant={PaginationVariant[variant]}\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default PaginationWrapper;\n","\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components';\nimport { PUBLIC_DATE_OPTIONS } from '../../../../Helpers/constants';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\n\nconst publishDateFilter = (apply, currentFilter = {}) => {\n    let { publish_date: currentValue } = currentFilter;\n\n    // Empty string value is not supported by PF Radio at the moment\n    if (currentValue === '' || !currentValue) {\n        currentValue = '0';\n    }\n\n    const filterByPublishDate = value => {\n        apply({ publish_date: (value !== '0' && value) || '', page: 1 });\n    };\n\n    return {\n        label: intl.formatMessage(messages.publishDate),\n        type: conditionalFilterType.radio,\n        urlParam: 'publish_date',\n        filterValues: {\n            onChange: (event, value) => {\n                filterByPublishDate(value);\n            },\n            items: PUBLIC_DATE_OPTIONS.map(item => ({ label: item.label, value: item.value })),\n            value: currentValue\n        }\n    };\n};\n\nexport default publishDateFilter;\n","\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components';\nimport { CVSS_OPTIONS } from '../../../../Helpers/constants';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\n\nconst cvssBaseScoreFilter = (apply, currentFilter = {}) => {\n    let { cvss_filter: currentValue } = currentFilter;\n\n    // Empty string value is not supported by PF Radio at the moment\n    if (currentValue === '' || !currentValue) {\n        currentValue = '0';\n    }\n\n    const filterByCvssScore = value => {\n        apply({ cvss_filter: (value !== '0' && value) || '', page: 1 });\n    };\n\n    return {\n        label: intl.formatMessage(messages.cvssBaseScore),\n        type: conditionalFilterType.radio,\n        urlParam: 'cvss_filter',\n        filterValues: {\n            onChange: (event, value) => {\n                filterByCvssScore(value);\n            },\n            items: CVSS_OPTIONS.map(item => ({ label: item.label, value: item.value })),\n            value: currentValue\n        }\n    };\n};\n\nexport default cvssBaseScoreFilter;\n","\nimport React from 'react';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components';\nimport { IMPACT_OPTIONS } from '../../../../Helpers/constants';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\nimport { SecurityIcon } from '@patternfly/react-icons';\n\nconst impactFilter = (apply, currentFilter = {}) => {\n    let { impact: currentValue } = currentFilter;\n\n    const filterByImpact = values => {\n        apply({ impact: (values.length > '0' && values.filter(value => value !== ',').join(',')) || '', page: 1 });\n    };\n\n    return {\n        label: intl.formatMessage(messages.impact),\n        type: conditionalFilterType.checkbox,\n        urlParam: 'impact',\n        filterValues: {\n            onChange: (event, value) => {\n                filterByImpact(value);\n            },\n            items: IMPACT_OPTIONS.map(item => ({\n                label: (\n                    <React.Fragment>\n                        { item.hasIcon && <SecurityIcon className=\"pf-u-mr-xs\" color={item.iconColor}/> }\n                        {item.label}\n                    </React.Fragment>\n                ),\n                value: item.value\n            })),\n            value: (currentValue ? currentValue.split(',') : [])\n        }\n    };\n};\n\nexport default impactFilter;\n","\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components';\nimport { BUSINESS_RISK_OPTIONS } from '../../../../Helpers/constants';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\n\nconst businessRiskFilter = (apply, currentFilter = {}) => {\n    let { business_risk_id: currentValue } = currentFilter;\n\n    const filterByBusinessRisk = values => {\n        apply({ business_risk_id: (values.length > '0' && values.filter(value => value !== ',').join(',')) || '', page: 1 });\n    };\n\n    return {\n        label: intl.formatMessage(messages.businessRisk),\n        type: conditionalFilterType.checkbox,\n        urlParam: 'business_risk_id',\n        filterValues: {\n            onChange: (event, value) => {\n                filterByBusinessRisk(value);\n            },\n            items: BUSINESS_RISK_OPTIONS.map(item => ({ label: item.label, value: item.value })),\n            value: (currentValue ? currentValue.split(',') : [])\n        }\n    };\n};\n\nexport default businessRiskFilter;\n","import { Checkbox, Form, FormGroup, Stack, StackItem, Alert, Split, Tooltip, SplitItem } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport propTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { setSystemCveStatus } from '../../../Helpers/APIHelper';\nimport BaseModal, { useJustificationInput, useStatusSelect } from './BaseModal';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nexport const CvePairStatusModal = ({ cves, updateRef, inventories, hasDifferentStatus = false, intl, type }) => {\n    const [cveList] = useState(cves);\n    const [inventoryList] = useState(inventories);\n    const {\n        JustificationInput,\n        justification,\n        setJustification,\n        setProps: setJustificationProps\n    } = useJustificationInput(getDefaultLabel());\n    const [checkboxState, setCheckboxState] = useState(getDefaultCheckboxState());\n    const { StatusSelect, statusId, setStatusId, setProps: setSelectProps } = useStatusSelect(getDefaultStatus());\n    const inventoryIds = inventoryList.map(item => item.id);\n    const inventoryNames = inventoryList.map(item => item.display_name);\n\n    useEffect(() => {\n        setSelectProps({ isDisabled: checkboxState });\n        setJustificationProps({ disabled: checkboxState });\n        setStatusId(getCveStatus());\n        setJustification(getCveJustification());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [checkboxState, setSelectProps, setJustificationProps]);\n\n    useEffect(() => {\n        setStatusId(getCveStatus());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [checkboxState, setStatusId]);\n\n    const handleSave = () => {\n        const cveIds = cveList.map(item => item.id);\n        const setStatusParams = !checkboxState\n            ? {\n                status_id: parseInt(statusId),\n                cve: cveIds,\n                status_text: justification,\n                inventory_id: inventoryIds\n            }\n            : { cve: cveIds, inventory_id: inventoryIds };\n        return setSystemCveStatus(setStatusParams).then(updateRef);\n    };\n\n    function getDefaultStatus() {\n        // system has different status\n        if (inventoryList && inventoryList.length > 0 && inventoryList[0].status_id) {\n            return getSystemsStatus();\n        }\n\n        if (cveList && cveList.length > 0) {\n            return getCveStatus();\n        }\n\n    }\n\n    function getDefaultLabel() {\n        if (inventoryList && inventoryList.length === 1 && inventoryList[0].justification) {\n            return getSystemsJustification();\n        }\n\n        if (cveList && cveList.length === 1) {\n            return getCveJustification();\n        }\n    }\n\n    function getDefaultCheckboxState() {\n\n        const haveSameStatuses = cveList.every(\n            (val, i, arr) => (val.status_id === arr[0].status_id) && (val.cve_status_id === arr[0].cve_status_id)\n        );\n        // system has the same status as cve\n        if (inventoryList && inventoryList.length === 1 && inventoryList[0].status_id) {\n            let [inventory] = inventoryList;\n            return cveList.some(cve => (cve.status_id === inventory.status_id));\n        }\n\n        if (cveList && cveList.length === 1 || haveSameStatuses) {\n            return true;\n        }\n\n        return false;\n    }\n\n    function getSystemsStatus() {\n        return (inventoryList && inventoryList[0].status_id.toString()) || '0';\n    }\n\n    function getSystemsJustification() {\n        return (inventoryList && inventoryList.length === 1 && inventoryList[0].justification) || '';\n    }\n\n    function getCveStatus() {\n        switch (type) {\n            case 'systemsExposed' : {\n                return (cveList && cveList.length === 1 && cveList[0].status_id.toString()) || '0';\n            }\n\n            case 'systemDetail': {\n                if (cveList) {\n                    if (checkboxState) { // use overall (CVE) status\n                        return hasDifferentStatus ? '0' : cveList[0].cve_status_id || '0';\n                    }\n                    else { // use system pair status\n                        return hasDifferentStatus ? '0' : cveList[0].status_id || '0';\n                    }\n                }\n                else {\n                    return '0';\n                }\n            }\n\n            default: {\n                return '0';\n            }\n        }\n\n    }\n\n    function getCveJustification() {\n        switch (type) {\n            case 'systemsExposed' : {\n                return (cveList && cveList.length === 1 && cveList[0].justification) || '';\n            }\n\n            case 'systemDetail': {\n                if (checkboxState) { // use overall (CVE) justification\n                    return (cveList && cveList.length === 1 && cveList[0].cve_justification) || '';\n                }\n                else { // use system pair justification\n                    return (cveList && cveList.length === 1 && cveList[0].justification) || '';\n                }\n            }\n\n            default: {\n                return '';\n            }\n        }\n    }\n\n    const successNotification = {\n        variant: 'success',\n        title: intl.formatMessage(messages.cvePairStatusModalUpdateSuccessful)\n    };\n\n    const modalTitle = intl.formatMessage(messages.cvePairStatusModalTitle, { count: inventoryIds.length * cves.length });\n\n    return (\n        <BaseModal items={cveList} onSave={handleSave} onSuccessNotification={successNotification} title={modalTitle}>\n            <Stack hasGutter>\n                {hasDifferentStatus &&\n                    <StackItem>\n                        <Alert\n                            variant=\"warning\"\n                            isInline\n                            title={intl.formatMessage(messages.cvePairStatusModalAlert)}\n                        />\n                    </StackItem>\n                }\n                <StackItem>\n                    {intl.formatMessage(\n                        messages.cvePairStatusModalSelected,\n                        {\n                            cveCount: cveList.length || 0,\n                            cveId: cveList[0].id, // only used when length is 1\n                            systemCount: inventoryList.length || 0,\n                            systemName: inventoryNames[0], // only used when length is 1\n                            b: (...chunks) => <b>{chunks}</b> // explicitly specifying what is wrapped <b> should be bold\n                        }\n                    )}\n                </StackItem>\n                <StackItem>\n                    <Form key=\"key\">\n                        <FormGroup fieldId={'overall'}>\n                            <Split>\n                                <SplitItem>\n                                    <Checkbox\n                                        label={intl.formatMessage(messages.cvePairStatusModalUseOverallCheckbox)}\n                                        id=\"alt-form-checkbox-1\"\n                                        name=\"alt-form-checkbox-1\"\n                                        isChecked={checkboxState}\n                                        onChange={checked => setCheckboxState(checked)}\n                                    />\n                                </SplitItem>\n                                <SplitItem>\n                                    <Tooltip\n                                        trigger='mouseenter focus click'\n                                        content={intl.formatMessage(messages.cvePairStatusModalUseOverallTooltip)}\n                                    >\n                                        <OutlinedQuestionCircleIcon\n                                            className=\"pf-u-ml-xs\"\n                                            color=\"var(--pf-global--Color--200)\"\n                                            style={{ verticalAlign: '0' }}\n                                        />\n                                    </Tooltip>\n                                </SplitItem>\n                            </Split>\n                        </FormGroup>\n                        {StatusSelect}\n                        {JustificationInput}\n                    </Form>\n                </StackItem>\n            </Stack>\n        </BaseModal>\n    );\n};\n\nCvePairStatusModal.propTypes = {\n    cves: propTypes.array,\n    updateRef: propTypes.func,\n    inventories: propTypes.array,\n    hasDifferentStatus: propTypes.bool,\n    intl: propTypes.any,\n    type: propTypes.string\n};\n\nexport default injectIntl(CvePairStatusModal);\n","import { addNotification } from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\nimport RemediationButton from '@redhat-cloud-services/frontend-components-remediations/RemediationButton';\nimport  AnsibeTowerIcon  from '@patternfly/react-icons/dist/js/icons/ansibeTower-icon';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport globalBackgroundColor100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_100';\nimport propTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport messages from '../../../Messages';\nimport { FormattedMessage } from 'react-intl';\n\nclass Remediation extends Component {\n    static propTypes = {\n        cves: propTypes.oneOfType([\n            propTypes.array,\n            propTypes.string\n        ]),\n        systems: propTypes.oneOfType([\n            propTypes.array,\n            propTypes.string\n        ]),\n        addNotification: propTypes.func\n    };\n\n    shouldComponentUpdate(nextProps) {\n        if (nextProps.cves !== this.props.cves) {\n            return true;\n        }\n\n        if (nextProps.systems !== this.props.systems) {\n            return true;\n        }\n\n        return false;\n    }\n\n    remediationProvider = (cves = [], systems = []) => {\n        cves = [].concat(cves);\n        systems = [].concat(systems);\n        return cves.length && systems.length\n            ? {\n                issues: cves.map(cve => ({\n                    id: `vulnerabilities:${cve}`,\n                    description: cve\n                })),\n                systems\n            }\n            : false;\n    };\n\n    render() {\n        const { cves, systems, addNotification: dispatchNotification } = this.props;\n        return (\n            <div>\n                <RemediationButton\n                    dataProvider={() => this.remediationProvider(cves, systems)}\n                    isDisabled={this.remediationProvider(cves, systems) === false}\n                    onRemediationCreated={result => dispatchNotification(result.getNotification())}\n                >\n                    <AnsibeTowerIcon size='sm' color={globalBackgroundColor100.value} />\n                    &nbsp;{<FormattedMessage {...messages.remediateLabel} />}\n                </RemediationButton>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    null,\n    dispatch => ({\n        addNotification: notification => dispatch(addNotification(notification))\n    })\n)(routerParams(Remediation));\n","import React, { Fragment } from 'react';\nimport propTypes from 'prop-types';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { SkeletonTable, TableToolbar } from '@redhat-cloud-services/frontend-components';\n\nimport { systemCveTableRowActions } from '../../../Helpers/CVEHelper';\nimport { createSortBy, handleSortColumn } from '../../../Helpers/MiscHelper';\nimport PaginationWrapper from '../../PresentationalComponents/PaginationWrapper/PaginationWrapper';\nimport {\n    FilterNotFoundForSystem,\n    EmptyCVEListForSystem,\n    EmptyCVEList\n} from '../../PresentationalComponents/EmptyStates/EmptyStates';\nimport { CVETableContext } from './SystemCves';\n\nconst SystemCvesTableWithContext = ({ context, header, entity }) => {\n    const noCves = () => {\n        const { cves } = context;\n        const filterFields = ['filter', 'cvss_from', 'cvss_to', 'public_from', 'public_to', 'impact', 'status_id'].filter(\n            item => Object.prototype.hasOwnProperty.call(cves.meta, item) && cves.meta[item]\n        );\n        let emptyComponent = filterFields.length !== 0\n            ? FilterNotFoundForSystem\n            : entity\n                ? EmptyCVEListForSystem\n                : !cves.data || cves.data.length === 0\n                    ? EmptyCVEList\n                    : undefined;\n\n        return ([{\n            heightAuto: true,\n            cells: [\n                {\n                    props: { colSpan: 8 },\n                    title: (\n                        emptyComponent\n                    )\n                }\n            ]\n        }]);\n\n    };\n\n    const handleOnCollapse = (event, rowKey, isOpen) => {\n        const { cves, methods,  expandCveDescription } = context;\n        const cveName = cves.data[rowKey] && cves.data[rowKey].id;\n        methods.openCves(isOpen, [cveName], expandCveDescription);\n    };\n\n    const handleOnSelect = (event, isSelected, rowId) => {\n        const { cves, methods } = context;\n        const cveName = cves.data[rowId] && cves.data[rowId].id;\n        methods.selectCves(isSelected, cveName);\n    };\n\n    const { cves, methods, selectedCves, openedCves } = context;\n    const isEmpty = !cves.data || cves.data.length === 0;\n\n    const rows = !isEmpty ? cves.data\n    .map(cve => (selectedCves.includes(cve.id) && { ...cve, selected: true }) || cve)\n    .map((cve, index) => {\n        const current = index % 2 === 0 ? openedCves.find(opened => opened.id === cve.id) || false : { isOpen: undefined };\n        return ({ ...cve, isOpen: current && current.isOpen });\n    }) : [];\n\n    return (\n        <Fragment>\n            {!cves.isLoading ? (\n                <Fragment>\n                    <Table\n                        canSelectAll={false}\n                        aria-label={'Vulnerability CVE table'}\n                        cells={header}\n                        rows  ={isEmpty ? noCves() : rows}\n                        onSelect ={!isEmpty ? handleOnSelect : undefined}\n                        actionResolver = {!isEmpty ?\n                            (rowData, rowIndex) => systemCveTableRowActions(methods, entity, rowIndex.rowIndex) : undefined}\n                        sortBy ={!isEmpty\n                            ? createSortBy([{ key: 'collapse' }, { key: 'checkbox' }, ...header], cves.meta.sort) : undefined}\n                        onCollapse={!isEmpty ? (event, rowKey, isOpen) => handleOnCollapse(event, rowKey, isOpen) : undefined}\n                        onSort={!isEmpty ?\n                            (event, key, direction) =>\n                                handleSortColumn(\n                                    key,\n                                    direction,\n                                    [{ key: 'collapse' }, { key: 'checkbox' }, ...header],\n                                    cves.meta.sort,\n                                    methods.apply\n                                ) : undefined\n                        }\n                        gridBreakPoint={'grid-lg'}\n                    >\n                        <Fragment>\n                            <TableHeader />\n                            <TableBody />\n                        </Fragment>\n                    </Table>\n                    <TableToolbar>\n                        <PaginationWrapper meta={cves.meta} apply={methods.apply} />\n                    </TableToolbar>\n                </Fragment>\n            ) : (\n                <SkeletonTable colSize={2} rowSize={20} />\n            )}\n        </Fragment>\n    );\n\n};\n\nSystemCvesTableWithContext.propTypes = {\n    context: propTypes.any,\n    header: propTypes.array,\n    entity: propTypes.string\n};\n\nconst SystemCvesTable = props => (\n    <CVETableContext.Consumer>{context => <SystemCvesTableWithContext context={context} {...props} />}</CVETableContext.Consumer>\n);\nexport default SystemCvesTable;\n","import React, { useMemo } from 'react';\nimport propTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport { CVETableContext } from './SystemCves';\nimport Remediation from '../Remediation/Remediation';\nimport selectAllCheckbox from '../../../Helpers/selectAllCheckboxHelper';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/cjs/PrimaryToolbar';\nimport publishDateFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/PublishDateFilter';\nimport cvssBaseScoreFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/CvssBaseScoreFilter';\nimport impactFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/ImpactFilter';\nimport searchFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/SearchFilter';\nimport securityRuleFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/SecurityRuleFilter';\nimport businessRiskFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/BusinessRiskFilter';\nimport statusFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/StatusFilter';\nimport {\n    handleChangePage,\n    handleSetPageSize,\n    exportConfig,\n    buildActiveFilters,\n    removeFilters\n} from '../../../Helpers/TableToolbarHelper';\n\nconst SystemCveToolbarWithContext = ({ showRemediationButton, entity, intl, context }) => {\n\n    const handleCveDescription = () => {\n        const { cves, methods, expandCveDescription } = context;\n        const isOpen = !expandCveDescription;\n        const openedCves = !expandCveDescription ? cves.data.filter(cve => cve.id).map(cve => cve.id) : [];\n        methods.openCves(isOpen, openedCves, !expandCveDescription);\n    };\n\n    const { cves, parameters, methods, selectedCves, expandCveDescription } = context;\n    const { filter } = parameters;\n    const selectedCvesCount = showRemediationButton === true ? (selectedCves && selectedCves.length) || 0 : undefined;\n\n    const selectOptions  = useMemo(() => selectAllCheckbox({\n        selectedItems: selectedCves,\n        selectorHandler: methods.selectCves,\n        items: cves,\n        fetchResource: ops => methods.fetchResource({ ...parameters, ...ops, show_all: !parameters.show_all }),\n        multiRow: true\n    }), [selectedCves, cves, parameters, methods]);\n\n    const actions = [\n        showRemediationButton && entity && <Remediation systems={entity} cves={selectedCves} /> || '',\n        {\n            label: intl.formatMessage(messages.editStatus),\n            onClick: () => methods.showStatusModal(\n                [...selectedCves].map(item => ({\n                    id: item,\n                    ...cves.data.filter(cve => item === cve.id)\n                    .map(item => ({ status_id: item.status_id, cve_status_id: item.cve_status_id }))[0]\n                })), []\n            ),\n            props: { isDisabled: !selectedCvesCount }\n        },\n        {\n            label: expandCveDescription\n                ? intl.formatMessage(messages.kebabCollapseCves)\n                : intl.formatMessage(messages.kebabExpandCves),\n            onClick: handleCveDescription,\n            props: { isDisabled: cves.meta.total_items === 0 }\n\n        }\n    ];\n\n    return (\n        <React.Fragment>\n            <PrimaryToolbar\n                pagination={{\n                    itemCount: cves.meta.total_items || 0,\n                    page: cves.meta.page || 1,\n                    perPage: cves.meta.page_size || 1,\n                    onSetPage: (_event, page) => handleChangePage(_event, page, methods.apply),\n                    onPerPageSelect: (_event, perPage) => handleSetPageSize(_event, perPage, methods.apply)\n                }}\n                actionsConfig={{\n                    actions,\n                    kebabToggleProps: { isDisabled: !selectedCvesCount && cves.meta.total_items === 0 }\n                } }\n                bulkSelect={{\n                    count: selectedCvesCount,\n                    items: selectOptions.items,\n                    isDisabled: cves.meta.total_items === 0 && selectedCvesCount === 0,\n                    checked: Boolean(selectedCvesCount),\n                    onSelect: ()=> selectOptions.handleOnCheckboxChange()\n                }}\n                filterConfig={{\n                    items: [\n                        searchFilter(messages.cve, messages.searchFilterByCveID, filter, methods.apply),\n                        securityRuleFilter(methods.apply, parameters),\n                        impactFilter(methods.apply, parameters),\n                        cvssBaseScoreFilter(methods.apply, parameters),\n                        businessRiskFilter(methods.apply, parameters),\n                        statusFilter(methods.apply, parameters),\n                        publishDateFilter(methods.apply, parameters)\n                    ]\n                }}\n                activeFiltersConfig={{\n                    filters: buildActiveFilters(parameters),\n                    onDelete: (e, i) => removeFilters(i, methods.apply)\n                }}\n                exportConfig = {{\n                    isDisabled: cves.meta.total_items === 0,\n                    ...exportConfig(methods)\n                }}\n            />\n        </React.Fragment>\n    );\n\n};\n\nSystemCveToolbarWithContext.defaultProps = {\n    showRemediationButton: false,\n    totalNumber: 0,\n    apply: () => undefined,\n    downloadReport: () => undefined\n};\n\nSystemCveToolbarWithContext.propTypes = {\n    showRemediationButton: propTypes.bool,\n    entity: propTypes.string,\n    context: propTypes.object,\n    intl: propTypes.any\n};\n\nconst SystemCveToolbar = props => (\n    <CVETableContext.Consumer>{context => <SystemCveToolbarWithContext context={context} {...props} />}</CVETableContext.Consumer>\n);\nexport default injectIntl(SystemCveToolbar);\n","import React, { useMemo, useEffect, Fragment, createContext, useState } from 'react';\nimport {\n    fetchCveListBySystem,\n    changeSystemCVEsParameters,\n    selectSystemCve,\n    expandSystemCve,\n    clearSystemCvesStore,\n    fetchSystemDetailsIds\n} from '../../../Store/Actions/Actions';\nimport propTypes from 'prop-types';\nimport messages from '../../../Messages';\nimport { withRouter } from 'react-router-dom';\nimport SystemCveTable from './SystemCveTable';\nimport { injectIntl, IntlProvider } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SYSTEM_DETAILS_HEADER, CVES_ALLOWED_PARAMS } from '../../../Helpers/constants';\nimport { constructFilterParameters } from '../../../Helpers/MiscHelper';\nimport { createCveListBySystem } from '../../../Helpers/VulnerabilityHelper';\nimport { Stack, StackItem, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { EmptyVulnerabilityData, GenericError } from '../../PresentationalComponents/EmptyStates/EmptyStates';\nimport DownloadReport from '../../../Helpers/DownloadReport';\nimport CvePairStatusModal from '../Modals/CvePairStatusModal';\nimport SystemCveTableToolbar from './SystemCveTableToolbar';\nimport { useCreateUrlParams, updateRef } from '../../../Helpers/MiscHelper';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nexport const CVETableContext = createContext({});\n\nexport const SystemCVEs = (props) => {\n    const dispatch = useDispatch();\n    const [StatusModal, setStatusModal] = useState(() => () => null);\n    const [urlParamsAllowed, setUrlParamsAllowed] = useState(false);\n    const [isFirstLoad, setIsFirstLoad] = useState(true);\n    const systemCVEs = useSelector(\n        ({ SystemCvesStore }) => SystemCvesStore.cveList\n    );\n    const parameters = useSelector(\n        ({ SystemCvesStore }) => SystemCvesStore.parameters\n    );\n    const selectedCves = useSelector(\n        ({ SystemCvesStore }) => SystemCvesStore.selectedCves\n    );\n    const openedCves = useSelector(\n        ({ SystemCvesStore }) => SystemCvesStore.openedCves\n    );\n    const expandCveDescription = useSelector(\n        ({ SystemCvesStore }) => SystemCvesStore.expandCveDescription\n    );\n\n    const cves = useMemo(() => createCveListBySystem(props.entity.id, systemCVEs), [systemCVEs]);\n    const [createUrlParams, urlParameters] = useCreateUrlParams(CVES_ALLOWED_PARAMS);\n\n    const downloadReport = format => {\n        const params = { ...parameters, system: props.entity.id };\n        DownloadReport.exec(fetchCveListBySystem, params, format, 'system-cves');\n    };\n\n    const processError = error => {\n        const { status } = error;\n        const statusCode = parseInt(status);\n        if (statusCode === 404 && props.entity.id) {\n            return EmptyVulnerabilityData;\n        } else {\n            return GenericError;\n        }\n    };\n\n    const apply = (filterParams = {}) => {\n        const params = constructFilterParameters(filterParams);\n        dispatch(changeSystemCVEsParameters(params));\n    };\n\n    useEffect(() => {\n        if (isFirstLoad) {\n            apply({ sort: '-public_date',  ...urlParameters });\n            setIsFirstLoad(false);\n        }\n        else {\n            dispatch(fetchCveListBySystem({ ...parameters, system: props.entity.id }));\n            urlParamsAllowed\n                && createUrlParams({ ...parameters })\n                || setUrlParamsAllowed(true);\n        }\n    }, [parameters]);\n\n    useEffect(() => {\n        return () => {\n            dispatch(clearSystemCvesStore());\n        };\n    }, []);\n\n    const showStatusModal = cvesList => {\n        let hasDifferentStatus;\n        if (cvesList.length > 1) {\n            const selectedCves = Array.from(cves.data.filter(cve => cvesList.some(element => element.id === cve.id)));\n\n            hasDifferentStatus = selectedCves.some(element => {\n                return selectedCves.filter(cve => cve.status_id === element.status_id).length > 1 ? false : true;\n            });\n        }\n\n        setStatusModal(() => () =>\n            (<CvePairStatusModal\n                cves={cvesList}\n                updateRef={() => updateRef(cves.meta, apply)}\n                inventories={[{ id: props.entity.id, display_name: props.entity.display_name }]}\n                hasDifferentStatus={hasDifferentStatus}\n                type={'systemDetail'}\n            />)\n        );\n    };\n\n    const handleCveSelect = (iSelected, payload) => {\n        dispatch(selectSystemCve(payload));\n    };\n\n    const handleCveOpen = (isOpen, cves, expandCveDescription) => {\n        dispatch(expandSystemCve({ isOpen, cves, expandCveDescription }));\n    };\n\n    if (!systemCVEs.errors) {\n        return (\n            <CVETableContext.Provider\n                value={{\n                    cves,\n                    parameters,\n                    selectedCves,\n                    openedCves,\n                    expandCveDescription,\n                    methods: {\n                        apply,\n                        downloadReport,\n                        selectCves: handleCveSelect,\n                        openCves: handleCveOpen,\n                        showStatusModal,\n                        fetchResource: params => fetchSystemDetailsIds({ ...params, system: props.entity.id })\n                    }\n                }}\n            >\n                <StatusModal />\n\n                <Stack hasGutter>\n                    <StackItem>\n                        <TextContent>\n                            <Text component={TextVariants.h2}>\n                                {props.intl.formatMessage(messages.systemCvesTableHeader)}\n                            </Text>\n                        </TextContent>\n                    </StackItem>\n                    <StackItem>\n                        <SystemCveTableToolbar showRemediationButton entity={props.entity.id} />\n                    </StackItem>\n                </Stack>\n\n                <SystemCveTable\n                    header={SYSTEM_DETAILS_HEADER}\n                    entity={props.entity.id}\n                />\n            </CVETableContext.Provider>\n        );\n    }\n    else {\n        return processError(systemCVEs.errors);\n    }\n\n};\n\nSystemCVEs.propTypes = {\n    entity: propTypes.object,\n    cveList: propTypes.any,\n    fetchData: propTypes.func,\n    history: propTypes.object,\n    location: propTypes.object,\n    intl: propTypes.any\n};\n\nexport const ConnectedSystemCves = withRouter(\n    injectIntl(SystemCVEs)\n);\n\nconst TranslateSystemCves = ({ customItnlProvider, customRouter, ...props }) => {\n    const RouterWrapper = customRouter ? Router : Fragment;\n    const Wrapper = customItnlProvider ? IntlProvider : Fragment;\n    return <Wrapper {...customItnlProvider && {\n        locale: navigator.language.slice(0, 2),\n        messages\n    } } >\n        <RouterWrapper\n            {...customRouter && { basename: `${window.location.pathname}` } }\n        >\n            <ConnectedSystemCves { ...props } />\n        </RouterWrapper>\n    </Wrapper>;\n};\n\nTranslateSystemCves.propTypes = {\n    customItnlProvider: propTypes.bool,\n    customRouter: propTypes.bool\n};\n\nTranslateSystemCves.defaultProps = {\n    customItnlProvider: false,\n    customRouter: false\n};\n\nexport default TranslateSystemCves;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport messages from '../../../Messages';\nimport { PATHS } from '../../../Helpers/constants';\nimport { setHeader } from '../../../Store/Actions/Actions';\nimport { ConnectedSystemCves } from '../SystemCves/SystemCves';\nimport { EmptyExcludedSystem } from '../../PresentationalComponents/EmptyStates/EmptyStates';\n\nclass SystemDetails extends React.Component {\n    static propTypes = {\n        setHeader: propTypes.func,\n        entity: propTypes.object,\n        isOptOut: propTypes.bool,\n        loaded: propTypes.bool,\n        optOutSystemHandler: propTypes.func\n    };\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { entity, isOptOut, optOutSystemHandler, loaded } = this.props;\n        this.props.setHeader({\n            breadcrumbs: [\n                { title: PATHS.home.title, to: PATHS.home.to },\n                { title: PATHS.systemsPage.title, to: PATHS.systemsPage.to },\n                { title: (entity && entity.display_name) || <FormattedMessage {...messages.invalidSystem} />, isActive: true }\n            ]\n        });\n\n        if (!entity || !loaded) {\n            return null;\n        }\n\n        if (!isOptOut) {\n            return (\n                <React.Fragment>\n                    <ConnectedSystemCves entity={{ id: entity.id, display_name: entity.display_name }} />\n                </React.Fragment>\n            );\n        } else {\n            return (\n                <React.Fragment>\n                    <EmptyExcludedSystem buttonAction={() => optOutSystemHandler(false)} />\n                </React.Fragment>\n            );\n        }\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setHeader: header => dispatch(setHeader(header))\n    };\n};\n\nfunction mapStateToProps({ entityDetails: { entity, opt_out: isOptOut, loaded } }) {\n    return {\n        entity,\n        isOptOut,\n        loaded\n    };\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(SystemDetails)\n);\n","import React from 'react';\nimport SystemDetails from '../../Components/SmartComponents/SystemDetailsPage/SystemDetails';\nimport { FETCH_SYSTEM_DETAILS } from '../ActionTypes';\n\nexport const initialState = {\n    loaded: false\n};\n\n// Reducer\nexport const systemDetailsPageStore = (INVENTORY_ACTION_TYPES, optOutSystemHandler) => (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_SYSTEM_DETAILS + '_FULFILLED':\n            return {\n                ...state,\n                ...action.payload.data\n            };\n        case INVENTORY_ACTION_TYPES.LOAD_ENTITY_FULFILLED:\n            return {\n                ...state,\n                loaded: true,\n                activeApps: [\n                    {\n                        title: 'Vulnerabilities',\n                        name: 'vulnerabilities',\n                        component: () => <SystemDetails optOutSystemHandler={optOutSystemHandler} />\n                    }\n                ]\n            };\n        case INVENTORY_ACTION_TYPES.LOAD_ENTITY_REJECTED:\n            return {\n                ...state,\n                loaded: true,\n                activeApps: [\n                    {\n                        title: 'Vulnerabilities',\n                        name: 'vulnerabilities',\n                        component: () => <SystemDetails />\n                    }\n                ]\n            };\n        default:\n            return state;\n    }\n};\n","import { Page } from '@patternfly/react-core';\nimport { Main } from '@redhat-cloud-services/frontend-components';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\nimport {\n    Table as PfTable,\n    TableBody,\n    TableHeader,\n    TableGridBreakpoint,\n    cellWidth,\n    TableVariant,\n    sortable,\n    expandable,\n    SortByDirection\n} from '@patternfly/react-table';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as ReactRedux from 'react-redux';\nimport * as reactRouterDom from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport { fetchSystemDetails, optOutSystemAction } from '../../../Store/Actions/Actions';\nimport { systemDetailsPageStore } from '../../../Store/Reducers/SystemDetailsPageStore';\nimport ReducerRegistry from '../../../Utilities/ReducerRegistry';\nimport VulnerabilityHeader from '../VulnerabilityHeader/VulnerabilityHeader';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nclass InventoryDetail extends React.Component {\n    static propTypes = {\n        fetchSystemDetails: propTypes.func,\n        systemDetails: propTypes.object,\n        optOutSystem: propTypes.func,\n        match: propTypes.object,\n        addNotification: propTypes.func,\n        intl: propTypes.any\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inventoryId: this.props.match.params.inventoryId,\n            removeListener: () => {},\n            linkHovered: false\n        };\n    }\n\n    componentDidMount() {\n        this.props.fetchSystemDetails(this.state.inventoryId);\n        this.fetchInventory();\n    }\n\n    async fetchInventory() {\n        const { inventoryConnector, mergeWithEntities, mergeWithDetail, INVENTORY_ACTION_TYPES } = await insights.loadInventory({\n            ReactRedux,\n            react: React,\n            reactRouterDom,\n            pfReactTable: {\n                Table: PfTable,\n                TableBody,\n                TableHeader,\n                TableGridBreakpoint,\n                cellWidth,\n                TableVariant,\n                sortable,\n                expandable,\n                SortByDirection\n            }\n        });\n\n        ReducerRegistry.register({\n            ...mergeWithEntities(),\n            ...mergeWithDetail(systemDetailsPageStore(INVENTORY_ACTION_TYPES, this.optOutSystem))\n        });\n\n        this.setState({\n            InventoryHeader: inventoryConnector(ReducerRegistry.getStore()).InventoryDetailHead,\n            InventoryBody: inventoryConnector(ReducerRegistry.getStore()).AppInfo\n        });\n        this.state.removeListener();\n    }\n\n    checkItem = (key, value) => {\n        let newList = this.state.systemList;\n        newList[key].selected = value;\n        this.setState({ systemList: newList });\n    };\n\n    toggleLinkHover = value => {\n        this.setState({ ...this.state, linkHovered: value });\n    };\n\n    optOutSystem = value => {\n        this.props.optOutSystem(this.state.inventoryId, value).then(() => {\n            this.props.fetchSystemDetails(this.state.inventoryId);\n            value === true\n                ? this.props.addNotification({\n                    variant: 'success',\n                    title: this.props.intl.formatMessage(messages.inventoryOptOutSuccess)\n                })\n                : this.props.addNotification({\n                    variant: 'success',\n                    title: this.props.intl.formatMessage(messages.inventoryResumeAnalysisTitle),\n                    description: this.props.intl.formatMessage(messages.inventoryResumeAnalysisDescription)\n                });\n        });\n    };\n\n    render() {\n        const { InventoryHeader, InventoryBody } = this.state;\n        const { systemDetails = {} } = this.props;\n        const { opt_out: isOptOut = false, entity } = systemDetails;\n\n        return (\n            <Page>\n                <VulnerabilityHeader title=''>\n                    {InventoryHeader && (\n                        <InventoryHeader\n                            hideBack\n                            actions={\n                                entity && [\n                                    isOptOut\n                                        ? {\n                                            title: this.props.intl.formatMessage(messages.inventoryKebabOptionsResume),\n                                            onClick: () => this.optOutSystem(false)\n                                        }\n                                        : {\n                                            title: this.props.intl.formatMessage(messages.inventoryKebabOptionsExclude),\n                                            onClick: () => this.optOutSystem(true)\n                                        }\n                                ]\n                            }\n                        />\n                    )}\n                </VulnerabilityHeader>\n\n                {InventoryBody && (\n                    <Main>\n                        <React.Fragment>\n                            <InventoryBody optOutSystemHandler={this.optOutSystem} />\n                        </React.Fragment>\n                    </Main>\n                )}\n            </Page>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        systemDetails: state.entityDetails\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        optOutSystem: (system, status) => dispatch(optOutSystemAction(system, status)),\n        fetchSystemDetails: system => dispatch(fetchSystemDetails(system)),\n        addNotification: notification => dispatch(addNotification(notification))\n    };\n};\n\nexport default withRouter(\n    injectIntl(\n        connect(\n            mapStateToProps,\n            mapDispatchToProps\n        )(InventoryDetail)\n    )\n);\n","// doT.js\n// 2011-2014, Laura Doktorova, https://github.com/olado/doT\n// Licensed under the MIT license.\n\n(function () {\n\t\"use strict\";\n\n\tvar doT = {\n\t\tname: \"doT\",\n\t\tversion: \"1.1.1\",\n\t\ttemplateSettings: {\n\t\t\tevaluate:    /\\{\\{([\\s\\S]+?(\\}?)+)\\}\\}/g,\n\t\t\tinterpolate: /\\{\\{=([\\s\\S]+?)\\}\\}/g,\n\t\t\tencode:      /\\{\\{!([\\s\\S]+?)\\}\\}/g,\n\t\t\tuse:         /\\{\\{#([\\s\\S]+?)\\}\\}/g,\n\t\t\tuseParams:   /(^|[^\\w$])def(?:\\.|\\[[\\'\\\"])([\\w$\\.]+)(?:[\\'\\\"]\\])?\\s*\\:\\s*([\\w$\\.]+|\\\"[^\\\"]+\\\"|\\'[^\\']+\\'|\\{[^\\}]+\\})/g,\n\t\t\tdefine:      /\\{\\{##\\s*([\\w\\.$]+)\\s*(\\:|=)([\\s\\S]+?)#\\}\\}/g,\n\t\t\tdefineParams:/^\\s*([\\w$]+):([\\s\\S]+)/,\n\t\t\tconditional: /\\{\\{\\?(\\?)?\\s*([\\s\\S]*?)\\s*\\}\\}/g,\n\t\t\titerate:     /\\{\\{~\\s*(?:\\}\\}|([\\s\\S]+?)\\s*\\:\\s*([\\w$]+)\\s*(?:\\:\\s*([\\w$]+))?\\s*\\}\\})/g,\n\t\t\tvarname:\t\"it\",\n\t\t\tstrip:\t\ttrue,\n\t\t\tappend:\t\ttrue,\n\t\t\tselfcontained: false,\n\t\t\tdoNotSkipEncoded: false\n\t\t},\n\t\ttemplate: undefined, //fn, compile template\n\t\tcompile:  undefined, //fn, for express\n\t\tlog: true\n\t}, _globals;\n\n\tdoT.encodeHTMLSource = function(doNotSkipEncoded) {\n\t\tvar encodeHTMLRules = { \"&\": \"&#38;\", \"<\": \"&#60;\", \">\": \"&#62;\", '\"': \"&#34;\", \"'\": \"&#39;\", \"/\": \"&#47;\" },\n\t\t\tmatchHTML = doNotSkipEncoded ? /[&<>\"'\\/]/g : /&(?!#?\\w+;)|<|>|\"|'|\\//g;\n\t\treturn function(code) {\n\t\t\treturn code ? code.toString().replace(matchHTML, function(m) {return encodeHTMLRules[m] || m;}) : \"\";\n\t\t};\n\t};\n\n\t_globals = (function(){ return this || (0,eval)(\"this\"); }());\n\n\t/* istanbul ignore else */\n\tif (typeof module !== \"undefined\" && module.exports) {\n\t\tmodule.exports = doT;\n\t} else if (typeof define === \"function\" && define.amd) {\n\t\tdefine(function(){return doT;});\n\t} else {\n\t\t_globals.doT = doT;\n\t}\n\n\tvar startend = {\n\t\tappend: { start: \"'+(\",      end: \")+'\",      startencode: \"'+encodeHTML(\" },\n\t\tsplit:  { start: \"';out+=(\", end: \");out+='\", startencode: \"';out+=encodeHTML(\" }\n\t}, skip = /$^/;\n\n\tfunction resolveDefs(c, block, def) {\n\t\treturn ((typeof block === \"string\") ? block : block.toString())\n\t\t.replace(c.define || skip, function(m, code, assign, value) {\n\t\t\tif (code.indexOf(\"def.\") === 0) {\n\t\t\t\tcode = code.substring(4);\n\t\t\t}\n\t\t\tif (!(code in def)) {\n\t\t\t\tif (assign === \":\") {\n\t\t\t\t\tif (c.defineParams) value.replace(c.defineParams, function(m, param, v) {\n\t\t\t\t\t\tdef[code] = {arg: param, text: v};\n\t\t\t\t\t});\n\t\t\t\t\tif (!(code in def)) def[code]= value;\n\t\t\t\t} else {\n\t\t\t\t\tnew Function(\"def\", \"def['\"+code+\"']=\" + value)(def);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn \"\";\n\t\t})\n\t\t.replace(c.use || skip, function(m, code) {\n\t\t\tif (c.useParams) code = code.replace(c.useParams, function(m, s, d, param) {\n\t\t\t\tif (def[d] && def[d].arg && param) {\n\t\t\t\t\tvar rw = (d+\":\"+param).replace(/'|\\\\/g, \"_\");\n\t\t\t\t\tdef.__exp = def.__exp || {};\n\t\t\t\t\tdef.__exp[rw] = def[d].text.replace(new RegExp(\"(^|[^\\\\w$])\" + def[d].arg + \"([^\\\\w$])\", \"g\"), \"$1\" + param + \"$2\");\n\t\t\t\t\treturn s + \"def.__exp['\"+rw+\"']\";\n\t\t\t\t}\n\t\t\t});\n\t\t\tvar v = new Function(\"def\", \"return \" + code)(def);\n\t\t\treturn v ? resolveDefs(c, v, def) : v;\n\t\t});\n\t}\n\n\tfunction unescape(code) {\n\t\treturn code.replace(/\\\\('|\\\\)/g, \"$1\").replace(/[\\r\\t\\n]/g, \" \");\n\t}\n\n\tdoT.template = function(tmpl, c, def) {\n\t\tc = c || doT.templateSettings;\n\t\tvar cse = c.append ? startend.append : startend.split, needhtmlencode, sid = 0, indv,\n\t\t\tstr  = (c.use || c.define) ? resolveDefs(c, tmpl, def || {}) : tmpl;\n\n\t\tstr = (\"var out='\" + (c.strip ? str.replace(/(^|\\r|\\n)\\t* +| +\\t*(\\r|\\n|$)/g,\" \")\n\t\t\t\t\t.replace(/\\r|\\n|\\t|\\/\\*[\\s\\S]*?\\*\\//g,\"\"): str)\n\t\t\t.replace(/'|\\\\/g, \"\\\\$&\")\n\t\t\t.replace(c.interpolate || skip, function(m, code) {\n\t\t\t\treturn cse.start + unescape(code) + cse.end;\n\t\t\t})\n\t\t\t.replace(c.encode || skip, function(m, code) {\n\t\t\t\tneedhtmlencode = true;\n\t\t\t\treturn cse.startencode + unescape(code) + cse.end;\n\t\t\t})\n\t\t\t.replace(c.conditional || skip, function(m, elsecase, code) {\n\t\t\t\treturn elsecase ?\n\t\t\t\t\t(code ? \"';}else if(\" + unescape(code) + \"){out+='\" : \"';}else{out+='\") :\n\t\t\t\t\t(code ? \"';if(\" + unescape(code) + \"){out+='\" : \"';}out+='\");\n\t\t\t})\n\t\t\t.replace(c.iterate || skip, function(m, iterate, vname, iname) {\n\t\t\t\tif (!iterate) return \"';} } out+='\";\n\t\t\t\tsid+=1; indv=iname || \"i\"+sid; iterate=unescape(iterate);\n\t\t\t\treturn \"';var arr\"+sid+\"=\"+iterate+\";if(arr\"+sid+\"){var \"+vname+\",\"+indv+\"=-1,l\"+sid+\"=arr\"+sid+\".length-1;while(\"+indv+\"<l\"+sid+\"){\"\n\t\t\t\t\t+vname+\"=arr\"+sid+\"[\"+indv+\"+=1];out+='\";\n\t\t\t})\n\t\t\t.replace(c.evaluate || skip, function(m, code) {\n\t\t\t\treturn \"';\" + unescape(code) + \"out+='\";\n\t\t\t})\n\t\t\t+ \"';return out;\")\n\t\t\t.replace(/\\n/g, \"\\\\n\").replace(/\\t/g, '\\\\t').replace(/\\r/g, \"\\\\r\")\n\t\t\t.replace(/(\\s|;|\\}|^|\\{)out\\+='';/g, '$1').replace(/\\+''/g, \"\");\n\t\t\t//.replace(/(\\s|;|\\}|^|\\{)out\\+=''\\+/g,'$1out+=');\n\n\t\tif (needhtmlencode) {\n\t\t\tif (!c.selfcontained && _globals && !_globals._encodeHTML) _globals._encodeHTML = doT.encodeHTMLSource(c.doNotSkipEncoded);\n\t\t\tstr = \"var encodeHTML = typeof _encodeHTML !== 'undefined' ? _encodeHTML : (\"\n\t\t\t\t+ doT.encodeHTMLSource.toString() + \"(\" + (c.doNotSkipEncoded || '') + \"));\"\n\t\t\t\t+ str;\n\t\t}\n\t\ttry {\n\t\t\treturn new Function(c.varname, str);\n\t\t} catch (e) {\n\t\t\t/* istanbul ignore else */\n\t\t\tif (typeof console !== \"undefined\") console.log(\"Could not create a template function: \" + str);\n\t\t\tthrow e;\n\t\t}\n\t};\n\n\tdoT.compile = function(tmpl, def) {\n\t\treturn doT.template(tmpl, null, def);\n\t};\n}());\n","export const FETCH_CVE_LIST = 'FETCH_CVE_LIST';\nexport const EMPTY_CVE_LIST = 'EMPTY_CVE_LIST';\nexport const FETCH_CVE_DETAILS = 'FETCH_CVE_DETAILS';\nexport const HANDLE_CVE_DETAILS_ERROR = 'HANDLE_CVE_DETAILS_ERROR';\nexport const FETCH_SYSTEM_DETAILS = 'FETCH_SYSTEM_DETAILS';\nexport const FETCH_AFFECTED_SYSTEMS_BY_CVE = 'FETCH_AFFECTED_SYSTEMS_BY_CVE';\nexport const FETCH_SYSTEMS = 'FETCH_SYSTEMS';\nexport const SET_HEADER = 'SET_HEADER';\nexport const SYSTEM_OPT_OUT = 'SYSTEM_OPT_OUT';\nexport const FETCH_SYSTEM_CVE_LIST = 'FETCH_SYSTEM_CVE_LIST';\nexport const CHANGE_SYSTEM_CVE_STATUS = 'CHANGE_SYSTEM_CVE_STATUS';\nexport const CHANGE_EXPOSED_SYSTEMS_PARAMETERS = 'CHANGE_EXPOSED_SYSTEMS_PARAMETERS';\nexport const CHANGE_CVE_LIST_PARAMETERS = 'CHANGE_CVE_LIST_PARAMETERS';\nexport const SELECT_CVE = 'SELECT_CVE';\nexport const SELECT_SYSTEM_CVE = 'SELECT_SYSTEM_CVE';\nexport const SELECT_ENTITIES = 'SELECT_ENTITIES';\nexport const SELECT_MULTIPLE_ENTITIES = 'SELECT_MULTIPLE_ENTITIES';\nexport const EXPAND_CVE = 'EXPAND_CVE';\nexport const EXPAND_ROW = 'EXPAND_ROW'; //TODO unify it with EXPAND_CVE action\nexport const EXPAND_SYSTEM_CVE = 'EXPAND_SYSTEM_CVE';\nexport const FETCH_INSIGHTS_SYSTEM_RULES = 'FETCH_INSIGHTS_SYSTEM_RULES';\nexport const CHANGE_SYSTEMS_PARAMS = 'CHANGE_SYSTEMS_PARAMS';\nexport const CHANGE_SYSTEM_CVE_LIST_PARAMETERS = 'CHANGE_SYSTEM_CVE_LIST_PARAMETERS';\nexport const CLEAR_SYSTEMS_STORE = 'CLEAR_SYSTEMS_STORE';\nexport const CLEAR_SYSTEM_CVES_STORE = 'CLEAR_SYSTEM_CVES_STORE';\nexport const CLEAR_CVE_STORE = 'CLEAR_CVE_STORE';\nexport const CLEAR_INVENTORY_STORE = 'CLEAR_INVENTORY_STORE';\nexport const CLEAR_CVES_STORE = 'CLEAR_CVEs_STORE';\nexport const FETCH_AFFECTED_SYSTEM_IDS_BY_CVE = 'FETCH_AFFECTED_SYSTEM_IDS_BY_CVE';\nexport const FETCH_SYSTEMS_IDS = 'FETCH_SYSTEMS_IDS';\nexport const FETCH_CVE_LIST_IDS = 'FETCH_CVE_LIST_IDS';\nexport const FETCH_SYTEM_DETAILS_IDS = 'FETCH_SYTEM_DETAILS_IDS';\n","import { SecurityIcon, UnknownIcon } from '@patternfly/react-icons';\nimport { SortByDirection } from '@patternfly/react-table';\nimport findIndex from 'lodash/findIndex';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { impactColorList, impactList, CVSS_OPTIONS, PUBLIC_DATE_OPTIONS } from './constants';\nimport qs from 'query-string';\nimport { IntlProvider } from '@redhat-cloud-services/frontend-components-translations';\n\nexport const dataShape = propTypes.shape({\n    data: propTypes.oneOfType([propTypes.object, propTypes.array]),\n    meta: propTypes.object,\n    isLoading: propTypes.bool\n});\n\n/**\n * Based on the  allowedParams it will construct the arguments for the API call\n * which is defined in the vulnerabilities-client. vulnerabilities-client is written is typescript\n * so we need to define and pass every single parameter. Order in allowedParams is important\n *\n * @param {Object} apiProps\n * @param {Array} allowedParams - order should align with the params in the vulnerabilities-client\n */\nexport function constructParameters(apiProps, allowedParams) {\n    if (apiProps) {\n        Object.keys(apiProps).forEach(\n            key => (\n                apiProps[key] === undefined\n                || apiProps[key] === ''\n            )\n            && delete apiProps[key]\n        );\n\n        const params = allowedParams.map(item => apiProps[item]);\n\n        return params;\n    }\n\n    return [];\n}\n\n// TODO DRY:similar to constructParameters\nexport function constructURLParameters(urlParams, allowedParams) {\n    if (urlParams) {\n        const params = { ...urlParams };\n        Object.keys(urlParams).forEach(\n            key => (\n                params[key] === undefined\n                || params[key] === ''\n                || !allowedParams.includes(key)\n                || params[key] === false\n            )\n            && delete params[key]\n\n        );\n        return params;\n    }\n}\n\nexport function formatDate(date = new Date()) {\n    const prepend = (number) => `${`${number}`.length === 1 ? '0' : ''}${number}`;\n    const toFormat = new Date(date);\n    if (toFormat instanceof Date && !isNaN(toFormat)) {\n        const year = toFormat.getFullYear();\n        const month = toFormat.getMonth();\n        const day = toFormat.getDate();\n        return `${year}-${prepend(month)}-${prepend(day)}`;\n    }\n\n    return toFormat;\n}\n\n/**\n * Contructs the filters which have more than one parameter that needs to be passed\n * and resets all the parameteres when it's needed\n *\n * @param {Object} filterParams\n * @return {Object}\n */\nexport function constructFilterParameters(filterParams) {\n    if (Object.prototype.hasOwnProperty.call(filterParams, 'cvss_filter')) {\n        let cvssEntry = CVSS_OPTIONS.find(({ value }) => value === filterParams.cvss_filter);\n\n        if (typeof cvssEntry === 'undefined' && typeof filterParams.cvss_filter !== 'undefined') {\n            let values = filterParams.cvss_filter.split(/[^0-9]+/).filter(item => parseFloat(item));\n            let [from, to] = values;\n            cvssEntry = { from, to };\n        } else if (typeof cvssEntry === 'undefined' && typeof filterParams.cvss_filter === 'undefined') {\n            cvssEntry = { from: undefined, to: undefined };\n        } else if ((cvssEntry && cvssEntry.label === 'N/A') && filterParams.cvss_filter === 'from-1to-1') {\n            cvssEntry = { from: -1, to: -1 };\n        }\n\n        filterParams.cvss_from = cvssEntry.from;\n        filterParams.cvss_to = cvssEntry.to;\n    }\n\n    if (Object.prototype.hasOwnProperty.call(filterParams, 'publish_date')) {\n        let publicEntry = PUBLIC_DATE_OPTIONS.find(item => item.value === filterParams.publish_date);\n\n        if (typeof publicEntry !== 'undefined') {\n            filterParams.public_from = publicEntry.from && formatDate(publicEntry.from);\n            filterParams.public_to = publicEntry.to && formatDate(publicEntry.to);\n        } else {\n            filterParams.public_from = undefined;\n            filterParams.public_to = undefined;\n            filterParams.publish_date = undefined;\n        }\n    }\n\n    return filterParams;\n}\n\nexport function getImpactDetails(impact) {\n    if (Object.keys(impactList).includes(impact)) {\n        return {\n            title: impactList[impact].title,\n            color: impactList[impact].color,\n            text: impactList[impact].text,\n            titleContent: (\n                <SecurityIcon size=\"lg\" />\n            )\n        };\n    } else {\n        return {\n            title: 'Unknown',\n            color: impactColorList.unknown,\n            text: '',\n            titleContent: (\n                <UnknownIcon size=\"lg\" />\n            )\n        };\n    }\n}\n\nexport const createSortBy = (header, value) => {\n    if (value) {\n        let direction = value.indexOf('-') === 0 ? SortByDirection.desc : SortByDirection.asc;\n        value = value.replace(/^(-|\\+)/, '');\n        const index = findIndex(header, item => item.key === value);\n        let sort = {\n            index,\n            direction\n        };\n        return sort;\n    }\n\n    return {};\n};\n\nexport const handleSortColumn = (key, direction, header, currentSort, apply) => {\n    let columnName = header[key].key;\n    const useDefault = currentSort && currentSort.substr(1) !== columnName;\n    if (direction === SortByDirection.desc || useDefault) {\n        columnName = '-' + columnName;\n    }\n\n    apply({ sort: columnName });\n};\n\nexport const updateStateSet = (stateSet, names, value) => {\n    [].concat(names).forEach(name => {\n        value ? stateSet.add(name) : stateSet.delete(name);\n    });\n    return stateSet;\n};\n\nexport const useCreateUrlParams = (allowedParams) => {\n    const urlParams = qs.parse(window.location.search);\n\n    const createUrlParams = (parameters) => {\n        window.history.pushState(\n            {},\n            '',\n            `${\n                window.location.pathname\n            }?${\n                qs.stringify(constructURLParameters(parameters, allowedParams))\n            }`\n        );\n    };\n\n    return [createUrlParams, urlParams];\n};\n\nexport const updateRef = (meta, apply) => {\n    const pages = parseInt(meta.pages);\n    const page = parseInt(meta.page);\n    const cvesCount = parseInt(meta.cvesCount);\n    const goTo = (pages === page && page > 1 && cvesCount === 1) ? (pages - 1) : page;\n\n    apply({ page: goTo });\n};\n\nexport const mountWithIntl = (Component) => {\n    const wrapper = mount(Component, {\n        wrappingComponent: IntlProvider\n    });\n    const provider = wrapper.getWrappingComponent();\n    provider.setProps({ locale: 'en' });\n\n    return wrapper;\n};\n","import {\n    authInterceptor,\n    interceptor401,\n    responseDataInterceptor\n} from '@redhat-cloud-services/frontend-components-utilities/files/interceptors';\nimport axios from 'axios';\nimport { ReadOnlyNotification } from '../Helpers/constants';\nconst instance = axios.create();\n\nexport function errorInterceptor(err) {\n    if (!axios.isCancel(err)) {\n        const errObject = { ...err };\n\n        if (errObject.response && errObject.response.data && errObject.response.data.errors) {\n            const data = errObject.response.data.errors[0];\n            throw data;\n        }\n\n        throw err;\n    }\n}\n\nexport function readOnlyInterceptor(error) {\n    if (error.response && error.response.status === 503) {\n        const data = ReadOnlyNotification;\n        throw data;\n    }\n\n    throw error;\n}\n\ninstance.interceptors.request.use(authInterceptor);\ninstance.interceptors.response.use(responseDataInterceptor);\ninstance.interceptors.response.use(null, interceptor401);\ninstance.interceptors.response.use(null, readOnlyInterceptor);\ninstance.interceptors.response.use(null, errorInterceptor);\n\nexport default instance;\n","let BASE_ROUTE = '/api/vulnerability/';\nimport { GitApi } from '@redhat-cloud-services/vulnerabilities-client';\nimport instance from '../Utilities/interceptors';\nimport { constructParameters } from './MiscHelper';\n\nlet api = new GitApi(undefined, BASE_ROUTE, instance);\n\nexport function getCveDetails(synopsis) {\n    const result = api.getCveDetails(synopsis);\n    return result;\n}\n\nexport function getSystemDetails(system) {\n    const result = api.getSystemDetails(system);\n    return result;\n}\n\nexport function getAffectedSystemsByCVE(synopsis, apiProps) {\n    let parameterNames = [\n        'filter',\n        'limit',\n        'offset',\n        'page',\n        'page_size',\n        'sort',\n        'status_id',\n        'data_format',\n        'security_rule',\n        'rule_name'\n    ];\n    let parameterArray = constructParameters(apiProps, parameterNames);\n    let result = api.getAffectedSystemsByCve(synopsis, ...parameterArray);\n    return result;\n}\n\nexport function getSystems(apiProps) {\n    let parameterNames = ['filter', 'limit', 'offset', 'page', 'page_size', 'sort', 'data_format', 'stale', 'uuid', 'opt_out'];\n    let parameterArray = constructParameters(apiProps, parameterNames);\n    let result = api.getSystemsList(...parameterArray);\n    return result;\n}\n\nexport function getCveListByAccount(apiProps) {\n    let parameterNames = [\n        'filter',\n        'limit',\n        'offset',\n        'page',\n        'page_size',\n        'sort',\n        'cvss_from',\n        'cvss_to',\n        'public_from',\n        'public_to',\n        'impact',\n        'data_format',\n        'business_risk_id',\n        'status_id',\n        'security_rule',\n        'show_all'\n    ];\n    let parameterArray = constructParameters(apiProps, parameterNames);\n    let result = api.getCveList(...parameterArray);\n    return result;\n}\n\nexport function optOutSystem(system, status) {\n    let result = api.setSystemOptOut(system, status);\n    return result;\n}\n\nexport function getCveListBySystem(apiProps) {\n    const { system } = apiProps;\n    let parameterNames = [\n        'filter',\n        'limit',\n        'offset',\n        'page',\n        'page_size',\n        'sort',\n        'cvss_from',\n        'cvss_to',\n        'public_from',\n        'public_to',\n        'impact',\n        'status_id',\n        'data_format',\n        'business_risk_id',\n        'security_rule'\n    ];\n    if (apiProps && system) {\n        Object.keys(apiProps).forEach(key => (apiProps[key] === undefined || apiProps[key] === '') && delete apiProps[key]);\n        const params = parameterNames.map(item => apiProps[item]);\n        return api.getCveListBySystem(system, ...params).catch(err => {\n            if (err && err.status === '404') {\n                return { errors: err };\n            }\n\n            throw err;\n        });\n    }\n}\n\nexport function setSystemCveStatus(params) {\n    let result = api.setStatus(params);\n    return result;\n}\n\nexport function optOutSystems(systems, optOut) {\n    const data = { opt_out: optOut, inventory_id: new Array(...systems) };\n    let result = api.setSystemsOptOut(data);\n    return result;\n}\n\nexport function setBusinessRisk(params) {\n    let result = api.setCveBusinessRisk(params);\n    return result;\n}\n\nexport function setCveStatus(params) {\n    let result = api.setCveStatus(params);\n    return result;\n}\n\nexport function getExecutiveReport() {\n    let result = api.getExecutiveReport();\n    return result;\n}\n\nexport function getAffectedSystemsIdsByCve(synopsis, apiProps) {\n    //TODO: Once all new endpoints for selecting IDs are introduced optimize all parameterNames arrays in this page\n    let parameterNames = [\n        'filter',\n        'limit',\n        'offset',\n        'page',\n        'page_size',\n        'sort',\n        'status_id',\n        'data_format',\n        'security_rule'\n    ];\n    let parameterArray = constructParameters(apiProps, parameterNames);\n    let result = api.getAffectedSystemsIdsByCve(synopsis, ...parameterArray);\n    return result;\n}\n\nexport function getSystemsIds(apiProps) {\n    let parameterNames = ['filter', 'limit', 'offset', 'page', 'page_size', 'sort', 'data_format', 'stale', 'uuid', 'opt_out'];\n    let parameterArray = constructParameters(apiProps, parameterNames);\n    let result = api.getSystemsIds(...parameterArray);\n    return result;\n}\n\nexport function getCveIdsList(apiProps) {\n    let parameterNames = [\n        'filter',\n        'limit',\n        'offset',\n        'page',\n        'page_size',\n        'sort',\n        'cvss_from',\n        'cvss_to',\n        'public_from',\n        'public_to',\n        'impact',\n        'data_format',\n        'business_risk_id',\n        'status_id',\n        'security_rule',\n        'show_all'\n    ];\n    let parameterArray = constructParameters(apiProps, parameterNames);\n    let result = api.getCveIdsList(...parameterArray);\n    return result;\n}\n\nexport function getCveIdsBySystem(apiProps) {\n    const { system } = apiProps;\n    let parameterNames = [\n        'filter',\n        'limit',\n        'offset',\n        'page',\n        'page_size',\n        'sort',\n        'cvss_from',\n        'cvss_to',\n        'public_from',\n        'public_to',\n        'impact',\n        'status_id',\n        'data_format',\n        'business_risk_id',\n        'security_rule'\n    ];\n    if (apiProps && system) {\n        Object.keys(apiProps).forEach(key => (apiProps[key] === undefined || apiProps[key] === '') && delete apiProps[key]);\n        const params = parameterNames.map(item => apiProps[item]);\n        return api.getCveIdsBySystem(system, ...params);\n    }\n}\n","import Immutable from 'seamless-immutable';\nimport * as ActionTypes from '../ActionTypes';\n\n// Initial State\nexport const initialState = Immutable({\n    title: 'Vulnerability',\n    breadcrumbs: []\n});\n\n// Reducer\nexport const BreadcrumbStore = (state = initialState, action) => {\n    let newState;\n    switch (action.type) {\n        case ActionTypes.SET_HEADER + '_FULFILLED':\n            newState = state.set('title', (action.payload && action.payload.title) || initialState.title);\n            newState = newState.set('breadcrumbs', (action.payload && action.payload.breadcrumbs) || initialState.breadcrumbs);\n            return newState;\n\n        default:\n            return state;\n    }\n};\n","import Immutable from 'seamless-immutable';\nimport * as ActionTypes from '../ActionTypes';\n\n// Initial State\nexport const initialState = Immutable({\n    affectedSystemsByCVE: {\n        isLoading: true,\n        openedRows: [],\n        payload: {\n            meta: {\n                total_items: 0,\n                page: 1,\n                page_size: 20\n            }\n        }\n    },\n    parameters: {\n        page: 1,\n        page_size: 20,\n        selectedHosts: [],\n        security_rule: undefined,\n        status_id: undefined\n    },\n    cveDetails: {\n        isLoading: true,\n        payload: {},\n        error: false\n    }\n});\n\n// Reducer\nexport const CVEDetailsPageStore = (state = initialState, action) => {\n    let newState;\n    switch (action.type) {\n        case ActionTypes.HANDLE_CVE_DETAILS_ERROR:\n            newState = state.setIn(['cveDetails', 'error'], action.payload.error);\n            newState = newState.setIn(['cveDetails', 'isLoading'], false);\n            return newState;\n        case ActionTypes.FETCH_CVE_DETAILS + '_PENDING':\n            newState = state.setIn(['cveDetails', 'isLoading'], true);\n            return newState;\n\n        case ActionTypes.FETCH_CVE_DETAILS + '_FULFILLED':\n            newState = state.setIn(['cveDetails', 'payload'], action.payload);\n            newState = newState.setIn(['cveDetails', 'isLoading'], false);\n            return newState;\n\n        case ActionTypes.FETCH_AFFECTED_SYSTEMS_BY_CVE + '_PENDING':\n            newState = state.setIn(['affectedSystemsByCVE', 'isLoading'], true);\n            return newState;\n\n        case ActionTypes.FETCH_AFFECTED_SYSTEMS_BY_CVE + '_FULFILLED':\n            newState = state.setIn(['affectedSystemsByCVE', 'payload'], action.payload);\n            newState = newState.setIn(['affectedSystemsByCVE', 'isLoading'], false);\n            return newState;\n        case ActionTypes.CHANGE_EXPOSED_SYSTEMS_PARAMETERS:\n            newState = state.setIn(['parameters'], {\n                ...state.parameters,\n                ...action.payload,\n                page_size: action.payload.page_size || state.parameters.page_size\n            });\n            return newState;\n        case ActionTypes.CLEAR_CVE_STORE:\n            return initialState;\n        default:\n            return state;\n    }\n};\n\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/files/esm/ReducerRegistry';\nimport { FETCH_SYSTEM_CVE_LIST } from '../ActionTypes';\n\nexport const initialState = {\n    parameters: {\n        page: 1,\n        page_size: 20\n    },\n    cveList: {\n        isLoading: true,\n        payload: [],\n        meta: new Date(),\n        error: false\n    },\n    openedCves: [],\n    selectedCves: [],\n    expandCveDescription: false\n};\n\nfunction pendingVulnerabilities(state, { meta }) {\n    return {\n        ...state,\n        timestamp: meta,\n        cveList: {\n            ...state.cveList,\n            isLoading: true\n        }\n    };\n}\n\nfunction rejectedVulnerabilities(state, { meta, payload }) {\n    return {\n        ...state,\n        timestamp: meta,\n        cveList: {\n            payload: { errors: payload },\n            isLoading: false\n        }\n    };\n}\n\nfunction fulfilledVulnerabilities(state, action) {\n    const { payload, meta } = action;\n    if (meta >= state.timestamp) {\n        return {\n            ...state,\n            timestamp: meta,\n            cveList: {\n                payload,\n                isLoading: false\n            }\n        };\n    }\n\n    return state;\n}\n\nfunction selectEntity(state, action) {\n    let newState = state;\n    let selectedCves = newState.selectedCves.slice();\n    if (Array.isArray(action.payload)) {\n        selectedCves = action.payload;\n    } else {\n        (selectedCves.includes(action.payload) && selectedCves.splice(selectedCves.indexOf(action.payload), 1)) ||\n            selectedCves.push(action.payload);\n    }\n\n    return { ...newState, selectedCves };\n}\n\nfunction expandCve(state, action) {\n    let newState = state;\n    const { isOpen, cves, expandCveDescription } = action.payload;\n    let openedCves = newState.openedCves.slice();\n\n    if (cves.length > 0) {\n        cves.map(cve =>{\n            const index = openedCves.findIndex(element => element.id === cve);\n            if (index > -1) { openedCves[index] = ({ id: cve, isOpen });}\n            else {openedCves.push({ id: cve, isOpen });}\n        });\n    }\n    else {\n        openedCves = openedCves.map(cve => ({ id: cve.id, isOpen: false }));\n    }\n\n    return { ...newState, openedCves, expandCveDescription };\n}\n\nfunction changeParameters(state, action) {\n    let newState = state;\n    newState.parameters = { ...state.parameters, ...action.payload };\n    return newState;\n}\n\nfunction clearSystemCvesStore(state) {\n    let newState = state;\n    newState.selectedCves = [];\n    newState.openedCves = [];\n    newState.parameters = {\n        page: 1,\n        page_size: 20\n    };\n    return newState;\n}\n\nexport const SystemCvesStore = applyReducerHash(\n    {\n        [`${FETCH_SYSTEM_CVE_LIST}_PENDING`]: pendingVulnerabilities,\n        [`${FETCH_SYSTEM_CVE_LIST}_REJECTED`]: rejectedVulnerabilities,\n        [`${FETCH_SYSTEM_CVE_LIST}_FULFILLED`]: fulfilledVulnerabilities,\n        ['CHANGE_SYSTEM_CVE_LIST_PARAMETERS']: changeParameters,\n        ['SELECT_SYSTEM_CVE']: selectEntity,\n        ['EXPAND_SYSTEM_CVE']: expandCve,\n        ['CLEAR_SYSTEM_CVES_STORE']: clearSystemCvesStore\n    },\n    initialState\n);\n","import * as ActionTypes from '../ActionTypes';\n\nexport const initialState = {\n    isLoading: true,\n    payload: {},\n    metadata: {\n        page: 1,\n        limit: 20,\n        offet: 0,\n        total_items: 0\n    },\n    params: {\n        filter: undefined,\n        opt_out: false,\n        page: 1,\n        page_size: 20,\n        sort: '-last_upload'\n    }\n};\n\nexport const SystemsPageStore = (state = initialState, action) => {\n    let newState = { ...state };\n    switch (action.type) {\n        case ActionTypes.FETCH_SYSTEMS + '_PENDING':\n            newState.isLoading = true;\n            return newState;\n\n        case ActionTypes.FETCH_SYSTEMS + '_FULFILLED':\n            newState.payload = action.payload;\n            newState.metadata = action.payload.meta;\n            newState.isLoading = false;\n            return newState;\n        case ActionTypes.CHANGE_SYSTEMS_PARAMS:\n            newState.params = {\n                ...newState.params,\n                ...action.payload,\n                page_size: action.payload.page_size || newState.params.page_size\n            };\n            return newState;\n        case ActionTypes.CLEAR_SYSTEMS_STORE:\n            return initialState;\n        default:\n            return state;\n    }\n};\n","import * as ActionTypes from '../ActionTypes';\n\n// Initial State\nexport const initialState = {\n    cveList: {\n        isLoading: true,\n        payload: [],\n        timestamp: new Date()\n    },\n    parameters: {\n        show_all: false,\n        sort: '-public_date'\n    },\n    selectedCves: [],\n    openedCves: [],\n    expandCveDescription: false\n};\n\nfunction isValid(stateTimestamp, actionTimestamp) {\n    return actionTimestamp >= stateTimestamp;\n}\n\n// Reducer\nexport const CVEsStore = (state = initialState, action) => {\n    let newState = { ...state };\n\n    switch (action.type) {\n        case ActionTypes.FETCH_CVE_LIST + '_PENDING':\n            newState.cveList = {\n                timestamp: action.meta,\n                isLoading: true\n            };\n            return newState;\n\n        case ActionTypes.FETCH_CVE_LIST + '_REJECTED':\n            newState.cveList = {\n                isLoading: false,\n                payload: { errors: action.payload }\n            };\n            return newState;\n\n        case ActionTypes.FETCH_CVE_LIST + '_FULFILLED':\n            if (isValid(state.cveList.timestamp, action.meta)) {\n                newState.cveList = {\n                    payload: action.payload,\n                    isLoading: false\n                };\n\n                return newState;\n            }\n\n            return state;\n\n        case ActionTypes.CHANGE_CVE_LIST_PARAMETERS + '_FULFILLED':\n            newState.parameters = { ...newState.parameters, ...action.payload };\n            return newState;\n\n        case ActionTypes.SELECT_CVE: {\n            let selectedCves = newState.selectedCves.slice();\n            if (Array.isArray(action.payload)) {\n                selectedCves = action.payload;\n            } else {\n                (selectedCves.includes(action.payload) && selectedCves.splice(selectedCves.indexOf(action.payload), 1)) ||\n                    selectedCves.push(action.payload);\n            }\n\n            return { ...newState, selectedCves  };\n        }\n\n        case ActionTypes.EXPAND_CVE: {\n            if (Array.isArray(action.payload)) {\n                const openedCves = action.payload;\n                const expandCveDescription = action.payload.length === 0 ? false : true;\n                return { ...newState,  openedCves, expandCveDescription };\n            }\n\n            const cveName = newState.cveList.payload.data[action.payload / 2].id;\n            const openedCves = newState.openedCves.slice();\n            (openedCves.includes(cveName) && openedCves.splice(openedCves.indexOf(cveName), 1)) || openedCves.push(cveName);\n\n            const expandCveDescription = (openedCves.length === newState.cveList.payload.data.length);\n\n            return { ...newState, openedCves, expandCveDescription };\n        }\n\n        case ActionTypes.CLEAR_CVES_STORE: {\n            return initialState;\n        }\n\n        default:\n            return state;\n    }\n};\n","import * as APIHelper from '../../Helpers/APIHelper';\nimport * as HeaderHelper from '../../Helpers/HeaderHelper';\nimport ReducerRegistry from '../../Utilities/ReducerRegistry';\nimport * as ActionTypes from '../ActionTypes';\nimport { BreadcrumbStore } from '../Reducers/BreadcrumbStore';\nimport { CVEDetailsPageStore } from '../Reducers/CVEDetailsPageStore';\nimport { SystemCvesStore } from '../Reducers/SystemCvesStore';\nimport { SystemsPageStore } from '../Reducers/SystemsPageStore';\nimport { CVEsStore } from '../Reducers/CVEsStore';\n\nReducerRegistry.register({ CVEDetailsPageStore });\nReducerRegistry.register({ CVEsStore });\nReducerRegistry.register({ SystemsPageStore });\nReducerRegistry.register({ BreadcrumbStore });\nReducerRegistry.register({ SystemCvesStore });\n\nexport const setHeader = props => ({\n    type: ActionTypes.SET_HEADER,\n    payload: new Promise(resolve => {\n        resolve(HeaderHelper.setHeader(props));\n    }).then(result => result)\n});\n\nexport const fetchAffectedSystemsByCVE = (cve, apiProps) =>({\n    type: ActionTypes.FETCH_AFFECTED_SYSTEMS_BY_CVE,\n    payload: new Promise(resolve => {\n        resolve(APIHelper.getAffectedSystemsByCVE(cve, apiProps));\n    }).then(result => result)\n});\n\nexport const fetchSystems = options => ({\n    type: ActionTypes.FETCH_SYSTEMS,\n    payload: new Promise(resolve => {\n        resolve(APIHelper.getSystems(options));\n    }).then(result => result)\n});\n\nexport const fetchCveDetails = synopsis => ({\n    type: ActionTypes.FETCH_CVE_DETAILS,\n    payload: new Promise(resolve => {\n        resolve(APIHelper.getCveDetails(synopsis));\n    }).then(result => result)\n});\n\nexport const handleCveDetailsError = () => ({\n    type: ActionTypes.HANDLE_CVE_DETAILS_ERROR,\n    payload: { error: true }\n});\n\nexport const fetchSystemDetails = system => ({\n    type: ActionTypes.FETCH_SYSTEM_DETAILS,\n    meta: { noError: true },\n    payload: new Promise(resolve => {\n        resolve(APIHelper.getSystemDetails(system));\n    }).then(result => result)\n});\n\nexport const fetchCveListByAccount = apiProps => ({\n    type: ActionTypes.FETCH_CVE_LIST,\n    meta: new Date(),\n    payload: APIHelper.getCveListByAccount(apiProps)\n});\n\nexport const optOutSystemAction = (system, status) => ({\n    type: ActionTypes.SYSTEM_OPT_OUT,\n    payload: new Promise(resolve => {\n        resolve(APIHelper.optOutSystem(system, status));\n    }).then(result => result)\n});\n\nexport const fetchCveListBySystem = apiProps => ({\n    type: ActionTypes.FETCH_SYSTEM_CVE_LIST,\n    meta: new Date(),\n    payload: APIHelper.getCveListBySystem(apiProps)\n});\n\nexport const changeSystemCveStatusAction = (inventoryId, cve, statusId, callback) => ({\n    type: ActionTypes.CHANGE_SYSTEM_CVE_STATUS,\n    payload: APIHelper.setSystemCveStatus(inventoryId, cve, statusId, callback)\n});\n\nexport const optOutSystemsAction = (system, status) => ({\n    type: ActionTypes.SYSTEM_OPT_OUT,\n    payload: new Promise(resolve => {\n        resolve(APIHelper.optOutSystems(system, status));\n    }).then(result => result)\n});\n\nexport const changeCveListParameters = apiProps => ({\n    type: ActionTypes.CHANGE_CVE_LIST_PARAMETERS,\n    payload: new Promise(resolve => {\n        resolve(apiProps);\n    }).then(result => result)\n});\n\nexport const changeExposedSystemsParameters = (params) => ({\n    type: ActionTypes.CHANGE_EXPOSED_SYSTEMS_PARAMETERS,\n    payload: params\n});\n\nexport const changeSystemCVEsParameters = (params) => ({\n    type: ActionTypes.CHANGE_SYSTEM_CVE_LIST_PARAMETERS,\n    payload: params\n});\n\nexport const selectCve = apiProps => ({\n    type: ActionTypes.SELECT_CVE,\n    payload: apiProps\n});\n\nexport const expandCve = apiProps => ({\n    type: ActionTypes.EXPAND_CVE,\n    payload: apiProps\n});\n\nexport const selectSystemCve = apiProps => ({\n    type: ActionTypes.SELECT_SYSTEM_CVE,\n    payload: apiProps\n});\n\nexport const expandSystemCve = apiProps => ({\n    type: ActionTypes.EXPAND_SYSTEM_CVE,\n    payload: apiProps\n});\n\nexport const expandRow = (id, isOpen) => ({\n    type: ActionTypes.EXPAND_ROW,\n    payload: { id, isOpen }\n});\n\nexport const selectEntities = (value, ids) => ({\n    type: ActionTypes.SELECT_ENTITIES,\n    payload: ids\n});\n\nexport const selectMultipleEntities = (selectedHosts) => ({\n    type: ActionTypes.SELECT_MULTIPLE_ENTITIES,\n    payload: selectedHosts\n});\n\nexport const changeSystemsParams = (params) => ({\n    type: ActionTypes.CHANGE_SYSTEMS_PARAMS,\n    payload: params\n});\n\nexport const clearSystemStore = () => ({\n    type: ActionTypes.CLEAR_SYSTEMS_STORE,\n    payload: []\n});\n\nexport const clearSystemCvesStore = () => ({\n    type: ActionTypes.CLEAR_SYSTEM_CVES_STORE,\n    payload: []\n});\n\nexport const clearCveStore = () => ({\n    type: ActionTypes.CLEAR_CVE_STORE,\n    payload: []\n});\n\nexport const fetchAffectedSystemsIdsByCve = (cve, apiProps) => ({\n    type: ActionTypes.FETCH_AFFECTED_SYSTEM_IDS_BY_CVE,\n    payload: APIHelper.getAffectedSystemsIdsByCve(cve, apiProps)\n});\n\nexport const fetchSystemsIds = (apiProps) => ({\n    type: ActionTypes.FETCH_SYSTEMS_IDS,\n    payload: APIHelper.getSystemsIds(apiProps)\n});\n\nexport const fetchCvesIds = (apiProps) => ({\n    type: ActionTypes.FETCH_CVE_LIST_IDS,\n    payload: APIHelper.getCveIdsList(apiProps)\n});\n\nexport const fetchSystemDetailsIds = (apiProps) =>({\n    type: ActionTypes.FETCH_SYTEM_DETAILS_IDS,\n    payload: APIHelper.getCveIdsBySystem(apiProps)\n});\n\nexport const clearInventoryStore = () =>({\n    type: ActionTypes.CLEAR_INVENTORY_STORE,\n    payload: []\n});\n\nexport const clearCVEsStore = () =>({\n    type: ActionTypes.CLEAR_CVES_STORE,\n    payload: []\n});\n","(function() {\n  \"use strict\";\n\nfunction immutableInit(config) {\n\n  // https://github.com/facebook/react/blob/v15.0.1/src/isomorphic/classic/element/ReactElement.js#L21\n  var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol.for && Symbol.for('react.element');\n  var REACT_ELEMENT_TYPE_FALLBACK = 0xeac7;\n\n  var globalConfig = {\n    use_static: false\n  };\n  if (isObject(config)) {\n      if (config.use_static !== undefined) {\n          globalConfig.use_static = Boolean(config.use_static);\n      }\n  }\n\n  function isObject(data) {\n    return (\n      typeof data === 'object' &&\n      !Array.isArray(data) &&\n      data !== null\n    );\n  }\n\n  function instantiateEmptyObject(obj) {\n      var prototype = Object.getPrototypeOf(obj);\n      if (!prototype) {\n          return {};\n      } else {\n          return Object.create(prototype);\n      }\n  }\n\n  function addPropertyTo(target, methodName, value) {\n    Object.defineProperty(target, methodName, {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: value\n    });\n  }\n\n  function banProperty(target, methodName) {\n    addPropertyTo(target, methodName, function() {\n      throw new ImmutableError(\"The \" + methodName +\n        \" method cannot be invoked on an Immutable data structure.\");\n    });\n  }\n\n  var immutabilityTag = \"__immutable_invariants_hold\";\n\n  function addImmutabilityTag(target) {\n    addPropertyTo(target, immutabilityTag, true);\n  }\n\n  function isImmutable(target) {\n    if (typeof target === \"object\") {\n      return target === null || Boolean(\n        Object.getOwnPropertyDescriptor(target, immutabilityTag)\n      );\n    } else {\n      // In JavaScript, only objects are even potentially mutable.\n      // strings, numbers, null, and undefined are all naturally immutable.\n      return true;\n    }\n  }\n\n  function isEqual(a, b) {\n    // Avoid false positives due to (NaN !== NaN) evaluating to true\n    return (a === b || (a !== a && b !== b));\n  }\n\n  function isMergableObject(target) {\n    return target !== null && typeof target === \"object\" && !(Array.isArray(target)) && !(target instanceof Date);\n  }\n\n  var mutatingObjectMethods = [\n    \"setPrototypeOf\"\n  ];\n\n  var nonMutatingObjectMethods = [\n    \"keys\"\n  ];\n\n  var mutatingArrayMethods = mutatingObjectMethods.concat([\n    \"push\", \"pop\", \"sort\", \"splice\", \"shift\", \"unshift\", \"reverse\"\n  ]);\n\n  var nonMutatingArrayMethods = nonMutatingObjectMethods.concat([\n    \"map\", \"filter\", \"slice\", \"concat\", \"reduce\", \"reduceRight\"\n  ]);\n\n  var mutatingDateMethods = mutatingObjectMethods.concat([\n    \"setDate\", \"setFullYear\", \"setHours\", \"setMilliseconds\", \"setMinutes\", \"setMonth\", \"setSeconds\",\n    \"setTime\", \"setUTCDate\", \"setUTCFullYear\", \"setUTCHours\", \"setUTCMilliseconds\", \"setUTCMinutes\",\n    \"setUTCMonth\", \"setUTCSeconds\", \"setYear\"\n  ]);\n\n  function ImmutableError(message) {\n    this.name = 'MyError';\n    this.message = message;\n    this.stack = (new Error()).stack;\n  }\n  ImmutableError.prototype = new Error();\n  ImmutableError.prototype.constructor = Error;\n\n  function makeImmutable(obj, bannedMethods) {\n    // Tag it so we can quickly tell it's immutable later.\n    addImmutabilityTag(obj);\n\n    if (\"development\" !== \"production\") {\n      // Make all mutating methods throw exceptions.\n      for (var index in bannedMethods) {\n        if (bannedMethods.hasOwnProperty(index)) {\n          banProperty(obj, bannedMethods[index]);\n        }\n      }\n\n      // Freeze it and return it.\n      Object.freeze(obj);\n    }\n\n    return obj;\n  }\n\n  function makeMethodReturnImmutable(obj, methodName) {\n    var currentMethod = obj[methodName];\n\n    addPropertyTo(obj, methodName, function() {\n      return Immutable(currentMethod.apply(obj, arguments));\n    });\n  }\n\n  function arraySet(idx, value, config) {\n    var deep          = config && config.deep;\n\n    if (idx in this) {\n      if (deep && this[idx] !== value && isMergableObject(value) && isMergableObject(this[idx])) {\n        value = Immutable.merge(this[idx], value, {deep: true, mode: 'replace'});\n      }\n      if (isEqual(this[idx], value)) {\n        return this;\n      }\n    }\n\n    var mutable = asMutableArray.call(this);\n    mutable[idx] = Immutable(value);\n    return makeImmutableArray(mutable);\n  }\n\n  var immutableEmptyArray = Immutable([]);\n\n  function arraySetIn(pth, value, config) {\n    var head = pth[0];\n\n    if (pth.length === 1) {\n      return arraySet.call(this, head, value, config);\n    } else {\n      var tail = pth.slice(1);\n      var thisHead = this[head];\n      var newValue;\n\n      if (typeof(thisHead) === \"object\" && thisHead !== null) {\n        // Might (validly) be object or array\n        newValue = Immutable.setIn(thisHead, tail, value);\n      } else {\n        var nextHead = tail[0];\n        // If the next path part is a number, then we are setting into an array, else an object.\n        if (nextHead !== '' && isFinite(nextHead)) {\n          newValue = arraySetIn.call(immutableEmptyArray, tail, value);\n        } else {\n          newValue = objectSetIn.call(immutableEmptyObject, tail, value);\n        }\n      }\n\n      if (head in this && thisHead === newValue) {\n        return this;\n      }\n\n      var mutable = asMutableArray.call(this);\n      mutable[head] = newValue;\n      return makeImmutableArray(mutable);\n    }\n  }\n\n  function makeImmutableArray(array) {\n    // Don't change their implementations, but wrap these functions to make sure\n    // they always return an immutable value.\n    for (var index in nonMutatingArrayMethods) {\n      if (nonMutatingArrayMethods.hasOwnProperty(index)) {\n        var methodName = nonMutatingArrayMethods[index];\n        makeMethodReturnImmutable(array, methodName);\n      }\n    }\n\n    if (!globalConfig.use_static) {\n      addPropertyTo(array, \"flatMap\",  flatMap);\n      addPropertyTo(array, \"asObject\", asObject);\n      addPropertyTo(array, \"asMutable\", asMutableArray);\n      addPropertyTo(array, \"set\", arraySet);\n      addPropertyTo(array, \"setIn\", arraySetIn);\n      addPropertyTo(array, \"update\", update);\n      addPropertyTo(array, \"updateIn\", updateIn);\n      addPropertyTo(array, \"getIn\", getIn);\n    }\n\n    for(var i = 0, length = array.length; i < length; i++) {\n      array[i] = Immutable(array[i]);\n    }\n\n    return makeImmutable(array, mutatingArrayMethods);\n  }\n\n  function makeImmutableDate(date) {\n    if (!globalConfig.use_static) {\n      addPropertyTo(date, \"asMutable\", asMutableDate);\n    }\n\n    return makeImmutable(date, mutatingDateMethods);\n  }\n\n  function asMutableDate() {\n    return new Date(this.getTime());\n  }\n\n  /**\n   * Effectively performs a map() over the elements in the array, using the\n   * provided iterator, except that whenever the iterator returns an array, that\n   * array's elements are added to the final result instead of the array itself.\n   *\n   * @param {function} iterator - The iterator function that will be invoked on each element in the array. It will receive three arguments: the current value, the current index, and the current object.\n   */\n  function flatMap(iterator) {\n    // Calling .flatMap() with no arguments is a no-op. Don't bother cloning.\n    if (arguments.length === 0) {\n      return this;\n    }\n\n    var result = [],\n        length = this.length,\n        index;\n\n    for (index = 0; index < length; index++) {\n      var iteratorResult = iterator(this[index], index, this);\n\n      if (Array.isArray(iteratorResult)) {\n        // Concatenate Array results into the return value we're building up.\n        result.push.apply(result, iteratorResult);\n      } else {\n        // Handle non-Array results the same way map() does.\n        result.push(iteratorResult);\n      }\n    }\n\n    return makeImmutableArray(result);\n  }\n\n  /**\n   * Returns an Immutable copy of the object without the given keys included.\n   *\n   * @param {array} keysToRemove - A list of strings representing the keys to exclude in the return value. Instead of providing a single array, this method can also be called by passing multiple strings as separate arguments.\n   */\n  function without(remove) {\n    // Calling .without() with no arguments is a no-op. Don't bother cloning.\n    if (typeof remove === \"undefined\" && arguments.length === 0) {\n      return this;\n    }\n\n    if (typeof remove !== \"function\") {\n      // If we weren't given an array, use the arguments list.\n      var keysToRemoveArray = (Array.isArray(remove)) ?\n         remove.slice() : Array.prototype.slice.call(arguments);\n\n      // Convert numeric keys to strings since that's how they'll\n      // come from the enumeration of the object.\n      keysToRemoveArray.forEach(function(el, idx, arr) {\n        if(typeof(el) === \"number\") {\n          arr[idx] = el.toString();\n        }\n      });\n\n      remove = function(val, key) {\n        return keysToRemoveArray.indexOf(key) !== -1;\n      };\n    }\n\n    var result = instantiateEmptyObject(this);\n\n    for (var key in this) {\n      if (this.hasOwnProperty(key) && remove(this[key], key) === false) {\n        result[key] = this[key];\n      }\n    }\n\n    return makeImmutableObject(result);\n  }\n\n  function asMutableArray(opts) {\n    var result = [], i, length;\n\n    if(opts && opts.deep) {\n      for(i = 0, length = this.length; i < length; i++) {\n        result.push(asDeepMutable(this[i]));\n      }\n    } else {\n      for(i = 0, length = this.length; i < length; i++) {\n        result.push(this[i]);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Effectively performs a [map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map) over the elements in the array, expecting that the iterator function\n   * will return an array of two elements - the first representing a key, the other\n   * a value. Then returns an Immutable Object constructed of those keys and values.\n   *\n   * @param {function} iterator - A function which should return an array of two elements - the first representing the desired key, the other the desired value.\n   */\n  function asObject(iterator) {\n    // If no iterator was provided, assume the identity function\n    // (suggesting this array is already a list of key/value pairs.)\n    if (typeof iterator !== \"function\") {\n      iterator = function(value) { return value; };\n    }\n\n    var result = {},\n        length = this.length,\n        index;\n\n    for (index = 0; index < length; index++) {\n      var pair  = iterator(this[index], index, this),\n          key   = pair[0],\n          value = pair[1];\n\n      result[key] = value;\n    }\n\n    return makeImmutableObject(result);\n  }\n\n  function asDeepMutable(obj) {\n    if (\n      (!obj) ||\n      (typeof obj !== 'object') ||\n      (!Object.getOwnPropertyDescriptor(obj, immutabilityTag)) ||\n      (obj instanceof Date)\n    ) { return obj; }\n    return Immutable.asMutable(obj, {deep: true});\n  }\n\n  function quickCopy(src, dest) {\n    for (var key in src) {\n      if (Object.getOwnPropertyDescriptor(src, key)) {\n        dest[key] = src[key];\n      }\n    }\n\n    return dest;\n  }\n\n  /**\n   * Returns an Immutable Object containing the properties and values of both\n   * this object and the provided object, prioritizing the provided object's\n   * values whenever the same key is present in both objects.\n   *\n   * @param {object} other - The other object to merge. Multiple objects can be passed as an array. In such a case, the later an object appears in that list, the higher its priority.\n   * @param {object} config - Optional config object that contains settings. Supported settings are: {deep: true} for deep merge and {merger: mergerFunc} where mergerFunc is a function\n   *                          that takes a property from both objects. If anything is returned it overrides the normal merge behaviour.\n   */\n  function merge(other, config) {\n    // Calling .merge() with no arguments is a no-op. Don't bother cloning.\n    if (arguments.length === 0) {\n      return this;\n    }\n\n    if (other === null || (typeof other !== \"object\")) {\n      throw new TypeError(\"Immutable#merge can only be invoked with objects or arrays, not \" + JSON.stringify(other));\n    }\n\n    var receivedArray = (Array.isArray(other)),\n        deep          = config && config.deep,\n        mode          = config && config.mode || 'merge',\n        merger        = config && config.merger,\n        result;\n\n    // Use the given key to extract a value from the given object, then place\n    // that value in the result object under the same key. If that resulted\n    // in a change from this object's value at that key, set anyChanges = true.\n    function addToResult(currentObj, otherObj, key) {\n      var immutableValue = Immutable(otherObj[key]);\n      var mergerResult = merger && merger(currentObj[key], immutableValue, config);\n      var currentValue = currentObj[key];\n\n      if ((result !== undefined) ||\n        (mergerResult !== undefined) ||\n        (!currentObj.hasOwnProperty(key)) ||\n        !isEqual(immutableValue, currentValue)) {\n\n        var newValue;\n\n        if (mergerResult !== undefined) {\n          newValue = mergerResult;\n        } else if (deep && isMergableObject(currentValue) && isMergableObject(immutableValue)) {\n          newValue = Immutable.merge(currentValue, immutableValue, config);\n        } else {\n          newValue = immutableValue;\n        }\n\n        if (!isEqual(currentValue, newValue) || !currentObj.hasOwnProperty(key)) {\n          if (result === undefined) {\n            // Make a shallow clone of the current object.\n            result = quickCopy(currentObj, instantiateEmptyObject(currentObj));\n          }\n\n          result[key] = newValue;\n        }\n      }\n    }\n\n    function clearDroppedKeys(currentObj, otherObj) {\n      for (var key in currentObj) {\n        if (!otherObj.hasOwnProperty(key)) {\n          if (result === undefined) {\n            // Make a shallow clone of the current object.\n            result = quickCopy(currentObj, instantiateEmptyObject(currentObj));\n          }\n          delete result[key];\n        }\n      }\n    }\n\n    var key;\n\n    // Achieve prioritization by overriding previous values that get in the way.\n    if (!receivedArray) {\n      // The most common use case: just merge one object into the existing one.\n      for (key in other) {\n        if (Object.getOwnPropertyDescriptor(other, key)) {\n          addToResult(this, other, key);\n        }\n      }\n      if (mode === 'replace') {\n        clearDroppedKeys(this, other);\n      }\n    } else {\n      // We also accept an Array\n      for (var index = 0, length = other.length; index < length; index++) {\n        var otherFromArray = other[index];\n\n        for (key in otherFromArray) {\n          if (otherFromArray.hasOwnProperty(key)) {\n            addToResult(result !== undefined ? result : this, otherFromArray, key);\n          }\n        }\n      }\n    }\n\n    if (result === undefined) {\n      return this;\n    } else {\n      return makeImmutableObject(result);\n    }\n  }\n\n  function objectReplace(value, config) {\n    var deep          = config && config.deep;\n\n    // Calling .replace() with no arguments is a no-op. Don't bother cloning.\n    if (arguments.length === 0) {\n      return this;\n    }\n\n    if (value === null || typeof value !== \"object\") {\n      throw new TypeError(\"Immutable#replace can only be invoked with objects or arrays, not \" + JSON.stringify(value));\n    }\n\n    return Immutable.merge(this, value, {deep: deep, mode: 'replace'});\n  }\n\n  var immutableEmptyObject = Immutable({});\n\n  function objectSetIn(path, value, config) {\n    if (!(Array.isArray(path)) || path.length === 0) {\n      throw new TypeError(\"The first argument to Immutable#setIn must be an array containing at least one \\\"key\\\" string.\");\n    }\n\n    var head = path[0];\n    if (path.length === 1) {\n      return objectSet.call(this, head, value, config);\n    }\n\n    var tail = path.slice(1);\n    var newValue;\n    var thisHead = this[head];\n\n    if (this.hasOwnProperty(head) && typeof(thisHead) === \"object\" && thisHead !== null) {\n      // Might (validly) be object or array\n      newValue = Immutable.setIn(thisHead, tail, value);\n    } else {\n      newValue = objectSetIn.call(immutableEmptyObject, tail, value);\n    }\n\n    if (this.hasOwnProperty(head) && thisHead === newValue) {\n      return this;\n    }\n\n    var mutable = quickCopy(this, instantiateEmptyObject(this));\n    mutable[head] = newValue;\n    return makeImmutableObject(mutable);\n  }\n\n  function objectSet(property, value, config) {\n    var deep          = config && config.deep;\n\n    if (this.hasOwnProperty(property)) {\n      if (deep && this[property] !== value && isMergableObject(value) && isMergableObject(this[property])) {\n        value = Immutable.merge(this[property], value, {deep: true, mode: 'replace'});\n      }\n      if (isEqual(this[property], value)) {\n        return this;\n      }\n    }\n\n    var mutable = quickCopy(this, instantiateEmptyObject(this));\n    mutable[property] = Immutable(value);\n    return makeImmutableObject(mutable);\n  }\n\n  function update(property, updater) {\n    var restArgs = Array.prototype.slice.call(arguments, 2);\n    var initialVal = this[property];\n    return Immutable.set(this, property, updater.apply(initialVal, [initialVal].concat(restArgs)));\n  }\n\n  function getInPath(obj, path) {\n    /*jshint eqnull:true */\n    for (var i = 0, l = path.length; obj != null && i < l; i++) {\n      obj = obj[path[i]];\n    }\n\n    return (i && i == l) ? obj : undefined;\n  }\n\n  function updateIn(path, updater) {\n    var restArgs = Array.prototype.slice.call(arguments, 2);\n    var initialVal = getInPath(this, path);\n\n    return Immutable.setIn(this, path, updater.apply(initialVal, [initialVal].concat(restArgs)));\n  }\n\n  function getIn(path, defaultValue) {\n    var value = getInPath(this, path);\n    return value === undefined ? defaultValue : value;\n  }\n\n  function asMutableObject(opts) {\n    var result = instantiateEmptyObject(this), key;\n\n    if(opts && opts.deep) {\n      for (key in this) {\n        if (this.hasOwnProperty(key)) {\n          result[key] = asDeepMutable(this[key]);\n        }\n      }\n    } else {\n      for (key in this) {\n        if (this.hasOwnProperty(key)) {\n          result[key] = this[key];\n        }\n      }\n    }\n\n    return result;\n  }\n\n  // Creates plain object to be used for cloning\n  function instantiatePlainObject() {\n    return {};\n  }\n\n  // Finalizes an object with immutable methods, freezes it, and returns it.\n  function makeImmutableObject(obj) {\n    if (!globalConfig.use_static) {\n      addPropertyTo(obj, \"merge\", merge);\n      addPropertyTo(obj, \"replace\", objectReplace);\n      addPropertyTo(obj, \"without\", without);\n      addPropertyTo(obj, \"asMutable\", asMutableObject);\n      addPropertyTo(obj, \"set\", objectSet);\n      addPropertyTo(obj, \"setIn\", objectSetIn);\n      addPropertyTo(obj, \"update\", update);\n      addPropertyTo(obj, \"updateIn\", updateIn);\n      addPropertyTo(obj, \"getIn\", getIn);\n    }\n\n    return makeImmutable(obj, mutatingObjectMethods);\n  }\n\n  // Returns true if object is a valid react element\n  // https://github.com/facebook/react/blob/v15.0.1/src/isomorphic/classic/element/ReactElement.js#L326\n  function isReactElement(obj) {\n    return typeof obj === 'object' &&\n           obj !== null &&\n           (obj.$$typeof === REACT_ELEMENT_TYPE_FALLBACK || obj.$$typeof === REACT_ELEMENT_TYPE);\n  }\n\n  function isFileObject(obj) {\n    return typeof File !== 'undefined' &&\n           obj instanceof File;\n  }\n\n  function isBlobObject(obj) {\n    return typeof Blob !== 'undefined' &&\n           obj instanceof Blob;\n  }\n\n  function isPromise(obj) {\n    return typeof obj === 'object' &&\n           typeof obj.then === 'function';\n  }\n\n  function isError(obj) {\n    return obj instanceof Error;\n  }\n\n  function Immutable(obj, options, stackRemaining) {\n    if (isImmutable(obj) || isReactElement(obj) || isFileObject(obj) || isBlobObject(obj) || isError(obj)) {\n      return obj;\n    } else if (isPromise(obj)) {\n      return obj.then(Immutable);\n    } else if (Array.isArray(obj)) {\n      return makeImmutableArray(obj.slice());\n    } else if (obj instanceof Date) {\n      return makeImmutableDate(new Date(obj.getTime()));\n    } else {\n      // Don't freeze the object we were given; make a clone and use that.\n      var prototype = options && options.prototype;\n      var instantiateEmptyObject =\n        (!prototype || prototype === Object.prototype) ?\n          instantiatePlainObject : (function() { return Object.create(prototype); });\n      var clone = instantiateEmptyObject();\n\n      if (\"development\" !== \"production\") {\n        /*jshint eqnull:true */\n        if (stackRemaining == null) {\n          stackRemaining = 64;\n        }\n        if (stackRemaining <= 0) {\n          throw new ImmutableError(\"Attempt to construct Immutable from a deeply nested object was detected.\" +\n            \" Have you tried to wrap an object with circular references (e.g. React element)?\" +\n            \" See https://github.com/rtfeldman/seamless-immutable/wiki/Deeply-nested-object-was-detected for details.\");\n        }\n        stackRemaining -= 1;\n      }\n\n      for (var key in obj) {\n        if (Object.getOwnPropertyDescriptor(obj, key)) {\n          clone[key] = Immutable(obj[key], undefined, stackRemaining);\n        }\n      }\n\n      return makeImmutableObject(clone);\n    }\n  }\n\n  // Wrapper to allow the use of object methods as static methods of Immutable.\n  function toStatic(fn) {\n    function staticWrapper() {\n      var args = [].slice.call(arguments);\n      var self = args.shift();\n      return fn.apply(self, args);\n    }\n\n    return staticWrapper;\n  }\n\n  // Wrapper to allow the use of object methods as static methods of Immutable.\n  // with the additional condition of choosing which function to call depending\n  // if argument is an array or an object.\n  function toStaticObjectOrArray(fnObject, fnArray) {\n    function staticWrapper() {\n      var args = [].slice.call(arguments);\n      var self = args.shift();\n      if (Array.isArray(self)) {\n          return fnArray.apply(self, args);\n      } else {\n          return fnObject.apply(self, args);\n      }\n    }\n\n    return staticWrapper;\n  }\n\n  // Wrapper to allow the use of object methods as static methods of Immutable.\n  // with the additional condition of choosing which function to call depending\n  // if argument is an array or an object or a date.\n  function toStaticObjectOrDateOrArray(fnObject, fnArray, fnDate) {\n    function staticWrapper() {\n      var args = [].slice.call(arguments);\n      var self = args.shift();\n      if (Array.isArray(self)) {\n          return fnArray.apply(self, args);\n      } else if (self instanceof Date) {\n          return fnDate.apply(self, args);\n      } else {\n          return fnObject.apply(self, args);\n      }\n    }\n\n    return staticWrapper;\n  }\n\n  // Export the library\n  Immutable.from           = Immutable;\n  Immutable.isImmutable    = isImmutable;\n  Immutable.ImmutableError = ImmutableError;\n  Immutable.merge          = toStatic(merge);\n  Immutable.replace        = toStatic(objectReplace);\n  Immutable.without        = toStatic(without);\n  Immutable.asMutable      = toStaticObjectOrDateOrArray(asMutableObject, asMutableArray, asMutableDate);\n  Immutable.set            = toStaticObjectOrArray(objectSet, arraySet);\n  Immutable.setIn          = toStaticObjectOrArray(objectSetIn, arraySetIn);\n  Immutable.update         = toStatic(update);\n  Immutable.updateIn       = toStatic(updateIn);\n  Immutable.getIn          = toStatic(getIn);\n  Immutable.flatMap        = toStatic(flatMap);\n  Immutable.asObject       = toStatic(asObject);\n  if (!globalConfig.use_static) {\n      Immutable.static = immutableInit({\n          use_static: true\n      });\n  }\n\n  Object.freeze(Immutable);\n\n  return Immutable;\n}\n\n  var Immutable = immutableInit();\n  /* istanbul ignore if */\n  if (typeof define === 'function' && define.amd) {\n    define(function() {\n      return Immutable;\n    });\n  } else if (typeof module === \"object\") {\n    module.exports = Immutable;\n  } else if (typeof exports === \"object\") {\n    exports.Immutable = Immutable;\n  } else if (typeof window === \"object\") {\n    window.Immutable = Immutable;\n  } else if (typeof global === \"object\") {\n    global.Immutable = Immutable;\n  }\n})();\n","import { Button, FormGroup, FormSelect, FormSelectOption, Modal, TextArea } from '@patternfly/react-core';\nimport {\n    addNotification,\n    clearNotifications\n} from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\nimport propTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { STATUS_OPTIONS } from '../../../Helpers/constants';\nimport messages from '../../../Messages';\nimport { FormattedMessage } from 'react-intl';\n\nexport function useStatusSelect(initialValue) {\n    const [statusId, setStatusId] = useState(initialValue);\n    const [props, setProps] = useState({});\n    const StatusSelect = (\n        <FormGroup label={<FormattedMessage {...messages.statusLabel} />} fieldId={'statusId'}>\n            <FormSelect aria-label=\"Select Input\" onChange={selection => setStatusId(selection)} value={statusId} {...props}>\n                {STATUS_OPTIONS.map(({ value, label }) => (\n                    <FormSelectOption key={value} value={value} label={label} />\n                ))}\n            </FormSelect>\n        </FormGroup>\n    );\n    return { StatusSelect, statusId, setStatusId, setProps };\n}\n\nexport function useJustificationInput(initialValue) {\n    const [justification, setJustification] = useState(initialValue);\n    const [props, setProps] = useState({});\n    const JustificationInput = (\n        <FormGroup label={<FormattedMessage {...messages.justificationLabel} />} fieldId={'label'}>\n            <TextArea\n                key=\"input\"\n                type=\"text\"\n                onChange={value => setJustification(value)}\n                value={justification}\n                resizeOrientation='vertical'\n                aria-label={'justification note'}\n                {...props}\n            />\n        </FormGroup>\n    );\n    return { JustificationInput, justification, setJustification, setProps };\n}\n\nexport const BaseModal = ({ items, title, onSave, onSuccessNotification, ...props }) => {\n    const [targetItems, setTargetItems] = useState(items);\n\n    const createNotification = notification => {\n        return props.addNotification(notification);\n    };\n\n    const handleClose = () => {\n        setTargetItems(undefined);\n    };\n\n    const handleSave = () => {\n        onSave().then(() => createNotification(onSuccessNotification));\n        handleClose();\n    };\n\n    useEffect(() => {\n        return () => {\n            props.clearNotifications();\n        };\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Modal\n                variant=\"small\"\n                title={title}\n                isOpen={Boolean(targetItems)}\n                onClose={handleClose}\n                actions={[\n                    <Button key=\"save\" variant=\"primary\" onClick={handleSave}>\n                        {<FormattedMessage {...messages.save} />}\n                    </Button>,\n                    <Button key=\"cancel\" variant=\"secondary\" onClick={handleClose}>\n                        {<FormattedMessage {...messages.cancel} />}\n                    </Button>\n                ]}\n            >\n                {props.children}\n            </Modal>\n        </React.Fragment>\n    );\n};\n\nBaseModal.propTypes = {\n    children: propTypes.any,\n    onClose: propTypes.func,\n    items: propTypes.array,\n    updateRef: propTypes.func,\n    addNotification: propTypes.func,\n    title: propTypes.string,\n    onSave: propTypes.func,\n    onSuccessNotification: propTypes.object,\n    clearNotifications: propTypes.func\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addNotification: data => dispatch(addNotification(data)),\n        clearNotifications: () => dispatch(clearNotifications())\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(BaseModal);\n","import React, { Fragment } from 'react';\nimport { Text, TextContent, TextVariants, Tooltip } from '@patternfly/react-core';\nimport PropType from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport InsightsReportCard from '@redhat-cloud-services/frontend-components-inventory-insights/esm/InsightsReportCard';\nimport { CSAwIcon } from '../../PresentationalComponents/CSAwIcon/CSAwIcon';\nimport Label from '../../PresentationalComponents/Snippets/Label';\nimport messages from '../../../Messages';\n\nexport const InsightsSystemRule = ({ rule, cve }) => {\n    return (\n        <Fragment>\n            { !rule ? <InsightsNoSystemRule cve={cve}/> :\n                <Fragment>\n                    <TextContent className=\"icon-with-label\">\n                        <Text component={TextVariants.h3} style={{ paddingLeft: 'var(--pf-global--spacer--lg)' }}>\n                            <Label>\n                                <Tooltip content={<FormattedMessage {...messages.rulesIconTooltip} />}>\n                                    <CSAwIcon />\n                                </Tooltip>\n                            </Label>\n                            <span className=\"rule-name\">{rule.rule.description || rule.rule.rule_id}</span>\n                        </Text>\n                    </TextContent>\n\n                    <InsightsReportCard report={rule} />\n                </Fragment>\n            }\n        </Fragment>\n\n    );\n};\n\nInsightsSystemRule.propTypes = {\n    rule: PropType.shape({\n        rule: PropType.object,\n        details: PropType.object,\n        resulotion: PropType.object\n    }).isRequired,\n    cve: PropType.string\n};\n\nexport const InsightsNoSystemRule = ({ cve }) => {\n    return (\n        <TextContent className=\"icon-with-label\">\n            <Text component={TextVariants.p}>\n                <FormattedMessage {...messages.exposedSystemNoRules} values={{ cve }} />\n            </Text>\n            <Text component={TextVariants.p} className=\"pf-u-mb-sm\">\n                <FormattedMessage {...messages.exposedSystemNoRulesInfo}/> <CSAwIcon/>\n            </Text>\n            <Text\n                component={TextVariants.a}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://access.redhat.com/articles/2968471\"\n            >\n                <FormattedMessage {...messages.exposedSystemNoRulesInfoLink} />\n            </Text>\n        </TextContent>\n    );\n};\n\nInsightsNoSystemRule.propTypes = {\n    cve: PropType.string\n};\n","import { Tooltip } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon, ServerAltIcon } from '@patternfly/react-icons';\nimport { processDate } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport React from 'react';\nimport { BUSINESS_RISK_OPTIONS, STATUS_OPTIONS } from './constants';\nimport { FormattedMessage } from 'react-intl';\nimport { InsightsSystemRule, InsightsNoSystemRule } from '../Components/SmartComponents/InsightsSystemRule/InsightsSystemRule';\nimport messages from '../Messages';\n\n/**\n * Creates the tables rows for systems exposed table\n *\n * @param {Boolean} isLoading\n * @param {Array} payload fetched data\n * @param {Array} openedRows id of opened(expaned) row\n *\n */\nexport const createExposedSystemsTable = ({ isLoading, payload, openedRows, cve }) => {\n    if (isLoading) {\n        return { data: (payload && payload.data) || [], meta: {}, isLoading };\n    }\n\n    let { data, meta } = payload;\n    const cvesCount = data && data.length;\n    const tableRows = data.map(item => ({\n        ...item.attributes,\n        id: item.id,\n        isOpen: openedRows.includes(item.id),\n        status: item.attributes.status_name,\n        children: item.attributes.rule\n            ? <InsightsSystemRule cve={cve} rule={item.attributes.rule} />\n            : <InsightsNoSystemRule cve={cve}/>\n    }));\n\n    return { data: tableRows, meta: { ...meta, cvesCount },  isLoading };\n\n};\n\nexport function createSystemsListTable(affectedSystems) {\n    let isLoading = affectedSystems.isLoading;\n    if (!isLoading) {\n        let payload = affectedSystems.payload.asMutable();\n        let { data, meta } = payload;\n        const dataWithStatus = data.map(item => ({\n            ...item,\n            attributes: {\n                ...item.attributes,\n                status: (\n                    <span>\n                        {item.attributes.cve_status_id !== item.attributes.status_id ? (\n                            <Tooltip content={<FormattedMessage {...messages.onlyThisSystemCvePair} />}>\n                                <ServerAltIcon />\n                            </Tooltip>\n                        ) : (\n                            ''\n                        )}{' '}\n                        {item.attributes.status_id !== undefined &&\n                            STATUS_OPTIONS.find(option => parseInt(option.value) === item.attributes.status_id).label}\n                    </span>\n                )\n            }\n        }));\n        return { data: dataWithStatus, meta, isLoading };\n    }\n\n    return { data: (affectedSystems.payload && affectedSystems.payload.data) || [], meta: {}, isLoading };\n}\n\nexport function createCveDetailsPage(cves) {\n    let isLoading = cves.isLoading;\n    let error = cves.error;\n    if (!isLoading && !error) {\n        let payload = cves.payload.asMutable();\n        let { data, meta } = payload;\n\n        data = {\n            impact: data.attributes.impact,\n            public_date: processDate(data.attributes.public_date),\n            description: data.attributes.description,\n            synopsis: data.attributes.synopsis,\n            rh_link: createRHDBLink(data.attributes.synopsis),\n            mitre_link: createMitreLink(data.attributes.synopsis),\n            cvss3_score: data.attributes.cvss3_score,\n            cvss2_score: data.attributes.cvss2_score,\n            cvss2_metrics: data.attributes.cvss2_metrics,\n            cvss3_metrics: data.attributes.cvss3_metrics,\n            business_risk: BUSINESS_RISK_OPTIONS.find(\n                option => option.value === data.attributes.business_risk_id.toString()\n            ).label,\n            business_risk_justification: data.attributes.business_risk_text,\n            business_risk_id: data.attributes.business_risk_id,\n            status: STATUS_OPTIONS.find(option => option.value === data.attributes.status_id.toString()).label,\n            status_id: data.attributes.status_id,\n            status_justification: data.attributes.status_text,\n            systems_status_detail: data.attributes.systems_status_detail,\n            systems_status_divergent: data.attributes.systems_status_divergent,\n            rules: data.attributes.rules\n        };\n\n        return { data, meta, isLoading };\n    }\n\n    return { data: [], meta: {}, isLoading, error };\n}\n\nexport function createRHDBLink(item) {\n    return (\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href={'https://access.redhat.com/security/cve/' + item}>\n            {<FormattedMessage {...messages.RHDBLink} />}{<ExternalLinkAltIcon className=\"pf-u-ml-sm\"/>}\n        </a>\n    );\n}\n\nexport function createMitreLink(item) {\n    return (\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href={'https://cve.mitre.org/cgi-bin/cvename.cgi?name=' + item}>\n            {<FormattedMessage {...messages.MITRELink} />}{<ExternalLinkAltIcon />}\n        </a>\n    );\n}\n\nexport const cveTableRowActions = (methods, rowIndex) => {\n    return (rowIndex % 2 === 0) ?\n        [\n            {\n                title: <FormattedMessage {...messages.editBusinessRisk} />,\n                onClick: (event, rowId, rowData) =>\n                    methods.showBusinessRiskModal([\n                        {\n                            id: rowData.id,\n                            business_risk_id: rowData.business_risk_id,\n                            justification: rowData.business_risk_justification\n                        }\n                    ])\n            },\n            {\n                title: <FormattedMessage {...messages.editStatus} />,\n                onClick: (event, rowId, rowData) =>\n                    methods.showStatusModal([\n                        {\n                            id: rowData.id,\n                            status_id: rowData.status_id,\n                            justification: rowData.status_justification\n                        }\n                    ])\n            }\n        ] : null;\n};\n\nexport const systemCveTableRowActions = (methods, entity, rowIndex) => {\n    return (rowIndex % 2 === 0) ?\n        [{\n            title: <FormattedMessage {...messages.editStatus} />,\n            onClick: (event, rowId, rowData) =>\n                methods.showStatusModal([\n                    {\n                        id: rowData.id,\n                        display_name: entity.display_name,\n                        status_id: rowData.status_id,\n                        cve_status_id: rowData.cve_status_id,\n                        justification: rowData.status_justification,\n                        cve_justification: rowData.cve_status_justification\n                    }\n                ],\n                entity\n                )\n        }] : null;\n};\n\nexport const systemExposedTableRowActions = (showStatusModal, cve, rowIndex) => {\n    return (rowIndex % 2 === 0) ?\n        [{\n            title: <FormattedMessage {...messages.editStatus} />,\n            onClick: (event, rowId, rowData) => {\n                showStatusModal(\n                    [{\n                        id: cve.id,\n                        status_id: cve.status_id,\n                        justification: cve.justification\n                    }],\n                    [{\n                        id: rowData.id,\n                        display_name: rowData.display_name,\n                        status_id: rowData.status_id,\n                        justification: rowData.status_text\n                    }]\n                );\n            }\n        }] : null;\n};\n\nexport const systemTableRowActions = (optOut, isOptOut) => [\n    {\n        title: (\n            isOptOut\n                ? <FormattedMessage {...messages.kebabResumeAnalysis} />\n                : <FormattedMessage {...messages.kebabExcludeAnalysis} />\n        ),\n        onClick: (event, rowId, rowData) => {\n            optOut([rowData.id]);\n        }\n    }\n];\n","import union from 'lodash/union';\nimport messages from '../Messages';\nimport { intl } from '../Utilities/IntlProvider';\n\nconst selectAllCheckbox = ({ selectedItems, selectorHandler, items, fetchResource, multiRow = false }) => {\n\n    const selectedItemsArray = Array.from(selectedItems); // we might get array or set and there's no common method for size\n    const selectedItemsCount = selectedItemsArray && selectedItemsArray.length;\n    const { meta, data } = items;\n    const selectPageNumber = data && (((Array.isArray(data) && data.length) && multiRow) ? data.length / 2 : data.length);\n\n    const handleSelectPage = () => {\n        const { data } = items;\n        const collectedItems = union(data.filter(item => item.id).map(item => item.id), selectedItemsArray);\n        selectorHandler(true, collectedItems);\n    };\n\n    const handleUnselectAll = () => {\n        selectorHandler(false, []);\n    };\n\n    const handleSelectAll = () => {\n\n        let { payload } = fetchResource && fetchResource({ page_size: meta.total_items, page: 1 });\n        payload &&\n            payload.then(({ data: response }) => {\n                //TODO: current only one new endpoint is introduced. Once, we have all new endpoints,  get rid of this map\n                const items = response.map(item => item.id && item.id || item);\n                selectorHandler(true, items);\n            });\n    };\n\n    const handleOnCheckboxChange = () => {\n        if (selectedItemsCount === 0) {\n            handleSelectAll();\n        } else {\n            handleUnselectAll();\n        }\n    };\n\n    return ({\n        handleOnCheckboxChange,\n        items: [\n            {\n                title: intl.formatMessage(messages.selectNone),\n                onClick: handleUnselectAll\n            },\n            {\n                title: `${intl.formatMessage(messages.selectPage, { count: selectPageNumber })}`,\n                onClick: handleSelectPage\n            },\n            {\n                title: `${intl.formatMessage(messages.selectAll, { count: meta.total_items ? meta.total_items : 0 })}`,\n                onClick: handleSelectAll\n            }\n        ]\n    }\n\n    );\n};\n\nexport default selectAllCheckbox;\n","var baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    baseUniq = require('./_baseUniq'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array of unique values, in order, from all given arrays using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.union([2], [1, 2]);\n * // => [2, 1]\n */\nvar union = baseRest(function(arrays) {\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n});\n\nmodule.exports = union;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components';\nimport { intl } from '../../../../Utilities/IntlProvider';\n\nimport debounce from 'lodash/debounce';\nimport React from 'react';\n\nconst SearchFilter = (label, placeholder, search, apply) => {\n    const [searchValue, setSearchValue] = React.useState();\n    const [handleSearch] = React.useState(() =>\n        debounce(filter =>  {if (filter !== undefined) { apply({ filter, page: 1 }); }}, 400)\n    );\n\n    React.useEffect(() => setSearchValue(search), [search]);\n\n    return {\n        type: conditionalFilterType.text,\n        label: intl.formatMessage(label),\n        filterValues: {\n            'aria-label': 'search-field',\n            id: `search-${label.id}`,\n            onChange: (event, value) => {\n                setSearchValue(value);\n                handleSearch(value);\n            },\n            placeholder: intl.formatMessage(placeholder),\n            value: searchValue\n        }\n    };\n};\n\nexport default SearchFilter;\n","import messages from '../Messages';\nimport { FILTERS } from './constants';\nimport { intl } from '../Utilities/IntlProvider';\n\nexport const handleChangePage = (_event, page, apply) => apply({ page });\n\nexport const handleSetPageSize = (_event, perPage, apply) => apply({ page_size: perPage, page: 1 });\n\nexport const exportConfig = (methods) => (\n    { onSelect: (_event, fileType) =>   methods.downloadReport(fileType) }\n);\n\nexport const buildActiveFilters = (currentFilters, filterRulevalues = []) => {\n\n    const { filter } = currentFilters;\n\n    const buildChip = (key, parameter) => (\n        FILTERS[key].items.reduce((object, item) => {\n            if (parameter === item.value) {\n                object.name = item.label;\n                object.value = item.value ;\n            }\n            else if (key === 'security_rule' && !['true', 'false'].includes(parameter))\n            {\n                const filteredRule = filterRulevalues.find(({ value }) => value === parameter);\n                object.name = filteredRule && filteredRule.label || parameter ;\n                object.value = parameter;\n            }\n\n            return object;\n        }, {})\n    );\n\n    const buildChips = (paramValues, key) => {\n        return paramValues.reduce((values, parameter) => {\n            values.push(buildChip(key, parameter));\n            return values;\n        }, []);\n    };\n\n    const filterChips = Object.keys(FILTERS).reduce((array, key) => {\n        if (key !== 'show_all' && Object.keys(currentFilters).includes(key) && !['', undefined].includes(currentFilters[key])) {\n\n            const multiValue = typeof currentFilters[key] === 'string' && currentFilters[key].split(',');\n            const filteredValues = (multiValue && multiValue.length > 1)\n                                            && buildChips(multiValue, key)\n                                            || [buildChip(key, currentFilters[key])];\n\n            array.push({ key, multiValue, category: FILTERS[key].title, chips: filteredValues });\n        }\n\n        return array;\n    }, []);\n\n    filter && filterChips.push(\n        { key: 'filter',\n            category: intl.formatMessage(messages.searchLabel),\n            chips: [{ name: filter }]\n        }\n    );\n\n    return filterChips;\n};\n\nexport const removeFilters = (chips, apply) =>{\n    const emptyFilter = chips.reduce((obj, item) =>{\n        if (item.key === 'filter' || (item.multiValue && item.multiValue.length === 1)) {\n            obj[item.key] = '';\n        }\n        else {\n            obj[item.key] = item.multiValue.filter(value => !item.chips.some(chip => chip.value === value)).join(',');\n        }\n\n        return obj;\n    }, {});\n\n    apply(emptyFilter);\n};\n","import { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\n\nclass DownloadReport  {\n    constructor() {\n        this.defaultParams = {\n            page: 1,\n            page_size: Number.MAX_SAFE_INTEGER,\n            date: new Date().toISOString().replace(/[T:]/g, '-').split('.')[0] + '-utc'\n        };\n\n        this.params = {\n            cve: ''\n        };\n\n        this.pages = ['systems-exposed', 'system-cves', 'cves', 'system-list'];\n        this.formats = ['csv', 'json'];\n    }\n\n    filename = (page) => {\n        switch (page) {\n            case 'systems-exposed':\n                return `vulnerability_systems-exposed-${this.params.cve}--${this.defaultParams.date}`;\n            case 'system-list':\n                return `vulnerability_systems--${this.defaultParams.date}`;\n            default:\n                return `vulnerability_cves--${this.defaultParams.date}`;\n\n        }\n    }\n\n    checkTypes = (fetchData, page, format) => {\n        if (typeof fetchData !== 'function') {\n            throw `exec expects the 1st param to be funtion. Received ${typeof fetchData}`;\n        }\n\n        if (!this.pages.includes(page)) {\n            throw `Page ${page} does not exist`;\n        }\n\n        if (!this.formats.includes(format)) {\n            throw `Format ${format} is not supported`;\n        }\n    }\n\n    /**\n     * Execute and download the report\n     *\n     * @param {Function} fetchData - Function to be called in order to fetch data.\n     * @param {Object || Array} params - Object to be sent as request params. If you need to pass extra argument, pass an array.\n     * @param {String} format - Supported formats to download are CSV and JSON.\n     * @param {String} page - Name of the page based on which the filename will be determined.\n     * @returns {void}\n     */\n    exec = async (fetchData, params, format, page) => {\n        this.checkTypes(fetchData, page, format);\n        this.params.cve = Array.isArray(params) ? params[0] : '';\n\n        try {\n            let { payload } = Array.isArray(params)\n                ? await fetchData(this.params.cve, {\n                    ...params[1],\n                    ...this.defaultParams,\n                    data_format: format\n                }) :\n                await fetchData({\n                    ...params,\n                    ...this.defaultParams,\n                    data_format: format\n                });\n\n            let { data: response } = await payload;\n            let data = format === 'json' ? JSON.stringify(response) : response;\n            // downaloads the files\n            downloadFile(data, this.filename(page), format);\n        } catch (error) {\n            throw `${error}`;\n        }\n\n    }\n\n}\n\nexport default new DownloadReport();\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport {\n    Bullseye,\n    Button,\n    Card,\n    CardBody,\n    CardHeader,\n    EmptyStateVariant,\n    EmptyState,\n    EmptyStateBody,\n    EmptyStateIcon,\n    Text,\n    TextVariants,\n    TextContent,\n    Title\n} from '@patternfly/react-core';\n\nimport { CubesIcon, ExternalLinkAltIcon, FrownOpenIcon, SecurityIcon } from '@patternfly/react-icons';\nimport messages from '../../../Messages';\n\n// Reports that no CVEs were found after filtering results\nexport const FilterNotFoundForCVE = (\n    <Bullseye style={{ height: 'auto' }}>\n        <EmptyState variant={EmptyStateVariant.large}>\n            <Title headingLevel=\"h5\" size=\"lg\">\n                <FormattedMessage {...messages.emptyStateNoMatchingCves} />\n            </Title>\n            <TextContent>\n                <EmptyStateBody style={{ whiteSpace: 'normal' }}>\n                    <FormattedMessage {...messages.emptyStateMaybeFollowing} />\n                    <Text>\n                        <FormattedMessage {...messages.emptyStateNoCveReported} />\n                    </Text>\n                    <Text component={TextVariants.p}>\n                        <FormattedMessage {...messages.emptyStateForMoreInfo} />\n                        <a href=\"https://access.redhat.com/security/team/contact/\" target=\"__blank\" rel=\"noopener noreferrer\">\n                            <FormattedMessage {...messages.emptyStateForMoreLink} />  <ExternalLinkAltIcon />\n                        </a>\n                    </Text>\n                </EmptyStateBody>\n            </TextContent>\n        </EmptyState>\n    </Bullseye>\n);\n\nexport const FilterNotFoundForSystem = (\n    <Bullseye style={{ height: 'auto' }}>\n        <EmptyState variant={EmptyStateVariant.large}>\n            <Title headingLevel=\"h5\" size=\"lg\">\n                <FormattedMessage {...messages.emptyStateNoCvesReported} />\n            </Title>\n            <TextContent>\n                <EmptyStateBody style={{ whiteSpace: 'normal' }}>\n                    <Text>\n                        <FormattedMessage {...messages.emptyStateNoCveReported} />\n                    </Text>\n                    <Text component={TextVariants.p}>\n                        <FormattedMessage {...messages.emptyStateIfCveForSystem} />\n                        <a href=\"https://access.redhat.com/security/team/contact/\" target=\"__blank\" rel=\"noopener noreferrer\">\n                            <FormattedMessage {...messages.emptyStateForMoreLink} />  <ExternalLinkAltIcon />\n                        </a>\n                    </Text>\n                </EmptyStateBody>\n            </TextContent>\n        </EmptyState>\n    </Bullseye>\n);\n\nexport const EmptyCVEListForSystem = (\n    <Bullseye style={{ height: 'auto' }}>\n        <EmptyState variant={EmptyStateVariant.large}>\n            <Title headingLevel=\"h5\" size=\"lg\">\n                <FormattedMessage {...messages.emptyStateNoReportedSystem} />\n            </Title>\n            <TextContent>\n                <EmptyStateBody style={{ whiteSpace: 'normal' }}>\n                    <Text>\n                        <FormattedMessage {...messages.emptyStateNoCveAffects} />\n                    </Text>\n                    <Text component={TextVariants.p}>\n                        <FormattedMessage {...messages.emptyStateIfCveForSystem}/>\n                        <a href=\"https://access.redhat.com/security/team/contact/\" target=\"__blank\" rel=\"noopener noreferrer\">\n                            <FormattedMessage {...messages.emptyStateForMoreLink} />  <ExternalLinkAltIcon />\n                        </a>.\n                    </Text>\n\n                </EmptyStateBody>\n            </TextContent>\n        </EmptyState>\n    </Bullseye>\n);\n\nexport const EmptyExcludedSystem = ({ buttonAction }) => (\n    <Bullseye>\n        <EmptyState variant={EmptyStateVariant.large}>\n            <EmptyStateIcon icon={SecurityIcon} size={'sm'} />\n            <Title headingLevel=\"h5\" size=\"lg\">\n                <FormattedMessage {...messages.emptyStateSystemExcludedTitle} />\n            </Title>\n            <EmptyStateBody>\n                <FormattedMessage {...messages.emptyStateSystemExcludedBody} />\n            </EmptyStateBody>\n            <Button variant=\"primary\" component=\"a\" onClick={buttonAction}>\n                <FormattedMessage {...messages.emptyStateSystemResumeAnalysis} />\n            </Button>\n        </EmptyState>\n    </Bullseye>\n);\n\nEmptyExcludedSystem.propTypes = {\n    buttonAction: propTypes.func\n};\n\nexport const EmptyCVEList = (\n    <Bullseye style={{ height: 'auto' }}>\n        <EmptyState variant={EmptyStateVariant.large}>\n            <Title headingLevel=\"h5\" size=\"lg\">\n                <FormattedMessage {...messages.emptyStateNoReportedSystem} />\n            </Title>\n            <TextContent>\n                <EmptyStateBody style={{ whiteSpace: 'normal' }}>\n                    <Text>\n                        <FormattedMessage {...messages.emptyStateNoCveAffects} />\n                    </Text>\n                    <FormattedMessage {...messages.emptyStateIfCveForSystems}/>\n                    <a href=\"https://access.redhat.com/security/team/contact/\" target=\"__blank\" rel=\"noopener noreferrer\">\n                        <FormattedMessage {...messages.emptyStateForMoreLink} /> <ExternalLinkAltIcon />\n                    </a>\n                    .\n                </EmptyStateBody>\n            </TextContent>\n        </EmptyState>\n    </Bullseye>\n);\n\n// Indicates that Insights is not activated\nexport const EmptyVulnerabilityData = (\n    <Bullseye>\n        <EmptyState>\n            <EmptyStateIcon icon={CubesIcon} />\n            <Title headingLevel=\"h5\" size=\"lg\">\n                <FormattedMessage {...messages.emptyStateNoData} />\n            </Title>\n            <EmptyStateBody>\n                <FormattedMessage {...messages.emptyStateActivateInsights} />\n            </EmptyStateBody>\n            <Button\n                variant=\"primary\"\n                component=\"a\"\n                href=\"http://access.redhat.com/products/cloud_management_services_for_rhel#getstarted\"\n            >\n                <FormattedMessage {...messages.emptyStateLearnInsights} />\n            </Button>\n        </EmptyState>\n    </Bullseye>\n);\n\n// Generic error\nexport const GenericError = (\n    <Card className=\"ins-empty-rule-cards\">\n        <CardHeader>\n            <FrownOpenIcon size=\"lg\" />\n        </CardHeader>\n        <CardBody>\n            <FormattedMessage {...messages.errorReload} />\n        </CardBody>\n    </Card>\n);\n"],"sourceRoot":""}