{"version":3,"file":"js/622.f756d2edcb828b4d7163.js","mappings":"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","sources":["webpack:///./src/Utilities/asyncComponent.js","webpack:///./src/Utilities/Routes.js","webpack:///./src/Components/PresentationalComponents/StaticPages/NoAccessPage.js","webpack:///./src/App.js","webpack:///./src/Components/PresentationalComponents/Header/Breadcrumb.js","webpack:///./src/Components/PresentationalComponents/BaseDropdown/BaseDropdown.js","webpack:///./src/Components/PresentationalComponents/Header/Header.js"],"sourcesContent":["import React, { Component } from 'react';\n\n/**\n * Webpack allows loading components asynchronously by using import().\n *\n *      Ex) const Component = asyncComponent(() => import('component');\n *\n *          class aClass extends React.Component {\n *              render() {\n *                  return (<Component prop1=\"prop1\" prop2=\"prop2\" ... />);\n *              }\n *          }\n *\n *  https://reactjs.org/docs/higher-order-components.html\n *\n * @param importComponent a function that contains and async import statement\n *      Ex) () => import('react-component')\n *\n * @returns {AsyncComponent} The imported component or can return a loading\n */\nexport default function asyncComponent(importComponent) {\n    class AsyncComponent extends Component {\n        constructor(props) {\n            super(props);\n\n            this.state = {\n                component: null\n            };\n        }\n\n        async componentDidMount() {\n            const { default: component } = await importComponent();\n\n            this.setState({\n                component\n            });\n        }\n\n        render() {\n            const C = this.state.component;\n\n            return C ? <C {...this.props} /> : null;\n        }\n    }\n\n    return AsyncComponent;\n}\n","import React, { useEffect, useState } from 'react';\nimport some from 'lodash/some';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route, Switch, useLocation } from 'react-router-dom';\nimport { getSystems } from '../Helpers/APIHelper';\nimport asyncComponent from './asyncComponent';\nimport { PATHS } from '../Helpers/constants';\nimport { intl } from './IntlProvider';\nimport messages from '../Messages';\n\nconst SystemsPage = asyncComponent(() =>\n    import(\n        /* webpackChunkName: \"Systems\" */ '../Components/SmartComponents/SystemsPage/SystemsPage'\n    )\n);\n\nconst LandingPage = asyncComponent(() =>\n    import(\n        /* webpackChunkName: \"LandingPage\" */ '../Components/SmartComponents/LandingPage/LandingPage'\n    )\n);\n\nconst Upgrade = asyncComponent(() =>\n    import(\n        /* webpackChunkName: \"Upgrade\" */ '../Components/PresentationalComponents/StaticPages/UpgradePage'\n    )\n);\n\nconst CVEDetailsPage = asyncComponent(() =>\n    import(\n        /* webpackChunkName: \"CVEDetailsPage\" */ '../Components/SmartComponents/CVEDetailsPage/CVEDetailsPage'\n    )\n);\n\nconst SystemDetailsPage = asyncComponent(() =>\n    import(\n        /* webpackChunkName: \"SystemDetailsPage\" */ '../Components/SmartComponents/SystemDetailsPage/SystemDetailsPage'\n    )\n);\nconst Reports = asyncComponent(() =>\n    import(/* webpackChunkName: \"Reports\" */ '../Components/SmartComponents/Reports/ReportsPage')\n);\n\nconst InsightsRoute = ({ component: Component, title, ...rest }) => {\n    const [hasSystems, setHasSystems] = useState(true);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await getSystems();\n            setHasSystems(result?.meta?.total_items > 0);\n        };\n\n        fetchData();\n    }, []);\n\n    if (title) {\n        const subPath = rest.location.pathname && rest.location.pathname.split('/')[2];\n        document.title = `${subPath ? `${subPath} - ` : ''} ${title} - ${intl.formatMessage(messages.pageTitleSuffix)}`;\n    }\n\n    return (\n        <Route\n            {...rest}\n            render={routeProps => (\n                !hasSystems ? <Upgrade /> : <Component {...routeProps} />\n            )}\n        />\n    );\n};\n\nInsightsRoute.propTypes = {\n    component: PropTypes.func,\n    title: PropTypes.string\n};\n\nexport const Routes = () => {\n    let location = useLocation();\n    let path = location.pathname;\n    return (\n        <Switch>\n            <Redirect\n                from={PATHS.cvepagePath.to}\n                to={PATHS.systemDetailsPage.to}\n            />\n\n            <InsightsRoute\n                exact\n                path={PATHS.cveDetailsPage.to}\n                component={CVEDetailsPage}\n                title={intl.formatMessage(messages.cvesHeader)}\n            />\n\n            <InsightsRoute\n                exact\n                path={PATHS.systemDetailsPage.to}\n                component={SystemDetailsPage}\n            />\n\n            <InsightsRoute\n                exact\n                path={PATHS.home.to}\n                component={LandingPage}\n                title={intl.formatMessage(messages.cvesHeader)}\n            />\n\n            <InsightsRoute\n                exact\n                path={PATHS.cvesPage.to}\n                component={LandingPage}\n                title={intl.formatMessage(messages.cvesHeader)}\n            />\n\n            <InsightsRoute\n                exact\n                path={PATHS.systemsPage.to}\n                component={SystemsPage}\n                title={intl.formatMessage(messages.systemsHeader)}\n            />\n\n            <InsightsRoute\n                exact\n                path={PATHS.upgrade.to}\n                component={Upgrade}\n                title={intl.formatMessage(messages.upgradePageTitle)}\n            />\n\n            <InsightsRoute\n                exact\n                path={PATHS.reports.to}\n                component={Reports}\n                title={intl.formatMessage(messages.reportsPageTitle)}\n            />\n            <Route\n                render={() => (\n                    some(PATHS, p => p.to === path) ? null : <Redirect to={PATHS.cvesPage.to} />\n                )}\n            />\n        </Switch>\n    );\n};\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport { withRouter } from 'react-router-dom';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport messages from '../../../Messages';\nimport Header from '../../PresentationalComponents/Header/Header';\nimport { NotAuthorized } from '../EmptyStates/EmptyStates';\n\nconst NoAccessPage = ({ intl }) => {\n    return (\n        <React.Fragment>\n            <Header\n                title={intl.formatMessage(messages.vulnerabilitiesHeader)}\n                showBreadcrumb={false}\n            />\n            <Main>\n                <NotAuthorized />\n            </Main>\n        </React.Fragment>\n    );\n};\n\nNoAccessPage.propTypes = {\n    intl: propTypes.any\n};\n\nexport default injectIntl(\n    withRouter(NoAccessPage)\n);\n","import React, {\n    useEffect,\n    useState,\n    useMemo,\n    Fragment\n} from 'react';\nimport { useDispatch } from 'react-redux';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/RouterParams';\nimport NotificationPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport { notificationsReducer as notifications } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport ReducerRegistry from './Utilities/ReducerRegistry';\nimport { setGlobalFilter } from './Store/Actions/Actions';\nimport { Routes } from './Utilities/Routes';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport NoAccessPage from './Components/PresentationalComponents/StaticPages/NoAccessPage';\nimport './App.scss';\n\nReducerRegistry.register({ notifications });\n\nconst App = () => {\n    const { push } = useHistory();\n    const { pathname } = useLocation();\n    const [access, setAccess] = useState(true);\n\n    const dispatch = useDispatch();\n\n    const appNavClick = useMemo(() => ({\n        cves(redirect) { insights?.chrome?.appNavClick({ id: 'cves', redirect }); },\n        systems(redirect) { insights?.chrome?.appNavClick({ id: 'systems', redirect }); },\n        reports(redirect) { insights?.chrome?.appNavClick({ id: 'reports', redirect }); }\n    }), []);\n\n    useEffect(() => {\n        const permissionList = ['vulnerability:*:*', 'vulnerability:vulnerability:*'];\n\n        insights?.chrome?.init();\n        insights?.chrome?.identifyApp('vulnerability');\n\n        (async () => {\n            const userPermissions = await insights?.chrome?.getUserPermissions?.('vulnerability');\n            setAccess(userPermissions.some(access => permissionList.includes(access.permission)));\n        })();\n\n        const unregister = insights?.chrome?.on('APP_NAVIGATION', event => {\n            insights?.chrome?.hideGlobalFilter?.(false);\n            if (event.domEvent) {\n                push(`/${event.navId}`);\n                appNavClick[event.navId] !== undefined ? appNavClick[event.navId](true) : appNavClick.cves(true);\n            }\n        });\n\n        return () => unregister();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        const baseComponentUrl = pathname.split('/')[1];\n        insights?.chrome &&\n            baseComponentUrl &&\n            appNavClick[baseComponentUrl] !== undefined &&\n            appNavClick[baseComponentUrl](false);\n\n        const unregister = insights?.chrome?.on('GLOBAL_FILTER_UPDATE', ({ data }) => {\n            const [workloads, SIDs, tags] = insights?.chrome?.mapGlobalFilter?.(data, true, true);\n            dispatch(setGlobalFilter({ workloads, SIDs, tags }));\n\n        });\n\n        return () => unregister();\n    }, [appNavClick, pathname, dispatch]);\n\n    return (\n        access ?\n            <Fragment>\n                <NotificationPortal />\n                <Routes />\n            </Fragment>\n            : <NoAccessPage/>\n    );\n\n};\n\nexport default routerParams(App);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb as PfBreadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/Skeleton';\n\nimport { PATHS } from '../../../Helpers/constants';\n\nconst Breadcrumb = ({ breadcrumbs }) => {\n    return (\n        <PfBreadcrumb key=\"PfBreadcrumb\">\n            <BreadcrumbItem key={PATHS.home.title} isActive={false}>\n                <Link to={PATHS.home.to}>{PATHS.home.title}</Link>\n            </BreadcrumbItem>\n\n            {breadcrumbs?.map(item => (\n                <BreadcrumbItem key={item.title} isActive={item.isActive}>\n                    {\n                        item.loaded\n                            ? (\n                                item.isActive ? item.title : <Link to={item.to}>{item.title}</Link>\n                            )\n                            : (\n                                <Skeleton className=\"breadcrumb-skeleton\"/>\n                            )\n                    }\n                </BreadcrumbItem>\n            ))}\n        </PfBreadcrumb>\n    );\n};\n\nBreadcrumb.propTypes = {\n    breadcrumbs: propTypes.array\n};\n\nexport default Breadcrumb;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport {\n    Dropdown,\n    DropdownToggle\n} from '@patternfly/react-core';\nimport { CaretDownIcon } from '@patternfly/react-icons';\nimport messages from '../../../Messages';\n\nconst BaseDropdown = ({ dropdownItems, disabled, ...props }) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const intl = useIntl();\n\n    return (\n        <Dropdown\n            toggle={\n                <DropdownToggle\n                    onToggle={() => setIsOpen(!isOpen)}\n                    toggleIndicator={CaretDownIcon}\n                    isDisabled={disabled}\n                    className=\"dropdown-toggle\"\n                >\n                    {intl.formatMessage(messages.actions)}\n                </DropdownToggle>\n            }\n            isOpen={isOpen}\n            dropdownItems={dropdownItems}\n            {...props}\n        />\n    );\n};\n\nBaseDropdown.propTypes = {\n    dropdownItems: PropTypes.array,\n    disabled: PropTypes.bool\n};\n\nexport default BaseDropdown;\n\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport Breadcrumb from './Breadcrumb';\nimport messages from '../../../Messages';\nimport { intl } from '../../../Utilities/IntlProvider';\nimport { Split, SplitItem } from '@patternfly/react-core';\nimport BaseDropdown from '../BaseDropdown/BaseDropdown';\n\nconst Header = ({ title, actions, breadcrumbs, showBreadcrumb, children, actionsOuiaId, labels }) => {\n\n    return (\n        <PageHeader>\n            {showBreadcrumb && <Breadcrumb breadcrumbs={breadcrumbs} />}\n\n            <Split hasGutter isWrappable>\n                <SplitItem>\n                    <PageHeaderTitle title={title} />\n                </SplitItem>\n\n                {[].concat(labels).map((item, index) => (\n                    <SplitItem key={index}>\n                        {item}\n                    </SplitItem>\n                ))}\n\n                <SplitItem isFilled />\n\n                {actions.length > 0 &&\n                    <SplitItem>\n                        <BaseDropdown dropdownItems={actions} position={'right'} ouiaId={actionsOuiaId}></BaseDropdown>\n                    </SplitItem>\n                }\n            </Split>\n\n            {children}\n        </PageHeader>\n    );\n};\n\nHeader.defaultProps = {\n    showBreadcrumb: true,\n    actions: [],\n    title: intl.formatMessage(messages.cvesHeader)\n};\n\nHeader.propTypes = {\n    breadcrumbs: propTypes.array,\n    actions: propTypes.array,\n    title: propTypes.any,\n    showBreadcrumb: propTypes.bool,\n    children: propTypes.any,\n    actionsOuiaId: propTypes.string,\n    labels: propTypes.oneOfType([propTypes.element, propTypes.arrayOf(propTypes.element)])\n};\n\nexport default Header;\n"],"names":["asyncComponent","importComponent","props","state","component","this","setState","C","Component","SystemsPage","LandingPage","Upgrade","CVEDetailsPage","SystemDetailsPage","Reports","InsightsRoute","title","rest","useState","hasSystems","setHasSystems","useEffect","getSystems","result","meta","total_items","fetchData","subPath","location","pathname","split","document","intl","messages","render","routeProps","propTypes","PropTypes","Routes","path","useLocation","from","PATHS","to","exact","some","p","NoAccessPage","Header","formatMessage","showBreadcrumb","Main","injectIntl","withRouter","ReducerRegistry","notifications","routerParams","push","useHistory","access","setAccess","dispatch","useDispatch","appNavClick","useMemo","cves","redirect","insights","chrome","id","systems","reports","permissionList","init","identifyApp","getUserPermissions","userPermissions","includes","permission","unregister","on","event","hideGlobalFilter","domEvent","navId","undefined","baseComponentUrl","data","mapGlobalFilter","workloads","SIDs","tags","setGlobalFilter","Fragment","NotificationPortal","Breadcrumb","breadcrumbs","key","BreadcrumbItem","isActive","map","item","loaded","Skeleton","className","BaseDropdown","dropdownItems","disabled","isOpen","setIsOpen","useIntl","Dropdown","toggle","DropdownToggle","onToggle","toggleIndicator","CaretDownIcon","isDisabled","actions","children","actionsOuiaId","labels","PageHeader","Split","hasGutter","isWrappable","SplitItem","PageHeaderTitle","concat","index","isFilled","length","position","ouiaId","defaultProps"],"sourceRoot":""}