{"version":3,"sources":["webpack:///./src/Components/SmartComponents/Vulnerabilities/Vulnerabilities.js"],"names":["VulnerabilitiesCVEs","asyncComponent","CVEPage","Systems","InventoryDetail","Upgrade","Vulnerabilities","props","this","location","history","pathname","paths","upgrade","to","getSystems","then","res","meta","total_items","replace","path","Fragment","exact","vulnerabilitiesCves","component","systems","inventoryDetail","cvePage","from","cvepagePath","render","some","p","React","Component","propTypes","object","isRequired","withRouter"],"mappings":"iTAQMA,EAAsBC,YAAe,kBAAM,qEAC3CC,EAAUD,YAAe,kBAAM,8DAE/BE,EAAUF,YAAe,kBAAM,uDAC/BG,EAAkBH,YAAe,kBACnC,qEAEEI,EAAUJ,YAAe,kBAAM,iCAE/BK,E,YAMF,WAAYC,GAAO,6CACTA,I,iEAGU,MACcC,KAAKD,MAA3BE,EADQ,EACRA,SAAUC,EADF,EACEA,QACdD,EAASE,WAAaC,IAAMC,QAAQC,IACpCC,cAAaC,KAAK,SAAAC,GACdA,EAAIC,MAAQD,EAAIC,KAAKC,aAAe,GAAKT,EAAQU,QAAQR,IAAMC,QAAQC,Q,+BAK1E,IAGDO,EAFcb,KAAVD,MAESE,SAASE,SAC1B,OACI,kBAAC,IAAMW,SAAP,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACF,KAAMT,IAAMY,oBAAoBV,GAAIW,UAAWzB,IAC5D,kBAAC,IAAD,CAAOuB,OAAK,EAACF,KAAMT,IAAMc,QAAQZ,GAAIW,UAAWtB,IAChD,kBAAC,IAAD,CAAOkB,KAAMT,IAAMe,gBAAgBb,GAAIW,UAAWrB,IAClD,kBAAC,IAAD,CAAOmB,OAAK,EAACF,KAAMT,IAAMgB,QAAQd,GAAIW,UAAWvB,IAChD,kBAAC,IAAD,CAAOqB,OAAK,EAACF,KAAMT,IAAMC,QAAQC,GAAIW,UAAWpB,IAChD,kBAAC,IAAD,CAAUwB,KAAMjB,IAAMkB,YAAYhB,GAAIA,GAAIF,IAAMe,gBAAgBb,KAChE,kBAAC,IAAD,CACIiB,OAAQ,kBAAOC,IAAKpB,IAAO,SAAAqB,GAAC,OAAIA,EAAEnB,KAAOO,IAAQ,KAAO,kBAAC,IAAD,CAAUP,GAAIF,IAAMY,oBAAoBV,c,GAjC1FoB,IAAMC,WAA9B7B,EACK8B,UAAY,CACf3B,SAAU2B,IAAUC,OAAOC,WAC3B5B,QAAS0B,IAAUC,QAsCZE,sBAAWjC","file":"js/Vulnerabilities.js","sourcesContent":["import some from 'lodash/some';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { Redirect, Route, Switch, withRouter } from 'react-router-dom';\nimport { getSystems } from '../../../Helpers/APIHelper';\nimport asyncComponent from '../../../Utilities/asyncComponent';\nimport { paths } from '../../../Utilities/Routes';\n\nconst VulnerabilitiesCVEs = asyncComponent(() => import(/* webpackChunkName: \"VulnerabilitiesCVEs\" */ '../CVEs/CVEs'));\nconst CVEPage = asyncComponent(() => import(/* webpackChunkName: \"CVEPage\" */ '../CVEPage/CVEPage'));\n\nconst Systems = asyncComponent(() => import(/* webpackChunkName: \"Systems\" */ '../Systems/Systems'));\nconst InventoryDetail = asyncComponent(() =>\n    import(/* webpackChunkName: \"InventoryDetail\" */ '../InventoryDetail/InventoryDetail')\n);\nconst Upgrade = asyncComponent(() => import(/* webpackChunkName: \"Upgrade\" */ '../EmptyPage/EmptyPage'));\n\nclass Vulnerabilities extends React.Component {\n    static propTypes = {\n        location: propTypes.object.isRequired,\n        history: propTypes.object\n    };\n\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        const { location, history } = this.props;\n        if (location.pathname !== paths.upgrade.to) {\n            getSystems().then(res => {\n                res.meta && res.meta.total_items <= 0 && history.replace(paths.upgrade.to);\n            });\n        }\n    }\n\n    render() {\n        const { props } = this;\n\n        let path = props.location.pathname;\n        return (\n            <React.Fragment>\n                <Switch>\n                    <Route exact path={paths.vulnerabilitiesCves.to} component={VulnerabilitiesCVEs} />\n                    <Route exact path={paths.systems.to} component={Systems} />\n                    <Route path={paths.inventoryDetail.to} component={InventoryDetail} />\n                    <Route exact path={paths.cvePage.to} component={CVEPage} />\n                    <Route exact path={paths.upgrade.to} component={Upgrade} />\n                    <Redirect from={paths.cvepagePath.to} to={paths.inventoryDetail.to} />\n                    <Route\n                        render={() => (some(paths, p => p.to === path) ? null : <Redirect to={paths.vulnerabilitiesCves.to} />)}\n                    />\n                </Switch>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withRouter(Vulnerabilities);\n"],"sourceRoot":""}