{"version":3,"file":"js/9465.393d0d94f6a8bb6d53c2.js","mappings":"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","sources":["webpack:///./src/Utilities/VulnerabilityRoutes.js","webpack:///./src/Components/PresentationalComponents/ReadOnlyBanner/ReadOnlyBanner.js","webpack:///./src/App.js","webpack:///./src/Components/PresentationalComponents/Header/Breadcrumb.js","webpack:///./src/Components/PresentationalComponents/BaseDropdown/BaseDropdown.js","webpack:///./src/Components/PresentationalComponents/Header/Header.js","webpack:///./src/Components/PresentationalComponents/StaticPages/NoAccessPage.js"],"sourcesContent":["import React, { useEffect, useState, lazy, Suspense, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Navigate, Route, Routes, useLocation } from 'react-router-dom';\nimport { getSystems } from '../Helpers/APIHelper';\nimport { PATHS } from '../Helpers/constants';\nimport { intl } from './IntlProvider';\nimport messages from '../Messages';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\nimport ErrorState from '@redhat-cloud-services/frontend-components/ErrorState';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst SystemsPage = lazy(() =>\n    import(\n        /* webpackChunkName: \"Systems\" */ '../Components/SmartComponents/SystemsPage/SystemsPage'\n    )\n);\n\nconst LandingPage = lazy(() =>\n    import(\n        /* webpackChunkName: \"LandingPage\" */ '../Components/SmartComponents/LandingPage/LandingPage'\n    )\n);\n\nconst Upgrade = lazy(() =>\n    import(\n        /* webpackChunkName: \"Upgrade\" */ '../Components/PresentationalComponents/StaticPages/UpgradePage'\n    )\n);\n\nconst CVEDetailsPage = lazy(() =>\n    import(\n        /* webpackChunkName: \"CVEDetailsPage\" */ '../Components/SmartComponents/CVEDetailsPage/CVEDetailsPage'\n    )\n);\n\nconst SystemDetailsPage = lazy(() =>\n    import(\n        /* webpackChunkName: \"SystemDetailsPage\" */ '../Components/SmartComponents/SystemDetailsPage/SystemDetailsPage'\n    )\n);\nconst Reports = lazy(() =>\n    import(/* webpackChunkName: \"Reports\" */ '../Components/SmartComponents/Reports/ReportsPage')\n);\n\nconst InsightsElement = ({ element: Element, title, globalFilterEnabled, ...elementProps }) => {\n    let location = useLocation();\n    const [hasSystems, setHasSystems] = useState(true);\n    const chrome = useChrome();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await getSystems();\n            setHasSystems(result?.meta?.total_items > 0);\n        };\n\n        fetchData();\n    }, []);\n\n    const subPath = location.pathname && location.pathname.split('/')[4];\n\n    useEffect(() => {\n        chrome.updateDocumentTitle(`${subPath ? `${subPath} - ` : ''} ${title} -\n         ${intl.formatMessage(messages.pageTitleSuffix)}`);\n    }, [chrome, intl, subPath]);\n\n    useEffect(() => {\n        chrome.hideGlobalFilter(!globalFilterEnabled);\n    }, [location.pathname]);\n\n    return (\n        !hasSystems ?\n            <AsyncComponent\n                appId=\"vulnerability_zero_state\"\n                appName=\"dashboard\"\n                module=\"./AppZeroState\"\n                scope=\"dashboard\"\n                ErrorComponent={<ErrorState />}\n                app=\"Vulnerability\"\n            />\n            : <Element {...elementProps}/>\n    );\n};\n\nInsightsElement.propTypes = {\n    element: PropTypes.func,\n    title: PropTypes.string,\n    globalFilterEnabled: PropTypes.bool\n};\n\nexport const VulnerabilityRoutes = () => {\n    return (\n        <Suspense fallback={Fragment}>\n            <Routes>\n                <Route\n                    path={PATHS.cveDetailsPage.to}\n                    element={\n                        <InsightsElement\n                            element={CVEDetailsPage}\n                            title={intl.formatMessage(messages.cvesHeader)}\n                            globalFilterEnabled\n                        />\n                    }\n                />\n                <Route\n                    path={PATHS.cveDetailsEdgePage.to}\n                    element={\n                        <InsightsElement\n                            element={CVEDetailsPage}\n                            title={intl.formatMessage(messages.cvesHeader)}\n                            isImmutableTabOpen\n                        />\n                    }\n                />\n                <Route\n                    path={PATHS.systemDetailsPage.to}\n                    element={<SystemDetailsPage />}\n                />\n\n                <Route\n                    path={PATHS.home.to}\n                    element={\n                        <InsightsElement\n                            element={LandingPage}\n                            title={intl.formatMessage(messages.cvesHeader)}\n                            globalFilterEnabled\n                        />\n                    }\n                />\n\n                <Route\n                    path={PATHS.cvesPage.to}\n                    element={\n                        <InsightsElement\n                            element={LandingPage}\n                            title={intl.formatMessage(messages.cvesHeader)}\n                            globalFilterEnabled\n                        />\n                    }\n                />\n\n                <Route\n                    path={PATHS.systemsPage.to}\n                    element={\n                        <InsightsElement\n                            element={SystemsPage}\n                            title={intl.formatMessage(messages.systemsHeader)}\n                            globalFilterEnabled\n                        />\n                    }\n                />\n\n                <Route\n                    path={PATHS.upgrade.to}\n                    element={<InsightsElement element={Upgrade} title={intl.formatMessage(messages.upgradePageTitle)} />}\n                />\n\n                <Route\n                    path={PATHS.reports.to}\n                    element={<InsightsElement element={Reports} title={intl.formatMessage(messages.reportsPageTitle)} />}\n                />\n\n                <Route\n                    path=\"*\"\n                    element={<Navigate to=\"cves\" />}\n                />\n            </Routes>\n        </Suspense>\n    );\n};\n","import React from 'react';\nimport { Banner, Bullseye, Text } from '@patternfly/react-core';\nimport { intl } from '../../../Utilities/IntlProvider';\nimport messages from '../../../Messages';\n\nconst ReadOnlyBanner = () => {\n    return (\n        <Banner>\n            <Bullseye>\n                <Text>\n                    {intl.formatMessage(messages.readOnlyBannerText, { b: (...chunks) => <b>{chunks}</b> })}\n                </Text>\n                <a\n                    href=\"https://status.redhat.com/\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    style={{ color: 'var(--pf-global--link--Color--light)' }}\n                    className=\"pf-u-ml-sm\"\n                >\n                    {intl.formatMessage(messages.learnMore)}\n                </a>\n            </Bullseye>\n        </Banner>\n    );\n};\n\nexport default ReadOnlyBanner;\n","import React, {\n    useEffect,\n    useState,\n    useMemo,\n    Fragment\n} from 'react';\nimport { useDispatch } from 'react-redux';\nimport NotificationPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport { notificationsReducer as notifications } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport ReducerRegistry from './Utilities/ReducerRegistry';\nimport { setGlobalFilter } from './Store/Actions/Actions';\nimport { VulnerabilityRoutes } from './Utilities/VulnerabilityRoutes';\nimport { useLocation } from 'react-router-dom';\nimport NoAccessPage from './Components/PresentationalComponents/StaticPages/NoAccessPage';\nimport './App.scss';\nimport ReadOnlyBanner from './Components/PresentationalComponents/ReadOnlyBanner/ReadOnlyBanner';\nimport { useRbac } from './Helpers/Hooks';\nimport { PERMISSIONS } from './Helpers/constants';\nimport Spinner from '@redhat-cloud-services/frontend-components/Spinner';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\n\nReducerRegistry.register({ notifications });\n\nconst App = () => {\n    const { pathname } = useLocation();\n    const chrome = useChrome();\n    const [[isUserAuthorized], isLoading] = useRbac([PERMISSIONS.accessApplication]);\n    const [isReadOnlyBannerVisible, setReadOnlyBannerVisible] = useState(false);\n\n    const dispatch = useDispatch();\n\n    const appNavClick = useMemo(() => ({\n        cves(redirect) { chrome.appNavClick({ id: 'cves', redirect }); },\n        systems(redirect) { chrome.appNavClick({ id: 'systems', redirect }); },\n        reports(redirect) { chrome.appNavClick({ id: 'reports', redirect }); }\n    }), []);\n\n    useEffect(() => {\n        const baseComponentUrl = pathname.split('/')[1];\n        chrome &&\n            baseComponentUrl &&\n            appNavClick[baseComponentUrl] !== undefined &&\n            appNavClick[baseComponentUrl](false);\n\n        const unregister = chrome.on('GLOBAL_FILTER_UPDATE', ({ data }) => {\n            const [workloads, SIDs, tags] = chrome.mapGlobalFilter(data, true, true) ?? [null, null, null];\n            dispatch(setGlobalFilter({ workloads, SIDs, tags }));\n        });\n\n        return () => unregister();\n    }, [appNavClick, pathname, dispatch]);\n\n    window.setReadOnlyBannerVisible = setVisible => setReadOnlyBannerVisible(setVisible);\n\n    return (\n        isLoading ? <Spinner centered /> : isUserAuthorized ?\n            <Fragment>\n                <NotificationPortal />\n                {isReadOnlyBannerVisible && <ReadOnlyBanner />}\n                <VulnerabilityRoutes />\n            </Fragment>\n            : <NoAccessPage />\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { InsightsLink } from '@redhat-cloud-services/frontend-components/InsightsLink';\nimport { Breadcrumb as PfBreadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/Skeleton';\n\nconst Breadcrumb = ({ breadcrumbs }) => {\n    return (\n        <PfBreadcrumb key=\"PfBreadcrumb\" className=\"pf-u-mb-md\">\n            {breadcrumbs?.map(item => (\n                <BreadcrumbItem key={item.title} isActive={item.isActive}>\n                    {\n                        item.isLoaded\n                            ? item.isActive\n                                ? item.title\n                                : <InsightsLink to={`/${item.to}`}>{item.title}</InsightsLink>\n                            : <Skeleton className=\"breadcrumb-skeleton\" />\n                    }\n                </BreadcrumbItem>\n            ))}\n        </PfBreadcrumb>\n    );\n};\n\nBreadcrumb.propTypes = {\n    breadcrumbs: propTypes.arrayOf(propTypes.shape({\n        title: propTypes.string,\n        to: propTypes.string,\n        isActive: propTypes.bool,\n        isLoaded: propTypes.bool\n    }))\n};\n\nexport default Breadcrumb;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport {\n    Dropdown,\n    DropdownToggle\n} from '@patternfly/react-core';\nimport { CaretDownIcon } from '@patternfly/react-icons';\nimport messages from '../../../Messages';\n\nconst BaseDropdown = ({ dropdownItems, disabled, ...props }) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const intl = useIntl();\n\n    return (\n        <Dropdown\n            toggle={\n                <DropdownToggle\n                    onToggle={() => setIsOpen(!isOpen)}\n                    toggleIndicator={CaretDownIcon}\n                    isDisabled={disabled}\n                    className=\"dropdown-toggle\"\n                >\n                    {intl.formatMessage(messages.actions)}\n                </DropdownToggle>\n            }\n            isOpen={isOpen}\n            dropdownItems={dropdownItems}\n            {...props}\n        />\n    );\n};\n\nBaseDropdown.propTypes = {\n    dropdownItems: PropTypes.array,\n    disabled: PropTypes.bool\n};\n\nexport default BaseDropdown;\n\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport Breadcrumb from './Breadcrumb';\nimport messages from '../../../Messages';\nimport { intl } from '../../../Utilities/IntlProvider';\nimport { Split, SplitItem } from '@patternfly/react-core';\nimport BaseDropdown from '../BaseDropdown/BaseDropdown';\n\nconst Header = ({ title, actions, breadcrumbs, showBreadcrumb, children, actionsOuiaId, labels }) => {\n\n    return (\n        <PageHeader>\n            {showBreadcrumb && <Breadcrumb breadcrumbs={breadcrumbs} />}\n\n            <Split hasGutter isWrappable>\n                <SplitItem>\n                    <PageHeaderTitle title={title} />\n                </SplitItem>\n\n                {[].concat(labels).map((item, index) => (\n                    <SplitItem key={index}>\n                        {item}\n                    </SplitItem>\n                ))}\n\n                <SplitItem isFilled />\n\n                {actions.length > 0 &&\n                    <SplitItem>\n                        <BaseDropdown dropdownItems={actions} position=\"right\" ouiaId={actionsOuiaId} />\n                    </SplitItem>\n                }\n            </Split>\n\n            {children}\n        </PageHeader>\n    );\n};\n\nHeader.defaultProps = {\n    showBreadcrumb: true,\n    actions: [],\n    title: intl.formatMessage(messages.cvesHeader)\n};\n\nHeader.propTypes = {\n    breadcrumbs: propTypes.array,\n    actions: propTypes.array,\n    title: propTypes.any,\n    showBreadcrumb: propTypes.bool,\n    children: propTypes.any,\n    actionsOuiaId: propTypes.string,\n    labels: propTypes.oneOfType([propTypes.element, propTypes.arrayOf(propTypes.element)])\n};\n\nexport default Header;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport messages from '../../../Messages';\nimport Header from '../../PresentationalComponents/Header/Header';\nimport { NotAuthorized } from '../EmptyStates/EmptyStates';\n\nconst NoAccessPage = ({ intl, title = intl.formatMessage(messages.vulnerabilitiesHeader), emptyStateTitle }) => {\n    return (\n        <React.Fragment>\n            <Header\n                title={title}\n                showBreadcrumb={false}\n            />\n            <Main>\n                <NotAuthorized\n                    title={emptyStateTitle}\n                />\n            </Main>\n        </React.Fragment>\n    );\n};\n\nNoAccessPage.propTypes = {\n    intl: propTypes.any,\n    title: propTypes.string,\n    emptyStateTitle: propTypes.string\n};\n\nexport default injectIntl(NoAccessPage);\n"],"names":["SystemsPage","lazy","LandingPage","Upgrade","CVEDetailsPage","SystemDetailsPage","Reports","InsightsElement","_ref","Element","element","title","globalFilterEnabled","elementProps","_objectWithoutProperties","_excluded","location","useLocation","_useState","useState","_useState2","_slicedToArray","hasSystems","setHasSystems","chrome","useChrome","useEffect","fetchData","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","_result$meta","result","_context","prev","next","getSystems","sent","meta","total_items","stop","apply","arguments","subPath","pathname","split","updateDocumentTitle","concat","intl","formatMessage","messages","pageTitleSuffix","hideGlobalFilter","React","AsyncComponent","appId","appName","module","scope","ErrorComponent","ErrorState","app","propTypes","PropTypes","VulnerabilityRoutes","Suspense","fallback","Fragment","Routes","Route","path","PATHS","cveDetailsPage","to","cvesHeader","cveDetailsEdgePage","isImmutableTabOpen","systemDetailsPage","home","cvesPage","systemsPage","systemsHeader","upgrade","upgradePageTitle","reports","reportsPageTitle","Navigate","Banner","Bullseye","Text","readOnlyBannerText","b","_len","length","chunks","Array","_key","href","target","rel","style","color","className","learnMore","ReducerRegistry","register","notifications","_useRbac","useRbac","PERMISSIONS","accessApplication","_useRbac2","isUserAuthorized","isLoading","isReadOnlyBannerVisible","setReadOnlyBannerVisible","dispatch","useDispatch","appNavClick","useMemo","cves","redirect","id","systems","baseComponentUrl","undefined","unregister","on","_chrome$mapGlobalFilt","data","mapGlobalFilter","_ref3","workloads","SIDs","tags","setGlobalFilter","window","setVisible","Spinner","centered","NotificationPortal","ReadOnlyBanner","NoAccessPage","Breadcrumb","breadcrumbs","PfBreadcrumb","key","map","item","BreadcrumbItem","isActive","isLoaded","InsightsLink","Skeleton","BaseDropdown","dropdownItems","disabled","props","isOpen","setIsOpen","useIntl","Dropdown","_extends","toggle","DropdownToggle","onToggle","toggleIndicator","CaretDownIcon","isDisabled","actions","Header","showBreadcrumb","children","actionsOuiaId","labels","PageHeader","Split","hasGutter","isWrappable","SplitItem","PageHeaderTitle","index","isFilled","position","ouiaId","defaultProps","_ref$title","vulnerabilitiesHeader","emptyStateTitle","Main","NotAuthorized","injectIntl"],"sourceRoot":""}