{"version":3,"sources":["webpack:///./node_modules/lodash/union.js","webpack:///./node_modules/dot/doT.js","webpack:///./node_modules/seamless-immutable/seamless-immutable.development.js"],"names":["baseFlatten","baseRest","baseUniq","isArrayLikeObject","union","arrays","module","exports","_globals","doT","name","version","templateSettings","evaluate","interpolate","encode","use","useParams","define","defineParams","conditional","iterate","varname","strip","append","selfcontained","doNotSkipEncoded","template","undefined","compile","log","encodeHTMLSource","encodeHTMLRules","matchHTML","code","toString","replace","m","this","eval","startend","start","end","startencode","split","skip","unescape","tmpl","c","def","needhtmlencode","indv","cse","sid","str","resolveDefs","block","assign","value","indexOf","substring","param","v","arg","text","Function","s","d","rw","__exp","RegExp","elsecase","vname","iname","_encodeHTML","e","console","Immutable","immutableInit","config","data","REACT_ELEMENT_TYPE","Symbol","for","globalConfig","use_static","instantiateEmptyObject","obj","prototype","Object","getPrototypeOf","create","addPropertyTo","target","methodName","defineProperty","enumerable","configurable","writable","banProperty","ImmutableError","isImmutable","Boolean","getOwnPropertyDescriptor","isEqual","a","b","isMergableObject","Array","isArray","Date","mutatingObjectMethods","mutatingArrayMethods","concat","nonMutatingArrayMethods","mutatingDateMethods","message","stack","Error","makeImmutable","bannedMethods","index","hasOwnProperty","freeze","makeMethodReturnImmutable","currentMethod","apply","arguments","arraySet","idx","deep","merge","mode","mutable","asMutableArray","call","makeImmutableArray","constructor","immutableEmptyArray","arraySetIn","pth","head","length","newValue","tail","slice","thisHead","setIn","nextHead","isFinite","objectSetIn","immutableEmptyObject","array","flatMap","asObject","update","updateIn","getIn","i","asMutableDate","getTime","iterator","result","iteratorResult","push","without","remove","keysToRemoveArray","forEach","el","arr","val","key","makeImmutableObject","opts","asDeepMutable","pair","asMutable","quickCopy","src","dest","other","TypeError","JSON","stringify","receivedArray","merger","addToResult","currentObj","otherObj","immutableValue","mergerResult","currentValue","clearDroppedKeys","otherFromArray","objectReplace","fnObject","fnArray","fnDate","path","objectSet","property","updater","restArgs","initialVal","set","getInPath","l","defaultValue","asMutableObject","instantiatePlainObject","options","stackRemaining","$$typeof","isReactElement","File","isFileObject","Blob","isBlobObject","isError","then","isPromise","date","clone","toStatic","fn","args","self","shift","toStaticObjectOrArray","from","static"],"mappings":"+EAAA,IAAIA,EAAc,EAAQ,KACtBC,EAAW,EAAQ,KACnBC,EAAW,EAAQ,KACnBC,EAAoB,EAAQ,MAkB5BC,EAAQH,GAAS,SAASI,GAC5B,OAAOH,EAASF,EAAYK,EAAQ,EAAGF,GAAmB,OAG5DG,EAAOC,QAAUH,G,oBCzBjB,OAIC,WACA,aAEA,IAsBGI,EAtBCC,EAAM,CACTC,KAAM,MACNC,QAAS,QACTC,iBAAkB,CACjBC,SAAa,4BACbC,YAAa,uBACbC,OAAa,uBACbC,IAAa,uBACbC,UAAa,0GACbC,OAAa,+CACbC,aAAa,yBACbC,YAAa,mCACbC,QAAa,2EACbC,QAAS,KACTC,OAAQ,EACRC,QAAS,EACTC,eAAe,EACfC,kBAAkB,GAEnBC,cAAUC,EACVC,aAAUD,EACVE,KAAK,GAGNrB,EAAIsB,iBAAmB,SAASL,GAC/B,IAAIM,EAAkB,CAAE,IAAK,QAAS,IAAK,QAAS,IAAK,QAAS,IAAK,QAAS,IAAK,QAAS,IAAK,SAClGC,EAAYP,EAAmB,aAAe,0BAC/C,OAAO,SAASQ,GACf,OAAOA,EAAOA,EAAKC,WAAWC,QAAQH,GAAW,SAASI,GAAI,OAAOL,EAAgBK,IAAMA,KAAO,KAIpG7B,EAAY,WAAY,OAAO8B,OAAQ,EAAGC,MAAM,QAArC,GAG0BjC,EAAOC,QAC3CD,EAAOC,QAAUE,OAEa,KAA9B,aAAkB,OAAOA,GAAK,8BAK/B,IAAI+B,EAAW,CACdhB,OAAQ,CAAEiB,MAAO,MAAYC,IAAK,MAAYC,YAAa,iBAC3DC,MAAQ,CAAEH,MAAO,WAAYC,IAAK,WAAYC,YAAa,uBACzDE,EAAO,KAkCV,SAASC,EAASZ,GACjB,OAAOA,EAAKE,QAAQ,YAAa,MAAMA,QAAQ,YAAa,KAG7D3B,EAAIkB,SAAW,SAASoB,EAAMC,EAAGC,GAEhC,IAAuDC,EAAyBC,EAA5EC,GADJJ,EAAIA,GAAKvC,EAAIG,kBACDY,OAASgB,EAAShB,OAASgB,EAASI,MAAuBS,EAAM,EAC5EC,EAAQN,EAAEhC,KAAOgC,EAAE9B,OAvCrB,SAASqC,EAAYP,EAAGQ,EAAOP,GAC9B,OAA0B,iBAAVO,EAAsBA,EAAQA,EAAMrB,YACnDC,QAAQY,EAAE9B,QAAU2B,GAAM,SAASR,EAAGH,EAAMuB,EAAQC,GAcpD,OAb6B,IAAzBxB,EAAKyB,QAAQ,UAChBzB,EAAOA,EAAK0B,UAAU,IAEjB1B,KAAQe,IACE,MAAXQ,GACCT,EAAE7B,cAAcuC,EAAMtB,QAAQY,EAAE7B,cAAc,SAASkB,EAAGwB,EAAOC,GACpEb,EAAIf,GAAQ,CAAC6B,IAAKF,EAAOG,KAAMF,MAE1B5B,KAAQe,IAAMA,EAAIf,GAAOwB,IAE/B,IAAIO,SAAS,MAAO,QAAQ/B,EAAK,MAAQwB,EAAzC,CAAgDT,IAG3C,MAEPb,QAAQY,EAAEhC,KAAO6B,GAAM,SAASR,EAAGH,GAC/Bc,EAAE/B,YAAWiB,EAAOA,EAAKE,QAAQY,EAAE/B,WAAW,SAASoB,EAAG6B,EAAGC,EAAGN,GACnE,GAAIZ,EAAIkB,IAAMlB,EAAIkB,GAAGJ,KAAOF,EAAO,CAClC,IAAIO,GAAMD,EAAE,IAAIN,GAAOzB,QAAQ,QAAS,KAGxC,OAFAa,EAAIoB,MAAQpB,EAAIoB,OAAS,GACzBpB,EAAIoB,MAAMD,GAAMnB,EAAIkB,GAAGH,KAAK5B,QAAQ,IAAIkC,OAAO,cAAgBrB,EAAIkB,GAAGJ,IAAM,YAAa,KAAM,KAAOF,EAAQ,MACvGK,EAAI,cAAcE,EAAG,UAG9B,IAAIN,EAAI,IAAIG,SAAS,MAAO,UAAY/B,EAAhC,CAAsCe,GAC9C,OAAOa,EAAIP,EAAYP,EAAGc,EAAGb,GAAOa,KAWPP,CAAYP,EAAGD,EAAME,GAAO,IAAMF,EAEhEO,GAAO,aAAeN,EAAEzB,MAAQ+B,EAAIlB,QAAQ,iCAAiC,KACzEA,QAAQ,6BAA6B,IAAKkB,GAC5ClB,QAAQ,QAAS,QACjBA,QAAQY,EAAElC,aAAe+B,GAAM,SAASR,EAAGH,GAC3C,OAAOkB,EAAIX,MAAQK,EAASZ,GAAQkB,EAAIV,OAExCN,QAAQY,EAAEjC,QAAU8B,GAAM,SAASR,EAAGH,GAEtC,OADAgB,GAAiB,EACVE,EAAIT,YAAcG,EAASZ,GAAQkB,EAAIV,OAE9CN,QAAQY,EAAE5B,aAAeyB,GAAM,SAASR,EAAGkC,EAAUrC,GACrD,OAAOqC,EACLrC,EAAO,cAAgBY,EAASZ,GAAQ,WAAa,iBACrDA,EAAO,QAAUY,EAASZ,GAAQ,WAAa,eAEjDE,QAAQY,EAAE3B,SAAWwB,GAAM,SAASR,EAAGhB,EAASmD,EAAOC,GACvD,OAAKpD,GACLgC,GAAK,EAAGF,EAAKsB,GAAS,IAAIpB,EAAKhC,EAAQyB,EAASzB,GACzC,YAAYgC,EAAI,IAAIhC,EAAQ,UAAUgC,EAAI,SAASmB,EAAM,IAAIrB,EAAK,QAAQE,EAAI,OAAOA,EAAI,mBAAmBF,EAAK,KAAKE,EAAI,KAC/HmB,EAAM,OAAOnB,EAAI,IAAIF,EAAK,eAHP,kBAKrBf,QAAQY,EAAEnC,UAAYgC,GAAM,SAASR,EAAGH,GACxC,MAAO,KAAOY,EAASZ,GAAQ,YAE9B,iBACDE,QAAQ,MAAO,OAAOA,QAAQ,MAAO,OAAOA,QAAQ,MAAO,OAC3DA,QAAQ,2BAA4B,MAAMA,QAAQ,QAAS,IAGzDc,IACEF,EAAEvB,gBAAiBjB,GAAaA,EAASkE,cAAalE,EAASkE,YAAcjE,EAAIsB,iBAAiBiB,EAAEtB,mBACzG4B,EAAM,wEACH7C,EAAIsB,iBAAiBI,WAAa,KAAOa,EAAEtB,kBAAoB,IAAM,MACrE4B,GAEJ,IACC,OAAO,IAAIW,SAASjB,EAAE1B,QAASgC,GAC9B,MAAOqB,GAGR,KADuB,oBAAZC,SAAyBA,QAAQ9C,IAAI,yCAA2CwB,GACrFqB,IAIRlE,EAAIoB,QAAU,SAASkB,EAAME,GAC5B,OAAOxC,EAAIkB,SAASoB,EAAM,KAAME,IAzIlC,I,oBCJA,kBACE,aAouBA,IAAI4B,EAluBN,SAASC,EAAcC,GAGrB,IAYkBC,EAZdC,EAAuC,mBAAXC,QAAyBA,OAAOC,KAAOD,OAAOC,IAAI,iBAG9EC,EAAe,CACjBC,YAAY,GAgBd,SAASC,EAAuBC,GAC5B,IAAIC,EAAYC,OAAOC,eAAeH,GACtC,OAAKC,EAGMC,OAAOE,OAAOH,GAFd,GAMf,SAASI,EAAcC,EAAQC,EAAYpC,GACzC+B,OAAOM,eAAeF,EAAQC,EAAY,CACxCE,YAAY,EACZC,cAAc,EACdC,UAAU,EACVxC,MAAOA,IAIX,SAASyC,EAAYN,EAAQC,GAC3BF,EAAcC,EAAQC,GAAY,WAChC,MAAM,IAAIM,EAAe,OAASN,EAChC,gEAUN,SAASO,EAAYR,GACnB,MAAsB,iBAAXA,IACS,OAAXA,GAAmBS,QACxBb,OAAOc,yBAAyBV,EAThB,iCAkBtB,SAASW,EAAQC,EAAGC,GAElB,OAAQD,IAAMC,GAAMD,GAAMA,GAAKC,GAAMA,EAGvC,SAASC,EAAiBd,GACxB,QAAkB,OAAXA,GAAqC,iBAAXA,GAAyBe,MAAMC,QAAQhB,IAAcA,aAAkBiB,MAvDtF,iBAFF9B,EANLD,IASR6B,MAAMC,QAAQ7B,IACN,OAATA,QAT0BpD,IAAtBmD,EAAOM,aACPD,EAAaC,WAAaiB,QAAQvB,EAAOM,aAgEjD,IAAI0B,EAAwB,CAC1B,kBAOEC,EAAuBD,EAAsBE,OAAO,CACtD,OAAQ,MAAO,OAAQ,SAAU,QAAS,UAAW,YAGnDC,EAR2B,CAC7B,QAOqDD,OAAO,CAC5D,MAAO,SAAU,QAAS,SAAU,SAAU,gBAG5CE,EAAsBJ,EAAsBE,OAAO,CACrD,UAAW,cAAe,WAAY,kBAAmB,aAAc,WAAY,aACnF,UAAW,aAAc,iBAAkB,cAAe,qBAAsB,gBAChF,cAAe,gBAAiB,YAGlC,SAASb,EAAegB,GACtB9E,KAAK5B,KAAO,UACZ4B,KAAK8E,QAAUA,EACf9E,KAAK+E,OAAQ,IAAKC,OAASD,MAK7B,SAASE,EAAchC,EAAKiC,GAMxB,IAAK,IAAIC,KA5DX7B,EAwDmBL,EA3DC,+BAGmB,GA4DnBiC,EACZA,EAAcE,eAAeD,IAC/BtB,EAAYZ,EAAKiC,EAAcC,IAQrC,OAHEhC,OAAOkC,OAAOpC,GAGTA,EAGT,SAASqC,EAA0BrC,EAAKO,GACtC,IAAI+B,EAAgBtC,EAAIO,GAExBF,EAAcL,EAAKO,GAAY,WAC7B,OAAOjB,EAAUgD,EAAcC,MAAMvC,EAAKwC,eAI9C,SAASC,EAASC,EAAKvE,EAAOqB,GAC5B,IAAImD,EAAgBnD,GAAUA,EAAOmD,KAErC,GAAID,KAAO3F,OACL4F,GAAQ5F,KAAK2F,KAASvE,GAASiD,EAAiBjD,IAAUiD,EAAiBrE,KAAK2F,MAClFvE,EAAQmB,EAAUsD,MAAM7F,KAAK2F,GAAMvE,EAAO,CAACwE,MAAM,EAAME,KAAM,aAE3D5B,EAAQlE,KAAK2F,GAAMvE,IACrB,OAAOpB,KAIX,IAAI+F,EAAUC,EAAeC,KAAKjG,MAElC,OADA+F,EAAQJ,GAAOpD,EAAUnB,GAClB8E,EAAmBH,GA5C5BjC,EAAeZ,UAAY,IAAI8B,MAC/BlB,EAAeZ,UAAUiD,YAAcnB,MA8CvC,IAAIoB,EAAsB7D,EAAU,IAEpC,SAAS8D,EAAWC,EAAKlF,EAAOqB,GAC9B,IAAI8D,EAAOD,EAAI,GAEf,GAAmB,IAAfA,EAAIE,OACN,OAAOd,EAASO,KAAKjG,KAAMuG,EAAMnF,EAAOqB,GAExC,IAEIgE,EAFAC,EAAOJ,EAAIK,MAAM,GACjBC,EAAW5G,KAAKuG,GAGpB,GAAyB,iBAAf,GAAwC,OAAbK,EAEnCH,EAAWlE,EAAUsE,MAAMD,EAAUF,EAAMtF,OACtC,CACL,IAAI0F,EAAWJ,EAAK,GAGlBD,EADe,KAAbK,GAAmBC,SAASD,GACnBT,EAAWJ,KAAKG,EAAqBM,EAAMtF,GAE3C4F,EAAYf,KAAKgB,EAAsBP,EAAMtF,GAI5D,GAAImF,KAAQvG,MAAQ4G,IAAaH,EAC/B,OAAOzG,KAGT,IAAI+F,EAAUC,EAAeC,KAAKjG,MAElC,OADA+F,EAAQQ,GAAQE,EACTP,EAAmBH,GAI9B,SAASG,EAAmBgB,GAG1B,IAAK,IAAI/B,KAASP,EAAyB,CACzC,GAAIA,EAAwBQ,eAAeD,GAEzCG,EAA0B4B,EADTtC,EAAwBO,IAKxCrC,EAAaC,aAChBO,EAAc4D,EAAO,UAAYC,GACjC7D,EAAc4D,EAAO,WAAYE,GACjC9D,EAAc4D,EAAO,YAAalB,GAClC1C,EAAc4D,EAAO,MAAOxB,GAC5BpC,EAAc4D,EAAO,QAASb,GAC9B/C,EAAc4D,EAAO,SAAUG,GAC/B/D,EAAc4D,EAAO,WAAYI,GACjChE,EAAc4D,EAAO,QAASK,IAGhC,IAAI,IAAIC,EAAI,EAAGhB,EAASU,EAAMV,OAAQgB,EAAIhB,EAAQgB,IAChDN,EAAMM,GAAKjF,EAAU2E,EAAMM,IAG7B,OAAOvC,EAAciC,EAAOxC,GAW9B,SAAS+C,IACP,OAAO,IAAIjD,KAAKxE,KAAK0H,WAUvB,SAASP,EAAQQ,GAEf,GAAyB,IAArBlC,UAAUe,OACZ,OAAOxG,KAGT,IAEImF,EAFAyC,EAAS,GACTpB,EAASxG,KAAKwG,OAGlB,IAAKrB,EAAQ,EAAGA,EAAQqB,EAAQrB,IAAS,CACvC,IAAI0C,EAAiBF,EAAS3H,KAAKmF,GAAQA,EAAOnF,MAE9CsE,MAAMC,QAAQsD,GAEhBD,EAAOE,KAAKtC,MAAMoC,EAAQC,GAG1BD,EAAOE,KAAKD,GAIhB,OAAO3B,EAAmB0B,GAQ5B,SAASG,EAAQC,GAEf,QAAsB,IAAXA,GAA+C,IAArBvC,UAAUe,OAC7C,OAAOxG,KAGT,GAAsB,mBAAXgI,EAAuB,CAEhC,IAAIC,EAAqB3D,MAAMC,QAAQyD,GACpCA,EAAOrB,QAAUrC,MAAMpB,UAAUyD,MAAMV,KAAKR,WAI/CwC,EAAkBC,SAAQ,SAASC,EAAIxC,EAAKyC,GACxB,iBAAT,IACPA,EAAIzC,GAAOwC,EAAGtI,eAIlBmI,EAAS,SAASK,EAAKC,GACrB,OAA2C,IAApCL,EAAkB5G,QAAQiH,IAIrC,IAAIV,EAAS5E,EAAuBhD,MAEpC,IAAK,IAAIsI,KAAOtI,KACVA,KAAKoF,eAAekD,KAAmC,IAA3BN,EAAOhI,KAAKsI,GAAMA,KAChDV,EAAOU,GAAOtI,KAAKsI,IAIvB,OAAOC,EAAoBX,GAG7B,SAAS5B,EAAewC,GACtB,IAAiBhB,EAAGhB,EAAhBoB,EAAS,GAEb,GAAGY,GAAQA,EAAK5C,KACd,IAAI4B,EAAI,EAAGhB,EAASxG,KAAKwG,OAAQgB,EAAIhB,EAAQgB,IAC3CI,EAAOE,KAAKW,EAAczI,KAAKwH,UAGjC,IAAIA,EAAI,EAAGhB,EAASxG,KAAKwG,OAAQgB,EAAIhB,EAAQgB,IAC3CI,EAAOE,KAAK9H,KAAKwH,IAIrB,OAAOI,EAUT,SAASR,EAASO,GAGQ,mBAAbA,IACTA,EAAW,SAASvG,GAAS,OAAOA,IAGtC,IAEI+D,EAFAyC,EAAS,GACTpB,EAASxG,KAAKwG,OAGlB,IAAKrB,EAAQ,EAAGA,EAAQqB,EAAQrB,IAAS,CACvC,IAAIuD,EAAQf,EAAS3H,KAAKmF,GAAQA,EAAOnF,MACrCsI,EAAQI,EAAK,GACbtH,EAAQsH,EAAK,GAEjBd,EAAOU,GAAOlH,EAGhB,OAAOmH,EAAoBX,GAG7B,SAASa,EAAcxF,GACrB,OACIA,GACc,iBAARA,IACNE,OAAOc,yBAAyBhB,EAzShB,gCA0SjBA,aAAeuB,KACPvB,EACJV,EAAUoG,UAAU1F,EAAK,CAAC2C,MAAM,IAGzC,SAASgD,EAAUC,EAAKC,GACtB,IAAK,IAAIR,KAAOO,EACV1F,OAAOc,yBAAyB4E,EAAKP,KACvCQ,EAAKR,GAAOO,EAAIP,IAIpB,OAAOQ,EAYT,SAASjD,EAAMkD,EAAOtG,GAEpB,GAAyB,IAArBgD,UAAUe,OACZ,OAAOxG,KAGT,GAAc,OAAV+I,GAAoC,iBAAVA,EAC5B,MAAM,IAAIC,UAAU,mEAAqEC,KAAKC,UAAUH,IAG1G,IAIInB,EAgDAU,EApDAa,EAAiB7E,MAAMC,QAAQwE,GAC/BnD,EAAgBnD,GAAUA,EAAOmD,KACjCE,EAAgBrD,GAAUA,EAAOqD,MAAQ,QACzCsD,EAAgB3G,GAAUA,EAAO2G,OAMrC,SAASC,EAAYC,EAAYC,EAAUjB,GACzC,IASM7B,EATF+C,EAAiBjH,EAAUgH,EAASjB,IACpCmB,EAAeL,GAAUA,EAAOE,EAAWhB,GAAMkB,EAAgB/G,GACjEiH,EAAeJ,EAAWhB,QAEdhJ,IAAXsI,QACetI,IAAjBmK,GACCH,EAAWlE,eAAekD,IAC3BpE,EAAQsF,EAAgBE,KAYpBxF,EAAQwF,EAPXjD,OADmBnH,IAAjBmK,EACSA,EACF7D,GAAQvB,EAAiBqF,IAAiBrF,EAAiBmF,GACzDjH,EAAUsD,MAAM6D,EAAcF,EAAgB/G,GAE9C+G,IAG4BF,EAAWlE,eAAekD,UAClDhJ,IAAXsI,IAEFA,EAASgB,EAAUU,EAAYtG,EAAuBsG,KAGxD1B,EAAOU,GAAO7B,IAKpB,SAASkD,EAAiBL,EAAYC,GACpC,IAAK,IAAIjB,KAAOgB,EACTC,EAASnE,eAAekD,UACZhJ,IAAXsI,IAEFA,EAASgB,EAAUU,EAAYtG,EAAuBsG,YAEjD1B,EAAOU,IAQpB,GAAKa,EAYH,IAAK,IAAIhE,EAAQ,EAAGqB,EAASuC,EAAMvC,OAAQrB,EAAQqB,EAAQrB,IAAS,CAClE,IAAIyE,EAAiBb,EAAM5D,GAE3B,IAAKmD,KAAOsB,EACNA,EAAexE,eAAekD,IAChCe,OAAuB/J,IAAXsI,EAAuBA,EAAS5H,KAAM4J,EAAgBtB,OAjBtD,CAElB,IAAKA,KAAOS,EACN5F,OAAOc,yBAAyB8E,EAAOT,IACzCe,EAAYrJ,KAAM+I,EAAOT,GAGhB,YAATxC,GACF6D,EAAiB3J,KAAM+I,GAe3B,YAAezJ,IAAXsI,EACK5H,KAEAuI,EAAoBX,GAI/B,SAASiC,EAAczI,EAAOqB,GAC5B,IAAImD,EAAgBnD,GAAUA,EAAOmD,KAGrC,GAAyB,IAArBH,UAAUe,OACZ,OAAOxG,KAGT,GAAc,OAAVoB,GAAmC,iBAAVA,EAC3B,MAAM,IAAI4H,UAAU,qEAAuEC,KAAKC,UAAU9H,IAG5G,OAAOmB,EAAUsD,MAAM7F,KAAMoB,EAAO,CAACwE,KAAMA,EAAME,KAAM,YAGzD,IAwNqCgE,EAAUC,EAASC,EAxNpD/C,EAAuB1E,EAAU,IAErC,SAASyE,EAAYiD,EAAM7I,EAAOqB,GAChC,IAAM6B,MAAMC,QAAQ0F,IAA0B,IAAhBA,EAAKzD,OACjC,MAAM,IAAIwC,UAAU,gGAGtB,IAAIzC,EAAO0D,EAAK,GAChB,GAAoB,IAAhBA,EAAKzD,OACP,OAAO0D,EAAUjE,KAAKjG,KAAMuG,EAAMnF,EAAOqB,GAG3C,IACIgE,EADAC,EAAOuD,EAAKtD,MAAM,GAElBC,EAAW5G,KAAKuG,GASpB,GALEE,EAFEzG,KAAKoF,eAAemB,IAA8B,iBAAf,GAAwC,OAAbK,EAErDrE,EAAUsE,MAAMD,EAAUF,EAAMtF,GAEhC4F,EAAYf,KAAKgB,EAAsBP,EAAMtF,GAGtDpB,KAAKoF,eAAemB,IAASK,IAAaH,EAC5C,OAAOzG,KAGT,IAAI+F,EAAU6C,EAAU5I,KAAMgD,EAAuBhD,OAErD,OADA+F,EAAQQ,GAAQE,EACT8B,EAAoBxC,GAG7B,SAASmE,EAAUC,EAAU/I,EAAOqB,GAClC,IAAImD,EAAgBnD,GAAUA,EAAOmD,KAErC,GAAI5F,KAAKoF,eAAe+E,KAClBvE,GAAQ5F,KAAKmK,KAAc/I,GAASiD,EAAiBjD,IAAUiD,EAAiBrE,KAAKmK,MACvF/I,EAAQmB,EAAUsD,MAAM7F,KAAKmK,GAAW/I,EAAO,CAACwE,MAAM,EAAME,KAAM,aAEhE5B,EAAQlE,KAAKmK,GAAW/I,IAC1B,OAAOpB,KAIX,IAAI+F,EAAU6C,EAAU5I,KAAMgD,EAAuBhD,OAErD,OADA+F,EAAQoE,GAAY5H,EAAUnB,GACvBmH,EAAoBxC,GAG7B,SAASsB,EAAO8C,EAAUC,GACxB,IAAIC,EAAW/F,MAAMpB,UAAUyD,MAAMV,KAAKR,UAAW,GACjD6E,EAAatK,KAAKmK,GACtB,OAAO5H,EAAUgI,IAAIvK,KAAMmK,EAAUC,EAAQ5E,MAAM8E,EAAY,CAACA,GAAY3F,OAAO0F,KAGrF,SAASG,EAAUvH,EAAKgH,GAEtB,IAAK,IAAIzC,EAAI,EAAGiD,EAAIR,EAAKzD,OAAe,MAAPvD,GAAeuE,EAAIiD,EAAGjD,IACrDvE,EAAMA,EAAIgH,EAAKzC,IAGjB,OAAQA,GAAKA,GAAKiD,EAAKxH,OAAM3D,EAG/B,SAASgI,EAAS2C,EAAMG,GACtB,IAAIC,EAAW/F,MAAMpB,UAAUyD,MAAMV,KAAKR,UAAW,GACjD6E,EAAaE,EAAUxK,KAAMiK,GAEjC,OAAO1H,EAAUsE,MAAM7G,KAAMiK,EAAMG,EAAQ5E,MAAM8E,EAAY,CAACA,GAAY3F,OAAO0F,KAGnF,SAAS9C,EAAM0C,EAAMS,GACnB,IAAItJ,EAAQoJ,EAAUxK,KAAMiK,GAC5B,YAAiB3K,IAAV8B,EAAsBsJ,EAAetJ,EAG9C,SAASuJ,EAAgBnC,GACvB,IAA2CF,EAAvCV,EAAS5E,EAAuBhD,MAEpC,GAAGwI,GAAQA,EAAK5C,KACd,IAAK0C,KAAOtI,KACNA,KAAKoF,eAAekD,KACtBV,EAAOU,GAAOG,EAAczI,KAAKsI,UAIrC,IAAKA,KAAOtI,KACNA,KAAKoF,eAAekD,KACtBV,EAAOU,GAAOtI,KAAKsI,IAKzB,OAAOV,EAIT,SAASgD,IACP,MAAO,GAIT,SAASrC,EAAoBtF,GAa3B,OAZKH,EAAaC,aAChBO,EAAcL,EAAK,QAAS4C,GAC5BvC,EAAcL,EAAK,UAAW4G,GAC9BvG,EAAcL,EAAK,UAAW8E,GAC9BzE,EAAcL,EAAK,YAAa0H,GAChCrH,EAAcL,EAAK,MAAOiH,GAC1B5G,EAAcL,EAAK,QAAS+D,GAC5B1D,EAAcL,EAAK,SAAUoE,GAC7B/D,EAAcL,EAAK,WAAYqE,GAC/BhE,EAAcL,EAAK,QAASsE,IAGvBtC,EAAchC,EAAKwB,GA8B5B,SAASlC,EAAUU,EAAK4H,EAASC,GAC/B,GAAI/G,EAAYd,IA1BlB,SAAwBA,GACtB,MAAsB,iBAARA,GACC,OAARA,IAtlByB,QAulBxBA,EAAI8H,UAA4C9H,EAAI8H,WAAapI,GAuBjDqI,CAAe/H,IApBzC,SAAsBA,GACpB,MAAuB,oBAATgI,MACPhI,aAAegI,KAkByBC,CAAajI,IAf9D,SAAsBA,GACpB,MAAuB,oBAATkI,MACPlI,aAAekI,KAa8CC,CAAanI,IALnF,SAAiBA,GACf,OAAOA,aAAe+B,MAImEqG,CAAQpI,GAC/F,OAAOA,EACF,GAZT,SAAmBA,GACjB,MAAsB,iBAARA,GACa,mBAAbA,EAAIqI,KAUPC,CAAUtI,GACnB,OAAOA,EAAIqI,KAAK/I,GACX,GAAI+B,MAAMC,QAAQtB,GACvB,OAAOiD,EAAmBjD,EAAI0D,SACzB,GAAI1D,aAAeuB,KACxB,OArauBgH,EAqaE,IAAIhH,KAAKvB,EAAIyE,WApanC5E,EAAaC,YAChBO,EAAckI,EAAM,YAAa/D,GAG5BxC,EAAcuG,EAAM3G,GAmazB,IAxauB2G,EAwanBtI,EAAY2H,GAAWA,EAAQ3H,UAI/BuI,GAFAvI,GAAaA,IAAcC,OAAOD,UACT,WAAc,OAAOC,OAAOE,OAAOH,IAA5D0H,KAQF,GAHsB,MAAlBE,IACFA,EAAiB,IAEfA,GAAkB,EACpB,MAAM,IAAIhH,EAAe,oQAO7B,IAAK,IAAIwE,KAHPwC,GAAkB,EAGJ7H,EACVE,OAAOc,yBAAyBhB,EAAKqF,KACvCmD,EAAMnD,GAAO/F,EAAUU,EAAIqF,QAAMhJ,EAAWwL,IAIhD,OAAOvC,EAAoBkD,GAK/B,SAASC,EAASC,GAOhB,OANA,WACE,IAAIC,EAAO,GAAGjF,MAAMV,KAAKR,WACrBoG,EAAOD,EAAKE,QAChB,OAAOH,EAAGnG,MAAMqG,EAAMD,IAS1B,SAASG,EAAsBjC,EAAUC,GAWvC,OAVA,WACE,IAAI6B,EAAO,GAAGjF,MAAMV,KAAKR,WACrBoG,EAAOD,EAAKE,QAChB,OAAIxH,MAAMC,QAAQsH,GACP9B,EAAQvE,MAAMqG,EAAMD,GAEpB9B,EAAStE,MAAMqG,EAAMD,IAiDpC,OAtBArJ,EAAUyJ,KAAiBzJ,EAC3BA,EAAUwB,YAAiBA,EAC3BxB,EAAUuB,eAAiBA,EAC3BvB,EAAUsD,MAAiB6F,EAAS7F,GACpCtD,EAAUzC,QAAiB4L,EAAS7B,GACpCtH,EAAUwF,QAAiB2D,EAAS3D,GACpCxF,EAAUoG,WAvB2BmB,EAuBkBa,EAvBRZ,EAuByB/D,EAvBhBgE,EAuBgCvC,EAtBtF,WACE,IAAImE,EAAO,GAAGjF,MAAMV,KAAKR,WACrBoG,EAAOD,EAAKE,QAChB,OAAIxH,MAAMC,QAAQsH,GACP9B,EAAQvE,MAAMqG,EAAMD,GACpBC,aAAgBrH,KAChBwF,EAAOxE,MAAMqG,EAAMD,GAEnB9B,EAAStE,MAAMqG,EAAMD,KAepCrJ,EAAUgI,IAAiBwB,EAAsB7B,EAAWxE,GAC5DnD,EAAUsE,MAAiBkF,EAAsB/E,EAAaX,GAC9D9D,EAAU8E,OAAiBqE,EAASrE,GACpC9E,EAAU+E,SAAiBoE,EAASpE,GACpC/E,EAAUgF,MAAiBmE,EAASnE,GACpChF,EAAU4E,QAAiBuE,EAASvE,GACpC5E,EAAU6E,SAAiBsE,EAAStE,GAC/BtE,EAAaC,aACdR,EAAU0J,OAASzJ,EAAc,CAC7BO,YAAY,KAIpBI,OAAOkC,OAAO9C,GAEPA,EAGSC,QAKb,KAFD,aACE,OAAOD,GACR,8BA1uBL","file":"js/vendors~Systems.js","sourcesContent":["var baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    baseUniq = require('./_baseUniq'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array of unique values, in order, from all given arrays using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.union([2], [1, 2]);\n * // => [2, 1]\n */\nvar union = baseRest(function(arrays) {\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n});\n\nmodule.exports = union;\n","// doT.js\n// 2011-2014, Laura Doktorova, https://github.com/olado/doT\n// Licensed under the MIT license.\n\n(function () {\n\t\"use strict\";\n\n\tvar doT = {\n\t\tname: \"doT\",\n\t\tversion: \"1.1.1\",\n\t\ttemplateSettings: {\n\t\t\tevaluate:    /\\{\\{([\\s\\S]+?(\\}?)+)\\}\\}/g,\n\t\t\tinterpolate: /\\{\\{=([\\s\\S]+?)\\}\\}/g,\n\t\t\tencode:      /\\{\\{!([\\s\\S]+?)\\}\\}/g,\n\t\t\tuse:         /\\{\\{#([\\s\\S]+?)\\}\\}/g,\n\t\t\tuseParams:   /(^|[^\\w$])def(?:\\.|\\[[\\'\\\"])([\\w$\\.]+)(?:[\\'\\\"]\\])?\\s*\\:\\s*([\\w$\\.]+|\\\"[^\\\"]+\\\"|\\'[^\\']+\\'|\\{[^\\}]+\\})/g,\n\t\t\tdefine:      /\\{\\{##\\s*([\\w\\.$]+)\\s*(\\:|=)([\\s\\S]+?)#\\}\\}/g,\n\t\t\tdefineParams:/^\\s*([\\w$]+):([\\s\\S]+)/,\n\t\t\tconditional: /\\{\\{\\?(\\?)?\\s*([\\s\\S]*?)\\s*\\}\\}/g,\n\t\t\titerate:     /\\{\\{~\\s*(?:\\}\\}|([\\s\\S]+?)\\s*\\:\\s*([\\w$]+)\\s*(?:\\:\\s*([\\w$]+))?\\s*\\}\\})/g,\n\t\t\tvarname:\t\"it\",\n\t\t\tstrip:\t\ttrue,\n\t\t\tappend:\t\ttrue,\n\t\t\tselfcontained: false,\n\t\t\tdoNotSkipEncoded: false\n\t\t},\n\t\ttemplate: undefined, //fn, compile template\n\t\tcompile:  undefined, //fn, for express\n\t\tlog: true\n\t}, _globals;\n\n\tdoT.encodeHTMLSource = function(doNotSkipEncoded) {\n\t\tvar encodeHTMLRules = { \"&\": \"&#38;\", \"<\": \"&#60;\", \">\": \"&#62;\", '\"': \"&#34;\", \"'\": \"&#39;\", \"/\": \"&#47;\" },\n\t\t\tmatchHTML = doNotSkipEncoded ? /[&<>\"'\\/]/g : /&(?!#?\\w+;)|<|>|\"|'|\\//g;\n\t\treturn function(code) {\n\t\t\treturn code ? code.toString().replace(matchHTML, function(m) {return encodeHTMLRules[m] || m;}) : \"\";\n\t\t};\n\t};\n\n\t_globals = (function(){ return this || (0,eval)(\"this\"); }());\n\n\t/* istanbul ignore else */\n\tif (typeof module !== \"undefined\" && module.exports) {\n\t\tmodule.exports = doT;\n\t} else if (typeof define === \"function\" && define.amd) {\n\t\tdefine(function(){return doT;});\n\t} else {\n\t\t_globals.doT = doT;\n\t}\n\n\tvar startend = {\n\t\tappend: { start: \"'+(\",      end: \")+'\",      startencode: \"'+encodeHTML(\" },\n\t\tsplit:  { start: \"';out+=(\", end: \");out+='\", startencode: \"';out+=encodeHTML(\" }\n\t}, skip = /$^/;\n\n\tfunction resolveDefs(c, block, def) {\n\t\treturn ((typeof block === \"string\") ? block : block.toString())\n\t\t.replace(c.define || skip, function(m, code, assign, value) {\n\t\t\tif (code.indexOf(\"def.\") === 0) {\n\t\t\t\tcode = code.substring(4);\n\t\t\t}\n\t\t\tif (!(code in def)) {\n\t\t\t\tif (assign === \":\") {\n\t\t\t\t\tif (c.defineParams) value.replace(c.defineParams, function(m, param, v) {\n\t\t\t\t\t\tdef[code] = {arg: param, text: v};\n\t\t\t\t\t});\n\t\t\t\t\tif (!(code in def)) def[code]= value;\n\t\t\t\t} else {\n\t\t\t\t\tnew Function(\"def\", \"def['\"+code+\"']=\" + value)(def);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn \"\";\n\t\t})\n\t\t.replace(c.use || skip, function(m, code) {\n\t\t\tif (c.useParams) code = code.replace(c.useParams, function(m, s, d, param) {\n\t\t\t\tif (def[d] && def[d].arg && param) {\n\t\t\t\t\tvar rw = (d+\":\"+param).replace(/'|\\\\/g, \"_\");\n\t\t\t\t\tdef.__exp = def.__exp || {};\n\t\t\t\t\tdef.__exp[rw] = def[d].text.replace(new RegExp(\"(^|[^\\\\w$])\" + def[d].arg + \"([^\\\\w$])\", \"g\"), \"$1\" + param + \"$2\");\n\t\t\t\t\treturn s + \"def.__exp['\"+rw+\"']\";\n\t\t\t\t}\n\t\t\t});\n\t\t\tvar v = new Function(\"def\", \"return \" + code)(def);\n\t\t\treturn v ? resolveDefs(c, v, def) : v;\n\t\t});\n\t}\n\n\tfunction unescape(code) {\n\t\treturn code.replace(/\\\\('|\\\\)/g, \"$1\").replace(/[\\r\\t\\n]/g, \" \");\n\t}\n\n\tdoT.template = function(tmpl, c, def) {\n\t\tc = c || doT.templateSettings;\n\t\tvar cse = c.append ? startend.append : startend.split, needhtmlencode, sid = 0, indv,\n\t\t\tstr  = (c.use || c.define) ? resolveDefs(c, tmpl, def || {}) : tmpl;\n\n\t\tstr = (\"var out='\" + (c.strip ? str.replace(/(^|\\r|\\n)\\t* +| +\\t*(\\r|\\n|$)/g,\" \")\n\t\t\t\t\t.replace(/\\r|\\n|\\t|\\/\\*[\\s\\S]*?\\*\\//g,\"\"): str)\n\t\t\t.replace(/'|\\\\/g, \"\\\\$&\")\n\t\t\t.replace(c.interpolate || skip, function(m, code) {\n\t\t\t\treturn cse.start + unescape(code) + cse.end;\n\t\t\t})\n\t\t\t.replace(c.encode || skip, function(m, code) {\n\t\t\t\tneedhtmlencode = true;\n\t\t\t\treturn cse.startencode + unescape(code) + cse.end;\n\t\t\t})\n\t\t\t.replace(c.conditional || skip, function(m, elsecase, code) {\n\t\t\t\treturn elsecase ?\n\t\t\t\t\t(code ? \"';}else if(\" + unescape(code) + \"){out+='\" : \"';}else{out+='\") :\n\t\t\t\t\t(code ? \"';if(\" + unescape(code) + \"){out+='\" : \"';}out+='\");\n\t\t\t})\n\t\t\t.replace(c.iterate || skip, function(m, iterate, vname, iname) {\n\t\t\t\tif (!iterate) return \"';} } out+='\";\n\t\t\t\tsid+=1; indv=iname || \"i\"+sid; iterate=unescape(iterate);\n\t\t\t\treturn \"';var arr\"+sid+\"=\"+iterate+\";if(arr\"+sid+\"){var \"+vname+\",\"+indv+\"=-1,l\"+sid+\"=arr\"+sid+\".length-1;while(\"+indv+\"<l\"+sid+\"){\"\n\t\t\t\t\t+vname+\"=arr\"+sid+\"[\"+indv+\"+=1];out+='\";\n\t\t\t})\n\t\t\t.replace(c.evaluate || skip, function(m, code) {\n\t\t\t\treturn \"';\" + unescape(code) + \"out+='\";\n\t\t\t})\n\t\t\t+ \"';return out;\")\n\t\t\t.replace(/\\n/g, \"\\\\n\").replace(/\\t/g, '\\\\t').replace(/\\r/g, \"\\\\r\")\n\t\t\t.replace(/(\\s|;|\\}|^|\\{)out\\+='';/g, '$1').replace(/\\+''/g, \"\");\n\t\t\t//.replace(/(\\s|;|\\}|^|\\{)out\\+=''\\+/g,'$1out+=');\n\n\t\tif (needhtmlencode) {\n\t\t\tif (!c.selfcontained && _globals && !_globals._encodeHTML) _globals._encodeHTML = doT.encodeHTMLSource(c.doNotSkipEncoded);\n\t\t\tstr = \"var encodeHTML = typeof _encodeHTML !== 'undefined' ? _encodeHTML : (\"\n\t\t\t\t+ doT.encodeHTMLSource.toString() + \"(\" + (c.doNotSkipEncoded || '') + \"));\"\n\t\t\t\t+ str;\n\t\t}\n\t\ttry {\n\t\t\treturn new Function(c.varname, str);\n\t\t} catch (e) {\n\t\t\t/* istanbul ignore else */\n\t\t\tif (typeof console !== \"undefined\") console.log(\"Could not create a template function: \" + str);\n\t\t\tthrow e;\n\t\t}\n\t};\n\n\tdoT.compile = function(tmpl, def) {\n\t\treturn doT.template(tmpl, null, def);\n\t};\n}());\n","(function() {\n  \"use strict\";\n\nfunction immutableInit(config) {\n\n  // https://github.com/facebook/react/blob/v15.0.1/src/isomorphic/classic/element/ReactElement.js#L21\n  var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol.for && Symbol.for('react.element');\n  var REACT_ELEMENT_TYPE_FALLBACK = 0xeac7;\n\n  var globalConfig = {\n    use_static: false\n  };\n  if (isObject(config)) {\n      if (config.use_static !== undefined) {\n          globalConfig.use_static = Boolean(config.use_static);\n      }\n  }\n\n  function isObject(data) {\n    return (\n      typeof data === 'object' &&\n      !Array.isArray(data) &&\n      data !== null\n    );\n  }\n\n  function instantiateEmptyObject(obj) {\n      var prototype = Object.getPrototypeOf(obj);\n      if (!prototype) {\n          return {};\n      } else {\n          return Object.create(prototype);\n      }\n  }\n\n  function addPropertyTo(target, methodName, value) {\n    Object.defineProperty(target, methodName, {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: value\n    });\n  }\n\n  function banProperty(target, methodName) {\n    addPropertyTo(target, methodName, function() {\n      throw new ImmutableError(\"The \" + methodName +\n        \" method cannot be invoked on an Immutable data structure.\");\n    });\n  }\n\n  var immutabilityTag = \"__immutable_invariants_hold\";\n\n  function addImmutabilityTag(target) {\n    addPropertyTo(target, immutabilityTag, true);\n  }\n\n  function isImmutable(target) {\n    if (typeof target === \"object\") {\n      return target === null || Boolean(\n        Object.getOwnPropertyDescriptor(target, immutabilityTag)\n      );\n    } else {\n      // In JavaScript, only objects are even potentially mutable.\n      // strings, numbers, null, and undefined are all naturally immutable.\n      return true;\n    }\n  }\n\n  function isEqual(a, b) {\n    // Avoid false positives due to (NaN !== NaN) evaluating to true\n    return (a === b || (a !== a && b !== b));\n  }\n\n  function isMergableObject(target) {\n    return target !== null && typeof target === \"object\" && !(Array.isArray(target)) && !(target instanceof Date);\n  }\n\n  var mutatingObjectMethods = [\n    \"setPrototypeOf\"\n  ];\n\n  var nonMutatingObjectMethods = [\n    \"keys\"\n  ];\n\n  var mutatingArrayMethods = mutatingObjectMethods.concat([\n    \"push\", \"pop\", \"sort\", \"splice\", \"shift\", \"unshift\", \"reverse\"\n  ]);\n\n  var nonMutatingArrayMethods = nonMutatingObjectMethods.concat([\n    \"map\", \"filter\", \"slice\", \"concat\", \"reduce\", \"reduceRight\"\n  ]);\n\n  var mutatingDateMethods = mutatingObjectMethods.concat([\n    \"setDate\", \"setFullYear\", \"setHours\", \"setMilliseconds\", \"setMinutes\", \"setMonth\", \"setSeconds\",\n    \"setTime\", \"setUTCDate\", \"setUTCFullYear\", \"setUTCHours\", \"setUTCMilliseconds\", \"setUTCMinutes\",\n    \"setUTCMonth\", \"setUTCSeconds\", \"setYear\"\n  ]);\n\n  function ImmutableError(message) {\n    this.name = 'MyError';\n    this.message = message;\n    this.stack = (new Error()).stack;\n  }\n  ImmutableError.prototype = new Error();\n  ImmutableError.prototype.constructor = Error;\n\n  function makeImmutable(obj, bannedMethods) {\n    // Tag it so we can quickly tell it's immutable later.\n    addImmutabilityTag(obj);\n\n    if (\"development\" !== \"production\") {\n      // Make all mutating methods throw exceptions.\n      for (var index in bannedMethods) {\n        if (bannedMethods.hasOwnProperty(index)) {\n          banProperty(obj, bannedMethods[index]);\n        }\n      }\n\n      // Freeze it and return it.\n      Object.freeze(obj);\n    }\n\n    return obj;\n  }\n\n  function makeMethodReturnImmutable(obj, methodName) {\n    var currentMethod = obj[methodName];\n\n    addPropertyTo(obj, methodName, function() {\n      return Immutable(currentMethod.apply(obj, arguments));\n    });\n  }\n\n  function arraySet(idx, value, config) {\n    var deep          = config && config.deep;\n\n    if (idx in this) {\n      if (deep && this[idx] !== value && isMergableObject(value) && isMergableObject(this[idx])) {\n        value = Immutable.merge(this[idx], value, {deep: true, mode: 'replace'});\n      }\n      if (isEqual(this[idx], value)) {\n        return this;\n      }\n    }\n\n    var mutable = asMutableArray.call(this);\n    mutable[idx] = Immutable(value);\n    return makeImmutableArray(mutable);\n  }\n\n  var immutableEmptyArray = Immutable([]);\n\n  function arraySetIn(pth, value, config) {\n    var head = pth[0];\n\n    if (pth.length === 1) {\n      return arraySet.call(this, head, value, config);\n    } else {\n      var tail = pth.slice(1);\n      var thisHead = this[head];\n      var newValue;\n\n      if (typeof(thisHead) === \"object\" && thisHead !== null) {\n        // Might (validly) be object or array\n        newValue = Immutable.setIn(thisHead, tail, value);\n      } else {\n        var nextHead = tail[0];\n        // If the next path part is a number, then we are setting into an array, else an object.\n        if (nextHead !== '' && isFinite(nextHead)) {\n          newValue = arraySetIn.call(immutableEmptyArray, tail, value);\n        } else {\n          newValue = objectSetIn.call(immutableEmptyObject, tail, value);\n        }\n      }\n\n      if (head in this && thisHead === newValue) {\n        return this;\n      }\n\n      var mutable = asMutableArray.call(this);\n      mutable[head] = newValue;\n      return makeImmutableArray(mutable);\n    }\n  }\n\n  function makeImmutableArray(array) {\n    // Don't change their implementations, but wrap these functions to make sure\n    // they always return an immutable value.\n    for (var index in nonMutatingArrayMethods) {\n      if (nonMutatingArrayMethods.hasOwnProperty(index)) {\n        var methodName = nonMutatingArrayMethods[index];\n        makeMethodReturnImmutable(array, methodName);\n      }\n    }\n\n    if (!globalConfig.use_static) {\n      addPropertyTo(array, \"flatMap\",  flatMap);\n      addPropertyTo(array, \"asObject\", asObject);\n      addPropertyTo(array, \"asMutable\", asMutableArray);\n      addPropertyTo(array, \"set\", arraySet);\n      addPropertyTo(array, \"setIn\", arraySetIn);\n      addPropertyTo(array, \"update\", update);\n      addPropertyTo(array, \"updateIn\", updateIn);\n      addPropertyTo(array, \"getIn\", getIn);\n    }\n\n    for(var i = 0, length = array.length; i < length; i++) {\n      array[i] = Immutable(array[i]);\n    }\n\n    return makeImmutable(array, mutatingArrayMethods);\n  }\n\n  function makeImmutableDate(date) {\n    if (!globalConfig.use_static) {\n      addPropertyTo(date, \"asMutable\", asMutableDate);\n    }\n\n    return makeImmutable(date, mutatingDateMethods);\n  }\n\n  function asMutableDate() {\n    return new Date(this.getTime());\n  }\n\n  /**\n   * Effectively performs a map() over the elements in the array, using the\n   * provided iterator, except that whenever the iterator returns an array, that\n   * array's elements are added to the final result instead of the array itself.\n   *\n   * @param {function} iterator - The iterator function that will be invoked on each element in the array. It will receive three arguments: the current value, the current index, and the current object.\n   */\n  function flatMap(iterator) {\n    // Calling .flatMap() with no arguments is a no-op. Don't bother cloning.\n    if (arguments.length === 0) {\n      return this;\n    }\n\n    var result = [],\n        length = this.length,\n        index;\n\n    for (index = 0; index < length; index++) {\n      var iteratorResult = iterator(this[index], index, this);\n\n      if (Array.isArray(iteratorResult)) {\n        // Concatenate Array results into the return value we're building up.\n        result.push.apply(result, iteratorResult);\n      } else {\n        // Handle non-Array results the same way map() does.\n        result.push(iteratorResult);\n      }\n    }\n\n    return makeImmutableArray(result);\n  }\n\n  /**\n   * Returns an Immutable copy of the object without the given keys included.\n   *\n   * @param {array} keysToRemove - A list of strings representing the keys to exclude in the return value. Instead of providing a single array, this method can also be called by passing multiple strings as separate arguments.\n   */\n  function without(remove) {\n    // Calling .without() with no arguments is a no-op. Don't bother cloning.\n    if (typeof remove === \"undefined\" && arguments.length === 0) {\n      return this;\n    }\n\n    if (typeof remove !== \"function\") {\n      // If we weren't given an array, use the arguments list.\n      var keysToRemoveArray = (Array.isArray(remove)) ?\n         remove.slice() : Array.prototype.slice.call(arguments);\n\n      // Convert numeric keys to strings since that's how they'll\n      // come from the enumeration of the object.\n      keysToRemoveArray.forEach(function(el, idx, arr) {\n        if(typeof(el) === \"number\") {\n          arr[idx] = el.toString();\n        }\n      });\n\n      remove = function(val, key) {\n        return keysToRemoveArray.indexOf(key) !== -1;\n      };\n    }\n\n    var result = instantiateEmptyObject(this);\n\n    for (var key in this) {\n      if (this.hasOwnProperty(key) && remove(this[key], key) === false) {\n        result[key] = this[key];\n      }\n    }\n\n    return makeImmutableObject(result);\n  }\n\n  function asMutableArray(opts) {\n    var result = [], i, length;\n\n    if(opts && opts.deep) {\n      for(i = 0, length = this.length; i < length; i++) {\n        result.push(asDeepMutable(this[i]));\n      }\n    } else {\n      for(i = 0, length = this.length; i < length; i++) {\n        result.push(this[i]);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Effectively performs a [map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map) over the elements in the array, expecting that the iterator function\n   * will return an array of two elements - the first representing a key, the other\n   * a value. Then returns an Immutable Object constructed of those keys and values.\n   *\n   * @param {function} iterator - A function which should return an array of two elements - the first representing the desired key, the other the desired value.\n   */\n  function asObject(iterator) {\n    // If no iterator was provided, assume the identity function\n    // (suggesting this array is already a list of key/value pairs.)\n    if (typeof iterator !== \"function\") {\n      iterator = function(value) { return value; };\n    }\n\n    var result = {},\n        length = this.length,\n        index;\n\n    for (index = 0; index < length; index++) {\n      var pair  = iterator(this[index], index, this),\n          key   = pair[0],\n          value = pair[1];\n\n      result[key] = value;\n    }\n\n    return makeImmutableObject(result);\n  }\n\n  function asDeepMutable(obj) {\n    if (\n      (!obj) ||\n      (typeof obj !== 'object') ||\n      (!Object.getOwnPropertyDescriptor(obj, immutabilityTag)) ||\n      (obj instanceof Date)\n    ) { return obj; }\n    return Immutable.asMutable(obj, {deep: true});\n  }\n\n  function quickCopy(src, dest) {\n    for (var key in src) {\n      if (Object.getOwnPropertyDescriptor(src, key)) {\n        dest[key] = src[key];\n      }\n    }\n\n    return dest;\n  }\n\n  /**\n   * Returns an Immutable Object containing the properties and values of both\n   * this object and the provided object, prioritizing the provided object's\n   * values whenever the same key is present in both objects.\n   *\n   * @param {object} other - The other object to merge. Multiple objects can be passed as an array. In such a case, the later an object appears in that list, the higher its priority.\n   * @param {object} config - Optional config object that contains settings. Supported settings are: {deep: true} for deep merge and {merger: mergerFunc} where mergerFunc is a function\n   *                          that takes a property from both objects. If anything is returned it overrides the normal merge behaviour.\n   */\n  function merge(other, config) {\n    // Calling .merge() with no arguments is a no-op. Don't bother cloning.\n    if (arguments.length === 0) {\n      return this;\n    }\n\n    if (other === null || (typeof other !== \"object\")) {\n      throw new TypeError(\"Immutable#merge can only be invoked with objects or arrays, not \" + JSON.stringify(other));\n    }\n\n    var receivedArray = (Array.isArray(other)),\n        deep          = config && config.deep,\n        mode          = config && config.mode || 'merge',\n        merger        = config && config.merger,\n        result;\n\n    // Use the given key to extract a value from the given object, then place\n    // that value in the result object under the same key. If that resulted\n    // in a change from this object's value at that key, set anyChanges = true.\n    function addToResult(currentObj, otherObj, key) {\n      var immutableValue = Immutable(otherObj[key]);\n      var mergerResult = merger && merger(currentObj[key], immutableValue, config);\n      var currentValue = currentObj[key];\n\n      if ((result !== undefined) ||\n        (mergerResult !== undefined) ||\n        (!currentObj.hasOwnProperty(key)) ||\n        !isEqual(immutableValue, currentValue)) {\n\n        var newValue;\n\n        if (mergerResult !== undefined) {\n          newValue = mergerResult;\n        } else if (deep && isMergableObject(currentValue) && isMergableObject(immutableValue)) {\n          newValue = Immutable.merge(currentValue, immutableValue, config);\n        } else {\n          newValue = immutableValue;\n        }\n\n        if (!isEqual(currentValue, newValue) || !currentObj.hasOwnProperty(key)) {\n          if (result === undefined) {\n            // Make a shallow clone of the current object.\n            result = quickCopy(currentObj, instantiateEmptyObject(currentObj));\n          }\n\n          result[key] = newValue;\n        }\n      }\n    }\n\n    function clearDroppedKeys(currentObj, otherObj) {\n      for (var key in currentObj) {\n        if (!otherObj.hasOwnProperty(key)) {\n          if (result === undefined) {\n            // Make a shallow clone of the current object.\n            result = quickCopy(currentObj, instantiateEmptyObject(currentObj));\n          }\n          delete result[key];\n        }\n      }\n    }\n\n    var key;\n\n    // Achieve prioritization by overriding previous values that get in the way.\n    if (!receivedArray) {\n      // The most common use case: just merge one object into the existing one.\n      for (key in other) {\n        if (Object.getOwnPropertyDescriptor(other, key)) {\n          addToResult(this, other, key);\n        }\n      }\n      if (mode === 'replace') {\n        clearDroppedKeys(this, other);\n      }\n    } else {\n      // We also accept an Array\n      for (var index = 0, length = other.length; index < length; index++) {\n        var otherFromArray = other[index];\n\n        for (key in otherFromArray) {\n          if (otherFromArray.hasOwnProperty(key)) {\n            addToResult(result !== undefined ? result : this, otherFromArray, key);\n          }\n        }\n      }\n    }\n\n    if (result === undefined) {\n      return this;\n    } else {\n      return makeImmutableObject(result);\n    }\n  }\n\n  function objectReplace(value, config) {\n    var deep          = config && config.deep;\n\n    // Calling .replace() with no arguments is a no-op. Don't bother cloning.\n    if (arguments.length === 0) {\n      return this;\n    }\n\n    if (value === null || typeof value !== \"object\") {\n      throw new TypeError(\"Immutable#replace can only be invoked with objects or arrays, not \" + JSON.stringify(value));\n    }\n\n    return Immutable.merge(this, value, {deep: deep, mode: 'replace'});\n  }\n\n  var immutableEmptyObject = Immutable({});\n\n  function objectSetIn(path, value, config) {\n    if (!(Array.isArray(path)) || path.length === 0) {\n      throw new TypeError(\"The first argument to Immutable#setIn must be an array containing at least one \\\"key\\\" string.\");\n    }\n\n    var head = path[0];\n    if (path.length === 1) {\n      return objectSet.call(this, head, value, config);\n    }\n\n    var tail = path.slice(1);\n    var newValue;\n    var thisHead = this[head];\n\n    if (this.hasOwnProperty(head) && typeof(thisHead) === \"object\" && thisHead !== null) {\n      // Might (validly) be object or array\n      newValue = Immutable.setIn(thisHead, tail, value);\n    } else {\n      newValue = objectSetIn.call(immutableEmptyObject, tail, value);\n    }\n\n    if (this.hasOwnProperty(head) && thisHead === newValue) {\n      return this;\n    }\n\n    var mutable = quickCopy(this, instantiateEmptyObject(this));\n    mutable[head] = newValue;\n    return makeImmutableObject(mutable);\n  }\n\n  function objectSet(property, value, config) {\n    var deep          = config && config.deep;\n\n    if (this.hasOwnProperty(property)) {\n      if (deep && this[property] !== value && isMergableObject(value) && isMergableObject(this[property])) {\n        value = Immutable.merge(this[property], value, {deep: true, mode: 'replace'});\n      }\n      if (isEqual(this[property], value)) {\n        return this;\n      }\n    }\n\n    var mutable = quickCopy(this, instantiateEmptyObject(this));\n    mutable[property] = Immutable(value);\n    return makeImmutableObject(mutable);\n  }\n\n  function update(property, updater) {\n    var restArgs = Array.prototype.slice.call(arguments, 2);\n    var initialVal = this[property];\n    return Immutable.set(this, property, updater.apply(initialVal, [initialVal].concat(restArgs)));\n  }\n\n  function getInPath(obj, path) {\n    /*jshint eqnull:true */\n    for (var i = 0, l = path.length; obj != null && i < l; i++) {\n      obj = obj[path[i]];\n    }\n\n    return (i && i == l) ? obj : undefined;\n  }\n\n  function updateIn(path, updater) {\n    var restArgs = Array.prototype.slice.call(arguments, 2);\n    var initialVal = getInPath(this, path);\n\n    return Immutable.setIn(this, path, updater.apply(initialVal, [initialVal].concat(restArgs)));\n  }\n\n  function getIn(path, defaultValue) {\n    var value = getInPath(this, path);\n    return value === undefined ? defaultValue : value;\n  }\n\n  function asMutableObject(opts) {\n    var result = instantiateEmptyObject(this), key;\n\n    if(opts && opts.deep) {\n      for (key in this) {\n        if (this.hasOwnProperty(key)) {\n          result[key] = asDeepMutable(this[key]);\n        }\n      }\n    } else {\n      for (key in this) {\n        if (this.hasOwnProperty(key)) {\n          result[key] = this[key];\n        }\n      }\n    }\n\n    return result;\n  }\n\n  // Creates plain object to be used for cloning\n  function instantiatePlainObject() {\n    return {};\n  }\n\n  // Finalizes an object with immutable methods, freezes it, and returns it.\n  function makeImmutableObject(obj) {\n    if (!globalConfig.use_static) {\n      addPropertyTo(obj, \"merge\", merge);\n      addPropertyTo(obj, \"replace\", objectReplace);\n      addPropertyTo(obj, \"without\", without);\n      addPropertyTo(obj, \"asMutable\", asMutableObject);\n      addPropertyTo(obj, \"set\", objectSet);\n      addPropertyTo(obj, \"setIn\", objectSetIn);\n      addPropertyTo(obj, \"update\", update);\n      addPropertyTo(obj, \"updateIn\", updateIn);\n      addPropertyTo(obj, \"getIn\", getIn);\n    }\n\n    return makeImmutable(obj, mutatingObjectMethods);\n  }\n\n  // Returns true if object is a valid react element\n  // https://github.com/facebook/react/blob/v15.0.1/src/isomorphic/classic/element/ReactElement.js#L326\n  function isReactElement(obj) {\n    return typeof obj === 'object' &&\n           obj !== null &&\n           (obj.$$typeof === REACT_ELEMENT_TYPE_FALLBACK || obj.$$typeof === REACT_ELEMENT_TYPE);\n  }\n\n  function isFileObject(obj) {\n    return typeof File !== 'undefined' &&\n           obj instanceof File;\n  }\n\n  function isBlobObject(obj) {\n    return typeof Blob !== 'undefined' &&\n           obj instanceof Blob;\n  }\n\n  function isPromise(obj) {\n    return typeof obj === 'object' &&\n           typeof obj.then === 'function';\n  }\n\n  function isError(obj) {\n    return obj instanceof Error;\n  }\n\n  function Immutable(obj, options, stackRemaining) {\n    if (isImmutable(obj) || isReactElement(obj) || isFileObject(obj) || isBlobObject(obj) || isError(obj)) {\n      return obj;\n    } else if (isPromise(obj)) {\n      return obj.then(Immutable);\n    } else if (Array.isArray(obj)) {\n      return makeImmutableArray(obj.slice());\n    } else if (obj instanceof Date) {\n      return makeImmutableDate(new Date(obj.getTime()));\n    } else {\n      // Don't freeze the object we were given; make a clone and use that.\n      var prototype = options && options.prototype;\n      var instantiateEmptyObject =\n        (!prototype || prototype === Object.prototype) ?\n          instantiatePlainObject : (function() { return Object.create(prototype); });\n      var clone = instantiateEmptyObject();\n\n      if (\"development\" !== \"production\") {\n        /*jshint eqnull:true */\n        if (stackRemaining == null) {\n          stackRemaining = 64;\n        }\n        if (stackRemaining <= 0) {\n          throw new ImmutableError(\"Attempt to construct Immutable from a deeply nested object was detected.\" +\n            \" Have you tried to wrap an object with circular references (e.g. React element)?\" +\n            \" See https://github.com/rtfeldman/seamless-immutable/wiki/Deeply-nested-object-was-detected for details.\");\n        }\n        stackRemaining -= 1;\n      }\n\n      for (var key in obj) {\n        if (Object.getOwnPropertyDescriptor(obj, key)) {\n          clone[key] = Immutable(obj[key], undefined, stackRemaining);\n        }\n      }\n\n      return makeImmutableObject(clone);\n    }\n  }\n\n  // Wrapper to allow the use of object methods as static methods of Immutable.\n  function toStatic(fn) {\n    function staticWrapper() {\n      var args = [].slice.call(arguments);\n      var self = args.shift();\n      return fn.apply(self, args);\n    }\n\n    return staticWrapper;\n  }\n\n  // Wrapper to allow the use of object methods as static methods of Immutable.\n  // with the additional condition of choosing which function to call depending\n  // if argument is an array or an object.\n  function toStaticObjectOrArray(fnObject, fnArray) {\n    function staticWrapper() {\n      var args = [].slice.call(arguments);\n      var self = args.shift();\n      if (Array.isArray(self)) {\n          return fnArray.apply(self, args);\n      } else {\n          return fnObject.apply(self, args);\n      }\n    }\n\n    return staticWrapper;\n  }\n\n  // Wrapper to allow the use of object methods as static methods of Immutable.\n  // with the additional condition of choosing which function to call depending\n  // if argument is an array or an object or a date.\n  function toStaticObjectOrDateOrArray(fnObject, fnArray, fnDate) {\n    function staticWrapper() {\n      var args = [].slice.call(arguments);\n      var self = args.shift();\n      if (Array.isArray(self)) {\n          return fnArray.apply(self, args);\n      } else if (self instanceof Date) {\n          return fnDate.apply(self, args);\n      } else {\n          return fnObject.apply(self, args);\n      }\n    }\n\n    return staticWrapper;\n  }\n\n  // Export the library\n  Immutable.from           = Immutable;\n  Immutable.isImmutable    = isImmutable;\n  Immutable.ImmutableError = ImmutableError;\n  Immutable.merge          = toStatic(merge);\n  Immutable.replace        = toStatic(objectReplace);\n  Immutable.without        = toStatic(without);\n  Immutable.asMutable      = toStaticObjectOrDateOrArray(asMutableObject, asMutableArray, asMutableDate);\n  Immutable.set            = toStaticObjectOrArray(objectSet, arraySet);\n  Immutable.setIn          = toStaticObjectOrArray(objectSetIn, arraySetIn);\n  Immutable.update         = toStatic(update);\n  Immutable.updateIn       = toStatic(updateIn);\n  Immutable.getIn          = toStatic(getIn);\n  Immutable.flatMap        = toStatic(flatMap);\n  Immutable.asObject       = toStatic(asObject);\n  if (!globalConfig.use_static) {\n      Immutable.static = immutableInit({\n          use_static: true\n      });\n  }\n\n  Object.freeze(Immutable);\n\n  return Immutable;\n}\n\n  var Immutable = immutableInit();\n  /* istanbul ignore if */\n  if (typeof define === 'function' && define.amd) {\n    define(function() {\n      return Immutable;\n    });\n  } else if (typeof module === \"object\") {\n    module.exports = Immutable;\n  } else if (typeof exports === \"object\") {\n    exports.Immutable = Immutable;\n  } else if (typeof window === \"object\") {\n    window.Immutable = Immutable;\n  } else if (typeof global === \"object\") {\n    global.Immutable = Immutable;\n  }\n})();\n"],"sourceRoot":""}