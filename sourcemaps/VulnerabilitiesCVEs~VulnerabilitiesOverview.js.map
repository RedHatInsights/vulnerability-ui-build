{"version":3,"sources":["webpack:///./src/Components/PresentationalComponents/ChangesSinceLastLoginCard/ChangesSinceLastLoginCard.js","webpack:///./src/Components/PresentationalComponents/CurrentVulnerabilitiesCard/CurrentVulnerabilitiesCard.js","webpack:///./src/Components/PresentationalComponents/TrendBox/TrendBox.js","webpack:///./src/Components/PresentationalComponents/TrendBox/TrendBox.scss","webpack:///./src/Store/Actions/ChangesActions.js","webpack:///./src/Store/Reducers/ChangesStore.js"],"names":["ChangesSinceLastLoginCard","props","fetchData","changesSinceLastLogin","isLoading","newVulnerabilities","number","percentage","direction","newlyAffectedSystems","remediatedCVEs","newlySecuredSystems","React","Component","propTypesTrendBox","propTypes","shape","string","bool","func","mapStateToProps","state","ChangesStore","mapDispatchToProps","dispatch","CurrentVulnerabilitiesCard","vulnerabilitiesNumber","systemsAndGroups","getSnippets","arrowIcon","color","classes","value","icon","label","TrendBox","snippets","ActionTypes","ReducerRegistry","register","fetchChangesSinceLastLogin","type","FETCH_CHANGES_SINCE_LAST_LOGIN","payload","Promise","resolve","initialState","action","newState","setIn"],"mappings":"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","file":"js/VulnerabilitiesCVEs~VulnerabilitiesOverview.js","sourcesContent":["import React from 'react';\nimport { Title, Card, CardHeader, CardBody, Split, SplitItem } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport TrendBox from '../TrendBox/TrendBox';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { fetchChangesSinceLastLogin } from '../../../Store/Actions/ChangesActions';\nimport WithLoader from '../WithLoader/WithLoader';\n\nclass ChangesSinceLastLoginCard extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.props.fetchData();\n    }\n    render() {\n        return (\n            <Card id=\"current-vulnerabilities\">\n                <CardHeader>\n                    <Title size=\"lg\">Changes since last login</Title>\n                </CardHeader>\n                <CardBody>\n                    <WithLoader isLoading={this.props.changesSinceLastLogin.isLoading}>\n                        <Split gutter=\"lg\">\n                            <SplitItem variant=\"primary\">\n                                <TrendBox\n                                    number={this.props.changesSinceLastLogin.newVulnerabilities.number}\n                                    percentage={this.props.changesSinceLastLogin.newVulnerabilities.percentage}\n                                    direction={this.props.changesSinceLastLogin.newVulnerabilities.direction}\n                                    label={'New Vulnerabilities'}\n                                />\n                            </SplitItem>\n                            <SplitItem variant=\"primary\">\n                                <TrendBox\n                                    number={this.props.changesSinceLastLogin.newlyAffectedSystems.number}\n                                    percentage={this.props.changesSinceLastLogin.newlyAffectedSystems.percentage}\n                                    direction={this.props.changesSinceLastLogin.newlyAffectedSystems.direction}\n                                    label={'Newly affected Systems/Groups'}\n                                />\n                            </SplitItem>\n                            <SplitItem variant=\"primary\">\n                                <TrendBox\n                                    number={this.props.changesSinceLastLogin.remediatedCVEs.number}\n                                    percentage={this.props.changesSinceLastLogin.remediatedCVEs.percentage}\n                                    direction={this.props.changesSinceLastLogin.remediatedCVEs.direction}\n                                    label={'Remediated CVEs'}\n                                />\n                            </SplitItem>\n                            <SplitItem variant=\"primary\">\n                                <TrendBox\n                                    number={this.props.changesSinceLastLogin.newlySecuredSystems.number}\n                                    percentage={this.props.changesSinceLastLogin.newlySecuredSystems.percentage}\n                                    direction={this.props.changesSinceLastLogin.newlySecuredSystems.direction}\n                                    label={'Newly secured Systems/Groups'}\n                                />\n                            </SplitItem>\n                        </Split>\n                    </WithLoader>\n                </CardBody>\n            </Card>\n        );\n    }\n}\n\nconst propTypesTrendBox = propTypes.shape({\n    number: propTypes.number,\n    percentage: propTypes.number,\n    direction: propTypes.string\n});\n\nChangesSinceLastLoginCard.propTypes = {\n    changesSinceLastLogin: propTypes.shape({\n        newVulnerabilities: propTypesTrendBox,\n        newlyAffectedSystems: propTypesTrendBox,\n        remediatedCVEs: propTypesTrendBox,\n        newlySecuredSystems: propTypesTrendBox,\n        isLoading: propTypes.bool\n    }),\n    fetchData: propTypes.func\n};\n\nfunction mapStateToProps(state) {\n    return {\n        changesSinceLastLogin: {\n            newVulnerabilities: state.ChangesStore.changesSinceLastLogin.newVulnerabilities,\n            newlyAffectedSystems: state.ChangesStore.changesSinceLastLogin.newlyAffectedSystems,\n            remediatedCVEs: state.ChangesStore.changesSinceLastLogin.remediatedCVEs,\n            newlySecuredSystems: state.ChangesStore.changesSinceLastLogin.newlySecuredSystems,\n            isLoading: state.ChangesStore.changesSinceLastLogin.isLoading\n        }\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchData: () => dispatch(fetchChangesSinceLastLogin())\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(ChangesSinceLastLoginCard)\n);\n","import React from 'react';\nimport { Grid, GridItem, Title, Card, CardHeader, CardBody, Bullseye } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\n\nconst CurrentVulnerabilitiesCard = props => {\n    return (\n        <Card id=\"current-vulnerabilities\">\n            <CardHeader>\n                <Title size=\"lg\">Current Vulnerabilities</Title>\n            </CardHeader>\n            <CardBody>\n                <Grid>\n                    <GridItem span={5} className=\"number\">\n                        {props.vulnerabilitiesNumber}\n                    </GridItem>\n                    <GridItem span={7}>\n                        <Bullseye className=\"text\">Vulnerabilities</Bullseye>\n                    </GridItem>\n                    <GridItem span={5} className=\"number\">\n                        {props.systemsAndGroups}\n                    </GridItem>\n                    <GridItem span={7} className=\"text\">\n                        <Bullseye className=\"text\">Systems & Groups</Bullseye>\n                    </GridItem>\n                </Grid>\n            </CardBody>\n        </Card>\n    );\n};\n\nCurrentVulnerabilitiesCard.propTypes = {\n    vulnerabilitiesNumber: propTypes.number,\n    systemsAndGroups: propTypes.number\n};\n\nexport default CurrentVulnerabilitiesCard;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Grid, GridItem, Split, SplitItem } from '@patternfly/react-core';\nimport './TrendBox.scss';\n\nfunction getSnippets(props) {\n    let arrowIcon;\n    let color;\n    if (props.direction === 'up') {\n        arrowIcon = 'fa fa-arrow-up';\n        color = 'trendbox-red';\n    } else if (props.direction === 'down') {\n        arrowIcon = 'fa fa-arrow-down';\n        color = 'trendbox-green';\n    } else {\n        color = 'trendbox-gray';\n        arrowIcon = 'fa fa-arrows-h';\n    }\n\n    return {\n        number: {\n            classes: 'trendbox-number ' + color,\n            value: props.number\n        },\n        percentage: {\n            classes: 'trendbox-percentage',\n            icon: arrowIcon + ' ' + color,\n            value: props.percentage + '%'\n        },\n        label: {\n            classes: 'trendbox-text',\n            value: props.label\n        }\n    };\n}\n\nconst TrendBox = props => {\n    let snippets = getSnippets(props);\n    return (\n        <Grid className=\"trend-box\" gutter={'sm'}>\n            <Split>\n                <SplitItem variant=\"secondary\" className={snippets.number.classes}>\n                    <span className=\"push-bottom\">{snippets.number.value}</span>\n                </SplitItem>\n                <SplitItem variant=\"primary\" span={6} className={snippets.percentage.classes}>\n                    <span className=\"push-bottom\">\n                        <i className={snippets.percentage.icon} />\n                        {snippets.percentage.value}\n                    </span>\n                </SplitItem>\n            </Split>\n            <GridItem span={12} className=\"trendbox-text\">\n                {snippets.label.value}\n            </GridItem>\n        </Grid>\n    );\n};\n\nTrendBox.propTypes = {\n    number: propTypes.number,\n    percentage: propTypes.number,\n    direction: propTypes.string,\n    label: propTypes.string\n};\n\nexport default TrendBox;\n","// extracted by mini-css-extract-plugin","import * as ActionTypes from '../ActionTypes';\nimport ReducerRegistry from '../../Utilities/ReducerRegistry';\nimport { ChangesStore } from '../Reducers/ChangesStore';\n\nReducerRegistry.register({ ChangesStore });\n\nexport const fetchChangesSinceLastLogin = () => ({\n    type: ActionTypes.FETCH_CHANGES_SINCE_LAST_LOGIN,\n    payload: new Promise(resolve => {\n        resolve(fetchData);\n    })\n});\n\nfunction fetchData() {\n    return {\n        newVulnerabilities: {\n            number: 9,\n            percentage: 50,\n            direction: 'up'\n        },\n        newlyAffectedSystems: {\n            number: 0,\n            percentage: 0,\n            direction: ''\n        },\n        remediatedCVEs: {\n            number: 23,\n            percentage: 50,\n            direction: 'down'\n        },\n        newlySecuredSystems: {\n            number: 21,\n            percentage: 44,\n            direction: 'down'\n        }\n    };\n}\n","import * as ActionTypes from '../../Store/ActionTypes';\nimport Immutable from 'seamless-immutable';\n\n// Initial State\nconst initialState = Immutable({\n    changesSinceLastLogin: {\n        isLoading: true,\n        newVulnerabilities: {\n            number: 0,\n            percentage: 0,\n            direction: ''\n        },\n        newlyAffectedSystems: {\n            number: 0,\n            percentage: 0,\n            direction: ''\n        },\n        remediatedCVEs: {\n            number: 0,\n            percentage: 0,\n            direction: ''\n        },\n        newlySecuredSystems: {\n            number: 0,\n            percentage: 0,\n            direction: ''\n        }\n    }\n});\n\n// Reducer\nexport const ChangesStore = (state = initialState, action) => {\n    let newState;\n    switch (action.type) {\n        case ActionTypes.FETCH_CHANGES_SINCE_LAST_LOGIN + '_PENDING':\n            newState = state.setIn(['changesSinceLastLogin', 'isLoading'], true);\n            return newState;\n\n        case ActionTypes.FETCH_CHANGES_SINCE_LAST_LOGIN + '_FULFILLED':\n            newState = state.setIn(['changesSinceLastLogin'], action.payload);\n            newState = newState.setIn(['changesSinceLastLogin', 'isLoading'], false);\n            return newState;\n\n        default:\n            return state;\n    }\n};\n"],"sourceRoot":""}