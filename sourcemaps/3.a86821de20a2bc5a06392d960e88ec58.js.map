{"version":3,"file":"js/3.df167ad6426e1d53896a.js","mappings":"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","sources":["webpack:///./src/Components/PresentationalComponents/CSAwRuleBox/CSAwRuleSummary.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/SecurityRuleFilter.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/StatusFilter.js","webpack:///./src/Components/PresentationalComponents/Snippets/GroupedCVELabels.js","webpack:///./src/Components/PresentationalComponents/Snippets/KnownExploitLabel.js","webpack:///./src/Components/SmartComponents/Modals/BaseModal.js"],"sourcesContent":["/* eslint-disable react/no-danger */\nimport React from 'react';\nimport marked from 'marked';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport sanitizeHtml from 'sanitize-html';\nimport { Truncate } from '@redhat-cloud-services/frontend-components/Truncate';\nimport { StackItem, TextContent } from '@patternfly/react-core';\nimport { TRUNCATE_TEXT_THRESHOLD } from '../../../Helpers/constants';\nimport messages from '../../../Messages';\n\n/**\n * extend marked's renderer in order to open link in new tab\n */\nlet renderer = new marked.Renderer();\nrenderer.link = function() {\n    let link = marked.Renderer.prototype.link.apply(this, arguments);\n    return link.replace('<a', '<a target=\\'_blank\\'');\n};\n\nmarked.setOptions({ renderer });\n\nconst CSAwRuleSummary = ({ text, truncate, intl, ...props }) => {\n    const dangerousHtml = (text) => ({ __html: sanitizeHtml(text) });\n\n    return (text &&\n        <StackItem {...props}>\n            <TextContent className=\"rule-description\">\n                {truncate && text.length > TRUNCATE_TEXT_THRESHOLD\n                    ? (\n                        <Truncate\n                            length={TRUNCATE_TEXT_THRESHOLD}\n                            expandText={intl.formatMessage(messages.readMore)}\n                            collapseText={intl.formatMessage(messages.readLess)}\n                            text={marked(text)}\n                            spaceBetween\n                        />\n                    ) : (\n                        <span dangerouslySetInnerHTML={dangerousHtml(marked(text))} />\n                    )\n                }\n            </TextContent>\n        </StackItem>\n    );\n\n};\n\nCSAwRuleSummary.defaultProps = {\n    truncate: true,\n    link: null\n};\n\nCSAwRuleSummary.propTypes = {\n    intl: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.object\n    ]),\n    truncate: PropTypes.bool,\n    text: PropTypes.string.isRequired\n};\n\nexport default injectIntl(CSAwRuleSummary);\n","\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { RULE_PRESENCE_OPTIONS } from '../../../../Helpers/constants';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\nimport unionWith from 'lodash/unionWith';\nimport isEqual from 'lodash/isEqual';\n\nconst securityRuleFilter = (apply, currentFilter = {}, dynamicFilters = [], { ...config }) => {\n    let currentValue = [];\n    if (currentFilter.rule_presence) {\n        currentValue = currentValue.concat(currentFilter.rule_presence.split(','));\n    }\n\n    if (currentFilter.rule) {\n        currentValue = currentValue.concat(currentFilter.rule.split(','));\n    }\n\n    const filterBySecurityRule = values => {\n\n        apply({\n            ...config.isDynamic && { rule: values.join(',') || undefined },\n            ...!config.isDynamic && { rule_presence: values.join(',') || undefined },\n            page: 1\n        });\n    };\n\n    const dropdownItems\t= () => {\n        const items = config.dropdownItems ? config.dropdownItems : RULE_PRESENCE_OPTIONS;\n\n        return unionWith(items, dynamicFilters, isEqual).map(({ label, value }) => ({ label, value }));\n    };\n\n    return {\n        label: intl.formatMessage(messages.filterSecurityRules),\n        type: conditionalFilterType.checkbox,\n        filterValues: {\n            onChange: (event, value) => {\n                filterBySecurityRule(value);\n            },\n            items: dropdownItems(),\n            value: currentValue\n        }\n    };\n};\n\nexport default securityRuleFilter;\n","\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { STATUS_OPTIONS } from '../../../../Helpers/constants';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\n\nconst statusFilter = (apply, currentFilter = {}) => {\n\n    let { status_id: currentValue } = currentFilter;\n\n    const filterByStatus = values => {\n        apply({ status_id: (values.length > '0' && values.filter(value => value !== ',').join(',')) || '', page: 1 });\n    };\n\n    return {\n        label: intl.formatMessage(messages.filterStatus),\n        type: conditionalFilterType.checkbox,\n        filterValues: {\n            onChange: (event, value) => {\n                filterByStatus(value);\n            },\n            items: STATUS_OPTIONS.map(item => ({ label: item.label, value: item.value })),\n            value: (currentValue ? currentValue.split(',') : [])\n        }\n    };\n};\n\nexport default statusFilter;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { LabelGroup } from '@patternfly/react-core';\nimport KnownExploitLabel from './KnownExploitLabel';\nimport CSAwLabel from './CSAwLabel';\n\nconst GroupedCVELabels = ({ hasExploit, hasRule }) =>\n    (hasExploit || hasRule) && (\n        <LabelGroup className=\"pf-u-mt-xs cve-labels-grouped--nowrap\">\n            {hasExploit && <KnownExploitLabel/>}\n            {hasRule && <CSAwLabel/>}\n        </LabelGroup>\n    );\n\nGroupedCVELabels.propTypes = {\n    hasExploit: propTypes.bool.isRequired,\n    hasRule: propTypes.bool.isRequired\n};\n\nexport default GroupedCVELabels;\n","import React from 'react';\nimport { Label, Tooltip } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst KnownExploitLabel = ({ style, className }) => (\n    <Tooltip content={<FormattedMessage {...messages.knownExploitDescription} />}>\n        <Label color=\"red\" style={{ ...style }} className={['cve-labels', className]}>\n            <FormattedMessage {...messages.filterKnownExploit} />\n        </Label>\n    </Tooltip>\n);\n\nKnownExploitLabel.propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string\n};\n\nexport default KnownExploitLabel;\n","import { Button, FormGroup, FormSelect, FormSelectOption, Modal, TextArea } from '@patternfly/react-core';\nimport {\n    addNotification,\n    clearNotifications\n} from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport propTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ReadOnlyNotification, STATUS_OPTIONS } from '../../../Helpers/constants';\nimport messages from '../../../Messages';\nimport { FormattedMessage } from 'react-intl';\n\nexport function useStatusSelect(initialValue) {\n    const [statusId, setStatusId] = useState(initialValue);\n    const [props, setProps] = useState({});\n\n    const StatusSelect = (\n        <FormGroup label={<FormattedMessage {...messages.statusLabel} />} fieldId={'statusId'}>\n            <FormSelect aria-label=\"Select Input\" onChange={selection => setStatusId(selection)} value={statusId} {...props}>\n                {STATUS_OPTIONS.map(({ value, label }) => (\n                    <FormSelectOption key={value} value={value} label={label} />\n                ))}\n            </FormSelect>\n        </FormGroup>\n    );\n\n    return { StatusSelect, statusId, setStatusId, setProps };\n}\n\nexport function useJustificationInput(initialValue) {\n    const [justification, setJustification] = useState(initialValue);\n    const [props, setProps] = useState({});\n\n    const JustificationInput = (\n        <FormGroup label={<FormattedMessage {...messages.justificationLabel} />} fieldId={'label'}>\n            <TextArea\n                key=\"input\"\n                type=\"text\"\n                onChange={value => setJustification(value)}\n                value={justification}\n                resizeOrientation=\"vertical\"\n                aria-label={'justification note'}\n                style={{ minHeight: '2.25rem' }}\n                {...props}\n            />\n        </FormGroup>\n    );\n    return { JustificationInput, justification, setJustification, setProps };\n}\n\nexport const BaseModal = ({ items, title, onSave, onSuccessNotification, onFailureNotification, ouiaId, children }) => {\n    const [targetItems, setTargetItems] = useState(items);\n\n    const dispatch = useDispatch();\n\n    const handleClose = () => {\n        setTargetItems(undefined);\n    };\n\n    const handleSave = () => {\n        onSave()\n            .then(() => dispatch(addNotification(onSuccessNotification)))\n            .catch((error) => dispatch(addNotification(error.status === '503' ? ReadOnlyNotification : onFailureNotification)));\n        handleClose();\n    };\n\n    useEffect(() => {\n        return () => {\n            dispatch(clearNotifications());\n        };\n    }, [dispatch]);\n\n    return (\n        <Modal\n            variant=\"small\"\n            title={title}\n            isOpen={Boolean(targetItems)}\n            onClose={handleClose}\n            actions={[\n                <Button key=\"save\" variant=\"primary\" ouiaId=\"save\" onClick={handleSave}>\n                    {<FormattedMessage {...messages.save} />}\n                </Button>,\n                <Button key=\"cancel\" variant=\"secondary\" ouiaId=\"close\" onClick={handleClose}>\n                    {<FormattedMessage {...messages.cancel} />}\n                </Button>\n            ]}\n            ouiaId={ouiaId}\n        >\n            {children}\n        </Modal>\n    );\n};\n\nBaseModal.propTypes = {\n    children: propTypes.any,\n    onClose: propTypes.func,\n    items: propTypes.array,\n    updateRef: propTypes.func,\n    title: propTypes.string,\n    onSave: propTypes.func,\n    onSuccessNotification: propTypes.object,\n    onFailureNotification: propTypes.object,\n    ouiaId: propTypes.string\n};\n\nexport default BaseModal;\n"],"names":["renderer","marked","link","this","arguments","replace","CSAwRuleSummary","text","truncate","intl","props","className","length","TRUNCATE_TEXT_THRESHOLD","expandText","formatMessage","messages","collapseText","spaceBetween","dangerouslySetInnerHTML","__html","sanitizeHtml","dangerousHtml","defaultProps","propTypes","PropTypes","injectIntl","apply","currentFilter","dynamicFilters","config","currentValue","rule_presence","concat","split","rule","filterBySecurityRule","values","isDynamic","join","undefined","page","dropdownItems","items","RULE_PRESENCE_OPTIONS","unionWith","isEqual","map","label","value","type","conditionalFilterType","filterValues","onChange","event","status_id","filterByStatus","filter","STATUS_OPTIONS","item","GroupedCVELabels","hasExploit","hasRule","KnownExploitLabel","style","content","color","useStatusSelect","initialValue","useState","statusId","setStatusId","setProps","StatusSelect","fieldId","selection","key","useJustificationInput","justification","setJustification","JustificationInput","resizeOrientation","minHeight","BaseModal","title","onSave","onSuccessNotification","onFailureNotification","ouiaId","children","targetItems","setTargetItems","dispatch","useDispatch","handleClose","useEffect","clearNotifications","variant","isOpen","Boolean","onClose","actions","onClick","then","addNotification","error","status","ReadOnlyNotification","updateRef"],"sourceRoot":""}