{"version":3,"file":"js/CVEDetailsPage.1647035074873.6312c3f83dd073aabc0c.js","mappings":"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","sources":["webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack:///./node_modules/@babel/runtime/helpers/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/inherits.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-utilities/esm/parseCvssScore/parseCvssScore.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/SkeletonTable/SkeletonTable.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/InventoryLoadError.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/InventoryTable.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/question-icon.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Shield/consts.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Shield/Shield.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Truncate/Truncate.js","webpack:///./src/Components/PresentationalComponents/CSAwRuleBox/CSAwRuleSummary.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/OsVersionFilter.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/SecurityRuleFilter.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/StatusFilter.js","webpack:///./src/Components/PresentationalComponents/Kebab/KebabItems.js","webpack:///./src/Components/PresentationalComponents/Snippets/GroupedCVELabels.js","webpack:///./src/Components/PresentationalComponents/Snippets/KnownExploitLabel.js","webpack:///./src/Components/PresentationalComponents/WithLoader/WithLoader.js","webpack:///./src/Components/PresentationalComponents/CVEDetailsPageDescription/CVEDetailsPageDescription.js","webpack:///./src/Components/PresentationalComponents/CvssVector/vectorNames.js","webpack:///./src/Components/PresentationalComponents/CvssVector/CvssVector.js","webpack:///./src/Components/PresentationalComponents/CVEDetailsPageSidebar/SnippetWithHeaderAndPopover.js","webpack:///./src/Components/PresentationalComponents/CVEDetailsPageSidebar/CVEDetailsPageSidebar.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/angle-double-down-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/angle-double-up-icon.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/InsightsLabel/CriticalIcon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/equals-icon.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/InsightsLabel/InsightsLabel.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/power-off-icon.js","webpack:///./src/Components/PresentationalComponents/CSAwRuleBox/CSAwRuleBox.js","webpack:///./src/Components/PresentationalComponents/KnownExploitSummary/KnownExploitSummary.js","webpack:///./src/Components/PresentationalComponents/CVEDetailsPageSummary/CVEDetailsPageSummary.js","webpack:///./src/Components/SmartComponents/SystemsExposedTable/SystemsExposedTableToolbar.js","webpack:///./src/Components/SmartComponents/SystemsExposedTable/SystemsExposedTable.js","webpack:///./src/Components/SmartComponents/CVEDetailsPage/CVEDetailsPage.js","webpack:///./src/Components/SmartComponents/Modals/BaseModal.js","webpack:///./src/Components/SmartComponents/Modals/BusinessRiskModal.js","webpack:///./src/Components/SmartComponents/Modals/CveStatusModal.js","webpack:///./src/Store/Reducers/InventoryEntitiesReducer.js","webpack:///./node_modules/lodash/unionWith.js"],"sourcesContent":["var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\n\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import React from 'react';\nimport { Tooltip } from \"@patternfly/react-core/dist/esm/components/Tooltip/Tooltip.js\";\n\nfunction parseCvssScore(cvssV2, cvssV3) {\n  var withLabels = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var v2Tooltip = 'Prior to 2016 (approximately), CVEs were scored with Common Vulnerability Scoring System v2.';\n  var naTooltip = 'CVEs published before 2005 (approximately) did not have a CVSS Base Score.';\n  return cvssV3 && parseFloat(cvssV3).toFixed(1) || cvssV2 && /*#__PURE__*/React.createElement(Tooltip, {\n    content: v2Tooltip,\n    position: 'left'\n  }, /*#__PURE__*/React.createElement(\"span\", null, \"\".concat(parseFloat(cvssV2).toFixed(1)), \" \", withLabels && '(CVSSv2)')) || /*#__PURE__*/React.createElement(Tooltip, {\n    content: naTooltip,\n    position: 'left'\n  }, /*#__PURE__*/React.createElement(\"span\", null, \"N/A\"));\n}\n\nexport default parseCvssScore;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactTable = require(\"@patternfly/react-table\");\n\nvar _Skeleton = require(\"../Skeleton\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar SkeletonTable = /*#__PURE__*/function (_React$Component) {\n  (0, _inherits2[\"default\"])(SkeletonTable, _React$Component);\n\n  var _super = _createSuper(SkeletonTable);\n\n  function SkeletonTable() {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, SkeletonTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"createColumns\", function () {\n      var colSize = _this.props.colSize;\n      return (0, _toConsumableArray2[\"default\"])(Array(colSize)).map(function () {\n        return {\n          title: /*#__PURE__*/_react[\"default\"].createElement(_Skeleton.Skeleton, {\n            size: _Skeleton.SkeletonSize.sm\n          })\n        };\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"getColumns\", function () {\n      var _this$props = _this.props,\n          paddingColumnSize = _this$props.paddingColumnSize,\n          columns = _this$props.columns;\n      return _this.newArray(paddingColumnSize).map(function () {\n        return '';\n      }).concat(columns || _this.createColumns());\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"createRows\", function () {\n      var _this$props2 = _this.props,\n          colSize = _this$props2.colSize,\n          rowSize = _this$props2.rowSize,\n          columns = _this$props2.columns,\n          paddingColumnSize = _this$props2.paddingColumnSize;\n      var numberOfCols = columns ? columns.length : colSize;\n      return _this.newArray(rowSize).map(function () {\n        return {\n          disableSelection: true,\n          cells: _this.newArray(paddingColumnSize).map(function () {\n            return '';\n          }).concat(_this.newArray(numberOfCols).map(function () {\n            return {\n              title: /*#__PURE__*/_react[\"default\"].createElement(_Skeleton.Skeleton, {\n                size: _Skeleton.SkeletonSize.md\n              })\n            };\n          }))\n        };\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"selectVariant\", function () {\n      var hasRadio = _this.props.hasRadio;\n      return hasRadio ? (_reactTable.RowSelectVariant === null || _reactTable.RowSelectVariant === void 0 ? void 0 : _reactTable.RowSelectVariant.radio) || 'radio' : (_reactTable.RowSelectVariant === null || _reactTable.RowSelectVariant === void 0 ? void 0 : _reactTable.RowSelectVariant.checkbox) || 'checkbox';\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"newArray\", function (size) {\n      return (0, _toConsumableArray2[\"default\"])(Array(size));\n    });\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(SkeletonTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          canSelectAll = _this$props3.canSelectAll,\n          isSelectable = _this$props3.isSelectable,\n          sortBy = _this$props3.sortBy,\n          variant = _this$props3.variant;\n      return /*#__PURE__*/_react[\"default\"].createElement(_reactTable.Table, {\n        cells: this.getColumns(),\n        rows: this.createRows(),\n        sortBy: sortBy,\n        \"aria-label\": \"Loading\",\n        onSelect: isSelectable,\n        selectVariant: isSelectable ? this.selectVariant() : null,\n        canSelectAll: canSelectAll,\n        variant: variant\n      }, /*#__PURE__*/_react[\"default\"].createElement(_reactTable.TableHeader, null), /*#__PURE__*/_react[\"default\"].createElement(_reactTable.TableBody, null));\n    }\n  }]);\n  return SkeletonTable;\n}(_react[\"default\"].Component);\n\nSkeletonTable.propTypes = {\n  colSize: _propTypes[\"default\"].number,\n  rowSize: _propTypes[\"default\"].number,\n  columns: _propTypes[\"default\"].array,\n  paddingColumnSize: _propTypes[\"default\"].number,\n  sortBy: _propTypes[\"default\"].shape({\n    index: _propTypes[\"default\"].number,\n    direction: _propTypes[\"default\"].oneOf(['asc', 'desc'])\n  }),\n  isSelectable: _propTypes[\"default\"].bool,\n  canSelectAll: _propTypes[\"default\"].bool,\n  hasRadio: _propTypes[\"default\"].bool,\n  variant: _propTypes[\"default\"].string\n};\nSkeletonTable.defaultProps = {\n  rowSize: 0,\n  paddingColumnSize: 0,\n  canSelectAll: false,\n  isSelectable: false,\n  hasRadio: false,\n  variant: null\n};\nvar _default = SkeletonTable;\nexports[\"default\"] = _default;","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nvar InventoryLoadError = function InventoryLoadError(_ref) {\n  var component = _ref.component,\n      props = _objectWithoutProperties(_ref, [\"component\"]);\n\n  useEffect(function () {\n    console.error(\"Unable to load iventory component. Failed to load \".concat(component, \".\"), props);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"h1\", null, \"Unable to load inventory component\"), /*#__PURE__*/React.createElement(\"h2\", null, \"Failed to load \", component), /*#__PURE__*/React.createElement(\"code\", null, \"More info can be found in browser console output.\"));\n};\n\nInventoryLoadError.propTypes = {\n  component: PropTypes.string\n};\nexport default InventoryLoadError;","import _extends from \"@babel/runtime/helpers/extends\";\nimport React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { ScalprumComponent } from '@scalprum/react-core';\nimport { useHistory } from 'react-router-dom';\nimport { useStore } from 'react-redux';\nimport { Bullseye } from \"@patternfly/react-core/dist/esm/layouts/Bullseye/Bullseye.js\";\nimport { Spinner } from \"@patternfly/react-core/dist/esm/components/Spinner/Spinner.js\";\nimport InventoryLoadError from './InventoryLoadError';\n\nvar BaseInvTable = function BaseInvTable(props) {\n  var history = useHistory();\n  var store = useStore();\n  return /*#__PURE__*/React.createElement(Suspense, {\n    fallback: props.fallback\n  }, /*#__PURE__*/React.createElement(ScalprumComponent, _extends({\n    history: history,\n    store: store,\n    appName: \"inventory\",\n    module: \"./InventoryTable\",\n    scope: \"inventory\",\n    ErrorComponent: /*#__PURE__*/React.createElement(InventoryLoadError, _extends({\n      component: \"InventoryDetailHead\",\n      history: history,\n      store: store\n    }, props)),\n    ref: props.innerRef\n  }, props)));\n};\n\nBaseInvTable.propTypes = {\n  fallback: PropTypes.node,\n  innerRef: PropTypes.object\n};\n/**\n * Inventory sub component.\n *\n * This component shows systems table connected to redux.\n */\n\nvar InvTable = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(BaseInvTable, _extends({\n    innerRef: ref\n  }, props));\n});\nInvTable.propTypes = {\n  /** React Suspense fallback component. <a href=\"https://reactjs.org/docs/code-splitting.html#reactlazy\" target=\"_blank\">Learn more</a>. */\n  fallback: PropTypes.node\n};\nInvTable.defaultProps = {\n  fallback: /*#__PURE__*/React.createElement(Bullseye, {\n    className: \"pf-u-p-lg\"\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    size: \"xl\"\n  }))\n};\nexport default InvTable;","import { createIcon } from '../createIcon';\n\nexport const QuestionIconConfig = {\n  name: 'QuestionIcon',\n  height: 512,\n  width: 384,\n  svgPath: 'M202.021 0C122.202 0 70.503 32.703 29.914 91.026c-7.363 10.58-5.093 25.086 5.178 32.874l43.138 32.709c10.373 7.865 25.132 6.026 33.253-4.148 25.049-31.381 43.63-49.449 82.757-49.449 30.764 0 68.816 19.799 68.816 49.631 0 22.552-18.617 34.134-48.993 51.164-35.423 19.86-82.299 44.576-82.299 106.405V320c0 13.255 10.745 24 24 24h72.471c13.255 0 24-10.745 24-24v-5.773c0-42.86 125.268-44.645 125.268-160.627C377.504 66.256 286.902 0 202.021 0zM192 373.459c-38.196 0-69.271 31.075-69.271 69.271 0 38.195 31.075 69.27 69.271 69.27s69.271-31.075 69.271-69.271-31.075-69.27-69.271-69.27z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const QuestionIcon = createIcon(QuestionIconConfig);\n\nexport default QuestionIcon;","// Variables not found in pf-react\nexport var colorList = {\n  \"default\": '#737679',\n  // pf-black-600\n  danger: '#a30000',\n  //pf-red-200\n  warning: '#f0ab00',\n  //pf-gold-400\n  orange: '#ec7a08' // pf-orange-300\n\n};\nexport var messageList = {\n  critical: 'This rating is given to flaws that could be easily exploited by a \\\n        remote unauthenticated attacker and lead to system compromise \\\n        (arbitrary code execution) without requiring user interaction. These \\\n        are the types of vulnerabilities that can be exploited by worms. \\\n        Flaws that require an authenticated remote user, a local user, \\\n        or an unlikely configuration are not classed as Critical impact.',\n  important: 'This rating is given to flaws that can easily compromise the \\\n    confidentiality, integrity, or availability of resources. These are the \\\n    types of vulnerabilities that allow local users to gain privileges, allow \\\n    unauthenticated remote users to view resources that should otherwise be \\\n    protected by authentication, allow authenticated remote users to execute \\\n    arbitrary code, or allow remote users to cause a denial of service.',\n  moderate: 'This rating is given to flaws that may be more difficult to exploit \\\n        but could still lead to some compromise of the confidentiality, \\\n        integrity, or availability of resources, under certain circumstances. \\\n        These are the types of vulnerabilities that could have had a Critical \\\n        impact or Important impact but are less easily exploited based on a \\\n        technical evaluation of the flaw, or affect unlikely configurations.',\n  low: 'This rating is given to all other issues that have a security \\\n        impact. These are the types of vulnerabilities that are believed to \\\n        require unlikely circumstances to be able to be exploited, or where \\\n        a successful exploit would give minimal consequences.',\n  unknown: 'Red Hat Product Security has determined that this vulnerability does \\\n        not impact Red Hat products.'\n};\n/* I'm not shure that the list of impacts is ordered correctly by relevancy */\n\nexport var impactList = {\n  Critical: {\n    title: 'Critical',\n    color: colorList.danger,\n    message: messageList.critical\n  },\n  4: {\n    title: 'Critical',\n    color: colorList.danger,\n    message: messageList.critical\n  },\n  High: {\n    title: 'High',\n    color: colorList.orange,\n    message: messageList.important\n  },\n  Important: {\n    title: 'Important',\n    color: colorList.orange,\n    message: messageList.important\n  },\n  3: {\n    title: 'High',\n    color: colorList.orange,\n    message: messageList.important\n  },\n  Medium: {\n    title: 'Medium',\n    color: colorList.warning,\n    message: messageList.moderate\n  },\n  Moderate: {\n    title: 'Moderate',\n    color: colorList.warning,\n    message: messageList.moderate\n  },\n  2: {\n    title: 'Medium',\n    color: colorList.warning,\n    message: messageList.moderate\n  },\n  Low: {\n    title: 'Low',\n    color: colorList[\"default\"],\n    message: messageList.low\n  },\n  1: {\n    title: 'Low',\n    color: colorList[\"default\"],\n    message: messageList.low\n  },\n  Unknown: {\n    title: 'Unknown',\n    color: colorList[\"default\"],\n    message: messageList.unknown\n  }\n};","import { Tooltip } from \"@patternfly/react-core/dist/esm/components/Tooltip/Tooltip.js\";\nimport QuestionIcon from \"@patternfly/react-icons/dist/esm/icons/question-icon\";\nimport SecurityIcon from \"@patternfly/react-icons/dist/esm/icons/security-icon\";\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { impactList } from './consts';\n\nvar Shield = function Shield(_ref) {\n  var _impactList$impact;\n\n  var impact = _ref.impact,\n      hasLabel = _ref.hasLabel,\n      hasTooltip = _ref.hasTooltip,\n      size = _ref.size;\n  var attributes = (_impactList$impact = impactList === null || impactList === void 0 ? void 0 : impactList[impact]) !== null && _impactList$impact !== void 0 ? _impactList$impact : impactList.Unknown;\n  var badgeProps = {\n    'aria-hidden': 'false',\n    'aria-label': attributes.title,\n    color: attributes.color,\n    size: size\n  };\n  var badge = attributes.title === 'Unknown' ? /*#__PURE__*/React.createElement(QuestionIcon, badgeProps) : /*#__PURE__*/React.createElement(SecurityIcon, badgeProps);\n  var body = /*#__PURE__*/React.createElement(\"span\", null, badge, \" \", hasLabel && attributes.title);\n  return /*#__PURE__*/React.createElement(\"span\", null, hasTooltip ? /*#__PURE__*/React.createElement(Tooltip, {\n    content: /*#__PURE__*/React.createElement(\"div\", null, attributes.message),\n    position: 'bottom'\n  }, body) : body);\n};\n\nShield.defaultProps = {\n  impact: 'N/A',\n  hasLabel: false,\n  size: 'sm',\n  hasTooltip: true\n};\nShield.propTypes = {\n  impact: propTypes.oneOfType([propTypes.string, propTypes.number]),\n  hasLabel: propTypes.bool,\n  size: propTypes.string,\n  // sm, md, lg and xl,\n  label: propTypes.bool,\n  hasTooltip: propTypes.bool\n};\nexport default Shield;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport React, { useState } from 'react';\nimport propTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Button } from \"@patternfly/react-core/dist/esm/components/Button/Button.js\";\nimport { Stack } from \"@patternfly/react-core/dist/esm/layouts/Stack/Stack.js\";\nimport { StackItem } from \"@patternfly/react-core/dist/esm/layouts/Stack/StackItem.js\";\nimport sanitizeHtml from 'sanitize-html';\nimport \"../../Truncate/./truncate.css\";\n\nvar dangerousHtml = function dangerousHtml(html) {\n  return {\n    __html: sanitizeHtml(html)\n  };\n};\n\nvar Truncate = function Truncate(_ref) {\n  var _ref$text = _ref.text,\n      text = _ref$text === void 0 ? '' : _ref$text,\n      _ref$length = _ref.length,\n      length = _ref$length === void 0 ? 150 : _ref$length,\n      _ref$expandText = _ref.expandText,\n      expandText = _ref$expandText === void 0 ? 'Read more' : _ref$expandText,\n      _ref$hideExpandText = _ref.hideExpandText,\n      hideExpandText = _ref$hideExpandText === void 0 ? false : _ref$hideExpandText,\n      _ref$expandOnMouseOve = _ref.expandOnMouseOver,\n      expandOnMouseOver = _ref$expandOnMouseOve === void 0 ? false : _ref$expandOnMouseOve,\n      _ref$collapseText = _ref.collapseText,\n      collapseText = _ref$collapseText === void 0 ? 'Collapse' : _ref$collapseText,\n      className = _ref.className,\n      inline = _ref.inline,\n      spaceBetween = _ref.spaceBetween;\n  var truncateClasses = classNames('ins-c-truncate', className, _defineProperty({}, \"is-inline\", inline), _defineProperty({}, \"is-block\", !inline));\n  var trimmedText = text.substring(0, length);\n  var textOverflow = text.length > length;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showText = _useState2[0],\n      setShowText = _useState2[1];\n\n  var toggleText = function toggleText(event) {\n    event && event.preventDefault();\n    setShowText(!showText);\n  };\n\n  var expandButton = /*#__PURE__*/React.createElement(Button, {\n    className: \"ins-c-expand-button\",\n    variant: \"link\",\n    onClick: toggleText\n  }, expandText);\n  var collapseButton = /*#__PURE__*/React.createElement(Button, {\n    className: \"ins-c-collapse-button\",\n    variant: \"link\",\n    onClick: toggleText\n  }, collapseText);\n  var textWithOverflow = showText === false ? \"\".concat(trimmedText).concat(textOverflow ? '...' : '') : text;\n  var html = dangerousHtml(textWithOverflow);\n  var mouseOverHandler = expandOnMouseOver && {\n    onMouseEnter: function onMouseEnter() {\n      return setShowText(true);\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setShowText(false);\n    }\n  };\n  return inline ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", _extends({\n    className: truncateClasses,\n    \"widget-type\": \"InsightsTruncateInline\",\n    dangerouslySetInnerHTML: html\n  }, mouseOverHandler)), !hideExpandText && textOverflow && (showText === false ? expandButton : collapseButton)) : /*#__PURE__*/React.createElement(Stack, {\n    className: truncateClasses\n  }, /*#__PURE__*/React.createElement(StackItem, mouseOverHandler, /*#__PURE__*/React.createElement(\"span\", {\n    \"widget-type\": \"InsightsTruncateBlock\",\n    dangerouslySetInnerHTML: html\n  })), !hideExpandText && textOverflow && /*#__PURE__*/React.createElement(StackItem, {\n    className: spaceBetween && 'pf-u-mt-sm'\n  }, showText === false ? expandButton : collapseButton));\n};\n\nTruncate.propTypes = {\n  className: propTypes.string,\n  text: propTypes.string,\n  length: propTypes.number,\n  expandText: propTypes.string,\n  collapseText: propTypes.string,\n  inline: propTypes.bool,\n  spaceBetween: propTypes.bool,\n  hideExpandText: propTypes.bool,\n  expandOnMouseOver: propTypes.bool\n};\nexport default Truncate;","import React from 'react';\nimport { marked } from 'marked';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport sanitizeHtml from 'sanitize-html';\nimport { Truncate } from '@redhat-cloud-services/frontend-components/Truncate';\nimport { StackItem, TextContent } from '@patternfly/react-core';\nimport { TRUNCATE_TEXT_THRESHOLD } from '../../../Helpers/constants';\nimport messages from '../../../Messages';\n\n/**\n * extend marked's renderer in order to open link in new tab\n */\nlet renderer = new marked.Renderer();\nrenderer.link = function() {\n    let link = marked.Renderer.prototype.link.apply(this, arguments);\n    return link.replace('<a ', '<a target=\"_blank\" rel=\"noopener noreferrer\" ');\n};\n\nmarked.setOptions({ renderer });\n\nconst CSAwRuleSummary = ({ text, truncate, intl, ...props }) => {\n    const dangerousHtml = (text) => ({ __html: sanitizeHtml(text) });\n\n    return (text &&\n        <StackItem {...props}>\n            <TextContent className=\"rule-description\">\n                {truncate && text.length > TRUNCATE_TEXT_THRESHOLD\n                    ? (\n                        <Truncate\n                            length={TRUNCATE_TEXT_THRESHOLD}\n                            expandText={intl.formatMessage(messages.readMore)}\n                            collapseText={intl.formatMessage(messages.readLess)}\n                            text={marked(text)}\n                            spaceBetween\n                        />\n                    ) : (\n                        <span dangerouslySetInnerHTML={dangerousHtml(marked(text))} />\n                    )\n                }\n            </TextContent>\n        </StackItem>\n    );\n\n};\n\nCSAwRuleSummary.defaultProps = {\n    truncate: true,\n    link: null\n};\n\nCSAwRuleSummary.propTypes = {\n    intl: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.object\n    ]),\n    truncate: PropTypes.bool,\n    text: PropTypes.string.isRequired\n};\n\nexport default injectIntl(CSAwRuleSummary);\n","import React from 'react';\nimport { RHEL_VERSIONS } from '../../../../Helpers/constants';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { Select, SelectOption } from '@patternfly/react-core';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\n\nconst useOsVersionFilter = (filterValue, apply) => {\n    const [isOpen, setOpen] = React.useState(false);\n    const [numOptions, setNumOptions] = React.useState(10);\n    const versionFromNewestToOldest = RHEL_VERSIONS.slice().reverse();\n\n    let selectedVersionsArray = filterValue ? filterValue.split(',') : [];\n\n    const onOptionSelect = (_, changedLabel) => {\n        const changedValue = RHEL_VERSIONS.find(version => version.label === changedLabel).value;\n        let newValue;\n\n        if (selectedVersionsArray.includes(changedValue)) {\n            newValue = selectedVersionsArray;\n            newValue.splice(newValue.indexOf(changedValue), 1);\n        }\n        else {\n            newValue = [...selectedVersionsArray, changedValue];\n        }\n\n        apply({ rhel_version: newValue.join(','), page: 1 });\n    };\n\n    const onToggle = (isOpen) => {\n        setOpen(isOpen);\n    };\n\n    const onViewMoreClick = () => {\n        setNumOptions(versionFromNewestToOldest.length);\n    };\n\n    return {\n        type: conditionalFilterType.custom,\n        label: intl.formatMessage(messages.osFilterLabel),\n        filterValues: {\n            children: (\n                <Select\n                    variant=\"checkbox\"\n                    onToggle={onToggle}\n                    onSelect={onOptionSelect}\n                    selections={selectedVersionsArray.map(item => RHEL_VERSIONS.find(version => version.value === item).label)}\n                    isOpen={isOpen}\n                    aria-label=\"os-version-filter\"\n                    placeholderText={intl.formatMessage(messages.osFilterPlaceholder)}\n                    {...(numOptions < versionFromNewestToOldest.length\n                        && { loadingVariant: { text: intl.formatMessage(messages.viewMore), onClick: onViewMoreClick } })}\n                    style={{ maxHeight: '420px', overflow: 'auto' }}\n                >\n                    {versionFromNewestToOldest.slice(0, numOptions).map((option, index) => (\n                        <SelectOption\n                            isDisabled={option.disabled}\n                            key={index}\n                            value={option.label}\n                            description={option?.description}\n                        />\n                    ))}\n                </Select>\n            )\n        }\n    };\n};\n\nexport default useOsVersionFilter;\n","\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { RULE_PRESENCE_OPTIONS } from '../../../../Helpers/constants';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\nimport unionWith from 'lodash/unionWith';\nimport isEqual from 'lodash/isEqual';\n\nconst securityRuleFilter = (apply, currentFilter = {}, dynamicFilters = [], { ...config }) => {\n    let currentValue = [];\n\n    if (currentFilter.rule_presence) {\n        currentValue = currentValue.concat(currentFilter.rule_presence.split(','));\n    }\n\n    if (currentFilter.rule) {\n        currentValue = currentValue.concat(currentFilter.rule.split(','));\n    }\n\n    const filterBySecurityRule = values => {\n        apply({\n            ...config.isDynamic && { rule: values.join(',') || undefined },\n            ...!config.isDynamic && { rule_presence: values.join(',') || undefined },\n            page: 1\n        });\n    };\n\n    const dropdownItems\t= () => {\n        const items = config.dropdownItems ? config.dropdownItems : RULE_PRESENCE_OPTIONS;\n\n        return unionWith(items, dynamicFilters, isEqual).map(({ label, value }) => ({ label, value }));\n    };\n\n    return {\n        label: intl.formatMessage(messages.filterSecurityRules),\n        type: conditionalFilterType.checkbox,\n        key: 'security_rule',\n        filterValues: {\n            onChange: (event, value) => {\n                filterBySecurityRule(value);\n            },\n            items: dropdownItems(),\n            value: currentValue\n        }\n    };\n};\n\nexport default securityRuleFilter;\n","\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { STATUS_OPTIONS } from '../../../../Helpers/constants';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\n\nconst statusFilter = (apply, currentFilter = {}) => {\n\n    let { status_id: currentValue } = currentFilter;\n\n    const filterByStatus = values => {\n        apply({ status_id: (values.length > '0' && values.filter(value => value !== ',').join(',')) || '', page: 1 });\n    };\n\n    return {\n        label: intl.formatMessage(messages.filterStatus),\n        type: conditionalFilterType.checkbox,\n        key: 'status',\n        filterValues: {\n            onChange: (event, value) => {\n                filterByStatus(value);\n            },\n            items: STATUS_OPTIONS.map(item => ({ label: item.label, value: item.value })),\n            value: (currentValue ? currentValue.split(',') : [])\n        }\n    };\n};\n\nexport default statusFilter;\n","import { DropdownItem } from '@patternfly/react-core';\nimport React from 'react';\nimport messages from '../../../Messages';\nimport { FormattedMessage } from 'react-intl';\n\nexport const kebabItemDownloadJSON = (downloadReport, { ...props }) => (\n    <DropdownItem key=\"json\" component=\"button\" onClick={() => downloadReport('json')} {...props}>\n        <FormattedMessage {...messages.kebabExportAsJson} />\n    </DropdownItem>\n);\n\nexport const kebabItemDownloadCSV = (downloadReport, { ...props }) => (\n    <DropdownItem key=\"csv\" component=\"button\" onClick={() => downloadReport('csv')} {...props}>\n        <FormattedMessage {...messages.kebabExportAsCsv} />\n    </DropdownItem>\n);\n\nexport const kebabItemDownloadPDF = (loading, downloadReport, { ...props }) => (\n    <DropdownItem key=\"pdf\" component=\"button\" onClick={() => downloadReport(true)} {...props}>\n        {loading ? <FormattedMessage {...messages.loading} /> : <FormattedMessage {...messages.kebabExportAsPDF} />}\n    </DropdownItem>\n);\n\nexport const kebabItemEditBusinessRisk = (showBusinessRiskModal, cves, { ...props }) => (\n    <DropdownItem key=\"editBusinessRisk\" component=\"button\" onClick={() => showBusinessRiskModal(cves)} {...props}>\n        <FormattedMessage {...messages.kebabEditBusinessRisk} />\n    </DropdownItem>\n);\n\nexport const kebabItemEditStatus = (showStatusModal, cves, inventoryIds,  { ...props }) => (\n    <DropdownItem key=\"editStatus\" component=\"button\" onClick={() => showStatusModal(cves, inventoryIds)} {...props}>\n        <FormattedMessage {...messages.kebabEditStatus} />\n    </DropdownItem>\n);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { LabelGroup } from '@patternfly/react-core';\nimport KnownExploitLabel from './KnownExploitLabel';\nimport CSAwLabel from './CSAwLabel';\n\nconst GroupedCVELabels = ({ hasExploit, hasRule, isCompact }) =>\n    (hasExploit || hasRule) && (\n        <LabelGroup className=\"cve-labels-grouped--nowrap\">\n            {hasExploit && <KnownExploitLabel isCompact={isCompact}/>}\n            {hasRule && <CSAwLabel isCompact={isCompact}/>}\n        </LabelGroup>\n    );\n\nGroupedCVELabels.propTypes = {\n    hasExploit: propTypes.bool.isRequired,\n    hasRule: propTypes.bool.isRequired,\n    isCompact: propTypes.bool\n};\n\nexport default GroupedCVELabels;\n","import React from 'react';\nimport { Label, Tooltip } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst KnownExploitLabel = ({ style, className, isCompact }) => (\n    <Tooltip content={<FormattedMessage {...messages.knownExploitDescription} />}>\n        <Label color=\"red\" style={{ ...style }} className={['cve-labels', className]} isCompact={isCompact}>\n            <FormattedMessage {...messages.knownExploit} />\n        </Label>\n    </Tooltip>\n);\n\nKnownExploitLabel.propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    isCompact: PropTypes.bool\n};\n\nexport default KnownExploitLabel;\n","import { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport SkeletonTable from '@redhat-cloud-services/frontend-components/SkeletonTable/SkeletonTable';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { TableVariant } from '@patternfly/react-table';\n\nexport const LoaderType = {\n    spinner: 'spinner',\n    table: 'table',\n    compactTable: 'compactTable',\n    rectangle: 'rectangle',\n    inlineSkeleton: 'inlineSkeleton',\n    skeleton: 'skeleton'\n};\n\nconst WithLoader = ({ isLoading, variant, children, size, ...props }) => {\n    if (isLoading) {\n        switch (variant) {\n            case LoaderType.spinner:\n                return <Spinner centered {...props}/>;\n            case LoaderType.table:\n                return <SkeletonTable {...props}/>;\n            case LoaderType.compactTable:\n                return <SkeletonTable variant={TableVariant.compact} {...props}/>;\n            case LoaderType.rectangle:\n                return <Skeleton shape=\"square\" {...props}/>;\n            case LoaderType.inlineSkeleton:\n                return <Skeleton\n                    size={size ?? SkeletonSize.lg}\n                    {...props}\n                    style={{ display: 'inline-block', ...props.style }}\n                />;\n            default:\n                return <Skeleton size={size ?? SkeletonSize.lg} {...props}/>;\n        }\n    }\n\n    return children;\n};\n\nWithLoader.propTypes = {\n    isLoading: propTypes.bool,\n    variant: propTypes.oneOf(Object.keys(LoaderType)),\n    style: propTypes.object,\n    children: propTypes.node,\n    size: propTypes.string\n};\n\nexport default WithLoader;\n","import { Stack, StackItem, Text, TextContent, TextVariants, Flex, FlexItem } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport { CVEPageContext } from '../../SmartComponents/CVEDetailsPage/CVEDetailsPage';\nimport WithLoader, { LoaderType } from '../WithLoader/WithLoader';\nimport { NoDescriptionAvailable } from '../EmptyStates/EmptyStates';\n\nconst CVEDetailsPageDescription = ({ cveAttributes, intl }) => {\n    const {\n        public_date: publishDate,\n        description,\n        rh_link: link\n    } = cveAttributes;\n    const hasDescription = description && description !== 'unknown';\n\n    return (\n        <CVEPageContext.Consumer>\n            {context =>\n                <Stack hasGutter>\n                    {\n                        hasDescription && (\n                            <StackItem className=\"pf-u-mt-sm\">\n                                <Flex>\n                                    <FlexItem>{intl.formatMessage(messages.publishDate)}:</FlexItem>\n                                    <FlexItem grow={{ default: 'grow' }}>\n                                        <WithLoader\n                                            isLoading={context.isLoading}\n                                            variant={LoaderType.inlineSkeleton}\n                                            size=\"sm\"\n                                        >\n                                            {publishDate}\n                                        </WithLoader>\n                                    </FlexItem>\n                                </Flex>\n                            </StackItem>\n                        )\n                    }\n                    <StackItem>\n                        <WithLoader\n                            isLoading={context.isLoading}\n                            variant={LoaderType.rectangle}\n                            style={{ height: '132px', width: '100%' }}\n                        >\n                            {\n                                hasDescription ? (\n                                    <TextContent style={{ textAlign: 'justify' }}>\n                                        <Text component={TextVariants.p}>{description}</Text>\n                                    </TextContent>\n                                ) : <NoDescriptionAvailable/>\n                            }\n                        </WithLoader>\n                    </StackItem>\n                    <StackItem className=\"pf-u-mt-sm pf-u-mb-md\">\n                        {link}\n                    </StackItem>\n                </Stack>\n            }\n        </CVEPageContext.Consumer>\n\n    );\n};\n\nCVEDetailsPageDescription.propTypes = {\n    cveAttributes: propTypes.any,\n    intl: propTypes.any\n};\n\nexport default injectIntl(CVEDetailsPageDescription);\n","import { intl } from '../../../Utilities/IntlProvider';\nimport messages from '../../../Messages';\n\nexport const V3names = {\n    AV: {\n        name: intl.formatMessage(messages.vectorNamesV3AV),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNetwork),\n            A: intl.formatMessage(messages.vectorValuesAdjacent),\n            L: intl.formatMessage(messages.vectorValuesLocal),\n            P: intl.formatMessage(messages.vectorValuesPhysical)\n        }\n    },\n    AC: {\n        name: intl.formatMessage(messages.vectorNamesV3AC),\n        values: {\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    PR: {\n        name: intl.formatMessage(messages.vectorNamesV3PR),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    UI: {\n        name: intl.formatMessage(messages.vectorNamesV3UI),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            R: intl.formatMessage(messages.vectorValuesRequired)\n        }\n    },\n    S: {\n        name: intl.formatMessage(messages.vectorNamesV3S),\n        values: {\n            U: intl.formatMessage(messages.vectorValuesUnchanged),\n            C: intl.formatMessage(messages.vectorValuesChanged)\n        }\n    },\n    C: {\n        name: intl.formatMessage(messages.vectorNamesV3C),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    I: {\n        name: intl.formatMessage(messages.vectorNamesV3I),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    A: {\n        name: intl.formatMessage(messages.vectorNamesV3A),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    CVSS: {\n        name: intl.formatMessage(messages.vectorNamesCvssVersion),\n        values: {\n            '3.0': 3.0\n        }\n    }\n};\n\nexport const V2names = {\n    AV: {\n        name: intl.formatMessage(messages.vectorNamesV2AV),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNetwork),\n            A: intl.formatMessage(messages.vectorValuesAdjacentNetwork),\n            L: intl.formatMessage(messages.vectorValuesLocal)\n        }\n    },\n    AC: {\n        name: intl.formatMessage(messages.vectorNamesV2AC),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    Au: {\n        name: intl.formatMessage(messages.vectorNamesV2AU),\n        values: {\n            M: intl.formatMessage(messages.vectorValuesMultiple),\n            S: intl.formatMessage(messages.vectorValuesSingle),\n            N: intl.formatMessage(messages.vectorValuesNone)\n        }\n    },\n    C: {\n        name: intl.formatMessage(messages.vectorNamesV2C),\n        values: {\n            C: intl.formatMessage(messages.vectorValuesComplete),\n            P: intl.formatMessage(messages.vectorValuesPartial),\n            N: intl.formatMessage(messages.vectorValuesNone)\n        }\n    },\n    I: {\n        name: intl.formatMessage(messages.vectorNamesV2I),\n        values: {\n            C: intl.formatMessage(messages.vectorValuesComplete),\n            P: intl.formatMessage(messages.vectorValuesPartial),\n            N: intl.formatMessage(messages.vectorValuesNone)\n        }\n    },\n    A: {\n        name: intl.formatMessage(messages.vectorNamesV2A),\n        values: {\n            C: intl.formatMessage(messages.vectorValuesComplete),\n            P: intl.formatMessage(messages.vectorValuesPartial),\n            N: intl.formatMessage(messages.vectorValuesNone)\n        }\n    }\n};\n","import { Popover, TextContent } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { Table, TableBody, TableHeader, TableVariant } from '@patternfly/react-table';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { CVEPageContext } from '../../SmartComponents/CVEDetailsPage/CVEDetailsPage';\nimport WithLoader, { LoaderType } from '../WithLoader/WithLoader';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport { V3names, V2names } from './vectorNames';\nimport Label from '../Snippets/Label';\n\nexport const parseVector = (vector, namesMapping) => {\n    let res = {};\n    vector &&\n        vector.split('/').forEach(curr => {\n            let [key, val] = curr.split(':');\n            const name = namesMapping[key] && namesMapping[key].name;\n            const value = (namesMapping[key] && namesMapping[key].values[val]) || 'N/A';\n            if (name) {\n                res[name] = value;\n            }\n        });\n    return res;\n};\n\nconst CvssVector = props => {\n    const { cvss2_metrics: CVSS2Vector, cvss3_metrics: CVSS3Vector, intl } = props;\n    const cvssVer = (CVSS3Vector && 'CVSS 3.0') || (CVSS2Vector && 'CVSS 2.0') || 'CVSS 3.0';\n    const cvssVector = CVSS3Vector || CVSS2Vector;\n    const namesMapping = (CVSS3Vector && V3names) || (CVSS2Vector && V2names);\n    const parsedVector = parseVector(cvssVector, namesMapping);\n    const notAvailable = 'N/A';\n    delete parsedVector.cvssVersion;\n\n    return (\n        <CVEPageContext.Consumer>\n            {context => (\n                <TextContent>\n                    <Popover\n                        id=\"popover-cvss\"\n                        position=\"bottom\"\n                        maxWidth=\"100%\"\n                        enableFlip\n                        headerContent={`${cvssVer} ${intl.formatMessage(messages.cvssVectorPopoverTitle)}`}\n                        bodyContent={\n                            <WithLoader isLoading={context.isLoading} colSize={2} rowSize={8} variant={LoaderType.compactTable}>\n                                {cvssVector ?\n                                    (<Table\n                                        aria-label=\"Metric breakdown\"\n                                        variant={TableVariant.compact}\n                                        gridBreakPoint=\"\"\n                                        cells={\n                                            [intl.formatMessage(messages.cvssVectorMetric),\n                                                intl.formatMessage(messages.cvssVectorValue)]\n                                        }\n                                        rows={Object.entries(parsedVector)}\n                                    >\n                                        <TableHeader />\n                                        <TableBody />\n                                    </Table>\n                                    ) : (notAvailable)}\n                            </WithLoader>\n                        }\n                    >\n                        <Label isLarge className=\"pf-u-mb-xs pointer\">\n                            {cvssVer} {intl.formatMessage(messages.cvssVectorVectorString)}\n                            <OutlinedQuestionCircleIcon\n                                color=\"var(--pf-global--secondary-color--100)\"\n                                className=\"pf-u-ml-xs\"\n                            />\n                        </Label>\n                    </Popover>\n\n                    <WithLoader isLoading={context.isLoading} style={{ width: '320px' }}>\n                        <span className=\"pf-u-mr-md\">{props.score}</span>\n                        <span id=\"cvss-vector-content\">\n                            {intl.formatMessage(messages.vector) + ': '}\n                            {cvssVector?.substring(cvssVector.indexOf('/') + 1) || notAvailable}\n                        </span>\n                    </WithLoader>\n                </TextContent>\n            )}\n        </CVEPageContext.Consumer>\n    );\n};\n\nCvssVector.propTypes = {\n    cvss2_metrics: propTypes.string,\n    cvss3_metrics: propTypes.string,\n    score: propTypes.any,\n    intl: propTypes.any\n};\n\nexport default injectIntl(CvssVector);\n","import { Popover, Stack, StackItem } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport Label from '../Snippets/Label';\n\nconst SnippetWithHeaderAndPopover = props => {\n    const { title, value, content } = props;\n\n    return (\n        <Popover id=\"popover\" bodyContent={content} headerContent=\"\" position=\"bottom\"\n            appendTo={document.querySelector('.vulnerability')}>\n            <Stack className=\"popover-content\">\n                <StackItem>\n                    <Label isLarge>{title}</Label>\n                </StackItem>\n                <StackItem>\n                    <a>{value}</a>\n                </StackItem>\n            </Stack>\n        </Popover>\n    );\n};\n\nSnippetWithHeaderAndPopover.propTypes = {\n    title: propTypes.any,\n    value: propTypes.any,\n    content: propTypes.any\n};\nexport default SnippetWithHeaderAndPopover;\n","import { Stack, StackItem, Split, SplitItem, TextContent, Button } from '@patternfly/react-core';\nimport parseCvssScore from '@redhat-cloud-services/frontend-components-utilities/parseCvssScore';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { getImpactDetails } from '../../../Helpers/MiscHelper';\nimport CvssVector from '../CvssVector/CvssVector';\nimport messages from '../../../Messages';\nimport SnippetWithHeaderAndPopover from './SnippetWithHeaderAndPopover';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { STATUS_OPTIONS } from '../../../Helpers/constants';\nimport { useIntl } from 'react-intl';\nimport { Shield } from '@redhat-cloud-services/frontend-components/Shield';\nimport Label from '../Snippets/Label';\nimport { CVEPageContext } from '../../SmartComponents/CVEDetailsPage/CVEDetailsPage';\nimport WithLoader from '../WithLoader/WithLoader';\n\nconst CVEDetailsPageSidebar = ({ cveAttributes, canEditStatusOrBusinessRisk, showStatusModal, showBusinessRiskModal }) => {\n    const intl = useIntl();\n    const cveDetails = getImpactDetails(cveAttributes.impact || 'Unknown');\n\n    const {\n        business_risk: businessRisk,\n        business_risk_justification: businessRiskJustification,\n        status,\n        status_justification: statusJustification,\n        systems_status_detail: systemsStatusDetail,\n        systems_status_divergent: systemsStatusDivergent\n    } = cveAttributes;\n\n    const detailRows =\n        systemsStatusDetail &&\n        Object.keys(systemsStatusDetail).map(item => [\n            STATUS_OPTIONS.find(status => status.value === item.toString()).label,\n            systemsStatusDetail[item].toString()\n        ]);\n\n    const BusinessRiskPopoverContent = (\n        <Stack className=\"pf-u-p-xs\">\n            <StackItem>\n                <Label className=\"pf-u-mb-xs\">\n                    {intl.formatMessage(messages.justificationNote)}\n                </Label>\n            </StackItem>\n            <StackItem>{businessRiskJustification || '--'}</StackItem>\n            {canEditStatusOrBusinessRisk && <StackItem className=\"pf-u-mt-sm\">\n                <Button\n                    variant=\"secondary\"\n                    onClick={showBusinessRiskModal}\n                >\n                    {intl.formatMessage(messages.editBusinessRisk)}\n                </Button>\n            </StackItem>}\n        </Stack>\n    );\n\n    const StatusPopoverContent = (\n        <Stack className=\"pf-u-p-xs\">\n            <StackItem>\n                <Label className=\"pf-u-mb-xs\">\n                    {intl.formatMessage(messages.cveStatus)}\n                </Label>\n                {status || '--'}\n                <Label className=\"pf-u-mb-xs pf-u-mt-sm\">\n                    {intl.formatMessage(messages.justificationNote)}\n                </Label>\n                {statusJustification || '--'}\n            </StackItem>\n            {systemsStatusDivergent > 0 && (\n                <StackItem>\n                    <TextContent>\n                        <hr className=\"pf-u-mt-sm pf-u-mb-sm\" />\n                    </TextContent>\n                    <Label isLarge>\n                        {intl.formatMessage(messages.cveDetailsPageSystemsWTCves)}\n                    </Label>\n                    <Table\n                        aria-label=\"Status details\"\n                        gridBreakPoint=\"\"\n                        cells={[intl.formatMessage(messages.statusLabel), intl.formatMessage(messages.count)]}\n                        rows={detailRows}\n                        className=\"status-breakdown-table\"\n                        variant=\"compact\"\n                    >\n                        <TableHeader />\n                        <TableBody />\n                    </Table>\n                </StackItem>\n            )}\n            {canEditStatusOrBusinessRisk && <StackItem className=\"pf-u-mt-sm\">\n                <Button variant=\"secondary\" onClick={showStatusModal}>{intl.formatMessage(messages.editStatus)}</Button>\n            </StackItem>}\n        </Stack>\n    );\n\n    return (\n        <CVEPageContext.Consumer>\n            {context => (\n                <Stack hasGutter>\n                    <StackItem>\n                        <Split hasGutter>\n                            <SplitItem>\n                                <SnippetWithHeaderAndPopover\n                                    title={intl.formatMessage(messages.businessRiskLabel)}\n                                    value={\n                                        <WithLoader isLoading={context.isLoading} style={{ width: '100px' }}>\n                                            {businessRisk}\n                                        </WithLoader>}\n                                    content={BusinessRiskPopoverContent}\n                                />\n                            </SplitItem>\n                            <SplitItem className=\"pf-u-ml-lg\">\n                                <SnippetWithHeaderAndPopover\n                                    title={intl.formatMessage(messages.statusLabel)}\n                                    content={StatusPopoverContent}\n                                    value={\n                                        <WithLoader isLoading={context.isLoading} style={{ width: '100px' }}>\n                                            <span>\n                                                {systemsStatusDivergent > 0 && (\n                                                    <ExclamationTriangleIcon color=\"var(--pf-global--primary-color--100)\" />\n                                                )}{' '}\n                                                {status}\n                                            </span>\n                                        </WithLoader>\n                                    }\n                                />\n                            </SplitItem>\n                        </Split>\n                    </StackItem>\n\n                    <StackItem>\n                        <Label className=\"pf-u-mb-xs\" isLarge>\n                            {intl.formatMessage(messages.impact)}\n                        </Label>\n                        <WithLoader isLoading={context.isLoading} style={{ width: '100px' }}>\n                            <span id=\"severity-shield\" style={{ color: cveDetails.color }}>\n                                <Shield impact={cveDetails.title} hasLabel />\n                            </span>\n                        </WithLoader>\n                    </StackItem>\n\n                    <StackItem>\n                        <CvssVector\n                            cvss2_metrics={cveAttributes.cvss2_metrics}\n                            cvss3_metrics={cveAttributes.cvss3_metrics}\n                            score={parseCvssScore(cveAttributes.cvss2_score, cveAttributes.cvss3_score)}\n                        />\n                    </StackItem>\n                </Stack>\n            )}\n        </CVEPageContext.Consumer>\n    );\n};\n\nCVEDetailsPageSidebar.propTypes = {\n    cveAttributes: propTypes.any,\n    canEditStatusOrBusinessRisk: propTypes.bool,\n    showStatusModal: propTypes.func,\n    showBusinessRiskModal: propTypes.func\n};\n\nexport default CVEDetailsPageSidebar;\n","import { createIcon } from '../createIcon';\n\nexport const AngleDoubleDownIconConfig = {\n  name: 'AngleDoubleDownIcon',\n  height: 512,\n  width: 320,\n  svgPath: 'M143 256.3L7 120.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0L313 86.3c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.4 9.5-24.6 9.5-34 .1zm34 192l136-136c9.4-9.4 9.4-24.6 0-33.9l-22.6-22.6c-9.4-9.4-24.6-9.4-33.9 0L160 352.1l-96.4-96.4c-9.4-9.4-24.6-9.4-33.9 0L7 278.3c-9.4 9.4-9.4 24.6 0 33.9l136 136c9.4 9.5 24.6 9.5 34 .1z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const AngleDoubleDownIcon = createIcon(AngleDoubleDownIconConfig);\n\nexport default AngleDoubleDownIcon;","import { createIcon } from '../createIcon';\n\nexport const AngleDoubleUpIconConfig = {\n  name: 'AngleDoubleUpIcon',\n  height: 512,\n  width: 320,\n  svgPath: 'M177 255.7l136 136c9.4 9.4 9.4 24.6 0 33.9l-22.6 22.6c-9.4 9.4-24.6 9.4-33.9 0L160 351.9l-96.4 96.4c-9.4 9.4-24.6 9.4-33.9 0L7 425.7c-9.4-9.4-9.4-24.6 0-33.9l136-136c9.4-9.5 24.6-9.5 34-.1zm-34-192L7 199.7c-9.4 9.4-9.4 24.6 0 33.9l22.6 22.6c9.4 9.4 24.6 9.4 33.9 0l96.4-96.4 96.4 96.4c9.4 9.4 24.6 9.4 33.9 0l22.6-22.6c9.4-9.4 9.4-24.6 0-33.9l-136-136c-9.2-9.4-24.4-9.4-33.8 0z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const AngleDoubleUpIcon = createIcon(AngleDoubleUpIconConfig);\n\nexport default AngleDoubleUpIcon;","import \"../../InsightsLabel/./critical-icon.css\";\nimport React from 'react';\n\nvar CriticalIcon = function CriticalIcon() {\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    className: \"ins-c-critical-icon\",\n    viewbox: \"0 0 10 10\"\n  }, /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"10 10, 10 3, 5 0, 0 3, 0 10, 5 8\"\n  }));\n};\n\nexport default CriticalIcon;","import { createIcon } from '../createIcon';\n\nexport const EqualsIconConfig = {\n  name: 'EqualsIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M416 304H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32zm0-192H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const EqualsIcon = createIcon(EqualsIconConfig);\n\nexport default EqualsIcon;","import _extends from \"@babel/runtime/helpers/extends\";\nimport \"../../InsightsLabel/./labels.css\";\nimport AngleDoubleDownIcon from \"@patternfly/react-icons/dist/esm/icons/angle-double-down-icon\";\nimport AngleDoubleUpIcon from \"@patternfly/react-icons/dist/esm/icons/angle-double-up-icon\";\nimport CriticalIcon from './CriticalIcon';\nimport EqualsIcon from \"@patternfly/react-icons/dist/esm/icons/equals-icon\";\nimport { Label } from \"@patternfly/react-core/dist/esm/components/Label/Label.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nvar VALUE_TO_STATE = {\n  1: {\n    icon: /*#__PURE__*/React.createElement(AngleDoubleDownIcon, null),\n    text: 'Low'\n  },\n  2: {\n    icon: /*#__PURE__*/React.createElement(EqualsIcon, null),\n    text: 'Moderate'\n  },\n  3: {\n    icon: /*#__PURE__*/React.createElement(AngleDoubleUpIcon, null),\n    text: 'Important'\n  },\n  4: {\n    icon: /*#__PURE__*/React.createElement(CriticalIcon, null),\n    text: 'Critical'\n  }\n};\n\nvar InsightsLabel = function InsightsLabel(_ref) {\n  var value = _ref.value,\n      text = _ref.text,\n      hideIcon = _ref.hideIcon,\n      className = _ref.className,\n      rest = _ref.rest;\n  return /*#__PURE__*/React.createElement(Label, _extends({}, rest, {\n    className: classNames(className, \"ins-c-label-\".concat(value)),\n    icon: !hideIcon && VALUE_TO_STATE[value].icon\n  }), text || VALUE_TO_STATE[value].text);\n};\n\nInsightsLabel.propTypes = {\n  value: PropTypes.number,\n  text: PropTypes.node,\n  hideIcon: PropTypes.bool,\n  className: PropTypes.string,\n  rest: PropTypes.object\n};\nInsightsLabel.defaultProps = {\n  value: 1\n};\nexport default InsightsLabel;","import { createIcon } from '../createIcon';\n\nexport const PowerOffIconConfig = {\n  name: 'PowerOffIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M400 54.1c63 45 104 118.6 104 201.9 0 136.8-110.8 247.7-247.5 248C120 504.3 8.2 393 8 256.4 7.9 173.1 48.9 99.3 111.8 54.2c11.7-8.3 28-4.8 35 7.7L162.6 90c5.9 10.5 3.1 23.8-6.6 31-41.5 30.8-68 79.6-68 134.9-.1 92.3 74.5 168.1 168 168.1 91.6 0 168.6-74.2 168-169.1-.3-51.8-24.7-101.8-68.1-134-9.7-7.2-12.4-20.5-6.5-30.9l15.8-28.1c7-12.4 23.2-16.1 34.8-7.8zM296 264V24c0-13.3-10.7-24-24-24h-32c-13.3 0-24 10.7-24 24v240c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const PowerOffIcon = createIcon(PowerOffIconConfig);\n\nexport default PowerOffIcon;","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Stack,\n    StackItem,\n    Text,\n    TextContent,\n    TextVariants,\n    Tooltip,\n    SplitItem,\n    Split,\n    Grid,\n    GridItem,\n    Card,\n    CardBody,\n    ExpandableSection\n} from '@patternfly/react-core';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { InsightsLabel } from '@redhat-cloud-services/frontend-components/InsightsLabel';\nimport {\n    CheckCircleIcon,\n    OutlinedQuestionCircleIcon,\n    ExternalLinkAltIcon,\n    PowerOffIcon\n} from '@patternfly/react-icons';\nimport { injectIntl } from 'react-intl';\nimport Label from '../Snippets/Label';\nimport messages from '../../../Messages';\nimport {\n    RISK_OF_CHANGE_TOOLTIP,\n    RISK_OF_CHANGE_LABEL,\n    RH_KB_URL,\n    CVES_PATH,\n    impactTextList\n} from '../../../Helpers/constants';\nimport CSAwLabel from '../Snippets/CSAwLabel';\nimport CSAwRuleSummary from './CSAwRuleSummary';\nimport './CSAwRuleBox.scss';\n\nconst CSAwRuleBox = ({ rules, synopsis, changeExposedSystemsParameters, intl }) => {\n    const dispatch = useDispatch();\n\n    const sortedRules = [].concat(rules).sort((a, b) => (b.systems_affected - a.systems_affected));\n\n    const handleExposedSystemFilter = (ruleId) => {\n        dispatch(changeExposedSystemsParameters({ rule: ruleId }));\n    };\n\n    return (\n        sortedRules && sortedRules.map((rule, index) => (\n            rule.summary && (\n                <Card className=\"card-box\" key={rule.rule_id} ouiaId={'security-rule-card-' + index}>\n                    <ExpandableSection toggleText={\n                        <Split>\n                            <SplitItem className=\"pf-u-mr-xl\">\n                                <TextContent>\n                                    <Text component={TextVariants.h4}>\n                                        <CSAwLabel className=\"pf-u-mr-sm\" />\n                                        {rule.description}\n                                    </Text>\n                                </TextContent>\n                            </SplitItem>\n                            <SplitItem id=\"filter-affected-systems-split\">\n                                {rule.rule_id &&\n                                    <TextContent>\n                                        <Text\n                                            id=\"filter-affected-systems\"\n                                            onClick={event => {\n                                                handleExposedSystemFilter(rule.rule_id);\n                                                event.stopPropagation();\n                                            }}\n                                            component={TextVariants.small}\n                                        >\n                                            <Link\n                                                key={rule.rule_id}\n                                                to={`/cves/${synopsis}/?rule=${rule.rule_id}`}\n                                            >\n                                                {\n                                                    intl.formatMessage(\n                                                        messages.filterByAffectedSystems,\n                                                        {\n                                                            count: rule.systems_affected ?? -1\n                                                        }\n                                                    )\n                                                }\n                                            </Link>\n                                        </Text>\n                                    </TextContent>}\n                            </SplitItem>\n                        </Split>\n                    }>\n                        <CardBody className=\"rule-card-body\">\n                            <Grid hasGutter>\n                                <GridItem md={9} sm={12}>\n                                    <Stack hasGutter>\n                                        <StackItem>\n                                            <CSAwRuleSummary text={rule.summary} />\n                                        </StackItem>\n                                        <StackItem>\n                                            <TextContent>\n                                                <Split>\n                                                    {rule.rule_impact && (\n                                                        <SplitItem>\n                                                            <Label className=\"label pf-u-mb-xs\">\n                                                                {intl.formatMessage(messages.impact)}\n                                                            </Label>\n                                                            <Tooltip\n                                                                content={Object.values(impactTextList)[rule.rule_impact - 1]}\n                                                            >\n                                                                <InsightsLabel\n                                                                    value={rule.rule_impact}\n                                                                    className=\"severity-label\"\n                                                                />\n                                                            </Tooltip>\n                                                        </SplitItem>\n                                                    )}\n                                                    <SplitItem>\n                                                        <Label className=\"label pf-u-mb-xs\">\n                                                            {intl.formatMessage(messages.riskOfChange)}\n                                                        </Label>\n                                                        <Tooltip\n                                                            content={RISK_OF_CHANGE_TOOLTIP[rule.change_risk]}\n                                                        >\n                                                            {RISK_OF_CHANGE_LABEL[rule.change_risk]}\n                                                        </Tooltip>\n                                                    </SplitItem>\n                                                    <SplitItem>\n                                                        <Label className=\"label pf-u-mb-xs\">\n                                                            {intl.formatMessage(messages.remediationLabel)}\n                                                        </Label>\n                                                        <Split>\n                                                            <SplitItem>\n                                                                {!rule.playbook_count\n                                                                    ? intl.formatMessage(messages.no)\n                                                                    : (\n                                                                        <Fragment>\n                                                                            <CheckCircleIcon\n                                                                                className=\"checkCircleIcon pf-u-mr-xs\"\n                                                                            />\n                                                                            {intl.formatMessage(messages.yes)}\n                                                                            <Tooltip\n                                                                                content={intl.formatMessage(\n                                                                                    messages.ansibleRemediationTooltip\n                                                                                )}\n                                                                            >\n                                                                                <OutlinedQuestionCircleIcon\n                                                                                    className=\"l-sm-spacer\n                                                                                        outlinedQuestionCircleIcon\"\n                                                                                />\n                                                                            </Tooltip>\n                                                                        </Fragment>\n                                                                    )\n                                                                }\n                                                            </SplitItem>\n                                                            <SplitItem className=\"pf-u-ml-md\">\n                                                                {rule.reboot_required &&\n                                                                    <Text>\n                                                                        <PowerOffIcon\n                                                                            className=\"pf-u-mr-xs powerOffIcon\"\n                                                                        />\n                                                                        {intl.formatMessage(messages.rebootRequired)}\n                                                                    </Text>\n                                                                }\n                                                            </SplitItem>\n                                                        </Split>\n                                                    </SplitItem>\n\n                                                </Split>\n                                            </TextContent>\n                                        </StackItem>\n\n                                        {\n                                            rule.kbase_node_id &&\n                                            <StackItem>\n                                                <TextContent>\n                                                    <Text\n                                                        className=\"pf-u-mt-xs\"\n                                                        component={TextVariants.p}\n                                                    >\n                                                        <a\n                                                            className=\"kb-link\"\n                                                            href={`${RH_KB_URL}/${rule.kbase_node_id}`}\n                                                            target=\"_blank\"\n                                                            rel=\"noopener noreferrer\"\n                                                        >\n                                                            {\n                                                                intl.formatMessage(messages.knowledgebaseArticle)\n                                                            }\n                                                            <ExternalLinkAltIcon className=\"l-sm-spacer\" />\n                                                        </a>\n                                                    </Text>\n                                                </TextContent>\n                                            </StackItem>\n                                        }\n\n                                    </Stack>\n                                </GridItem>\n                                <GridItem md={3} sm={12}>\n                                    <TextContent>\n                                        <Label>\n                                            {intl.formatMessage(messages.associatedCves)}\n                                        </Label>\n                                        <Text component={TextVariants.p} className=\"pf-u-mt-xs associated-cves\">\n                                            {synopsis} ({intl.formatMessage(messages.current)})\n                                            {\n                                                rule.associated_cves\n                                                    .filter(cve => cve !== synopsis)\n                                                    .map((cve, _i) =>\n                                                        <a\n                                                            className=\"associated-cve-link\"\n                                                            key={_i}\n                                                            href={`${CVES_PATH}/${cve}`}\n                                                        >\n                                                            {cve}\n                                                        </a>\n                                                    )\n                                                    .reduce((prev, curr) => [prev, ', ', curr], [''])\n                                            }\n                                        </Text>\n                                    </TextContent>\n                                </GridItem>\n                            </Grid>\n                        </CardBody>\n                    </ExpandableSection>\n                </Card>\n            )\n        ))\n    );\n};\n\nCSAwRuleBox.defaultProps = {\n    rules: []\n};\n\nCSAwRuleBox.propTypes = {\n    intl: PropTypes.any,\n    rules: PropTypes.array,\n    synopsis: PropTypes.string,\n    changeExposedSystemsParameters: PropTypes.func\n};\n\nexport default injectIntl(CSAwRuleBox);\n","import React from 'react';\nimport { Card, CardBody, Text, TextVariants, TextContent, ExpandableSection } from '@patternfly/react-core';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport KnownExploitLabel from '../Snippets/KnownExploitLabel';\n\nexport const KnownExploitSummary = () => {\n    const intl = useIntl();\n    return (\n        <Card className=\"card-box\" ouiaId=\"known-exploit-card\">\n            <ExpandableSection toggleText={\n                <TextContent>\n                    <Text component={TextVariants.h4}>\n                        <KnownExploitLabel className=\"pf-u-mr-sm\"/>\n                        {intl.formatMessage(messages.knownExploitHeader)}\n                    </Text>\n                </TextContent>\n            }>\n                <CardBody>\n                    {intl.formatMessage(messages.knownExploitDescription)}\n                </CardBody>\n            </ExpandableSection>\n        </Card>\n    );\n};\n\nexport default KnownExploitSummary;\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport CVEDetailsPageDescription from '../CVEDetailsPageDescription/CVEDetailsPageDescription';\nimport CVEDetailsPageSidebar from '../CVEDetailsPageSidebar/CVEDetailsPageSidebar';\nimport CSAwRuleBox from '../CSAwRuleBox/CSAwRuleBox';\nimport { KnownExploitSummary } from '../KnownExploitSummary/KnownExploitSummary';\n\nconst CVEDetailsPageSummary = ({\n    data,\n    changeExposedSystemsParameters,\n    canEditStatusOrBusinessRisk,\n    showStatusModal,\n    showBusinessRiskModal\n}) => {\n    return (\n        <Grid hasGutter>\n            <GridItem md={8} sm={12}>\n                <CVEDetailsPageDescription cveAttributes={data.data} />\n            </GridItem>\n\n            <GridItem md={4} sm={12} className=\"pf-u-mt-sm pf-u-ml-sm\">\n                <CVEDetailsPageSidebar\n                    cveAttributes={data.data}\n                    canEditStatusOrBusinessRisk={canEditStatusOrBusinessRisk}\n                    showStatusModal={showStatusModal}\n                    showBusinessRiskModal={showBusinessRiskModal}\n                />\n            </GridItem>\n            {\n                data.data.known_exploit && <KnownExploitSummary/>\n            }\n\n            <CSAwRuleBox\n                changeExposedSystemsParameters={changeExposedSystemsParameters}\n                synopsis={data.data.synopsis}\n                rules={data.data.rules}\n            />\n        </Grid>\n    );\n};\n\nCVEDetailsPageSummary.propTypes = {\n    data: propTypes.object,\n    changeExposedSystemsParameters: propTypes.func,\n    canEditStatusOrBusinessRisk: propTypes.bool,\n    showStatusModal: propTypes.func,\n    showBusinessRiskModal: propTypes.func\n};\n\nexport default CVEDetailsPageSummary;\n","import React, { Fragment } from 'react';\nimport propTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport Remediation from '../Remediation/Remediation';\nimport messages from '../../../Messages';\nimport securityRuleFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/SecurityRuleFilter';\nimport statusFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/StatusFilter';\nimport useOsVersionFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/OsVersionFilter';\nimport { exportConfig, buildActiveFilters, removeFilters } from '../../../Helpers/TableToolbarHelper';\nimport { dataShape } from '../../../Helpers/MiscHelper';\nimport { useBulkSelect } from '../../../Helpers/Hooks';\nimport useSearchFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/SearchFilter';\nimport {\n    fetchAffectedSystemsIdsByCve\n} from '../../../Store/Actions/Actions';\nimport {\n    RULE_ABSENCE_OPTIONS, ANSIBLE_REMEDIATION\n} from '../../../Helpers/constants';\nimport remediationFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/RemediationFilter';\n\nexport const SystemsExposedTableToolbar = ({\n    rawData,\n    cveName,\n    cveStatusDetails,\n    selectedRows,\n    selectedRowsCount,\n    selectedRowsRawData,\n    filterRuleValues,\n    expandAll,\n    hasSecurityRule,\n    isAllExpanded,\n    parameters,\n    methods,\n    canEditPairStatus,\n    canExport,\n    children\n}) => {\n    const intl = useIntl();\n    const { apply, showStatusModal, handleSelect, downloadReport, setColumnModalOpen } = methods;\n    const { isLoaded, meta } = rawData;\n\n    const remediableSystems = selectedRowsRawData.filter(system => system.remediation === ANSIBLE_REMEDIATION);\n\n    const kebabOptions = ['',\n        ...canEditPairStatus ? [{\n            label: intl.formatMessage(messages.editStatus),\n            onClick: () => showStatusModal([cveStatusDetails], selectedRowsRawData),\n            props: { isDisabled: !selectedRowsCount }\n        }] : [],\n        {\n            label: intl.formatMessage(messages.columnManagementModalTitle),\n            onClick: () => setColumnModalOpen(true)\n        }\n    ];\n\n    const searchFilter = useSearchFilter(\n        'filter',\n        messages.systemsSearchName,\n        messages.searchFilterByName,\n        parameters.filter,\n        apply\n    );\n\n    const advisoryFilter = useSearchFilter(\n        'advisory',\n        messages.advisory,\n        messages.searchFilterByAdvisory,\n        parameters.advisory,\n        apply\n    );\n\n    const osVersionFilter = useOsVersionFilter(\n        parameters.rhel_version,\n        apply\n    );\n\n    const bulkSelectProps = useBulkSelect({\n        rawData,\n        selectedRows,\n        selectedRowsCount,\n        handleSelect,\n        fetchResource: ops => fetchAffectedSystemsIdsByCve({ id: cveName, ...parameters, ...ops })\n    });\n\n    if (isAllExpanded) {\n        if (rawData.data.filter(row => row.isOpen === undefined).length > 0) {\n            expandAll(rawData, false);\n        }\n    }\n\n    return <Fragment>\n        <PrimaryToolbar\n            className=\"vuln-systems-primary-toolbar\"\n            exportConfig={canExport && {\n                isDisabled: meta.totalItems === 0,\n                ouiaId: 'export',\n                ...exportConfig({ downloadReport })\n            }}\n            dedicatedAction={(isLoaded &&\n                <Remediation\n                    manyRules\n                    isDisabled={selectedRowsRawData.length === 0}\n                    systems={remediableSystems}\n                    cves={{ id: cveName, rules: filterRuleValues }}\n                />\n            )}\n            actionsConfig={{\n                actions: kebabOptions,\n                dropdownProps: { ouiaId: 'toolbar-actions' }\n            }}\n            activeFiltersConfig={{\n                filters: buildActiveFilters({ ...parameters }, filterRuleValues),\n                onDelete: (_, chips) => removeFilters(chips, apply),\n                deleteTitle: intl.formatMessage(messages.resetFilters)\n            }}\n            bulkSelect={bulkSelectProps}\n            filterConfig={{\n                items: [\n                    searchFilter,\n                    securityRuleFilter(\n                        apply,\n                        parameters,\n                        filterRuleValues,\n                        {\n                            isDynamic: true,\n                            dropdownItems: RULE_ABSENCE_OPTIONS\n                        }\n                    ),\n                    statusFilter(apply, parameters),\n                    advisoryFilter,\n                    osVersionFilter,\n                    remediationFilter(apply, parameters)\n                ]\n            }}\n            expandAll={hasSecurityRule ? {\n                isAllExpanded,\n                onClick: () => expandAll(rawData, isAllExpanded)\n            } : undefined}\n        />\n        {children}\n    </Fragment>;\n};\n\nSystemsExposedTableToolbar.propTypes = {\n    rawData: dataShape,\n    parameters: propTypes.object,\n    cveName: propTypes.string,\n    cveStatusDetails: propTypes.object,\n    filterRuleValues: propTypes.object,\n    expandAll: propTypes.func,\n    hasSecurityRule: propTypes.bool,\n    isAllExpanded: propTypes.bool,\n    selectedRows: propTypes.array,\n    selectedRowsCount: propTypes.number,\n    selectedRowsRawData: propTypes.array,\n    children: propTypes.node,\n    methods: propTypes.shape({\n        apply: propTypes.func,\n        handleSelect: propTypes.func,\n        showStatusModal: propTypes.func,\n        downloadReport: propTypes.func,\n        setColumnModalOpen: propTypes.func\n    }),\n    canEditPairStatus: propTypes.bool,\n    canExport: propTypes.bool\n};\n","import propTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport { useUrlParams } from '../../../Helpers/MiscHelper';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport React, { useEffect, useState } from 'react';\nimport CvePairStatusModal from '../Modals/CvePairStatusModal';\nimport ReducerRegistry from '../../../Utilities/ReducerRegistry';\nimport { Text, TextContent, TextVariants, Stack, StackItem } from '@patternfly/react-core';\nimport { systemExposedTableRowActions, createExposedSystemsRows } from '../../../Helpers/CVEHelper';\nimport { inventoryEntitiesReducer } from '../../../Store/Reducers/InventoryEntitiesReducer';\nimport DownloadReport from '../../../Helpers/DownloadReport';\nimport {\n    fetchAffectedSystemsByCVE,\n    fetchCveDetails,\n    expandRow,\n    changeExposedSystemsParameters,\n    clearInventoryStore,\n    selectRows,\n    changeColumnsCveDetail\n} from '../../../Store/Actions/Actions';\nimport { SYSTEMS_EXPOSED_HEADER, SYSTEMS_EXPOSED_ALLOWED_PARAMS, PERMISSIONS } from '../../../Helpers/constants';\nimport { TableVariant } from '@patternfly/react-table';\nimport { InventoryTable } from '@redhat-cloud-services/frontend-components/Inventory';\nimport ErrorHandler from '../../PresentationalComponents/ErrorHandler/ErrorHandler';\nimport {\n    addNotification,\n    clearNotifications\n} from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { EmptyStateNoSystems } from '../../PresentationalComponents/EmptyStates/EmptyStates';\nimport { SystemsExposedTableToolbar } from './SystemsExposedTableToolbar';\nimport { useGetEntities, useRbac } from '../../../Helpers/Hooks';\nimport * as APIHelper from '../../../Helpers/APIHelper';\nimport ColumnManagementModal from '../Modals/ColumnManagementModal';\nimport Spinner from '@redhat-cloud-services/frontend-components/Spinner';\n\nconst SystemsExposedTable = ({\n    intl, cveName, cveStatusDetails, filterRuleValues,\n    hasSecurityRule, canEditPairStatus, canExport, inventoryRef, refreshInventory\n}) => {\n    const [[\n        canReadHostsInventory],\n    isLoadingInventory] = useRbac([\n        PERMISSIONS.readHosts\n    ], 'inventory');\n\n    const dispatch = useDispatch();\n    const [isAllExpanded, setIsAllExpanded] = useState(false);\n    const [StatusModal, setStatusModal] = useState(() => () => null);\n    const [urlParameters, setUrlParams] = useUrlParams(SYSTEMS_EXPOSED_ALLOWED_PARAMS);\n    const [isColumnModalOpen, setColumnModalOpen] = useState(false);\n\n    const items = useSelector(({ entities }) => entities?.rows || [], shallowEqual);\n    const totalItems = useSelector(({ entities }) => entities?.total);\n    const meta = useSelector(({ entities }) => entities?.meta);\n    const error = useSelector(({ entities }) => entities?.error || {});\n    const selectedRows = useSelector(({ entities }) => entities?.selectedRows || {});\n    const selectedRowsCount = useSelector(({ entities }) => entities?.selectedRowsCount ?? 0);\n    const selectedRowsRawData = useSelector(({ entities }) => entities?.selectedRowsRawData || []);\n    const isLoaded = useSelector(({ entities }) => entities?.loaded || false);\n\n    const parameters = useSelector(\n        ({ CVEDetailsPageStore }) => CVEDetailsPageStore.parameters,\n        shallowEqual\n    );\n    const columns = useSelector(\n        ({ CVEDetailsPageStore }) => CVEDetailsPageStore.columns\n    );\n\n    const apply = (params) => dispatch(changeExposedSystemsParameters(params));\n\n    const handleSelect = (payload) => dispatch(selectRows(payload));\n\n    useEffect(() => apply(urlParameters), []);\n\n    useEffect(() => setUrlParams({ ...parameters, ...meta }), [setUrlParams, parameters, meta]);\n\n    useEffect(() => {\n        return () => {\n            dispatch(clearInventoryStore());\n        };\n    }, [dispatch]);\n\n    const downloadReport = format => {\n        DownloadReport.exec(\n            fetchAffectedSystemsByCVE,\n            { id: cveName, ...parameters },\n            format,\n            'systems-exposed',\n            notification => dispatch(addNotification(notification)), () => dispatch(clearNotifications())\n        );\n    };\n\n    const showStatusModal = (cves, inventories) => {\n        setStatusModal(\n            () => () =>\n                <CvePairStatusModal\n                    cveList={cves}\n                    updateRef={() => {\n                        refreshInventory();\n                        dispatch(fetchCveDetails(cveName));\n                    }}\n                    inventoryList={inventories}\n                    type=\"systemsExposed\"\n                />\n        );\n    };\n\n    const expandAll = (rawData, isAllExpanded) => {\n        rawData.data.forEach(row => {\n            dispatch((expandRow(row.id, !isAllExpanded)));\n        });\n        setIsAllExpanded(!isAllExpanded);\n    };\n\n    const getEntities = useGetEntities(\n        APIHelper.getAffectedSystemsByCVE,\n        {\n            id: cveName,\n            createRows: createExposedSystemsRows\n        }\n    );\n\n    const [columnCounter, setColumnCount] = useState(0);\n    useEffect(() => setColumnCount(columnCounter + 1), [columns]);\n\n    const mergeColumns = inventoryColumns => {\n        return columns\n            .filter(column => column.isShown ?? column.isShownByDefault)\n            .map(column => ({ ...inventoryColumns.find(({ key }) => column.key === key), ...column }));\n    };\n\n    return (\n        <Stack hasGutter>\n            <StackItem>\n                <TextContent>\n                    <Text component={TextVariants.h2}>\n                        {intl.formatMessage(messages.affectsSystems)}\n                    </Text>\n                </TextContent>\n            </StackItem>\n            <StackItem>\n                {isLoadingInventory ? <Spinner centered/> :\n                    error?.hasError && !canReadHostsInventory\n                        ? <ErrorHandler code={error?.errorCode}/>\n                        : <InventoryTable\n                            disableDefaultColumns\n                            onLoad={({ mergeWithEntities }) => {\n                                ReducerRegistry.register({\n                                    ...mergeWithEntities(\n                                        inventoryEntitiesReducer(SYSTEMS_EXPOSED_HEADER),\n                                        {\n                                            page: Number(parameters.page || 1),\n                                            perPage: 20,\n                                            ...(parameters.sort && {\n                                                sortBy: {\n                                                    key: parameters.sort.replace(/^-/, ''),\n                                                    direction: parameters.sort.match(/^-/) ? 'desc' : 'asc'\n                                                }\n                                            })\n                                        }\n                                    )\n                                });\n                            }}\n                            tableProps={{\n                                isStickyHeader: true,\n                                canSelectAll: false,\n                                actionResolver: () => canEditPairStatus && totalItems &&\n                                    systemExposedTableRowActions(showStatusModal, cveStatusDetails),\n                                variant: TableVariant.compact\n                            }}\n                            paginationProps={{\n                                isDisabled: !totalItems\n                            }}\n                            showTagModal\n                            isFullView\n                            ref={inventoryRef}\n                            autoRefresh\n                            key=\"inventory\"\n                            customFilters={{\n                                vulnerabilityParams: {\n                                    ...parameters\n                                }\n                            }}\n                            expandable={hasSecurityRule}\n                            columnsCounter={columnCounter}\n                            columns={defaultColumns => mergeColumns(defaultColumns)}\n                            getEntities={getEntities}\n                            hasCheckbox={totalItems !== 0}\n                            showActions={totalItems !== 0}\n                            onExpandClick={(_e, _i, isOpen, { id }) => dispatch(expandRow(id, isOpen))}\n                            hideFilters={{ all: true }}\n                            noSystemsTable={<EmptyStateNoSystems/>}\n                        >\n                            <SystemsExposedTableToolbar\n                                rawData={{ data: items, meta: { totalItems }, isLoaded }}\n                                parameters={parameters}\n                                cveName={cveName}\n                                expandAll={expandAll}\n                                hasSecurityRule={hasSecurityRule}\n                                isAllExpanded={isAllExpanded}\n                                selectedRows={selectedRows}\n                                selectedRowsCount={selectedRowsCount}\n                                selectedRowsRawData={selectedRowsRawData}\n                                cveStatusDetails={cveStatusDetails}\n                                filterRuleValues={filterRuleValues}\n                                methods={{\n                                    downloadReport,\n                                    apply,\n                                    handleSelect,\n                                    showStatusModal,\n                                    setColumnModalOpen\n                                }}\n                                canEditPairStatus={canEditPairStatus}\n                                canExport={canExport}\n                            >\n                                {StatusModal && <StatusModal/>}\n                                <ColumnManagementModal\n                                    appliedColumns={columns}\n                                    applyColumns={newColumns => dispatch(changeColumnsCveDetail(newColumns))}\n                                    isModalOpen={isColumnModalOpen}\n                                    setModalOpen={setColumnModalOpen}\n                                />\n                            </SystemsExposedTableToolbar>\n                        </InventoryTable>}\n            </StackItem>\n        </Stack>\n    );\n};\n\nSystemsExposedTable.propTypes = {\n    intl: propTypes.object,\n    cveName: propTypes.string,\n    cveStatusDetails: propTypes.object,\n    filterRuleValues: propTypes.array,\n    hasSecurityRule: propTypes.bool,\n    canEditPairStatus: propTypes.bool,\n    canExport: propTypes.bool,\n    inventoryRef: propTypes.object,\n    refreshInventory: propTypes.func\n};\n\nexport default injectIntl(SystemsExposedTable);\n","import { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport React, { useMemo, useState, useEffect, Fragment } from 'react';\nimport { createCveDetailsPage } from '../../../Helpers/CVEHelper';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    fetchCveDetails,\n    changeExposedSystemsParameters,\n    clearInventoryStore,\n    clearCveStore\n} from '../../../Store/Actions/Actions';\nimport { PATHS, PERMISSIONS } from '../../../Helpers/constants';\nimport CVEDetailsPageSummary from '../../PresentationalComponents/CVEDetailsPageSummary/CVEDetailsPageSummary';\nimport { kebabItemEditBusinessRisk, kebabItemEditStatus } from '../../PresentationalComponents/Kebab/KebabItems';\nimport BusinessRiskModal from '../Modals/BusinessRiskModal';\nimport CveStatusModal from '../Modals/CveStatusModal';\nimport SystemsExposedTable from '../SystemsExposedTable/SystemsExposedTable';\nimport Header from '../../PresentationalComponents/Header/Header';\nimport GroupedCVELabels from '../../PresentationalComponents/Snippets/GroupedCVELabels';\nimport ErrorHandler from '../../PresentationalComponents/ErrorHandler/ErrorHandler';\nimport { useRbac } from '../../../Helpers/Hooks';\nimport { NotAuthorized } from '../../PresentationalComponents/EmptyStates/EmptyStates';\nimport { clearNotifications } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { useRouteMatch } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nexport const CVEPageContext = React.createContext({ isLoading: true });\n\nconst CVEDetailsPage = () => {\n    const dispatch = useDispatch();\n    const inventoryRef = React.createRef();\n    const match = useRouteMatch();\n    const intl = useIntl();\n\n    const [[canEditPairStatus, canEditStatusOrBusinessRisk, canExport, canReadVulnerabilityResults], isRbacLoading] = useRbac([\n        PERMISSIONS.setPairStatus,\n        PERMISSIONS.setCveStatusAndBusinessRisk,\n        PERMISSIONS.basicReporting,\n        PERMISSIONS.readVulnerabilityResults\n    ]);\n\n    const [cveName] = useState(match.params.cve);\n    const [BusinessModal, setBusinessRisk] = useState(() => () => null);\n    const [StatusModal, setStatusModal] = useState(() => () => null);\n\n    const details = useSelector(\n        ({ CVEDetailsPageStore }) => CVEDetailsPageStore.cveDetails\n    );\n    const cveDetails = useMemo(() => createCveDetailsPage(details), [details]);\n    const totalItems = useSelector(({ entities }) => entities?.total);\n\n    useEffect(() => {\n        dispatch(fetchCveDetails(cveName));\n    }, [dispatch, cveName]);\n\n    const refreshInventory = () => (\n        dispatch(clearInventoryStore()),\n        inventoryRef.current.onRefreshData(({ page: 1 }))\n    );\n\n    const showBusinessRiskModal = cves => {\n        setBusinessRisk(\n            () => () =>\n                <BusinessRiskModal open cves={cves} updateRef={() => dispatch(fetchCveDetails(cveName))} />\n        );\n    };\n\n    const showStatusModal = cves => {\n        setStatusModal(\n            () => () =>\n                <CveStatusModal\n                    cves={cves}\n                    updateRef={overwriteSystemsStatus => {\n                        dispatch(fetchCveDetails(cveName));\n                        overwriteSystemsStatus && refreshInventory();\n                    }}\n                    canEditPairStatus={canEditPairStatus}\n                />\n        );\n    };\n\n    useEffect(() => {\n        return () => {\n            dispatch(clearCveStore());\n            dispatch(clearNotifications());\n        };\n    }, [dispatch]);\n\n    const { error, data } = cveDetails;\n\n    const cveStatusDetails = {\n        id: cveName,\n        status_id: cveDetails.data.status_id,\n        justification: cveDetails.data.status_justification,\n        exposed_systems_count: totalItems || 0\n    };\n\n    const cveBusinessRiskDetails = {\n        business_risk_id: cveDetails.data.business_risk_id,\n        id: cveName,\n        justification: cveDetails.data.business_risk_justification\n    };\n\n    const kebabItems = [\n        kebabItemEditBusinessRisk(showBusinessRiskModal, [cveBusinessRiskDetails]),\n        kebabItemEditStatus(showStatusModal, [cveStatusDetails])\n    ];\n    const { rules } = data;\n    const filterRuleValues = rules && rules.map(\n        ({ rule_id: ruleId, description }) => ({ value: ruleId, label: description })\n    );\n\n    const createBreadcrumbs = lastSegment =>\n        [\n            {\n                title: PATHS.cvesPage.title,\n                to: PATHS.cvesPage.to,\n                loaded: true\n            },\n            {\n                title: lastSegment,\n                isActive: true,\n                loaded: true\n            }\n        ];\n\n    return (\n        <CVEPageContext.Provider value={cveDetails && { isLoading: cveDetails.isLoading || isRbacLoading }}>\n            {canReadVulnerabilityResults ? (\n                error?.hasError ? (\n                    <React.Fragment>\n                        <Header title={cveName} breadcrumbs={createBreadcrumbs(intl.formatMessage(messages.unknownCveId))}/>\n                        <ErrorHandler code={error?.errorCode} />\n                    </React.Fragment>\n                ) : (\n                    <Fragment>\n                        <Header\n                            title={data.celebrity_name ? cveName + ' - ' + data.celebrity_name : cveName}\n                            actions={canEditStatusOrBusinessRisk && kebabItems}\n                            actionsOuiaId=\"cve-actions\"\n                            breadcrumbs={createBreadcrumbs(cveName)}\n                            labels={[\n                                <GroupedCVELabels\n                                    key=\"labels\"\n                                    hasExploit={!!details.payload.data?.attributes.known_exploit}\n                                    hasRule={details.payload.data?.attributes.rules.length > 0}\n                                />\n                            ]}\n                        >\n                            <CVEDetailsPageSummary\n                                changeExposedSystemsParameters={changeExposedSystemsParameters}\n                                canEditStatusOrBusinessRisk={canEditStatusOrBusinessRisk}\n                                data={cveDetails}\n                                showStatusModal={() => showStatusModal([cveStatusDetails])}\n                                showBusinessRiskModal={() => showBusinessRiskModal([cveBusinessRiskDetails])}\n                            />\n                            <StatusModal />\n                            <BusinessModal />\n                        </Header>\n                        <Main>\n                            <SystemsExposedTable\n                                cveName={cveName}\n                                filterRuleValues={filterRuleValues}\n                                cveStatusDetails={cveStatusDetails}\n                                hasSecurityRule={rules?.length > 0}\n                                canEditPairStatus={canEditPairStatus}\n                                canExport={canExport}\n                                inventoryRef={inventoryRef}\n                                refreshInventory={refreshInventory}\n                            />\n                        </Main>\n                    </Fragment>\n                )) : (\n                <React.Fragment>\n                    <Header title={cveName} breadcrumbs={createBreadcrumbs(cveName)} />\n                    <NotAuthorized />\n                </React.Fragment>\n            )}\n        </CVEPageContext.Provider>\n    );\n};\n\nexport default CVEDetailsPage;\n","import { Button, FormGroup, FormSelect, FormSelectOption, Modal, TextArea } from '@patternfly/react-core';\nimport {\n    addNotification\n} from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport propTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { NotAuthorizedNotification, ReadOnlyNotification, STATUS_OPTIONS } from '../../../Helpers/constants';\nimport messages from '../../../Messages';\nimport { FormattedMessage } from 'react-intl';\n\nexport function useStatusSelect(initialValue) {\n    const [statusId, setStatusId] = useState(initialValue);\n    const [props, setProps] = useState({});\n\n    const StatusSelect = (\n        <FormGroup label={<FormattedMessage {...messages.statusLabel} />} fieldId=\"statusId\">\n            <FormSelect aria-label=\"Select Input\" onChange={selection => setStatusId(selection)} value={statusId} {...props}>\n                {STATUS_OPTIONS.map(({ value, label }) => (\n                    <FormSelectOption key={value} value={value} label={label} />\n                ))}\n            </FormSelect>\n        </FormGroup>\n    );\n\n    return { StatusSelect, statusId, setStatusId, setProps };\n}\n\nexport function useJustificationInput(initialValue) {\n    const [justification, setJustification] = useState(initialValue);\n    const [props, setProps] = useState({});\n\n    const JustificationInput = (\n        <FormGroup label={<FormattedMessage {...messages.justificationLabel} />} fieldId=\"label\">\n            <TextArea\n                key=\"input\"\n                type=\"text\"\n                onChange={value => setJustification(value)}\n                value={justification}\n                resizeOrientation=\"vertical\"\n                aria-label=\"justification note\"\n                style={{ minHeight: '2.25rem' }}\n                {...props}\n            />\n        </FormGroup>\n    );\n    return { JustificationInput, justification, setJustification, setProps };\n}\n\nexport const BaseModal = ({ items, title, onSave, onSuccessNotification, onFailureNotification, ouiaId, children }) => {\n    const [targetItems, setTargetItems] = useState(items);\n\n    const dispatch = useDispatch();\n\n    const handleClose = () => {\n        setTargetItems(undefined);\n    };\n\n    const handleSave = () => {\n        onSave()\n            .then(() => dispatch(addNotification(onSuccessNotification)))\n            .catch((error) => dispatch(addNotification(\n                error.status === '503' ? ReadOnlyNotification :\n                    error.status === '403' ? NotAuthorizedNotification\n                        : onFailureNotification)));\n        handleClose();\n    };\n\n    return (\n        <Modal\n            variant=\"small\"\n            title={title}\n            isOpen={Boolean(targetItems)}\n            onClose={handleClose}\n            actions={[\n                <Button key=\"save\" variant=\"primary\" ouiaId=\"save\" onClick={handleSave}>\n                    <FormattedMessage {...messages.save} />\n                </Button>,\n                <Button key=\"cancel\" variant=\"secondary\" ouiaId=\"close\" onClick={handleClose}>\n                    <FormattedMessage {...messages.cancel} />\n                </Button>\n            ]}\n            ouiaId={ouiaId}\n        >\n            {children}\n        </Modal>\n    );\n};\n\nBaseModal.propTypes = {\n    children: propTypes.any,\n    onClose: propTypes.func,\n    items: propTypes.array,\n    updateRef: propTypes.func,\n    title: propTypes.string,\n    onSave: propTypes.func,\n    onSuccessNotification: propTypes.object,\n    onFailureNotification: propTypes.object,\n    ouiaId: propTypes.string\n};\n\nexport default BaseModal;\n","import { Form, FormGroup, Radio, Stack, StackItem, TextArea } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { setBusinessRisk } from '../../../Helpers/APIHelper';\nimport { BUSINESS_RISK_OPTIONS } from '../../../Helpers/constants';\nimport BaseModal from './BaseModal';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nexport const BusinessRiskModal = ({ cves, updateRef, intl }) => {\n    const [cveList] = useState(cves);\n    const [businessRiskId, setBusinessRiskId] = useState('0');\n    const [label, setLabel] = useState();\n\n    const getDefaultLabel = useCallback(() => {\n        setLabel((cveList && cveList.length === 1 && cveList[0].justification) || '');\n    }, [cveList]);\n\n    useEffect(() => {\n        const getDefaultBusinessRisk = () => {\n            setBusinessRiskId((cveList && cveList.length === 1 && cveList[0].business_risk_id.toString()) || '0');\n        };\n\n        getDefaultBusinessRisk();\n        getDefaultLabel();\n    }, [cves, getDefaultLabel, cveList]);\n\n    useEffect(getDefaultLabel, [getDefaultLabel]);\n\n    const handleOnRadioChange = (_, event) => {\n        const { value } = event.currentTarget;\n        setBusinessRiskId(value);\n    };\n\n    const handleOnLabelChange = value => {\n        setLabel(value);\n    };\n\n    const handleSave = () => {\n        return setBusinessRisk({\n            business_risk_id: parseInt(businessRiskId),\n            cve: cveList.map(item => item.id),\n            business_risk_text: label\n        }).then(updateRef).catch(error => {\n            throw error; // propagate error to BaseModal\n        });\n    };\n\n    const onSuccessNotification = {\n        variant: 'success',\n        title: intl.formatMessage(messages.notificationBusinessRiskUpdateSuccessful, { count: cveList.length || 0 })\n    };\n\n    const onFailureNotification = {\n        variant: 'danger',\n        autoDismiss: false,\n        title: intl.formatMessage(messages.notificationBusinessRiskUpdateFailureTitle),\n        description: intl.formatMessage(messages.notificationBusinessRiskUpdateFailureBody)\n    };\n\n    return (\n        <BaseModal\n            items={cveList}\n            onSave={handleSave}\n            onSuccessNotification={onSuccessNotification}\n            onFailureNotification={onFailureNotification}\n            title={intl.formatMessage(messages.businessRiskModalTitle)}\n            ouiaId=\"business-risk-modal\"\n        >\n            <Stack hasGutter>\n                <StackItem>\n                    {intl.formatMessage(messages.businessRiskModalInfo)}\n                </StackItem>\n                <StackItem>\n                    <Form>\n                        <FormGroup label={intl.formatMessage(messages.businessRiskLabel)} fieldId=\"businessRiskId\">\n                            {BUSINESS_RISK_OPTIONS.map(item => (\n                                <Radio\n                                    className=\"business-risk-radio\"\n                                    value={item.value}\n                                    isChecked={businessRiskId === item.value}\n                                    onChange={handleOnRadioChange}\n                                    label={item.label}\n                                    key={item.value}\n                                    id={item.value}\n                                    name={item.label}\n                                    aria-label={item.label}\n                                    ouiaId=\"business-risk-radio\"\n                                />\n                            ))}\n                        </FormGroup>\n                        <FormGroup label={intl.formatMessage(messages.justificationLabel)} fieldId=\"label\">\n                            <TextArea\n                                type=\"text\"\n                                onChange={handleOnLabelChange}\n                                value={label}\n                                resizeOrientation=\"vertical\"\n                                aria-label=\"justification\"\n                                style={{ minHeight: '2.25rem' }}\n                            />\n                        </FormGroup>\n                    </Form>\n                </StackItem>\n            </Stack>\n        </BaseModal>\n    );\n};\n\nBusinessRiskModal.propTypes = {\n    cves: propTypes.array,\n    updateRef: propTypes.func,\n    intl: propTypes.any\n};\n\nexport default injectIntl(BusinessRiskModal);\n","import { Checkbox, Form, FormGroup, Split, SplitItem, Stack, StackItem, Tooltip } from '@patternfly/react-core';\nimport { InfoCircleIcon, OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport propTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { setCveStatus, setSystemCveStatus } from '../../../Helpers/APIHelper';\nimport BaseModal, { useJustificationInput, useStatusSelect } from './BaseModal';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\n\nexport const CveStatusModal = ({ cves, updateRef, intl, canEditPairStatus }) => {\n    const [cveList] = useState(cves);\n    const { StatusSelect, statusId, setProps: setSelectProps } = useStatusSelect(getDefaultStatus());\n    const { JustificationInput, justification } = useJustificationInput(getDefaultJustification());\n    const [checkboxState, setCheckboxState] = useState(false);\n\n    const cvesWithExposedSystems = cveList.filter(item => item.exposed_systems_count > 0).map(item => item.id);\n\n    useEffect(() => {\n        setSelectProps({ ouiaId: 'status-select' });\n    }, [setSelectProps]);\n\n    const handleSave = () => {\n        return Promise.all([\n            setCveStatus({\n                cve: cveList.map(item => item.id),\n                status_id: parseInt(statusId),\n                status_text: justification\n            }),\n            ...[(!checkboxState && cvesWithExposedSystems.length > 0 && canEditPairStatus) &&\n                setSystemCveStatus({\n                    cve: cvesWithExposedSystems,\n                    status_id: parseInt(statusId),\n                    status_text: justification\n                })\n            ]\n        ])\n            .then(() => updateRef(!checkboxState))\n            .catch(error => { throw error; }); // propagate error to BaseModal\n    };\n\n    function getDefaultStatus() {\n        return (cveList && cveList.every(item => item.status_id === cveList[0].status_id)\n            && cveList[0].status_id.toString()) || '0';\n    }\n\n    function getDefaultJustification() {\n        return (cveList && cveList.every(item => item.justification === cveList[0].justification)\n            && cveList[0].justification) || '';\n    }\n\n    const onSuccessNotification = {\n        variant: 'success',\n        title: intl.formatMessage(messages.notificationStatusUpdateSuccessful, { count: cveList.length || 0 })\n    };\n\n    const onFailureNotification = {\n        variant: 'danger',\n        autoDismiss: false,\n        title: intl.formatMessage(messages.notificationStatusUpdateFailureTitle),\n        description: intl.formatMessage(messages.notificationStatusUpdateFailureBody)\n    };\n\n    const title = intl.formatMessage(messages.cveStatusModalTitle, { count: cveList.length || 0 });\n\n    return (\n        <BaseModal\n            items={cveList}\n            onSave={handleSave}\n            onSuccessNotification={onSuccessNotification}\n            onFailureNotification={onFailureNotification}\n            title={title}\n            ouiaId=\"status-modal\"\n        >\n            <Stack hasGutter>\n                <StackItem>\n                    {intl.formatMessage(\n                        messages.cveStatusModalSelected,\n                        {\n                            count: cveList.length || 0,\n                            cveId: cveList[0].id, // only used when length is 1\n                            b: (...chunks) => <b>{chunks}</b> // explicitly specifying what is wrapped <b> should be bold\n                        }\n                    )}\n                </StackItem>\n                <StackItem>\n                    <InfoCircleIcon\n                        className=\"pf-u-mr-xs\"\n                        fontSize=\"var(--pf-global--FontSize--md)\"\n                        color=\"var(--pf-global--active-color--300)\"\n                    />\n                    {intl.formatMessage(messages.cveStatusModalInfo, { count: cveList.length || 0 })}\n                    <Tooltip\n                        content={intl.formatMessage(messages.cveStatusModalInfoTooltip)}\n                    >\n                        <OutlinedQuestionCircleIcon\n                            className=\"pf-u-ml-xs\"\n                            color=\"var(--pf-global--Color--200)\"\n                        />\n                    </Tooltip>\n                </StackItem>\n                <StackItem>\n                    <Form key=\"key\">\n                        {StatusSelect}\n                        {JustificationInput}\n                        {cvesWithExposedSystems.length > 0 && canEditPairStatus &&\n                            <FormGroup fieldId=\"overwrite\">\n                                <Split>\n                                    <SplitItem>\n                                        <Checkbox\n                                            label={intl.formatMessage(messages.cveStatusModalOverwriteCheckbox)}\n                                            id=\"alt-form-checkbox-1\"\n                                            name=\"alt-form-checkbox-1\"\n                                            isChecked={checkboxState}\n                                            onChange={checked => setCheckboxState(checked)}\n                                        />\n                                    </SplitItem>\n                                    <SplitItem>\n                                        <Tooltip\n                                            content={intl.formatMessage(messages.cveStatusModalOverwriteTooltip)}\n                                        >\n                                            <OutlinedQuestionCircleIcon\n                                                className=\"pf-u-ml-xs\"\n                                                color=\"var(--pf-global--Color--200)\"\n                                                style={{ verticalAlign: '0' }}\n                                            />\n                                        </Tooltip>\n                                    </SplitItem>\n                                </Split>\n                            </FormGroup>\n                        }\n                    </Form>\n                </StackItem>\n            </Stack>\n        </BaseModal>\n    );\n};\n\nCveStatusModal.propTypes = {\n    cves: propTypes.array,\n    updateRef: propTypes.func,\n    intl: propTypes.any,\n    canEditPairStatus: propTypes.bool.isRequired\n};\n\nexport default injectIntl(CveStatusModal);\n","import { selectRows } from './reducersHelper';\nimport * as ActionTypes from '../ActionTypes';\nimport unionBy from 'lodash/unionBy';\n\nexport const initialState = {\n    columns: [],\n    rows: [],\n    entities: [],\n    loaded: false,\n    tagsLoaded: false,\n    allTagsLoaded: false,\n    invConfig: {},\n    sortBy: {\n        key: 'updated',\n        direction: 'desc'\n    },\n    page: 1,\n    perPage: 20,\n    selectedRows: {},\n    prevLoadedRows: [],\n    selectedRowsRawData: [],\n    selectedRowsCount: 0\n};\n\nfunction modifyInventory(columns, state, action) {\n    let advisory = columns.find(({ key }) => key === 'advisory');\n\n    if (!state.selectedRows) {\n        state.selectedRows = {};\n    }\n\n    if (!state.sortBy) {\n        state.sortBy = {\n            key: 'updated',\n            direction: 'desc'\n        };\n    }\n\n    if (state.loaded) {\n        let hasPatchAccess = state.rows.some(({ patchAccess }) => patchAccess);\n\n        if (!hasPatchAccess && advisory) {\n            advisory.isShown = false;\n        }\n\n        return {\n            ...state,\n            columns,\n            rows: state.rows.map(row => ({\n                ...row,\n                selected: state.selectedRows[row.id] || false\n            })),\n            prevLoadedRows: unionBy(action.payload.results, state.prevLoadedRows, 'id'),\n            meta: action.payload.meta\n        };\n    }\n\n    return state;\n}\n\nexport const inventoryEntitiesReducer = (columns) => (state = initialState, action) => {\n    let newState = { ...state };\n\n    switch (action.type) {\n        case ActionTypes.LOAD_ENTITIES + '_FULFILLED':\n            return modifyInventory(columns, newState, action);\n        case ActionTypes.SELECT_ENTITY:\n            return selectRows(newState, action);\n        case ActionTypes.EXPAND_ROW:\n            return {\n                ...newState,\n                rows: newState.rows.map(row => ({\n                    ...row,\n                    isOpen: row.id === action.payload.id ? action.payload.isOpen : row.isOpen\n                }))\n            };\n        case ActionTypes.CLEAR_INVENTORY_STORE:\n            return initialState;\n        default:\n            return newState;\n    }\n};\n","var baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    baseUniq = require('./_baseUniq'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    last = require('./last');\n\n/**\n * This method is like `_.union` except that it accepts `comparator` which\n * is invoked to compare elements of `arrays`. Result values are chosen from\n * the first array in which the value occurs. The comparator is invoked\n * with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.unionWith(objects, others, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n */\nvar unionWith = baseRest(function(arrays) {\n  var comparator = last(arrays);\n  comparator = typeof comparator == 'function' ? comparator : undefined;\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n});\n\nmodule.exports = unionWith;\n"],"names":["arrayLikeToArray","module","exports","arr","Array","isArray","__esModule","self","ReferenceError","instance","Constructor","TypeError","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","subClass","superClass","prototype","create","constructor","iter","Symbol","iterator","from","_typeof","assertThisInitialized","call","_setPrototypeOf","p","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","cvssV2","cvssV3","withLabels","arguments","length","undefined","v2Tooltip","naTooltip","parseFloat","toFixed","content","position","concat","_interopRequireDefault","_toConsumableArray2","_classCallCheck2","_createClass2","_assertThisInitialized2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_defineProperty2","_react","_reactTable","_Skeleton","_propTypes","SkeletonTable","_React$Component","Derived","hasNativeReflectConstruct","_super","Reflect","construct","sham","Proxy","Boolean","valueOf","e","_isNativeReflectConstruct","result","Super","NewTarget","this","apply","_this","_len","args","_key","colSize","props","map","title","createElement","Skeleton","size","SkeletonSize","sm","_this$props","paddingColumnSize","columns","newArray","createColumns","_this$props2","rowSize","numberOfCols","disableSelection","cells","md","hasRadio","RowSelectVariant","radio","checkbox","_this$props3","canSelectAll","isSelectable","sortBy","variant","Table","getColumns","rows","createRows","onSelect","selectVariant","TableHeader","TableBody","Component","propTypes","number","array","shape","index","direction","oneOf","bool","string","defaultProps","_default","InventoryLoadError","_ref","component","useEffect","console","error","BaseInvTable","history","store","Suspense","fallback","ScalprumComponent","appName","scope","ErrorComponent","ref","innerRef","InvTable","className","name","height","width","svgPath","yOffset","xOffset","colorList","messageList","impactList","Critical","color","message","High","Important","Medium","Moderate","Low","Unknown","Shield","_impactList$impact","impact","hasLabel","hasTooltip","attributes","badgeProps","badge","body","Tooltip","label","Truncate","_ref$text","text","_ref$length","_ref$expandText","expandText","_ref$hideExpandText","hideExpandText","_ref$expandOnMouseOve","expandOnMouseOver","_ref$collapseText","collapseText","inline","spaceBetween","truncateClasses","trimmedText","substring","textOverflow","_useState","useState","_useState2","showText","setShowText","toggleText","event","preventDefault","expandButton","onClick","collapseButton","html","__html","dangerousHtml","mouseOverHandler","onMouseEnter","onMouseLeave","dangerouslySetInnerHTML","renderer","marked","link","replace","CSAwRuleSummary","truncate","intl","TRUNCATE_TEXT_THRESHOLD","formatMessage","messages","sanitizeHtml","PropTypes","injectIntl","filterValue","React","isOpen","setOpen","numOptions","setNumOptions","versionFromNewestToOldest","RHEL_VERSIONS","reverse","selectedVersionsArray","split","type","conditionalFilterType","filterValues","children","onToggle","_","changedLabel","newValue","changedValue","version","includes","splice","indexOf","rhel_version","join","page","selections","item","placeholderText","loadingVariant","style","maxHeight","overflow","slice","option","isDisabled","disabled","description","currentFilter","dynamicFilters","config","currentValue","rule_presence","rule","filterBySecurityRule","values","isDynamic","dropdownItems","items","RULE_PRESENCE_OPTIONS","unionWith","isEqual","onChange","status_id","filterByStatus","filter","STATUS_OPTIONS","kebabItemDownloadPDF","loading","downloadReport","kebabItemEditBusinessRisk","showBusinessRiskModal","cves","kebabItemEditStatus","showStatusModal","inventoryIds","GroupedCVELabels","hasExploit","hasRule","isCompact","KnownExploitLabel","LoaderType","spinner","table","compactTable","rectangle","inlineSkeleton","skeleton","WithLoader","isLoading","Spinner","centered","TableVariant","display","keys","CVEDetailsPageDescription","cveAttributes","publishDate","public_date","rh_link","hasDescription","CVEPageContext","Consumer","context","Stack","hasGutter","StackItem","Flex","FlexItem","grow","default","TextContent","textAlign","Text","TextVariants","V3names","AV","N","A","L","P","AC","H","PR","UI","R","S","U","C","I","CVSS","V2names","Au","M","CvssVector","vector","namesMapping","res","CVSS2Vector","cvss2_metrics","CVSS3Vector","cvss3_metrics","cvssVer","cvssVector","parsedVector","forEach","curr","val","cvssVersion","Popover","id","maxWidth","enableFlip","headerContent","bodyContent","gridBreakPoint","entries","Label","isLarge","score","SnippetWithHeaderAndPopover","appendTo","document","querySelector","CVEDetailsPageSidebar","canEditStatusOrBusinessRisk","useIntl","cveDetails","getImpactDetails","businessRisk","business_risk","businessRiskJustification","business_risk_justification","status","statusJustification","status_justification","systemsStatusDetail","systems_status_detail","systemsStatusDivergent","systems_status_divergent","detailRows","toString","BusinessRiskPopoverContent","Button","StatusPopoverContent","Split","SplitItem","parseCvssScore","cvss2_score","cvss3_score","createIcon","viewbox","points","VALUE_TO_STATE","icon","InsightsLabel","hideIcon","rest","CSAwRuleBox","rules","synopsis","changeExposedSystemsParameters","dispatch","useDispatch","sortedRules","sort","a","b","systems_affected","summary","Card","rule_id","ouiaId","ExpandableSection","CSAwLabel","ruleId","stopPropagation","to","count","CardBody","Grid","GridItem","rule_impact","impactTextList","RISK_OF_CHANGE_TOOLTIP","change_risk","RISK_OF_CHANGE_LABEL","playbook_count","Fragment","reboot_required","kbase_node_id","href","RH_KB_URL","target","rel","associated_cves","cve","_i","CVES_PATH","reduce","prev","KnownExploitSummary","CVEDetailsPageSummary","data","known_exploit","SystemsExposedTableToolbar","rawData","cveName","cveStatusDetails","selectedRows","selectedRowsCount","selectedRowsRawData","filterRuleValues","expandAll","hasSecurityRule","isAllExpanded","parameters","methods","canEditPairStatus","canExport","handleSelect","setColumnModalOpen","isLoaded","meta","remediableSystems","system","remediation","ANSIBLE_REMEDIATION","kebabOptions","searchFilter","useSearchFilter","advisoryFilter","advisory","osVersionFilter","useOsVersionFilter","bulkSelectProps","useBulkSelect","fetchResource","ops","fetchAffectedSystemsIdsByCve","row","PrimaryToolbar","exportConfig","totalItems","dedicatedAction","Remediation","manyRules","systems","actionsConfig","actions","dropdownProps","activeFiltersConfig","filters","buildActiveFilters","onDelete","chips","removeFilters","deleteTitle","bulkSelect","filterConfig","securityRuleFilter","RULE_ABSENCE_OPTIONS","statusFilter","remediationFilter","dataShape","SystemsExposedTable","inventoryRef","refreshInventory","useRbac","PERMISSIONS","canReadHostsInventory","isLoadingInventory","setIsAllExpanded","StatusModal","setStatusModal","useUrlParams","SYSTEMS_EXPOSED_ALLOWED_PARAMS","urlParameters","setUrlParams","isColumnModalOpen","useSelector","entities","shallowEqual","total","loaded","CVEDetailsPageStore","params","clearInventoryStore","inventories","CvePairStatusModal","cveList","updateRef","fetchCveDetails","inventoryList","getEntities","useGetEntities","APIHelper","createExposedSystemsRows","columnCounter","setColumnCount","hasError","ErrorHandler","code","errorCode","InventoryTable","disableDefaultColumns","onLoad","mergeWithEntities","ReducerRegistry","inventoryEntitiesReducer","SYSTEMS_EXPOSED_HEADER","Number","perPage","match","tableProps","isStickyHeader","actionResolver","systemExposedTableRowActions","paginationProps","showTagModal","isFullView","autoRefresh","customFilters","vulnerabilityParams","expandable","columnsCounter","defaultColumns","inventoryColumns","column","isShown","isShownByDefault","find","hasCheckbox","showActions","onExpandClick","_e","expandRow","hideFilters","all","noSystemsTable","format","DownloadReport","fetchAffectedSystemsByCVE","notification","addNotification","clearNotifications","payload","selectRows","ColumnManagementModal","appliedColumns","applyColumns","newColumns","changeColumnsCveDetail","isModalOpen","setModalOpen","useRouteMatch","canReadVulnerabilityResults","isRbacLoading","BusinessModal","setBusinessRisk","details","useMemo","createCveDetailsPage","current","onRefreshData","BusinessRiskModal","open","CveStatusModal","overwriteSystemsStatus","clearCveStore","justification","exposed_systems_count","cveBusinessRiskDetails","business_risk_id","kebabItems","createBreadcrumbs","lastSegment","PATHS","isActive","Provider","breadcrumbs","celebrity_name","actionsOuiaId","labels","Main","useStatusSelect","initialValue","statusId","setStatusId","setProps","StatusSelect","fieldId","selection","useJustificationInput","setJustification","JustificationInput","resizeOrientation","minHeight","BaseModal","onSave","onSuccessNotification","onFailureNotification","targetItems","setTargetItems","handleClose","onClose","then","ReadOnlyNotification","NotAuthorizedNotification","businessRiskId","setBusinessRiskId","setLabel","getDefaultLabel","useCallback","handleOnRadioChange","currentTarget","autoDismiss","parseInt","business_risk_text","BUSINESS_RISK_OPTIONS","isChecked","every","setSelectProps","checkboxState","setCheckboxState","cvesWithExposedSystems","Promise","setCveStatus","status_text","setSystemCveStatus","cveId","chunks","fontSize","checked","verticalAlign","initialState","tagsLoaded","allTagsLoaded","invConfig","prevLoadedRows","modifyInventory","state","action","some","patchAccess","selected","unionBy","results","newState","ActionTypes","baseFlatten","baseRest","baseUniq","isArrayLikeObject","last","arrays","comparator"],"sourceRoot":""}