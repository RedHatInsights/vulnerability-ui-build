{"version":3,"file":"js/ImmutableDevices.5b75131e7e7bb559a996.js","mappings":"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","sources":["webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/SearchFilter.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/SecurityRuleFilter.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-utilities/esm/helpers/urlPathHelpers.js","webpack:///./src/Components/SmartComponents/HybridInventory/ImmutableDevicesTab/helpers.js","webpack:///./src/Components/SmartComponents/HybridInventory/ImmutableDevicesTab/ImmutableDevices.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-utilities/esm/useInsightsNavigate/useInsightsNavigate.js","webpack:///./src/Helpers/TableToolbarHelper.js","webpack:///./src/Store/Reducers/InventoryEntitiesReducer.js","webpack:///./node_modules/lodash/unionWith.js"],"sourcesContent":["import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { intl } from '../../../../Utilities/IntlProvider';\n\nimport debounce from 'lodash/debounce';\nimport React from 'react';\n\nconst useSearchFilter = (urlParam, label, placeholder, search, apply) => {\n    const [searchValue, setSearchValue] = React.useState();\n    const [handleSearch] = React.useState(() =>\n        debounce(newValue =>  {\n            if (newValue !== undefined) {\n                apply({ [urlParam]: newValue, page: 1 });\n            }},\n        400)\n    );\n\n    React.useEffect(() => setSearchValue(search), [search]);\n\n    return {\n        type: conditionalFilterType.text,\n        label: intl.formatMessage(label),\n        key: urlParam,\n        filterValues: {\n            'aria-label': 'search-field',\n            id: `search-${label.id}`,\n            onChange: (event, value) => {\n                setSearchValue(value);\n                handleSearch(value);\n            },\n            placeholder: intl.formatMessage(placeholder),\n            value: searchValue\n        }\n    };\n};\n\nexport default useSearchFilter;\n","\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { RULE_PRESENCE_OPTIONS } from '../../../../Helpers/constants';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\nimport unionWith from 'lodash/unionWith';\nimport isEqual from 'lodash/isEqual';\n\nconst securityRuleFilter = (apply, currentFilter = {}, dynamicFilters = [], config = {}) => {\n    let currentValue = [];\n\n    if (currentFilter.rule_presence) {\n        currentValue = currentValue.concat(currentFilter.rule_presence.split(','));\n    }\n\n    if (currentFilter.rule) {\n        currentValue = currentValue.concat(currentFilter.rule.split(','));\n    }\n\n    const filterBySecurityRule = values => {\n        apply({\n            ...config.isDynamic && { rule: values.join(',') || undefined },\n            ...!config.isDynamic && { rule_presence: values.join(',') || undefined },\n            page: 1\n        });\n    };\n\n    const dropdownItems\t= () => {\n        const items = config.dropdownItems ? config.dropdownItems : RULE_PRESENCE_OPTIONS;\n\n        return unionWith(items, dynamicFilters, isEqual).map(({ label, value }) => ({ label, value }));\n    };\n\n    return {\n        label: intl.formatMessage(messages.filterSecurityRules),\n        type: conditionalFilterType.checkbox,\n        key: 'security_rule',\n        filterValues: {\n            onChange: (event, value) => {\n                filterBySecurityRule(value);\n            },\n            items: dropdownItems(),\n            value: currentValue\n        }\n    };\n};\n\nexport default securityRuleFilter;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nexport var buildInsightsPath = function (chrome, app, toProp, forcePreview) {\n    var inAppPath = (typeof toProp === 'object' ? toProp.pathname : toProp) || '';\n    var isAbsolutePath = /^\\//.test(inAppPath);\n    var environmentPath = forcePreview ? '/preview' : '';\n    var appPath = app || chrome.getApp();\n    var pathname = isAbsolutePath ? [environmentPath, chrome.getBundle(), appPath, inAppPath.replace(/^\\//, '')].join('/') : inAppPath;\n    return typeof toProp === 'object'\n        ? __assign(__assign({}, toProp), { pathname: pathname }) : pathname;\n};\n//# sourceMappingURL=urlPathHelpers.js.map","import { getAffectedSystemsByCVE, useGetImageData } from '../../../../Helpers/APIHelper';\nimport { SYSTEMS_EXPOSED_HEADER, DEFAULT_PAGE_SIZE } from '../../../../Helpers/constants';\nimport { getSortValue } from '../../../../Helpers/Hooks';\nimport ReducerRegistry from '../../../../Utilities/ReducerRegistry';\nimport { inventoryEntitiesReducer } from '../../../../Store/Reducers/InventoryEntitiesReducer';\nimport { useCallback } from 'react';\nimport { translateUrlSortParameter } from '../../../../Helpers/MiscHelper';\n\nexport const fetchFullDeviceInfo = async (parameters, fetchImagesData) => {\n    const vulnerableSystems = await getAffectedSystemsByCVE(parameters);\n    const deviceIds = vulnerableSystems?.data.map(data => data.id);\n    let enforceEdgeGroups = false;\n\n    if (deviceIds.length) {\n        const deviceData = await fetchImagesData({ devices_uuid: deviceIds });\n        enforceEdgeGroups = deviceData?.data?.enforce_edge_groups || false;\n        vulnerableSystems.data?.forEach(system => {\n            const systemDevice = deviceData?.data?.devices?.find(device => device.DeviceUUID === system.id);\n            return system.attributes = { ...system.attributes, ...systemDevice };\n        });\n    }\n\n    return { vulnerableSystems, enforceEdgeGroups };\n};\n\nexport const useGetEntities = ({ id, setUrlParams, createRows }) => {\n    const fetchImagesData = useGetImageData();\n    const getEntities = async (\n        _items,\n        { orderBy, orderDirection, page, per_page: perPage, edgeParams, filters }\n    ) => {\n        const { hostnameOrId: filter } = filters;\n\n        const params = {\n            filter,\n            ...edgeParams,\n            ...filters?.hostGroupFilter ? {\n                group_names: filters.hostGroupFilter.join(',')\n            } : {},\n            ...filters?.osFilter?.length > 0 ? {\n                rhel_version: filters.osFilter.map(({ value }) => value).join(',')\n            } : {},\n            page,\n            page_size: perPage,\n            sort: getSortValue(orderBy, orderDirection)\n        };\n\n        setUrlParams?.({ ...params });\n\n        const { vulnerableSystems: items, enforceEdgeGroups } = await fetchFullDeviceInfo(\n            {\n                ...id && { id },\n                ...params\n            },\n            fetchImagesData\n        );\n\n        return {\n            results: typeof createRows === 'function'\n                ? createRows(items || {}, enforceEdgeGroups)\n                : items?.data?.map(row => ({ id: row.id, ...row.attributes })),\n            total: items?.meta?.total_items,\n            page: items?.meta?.page,\n            perPage: items?.meta?.page_size,\n            meta: {\n                page: items?.meta?.page,\n                sort: items?.meta?.sort,\n                page_size: items?.meta?.page_size,\n                cves_without_errata: items?.meta?.cves_without_errata,\n                enforceEdgeGroups\n            }\n        };\n    };\n\n    return getEntities;\n};\n\nexport const mergeAppColumns = (defaultColumns, enforcEdgeGroups = false) => {\n    const osColumn = SYSTEMS_EXPOSED_HEADER.find((column) => column.key === 'os');\n    const advisoryColumn = SYSTEMS_EXPOSED_HEADER.find((column) => column.key === 'advisories_list');\n\n    const osIndex = defaultColumns.findIndex(column =>{\n        return column.key === 'system_profile';\n    });\n    if (osIndex !== -1) {\n        defaultColumns[osIndex] = osColumn;\n    }\n\n    const groupsIndex = defaultColumns.findIndex(column =>{\n        return column.key === 'groups';\n    });\n    if (groupsIndex !== -1) {\n        defaultColumns[groupsIndex].props = { ...defaultColumns[groupsIndex].props, isStatic: enforcEdgeGroups };\n    }\n\n    return [...defaultColumns, ...[advisoryColumn || []]];\n};\n\nexport const useOnLoad = (parameters) => useCallback(({ mergeWithEntities }) => {\n    ReducerRegistry.register({\n        ...mergeWithEntities(\n            inventoryEntitiesReducer([]),\n            {\n                page: Number(parameters.page || 1),\n                perPage: DEFAULT_PAGE_SIZE,\n                ...(parameters.sort && {\n                    sortBy: translateUrlSortParameter(parameters.sort)\n                })\n            }\n        )\n    });\n}, []);\n","import React, { useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport { useUrlParams } from '../../../../Helpers/MiscHelper';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useInsightsNavigate from '@redhat-cloud-services/frontend-components-utilities/useInsightsNavigate';\nimport ReducerRegistry from '../../../../Utilities/ReducerRegistry';\nimport { createExposedDevicesRows } from '../../../../Helpers/CVEHelper';\nimport {\n    changeExposedDevicesParameters\n} from '../../../../Store/Actions/Actions';\nimport {\n    SYSTEMS_EXPOSED_ALLOWED_PARAMS,\n    PERMISSIONS,\n    RULE_PRESENCE_OPTIONS,\n    CVE_DETAILS_FILTER_PARAMS\n} from '../../../../Helpers/constants';\nimport ErrorHandler from '../../../PresentationalComponents/ErrorHandler/ErrorHandler';\nimport { EmptyStateNoSystems } from '../../../PresentationalComponents/EmptyStates/EmptyStates';\nimport { useGetEntities, mergeAppColumns, useOnLoad } from './helpers.js';\nimport Spinner from '@redhat-cloud-services/frontend-components/Spinner';\nimport { buildActiveFilters, removeFilters, isFilterInDefaultState } from '../../../../Helpers/TableToolbarHelper';\nimport useSearchFilter from '../../../PresentationalComponents/Filters/PrimaryToolbarFilters/SearchFilter';\nimport useSecurityRuleFilter from '../../../PresentationalComponents/Filters/PrimaryToolbarFilters/SecurityRuleFilter';\nimport AsynComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\nimport { useRbac } from '../../../../Helpers/Hooks';\nimport messages from '../../../../Messages';\n\nconst ImmutableDevices = ({ intl, cveName, filterRuleValues, inventoryRef, headerFilters }) => {\n    const [[canReadHostsInventory], isLoadingInventory] = useRbac([\n        PERMISSIONS.readHosts\n    ], 'inventory');\n\n    const dispatch = useDispatch();\n    const navigate = useInsightsNavigate('inventory');\n    const [urlParameters, setUrlParams] = useUrlParams(SYSTEMS_EXPOSED_ALLOWED_PARAMS);\n\n    const totalItems = useSelector(({ entities }) => entities?.total);\n    const error = useSelector(({ entities }) => entities?.error || {});\n    const meta = useSelector(({ entities }) => entities?.meta || {});\n    const parameters = useSelector(\n        ({ ImmutableDevicesStore }) => ImmutableDevicesStore.parameters);\n\n    const apply = (params) => dispatch(changeExposedDevicesParameters(params));\n\n    useEffect(() => apply(urlParameters), []);\n\n    useEffect(() => setUrlParams({ ...parameters, ...headerFilters }), [parameters, headerFilters]);\n\n    const getEntities = useGetEntities(\n        {\n            id: cveName,\n            createRows: createExposedDevicesRows\n        }\n    );\n\n    useEffect(() => {\n        apply(headerFilters);\n    }, [headerFilters]);\n\n    const searchFilter = useSearchFilter(\n        'filter',\n        messages.systemsSearchName,\n        messages.searchFilterByName,\n        parameters.filter,\n        apply\n    );\n\n    const advisoryNameFilter = useSearchFilter(\n        'advisory',\n        messages.advisoryName,\n        messages.searchFilterByAdvisoryName,\n        parameters.advisory,\n        apply\n    );\n    const securityRuleFilter = useSecurityRuleFilter(\n        apply,\n        parameters,\n        filterRuleValues,\n        {\n            isDynamic: true,\n            dropdownItems: RULE_PRESENCE_OPTIONS.filter(item => item.value !== 'true')\n        }\n    );\n\n    const activeFilters = {\n        filters: buildActiveFilters({ ...parameters }, filterRuleValues),\n        onDelete: (_, chips, reset) => removeFilters(chips, apply, reset, {}),\n        deleteTitle: intl.formatMessage(messages.resetFilters),\n        showDeleteButton: !isFilterInDefaultState(parameters, {}, CVE_DETAILS_FILTER_PARAMS)\n    };\n\n    const onRowClick = (_key, systemId) => {\n        navigate(`/${systemId}?appName=vulnerabilities`);\n    };\n\n    const onLoad = useOnLoad(parameters);\n\n    if (isLoadingInventory) {\n        return <Spinner size=\"lg\" />;\n    }\n\n    if (error?.hasError || !canReadHostsInventory) {\n        return <ErrorHandler code={error?.errorCode || (!canReadHostsInventory && 403)} aria-label=\"Error handler\" />;\n    }\n\n    return <AsynComponent\n        appName=\"inventory\"\n        ref={inventoryRef}\n        module=\"./ImmutableDevices\"\n        fallback={<div />}\n        store={ReducerRegistry.getStore()}\n        onLoad={onLoad}\n        key=\"immutableDevices\"\n        customFilters={{\n            edgeParams: {\n                ...parameters,\n                host_type: 'edge'\n            }\n        }}\n        getEntities={getEntities}\n        showActions={totalItems !== 0}\n        hideFilters={{ all: true, hostGroupFilter: meta.enforceEdgeGroups || false, operatingSystem: false }}\n        noSystemsTable={<EmptyStateNoSystems />}\n        mergeAppColumns={(defaultColumns) => mergeAppColumns(defaultColumns, meta.enforceEdgeGroups)}\n        filterConfig={{\n            items: [\n                searchFilter,\n                securityRuleFilter,\n                advisoryNameFilter\n            ]\n        }}\n        activeFiltersConfig={activeFilters}\n        onRowClick={onRowClick}\n    />;\n};\n\nImmutableDevices.defaultProps = {\n    headerFilters: {}\n};\nImmutableDevices.propTypes = {\n    cveName: propTypes.string,\n    intl: propTypes.object,\n    filterRuleValues: propTypes.object,\n    inventoryRef: propTypes.object,\n    headerFilters: propTypes.object\n};\n\nexport default injectIntl(ImmutableDevices);\n","import { useNavigate } from 'react-router-dom';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport { buildInsightsPath } from '../helpers/urlPathHelpers';\nvar useInsightsNavigate = function (app, forcePreview) {\n    var navigate = useNavigate();\n    var chrome = useChrome();\n    return function (to, preview) { return navigate(buildInsightsPath(chrome, app, to, preview || forcePreview)); };\n};\nexport default useInsightsNavigate;\n//# sourceMappingURL=useInsightsNavigate.js.map","import messages from '../Messages';\nimport { getFilters, ONLY_NON_VULNERABLE_SYSTEMS } from './constants';\nimport { intl } from '../Utilities/IntlProvider';\nimport isEqual from 'lodash/isEqual';\n\nexport const handleChangePage = (_event, page, apply) => apply({ page });\n\nexport const handleSetPageSize = (_event, perPage, apply) => apply({ page_size: perPage, page: 1 });\n\nexport const exportConfig = (methods) => (\n    { onSelect: (_event, fileType) => methods.downloadReport(fileType) }\n);\n\nexport const buildActiveFilters = (currentFilters, filterRuleValues = [], shouldUseHybridSystemFilter = false) => {\n    const { filter: nameFilter, advisory: advisoryFilter } = currentFilters;\n    const FILTERS = getFilters(shouldUseHybridSystemFilter);\n\n    const buildChip = (key, parameter) => (\n        FILTERS[key].items.reduce((object, item) => {\n            if (parameter === item.value) {\n                object.name = item.label;\n                object.value = item.value;\n            }\n            else if (key === 'rule_presence') {\n                const filteredRule = filterRuleValues.find(({ value }) => value === parameter);\n\n                ['true', 'false', ONLY_NON_VULNERABLE_SYSTEMS].includes(parameter)\n                    ? object.name = FILTERS.rule_presence.items.find(e => e.value === parameter).label\n                    : object.name = filteredRule && filteredRule.label || parameter;\n\n                object.value = parameter;\n            }\n\n            return object;\n        }, {})\n    );\n\n    const buildChips = (paramValues, key) => {\n        return paramValues.reduce((values, parameter) => {\n            values.push(buildChip(key, parameter));\n            return values;\n        }, []);\n    };\n\n    const hasValue = (filters, key) => Object.keys(filters).includes(key) && !['', undefined].includes(filters[key]);\n\n    // FIXME please!!!\n    const filterChips = Object.keys(FILTERS).reduce((array, key) => {\n        if (key === 'rule_presence' && (hasValue(currentFilters, 'rule_presence') || hasValue(currentFilters, 'rule'))) {\n            const multiValue = [].concat(\n                currentFilters.rule_presence ? currentFilters.rule_presence.split(',') : [],\n                currentFilters.rule ? currentFilters.rule.split(',') : []);\n            array.push({ key, multiValue, category: FILTERS[key].title, chips: buildChips(multiValue, key) });\n        }\n        else if (key === 'cvss_filter' && (hasValue(currentFilters, 'cvss_from') || hasValue(currentFilters, 'cvss_to'))) {\n            const cvssFrom = (currentFilters.cvss_from && parseFloat(currentFilters.cvss_from).toFixed(1)) || '0.0';\n            const cvssTo = (currentFilters.cvss_to && parseFloat(currentFilters.cvss_to).toFixed(1)) || '10.0';\n\n            if (cvssFrom !== '0.0' || cvssTo !== '10.0') {\n                array.push({ key, category: FILTERS[key].title, chips: [{ name: `${cvssFrom} - ${cvssTo}` }] });\n            }\n        }\n        else if (key === 'rhel_version' && hasValue(currentFilters, 'rhel_version')) {\n            array.push({\n                key,\n                multiValue: currentFilters.rhel_version.split(','),\n                category: 'Operating system',\n                chips: currentFilters.rhel_version\n                    .split(',')\n                    .map((v) => ({ value: v, name: `RHEL ${v}` }))\n            });\n        }\n        else if (hasValue(currentFilters, key)) {\n            const multiValue = typeof currentFilters[key] === 'string' && currentFilters[key].split(',');\n            const filteredValues = (multiValue && multiValue.length > 1)\n                && buildChips(multiValue, key)\n                || [buildChip(key, currentFilters[key])];\n\n            array.push({ key, multiValue, category: FILTERS[key].title, chips: filteredValues });\n        }\n\n        return array;\n    }, []);\n\n    nameFilter && filterChips.push(\n        {\n            key: 'filter',\n            category: intl.formatMessage(messages.searchLabel),\n            chips: [{ name: nameFilter }]\n        }\n    );\n\n    advisoryFilter && filterChips.push(\n        {\n            key: 'advisory',\n            category: intl.formatMessage(messages.advisoryName),\n            chips: [{ name: advisoryFilter }]\n        }\n    );\n\n    return filterChips;\n};\n\nexport const removeFilters = (chips, apply, reset = false, defaultFilters = {}) => {\n    if (reset) {\n        apply({ ...defaultFilters, page: 1, reset });\n        return;\n    }\n\n    const emptyFilter = chips.reduce((obj, item) => {\n        if (item.key === 'rule_presence') {\n            const remainingValues = item.multiValue.filter(value => !item.chips.some(chip => chip.value === value));\n            obj.rule_presence = remainingValues.filter(value => ['true', 'false'].includes(value)).join(',') || '';\n            obj.rule = remainingValues.filter(value => !['true', 'false'].includes(value)).join(',') || '';\n        }\n        else if (item.key === 'filter' || item.key === 'advisory' || (item.multiValue && item.multiValue.length === 1)) {\n            obj[item.key] = '';\n        }\n        else if (item.key === 'cvss_filter') {\n            obj.cvss_filter = undefined;\n            obj.cvss_from = undefined;\n            obj.cvss_to = undefined;\n        }\n        else {\n            obj[item.key] = item.multiValue.filter(value => !item.chips.some(chip => chip.value === value)).join(',');\n        }\n\n        if (obj[item.key] === '') {\n            obj[item.key] = undefined;\n        }\n\n        return obj;\n    }, {});\n\n    apply({ ...emptyFilter, page: 1 });\n};\n\nexport const isFilterInDefaultState = (currentParams, defaultParams, filterParams) => {\n    // filter out params which have nothing to do with filter chips, like page, sort, etc.\n    currentParams = filterParams.reduce((acc, param) => (\n        {\n            ...acc,\n            ...currentParams[param] && { [param]: currentParams[param] }\n        }\n    ), {});\n\n    return isEqual(currentParams, defaultParams);\n};\n","import { selectRows } from './reducersHelper';\nimport * as ActionTypes from '../ActionTypes';\nimport { DEFAULT_PAGE_SIZE } from '../../Helpers/constants';\n\nexport const initialState = {\n    columns: [],\n    rows: [],\n    entities: [],\n    loaded: false,\n    tagsLoaded: false,\n    allTagsLoaded: false,\n    invConfig: {},\n    sortBy: {\n        key: 'updated',\n        direction: 'desc'\n    },\n    page: 1,\n    perPage: DEFAULT_PAGE_SIZE,\n    selectedRows: [],\n    selectedRowsCount: 0\n};\n\nfunction modifyInventory(columns, state, action) {\n    if (!state.selectedRows) {\n        state.selectedRows = [];\n    }\n\n    if (!state.sortBy) {\n        state.sortBy = {\n            key: 'updated',\n            direction: 'desc'\n        };\n    }\n\n    if (state.loaded) {\n        return {\n            ...state,\n            columns,\n            rows: state.rows.map(row => ({\n                ...row,\n                selected: state.selectedRows.some(selectedRow => selectedRow.id === row.id) || false\n            })),\n            meta: action.payload.meta\n        };\n    }\n\n    return state;\n}\n\nexport const inventoryEntitiesReducer = (columns) => (state = initialState, action) => {\n    let newState = { ...state };\n\n    switch (action.type) {\n        case ActionTypes.LOAD_ENTITIES + '_FULFILLED':\n            return modifyInventory(columns, newState, action);\n        case ActionTypes.SELECT_ENTITY:\n            return selectRows(newState, action, action.selecting);\n        case ActionTypes.EXPAND_ROW:\n            return {\n                ...newState,\n                rows: newState.rows.map(row => ({\n                    ...row,\n                    isOpen: row.id === action.payload.id ? action.payload.isOpen : row.isOpen\n                }))\n            };\n        case ActionTypes.CLEAR_INVENTORY_STORE:\n            return initialState;\n        default:\n            return newState;\n    }\n};\n","var baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    baseUniq = require('./_baseUniq'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    last = require('./last');\n\n/**\n * This method is like `_.union` except that it accepts `comparator` which\n * is invoked to compare elements of `arrays`. Result values are chosen from\n * the first array in which the value occurs. The comparator is invoked\n * with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.unionWith(objects, others, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n */\nvar unionWith = baseRest(function(arrays) {\n  var comparator = last(arrays);\n  comparator = typeof comparator == 'function' ? comparator : undefined;\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n});\n\nmodule.exports = unionWith;\n"],"names":["urlParam","label","placeholder","search","apply","_React$useState","React","_React$useState2","_slicedToArray","searchValue","setSearchValue","_React$useState3","debounce","newValue","_apply","undefined","_defineProperty","handleSearch","type","conditionalFilterType","text","intl","formatMessage","key","filterValues","id","concat","onChange","event","value","items","currentFilter","arguments","length","dynamicFilters","config","currentValue","rule_presence","split","rule","messages","filterSecurityRules","checkbox","values","_objectSpread","isDynamic","join","page","dropdownItems","RULE_PRESENCE_OPTIONS","unionWith","isEqual","map","_ref","__assign","Object","assign","t","s","i","n","p","prototype","hasOwnProperty","call","this","fetchFullDeviceInfo","_asyncToGenerator","_regeneratorRuntime","_callee","parameters","fetchImagesData","vulnerableSystems","deviceIds","enforceEdgeGroups","_deviceData$data","_vulnerableSystems$da","deviceData","_context","prev","next","getAffectedSystemsByCVE","sent","data","devices_uuid","enforce_edge_groups","forEach","system","_deviceData$data2","_deviceData$data2$dev","systemDevice","devices","find","device","DeviceUUID","attributes","abrupt","stop","_x","_x2","ImmutableDevices","cveName","filterRuleValues","inventoryRef","headerFilters","_useRbac","useRbac","PERMISSIONS","readHosts","_useRbac2","canReadHostsInventory","isLoadingInventory","dispatch","useDispatch","navigate","app","forcePreview","useNavigate","chrome","useChrome","to","preview","toProp","inAppPath","pathname","isAbsolutePath","test","environmentPath","appPath","getApp","getBundle","replace","buildInsightsPath","useInsightsNavigate","_useUrlParams","useUrlParams","SYSTEMS_EXPOSED_ALLOWED_PARAMS","_useUrlParams2","urlParameters","setUrlParams","totalItems","useSelector","_ref2","entities","total","error","_ref3","meta","_ref4","_ref5","ImmutableDevicesStore","params","changeExposedDevicesParameters","useEffect","getEntities","createRows","useGetImageData","_callee2","_items","_filters$osFilter","_items$data","_items$meta","_items$meta2","_items$meta3","_items$meta4","_items$meta5","_items$meta6","_items$meta7","orderBy","orderDirection","perPage","edgeParams","filters","filter","_yield$fetchFullDevic","_context2","per_page","hostnameOrId","hostGroupFilter","group_names","osFilter","rhel_version","page_size","sort","getSortValue","results","row","total_items","cves_without_errata","_x3","_x4","useGetEntities","createExposedDevicesRows","searchFilter","useSearchFilter","systemsSearchName","searchFilterByName","advisoryNameFilter","advisoryName","searchFilterByAdvisoryName","advisory","securityRuleFilter","useSecurityRuleFilter","item","activeFilters","buildActiveFilters","onDelete","_","chips","reset","removeFilters","deleteTitle","resetFilters","showDeleteButton","isFilterInDefaultState","CVE_DETAILS_FILTER_PARAMS","onLoad","useCallback","_ref6","mergeWithEntities","ReducerRegistry","register","inventoryEntitiesReducer","Number","DEFAULT_PAGE_SIZE","sortBy","translateUrlSortParameter","useOnLoad","Spinner","size","hasError","ErrorHandler","code","errorCode","AsynComponent","appName","ref","module","fallback","store","getStore","customFilters","host_type","showActions","hideFilters","all","operatingSystem","noSystemsTable","EmptyStateNoSystems","mergeAppColumns","defaultColumns","enforcEdgeGroups","osColumn","SYSTEMS_EXPOSED_HEADER","column","advisoryColumn","osIndex","findIndex","groupsIndex","props","isStatic","_toConsumableArray","filterConfig","activeFiltersConfig","onRowClick","_key","systemId","defaultProps","propTypes","injectIntl","handleChangePage","_event","handleSetPageSize","exportConfig","methods","onSelect","fileType","downloadReport","currentFilters","shouldUseHybridSystemFilter","nameFilter","advisoryFilter","FILTERS","getFilters","buildChip","parameter","reduce","object","name","filteredRule","ONLY_NON_VULNERABLE_SYSTEMS","includes","e","buildChips","paramValues","push","hasValue","keys","filterChips","array","multiValue","category","title","cvssFrom","cvss_from","parseFloat","toFixed","cvssTo","cvss_to","v","filteredValues","searchLabel","obj","remainingValues","some","chip","cvss_filter","currentParams","defaultParams","filterParams","acc","param","initialState","columns","rows","loaded","tagsLoaded","allTagsLoaded","invConfig","direction","selectedRows","selectedRowsCount","action","newState","ActionTypes","state","selected","selectedRow","payload","modifyInventory","selectRows","selecting","isOpen","baseFlatten","baseRest","baseUniq","isArrayLikeObject","last","arrays","comparator","exports"],"sourceRoot":""}