{"version":3,"file":"js/CVEDetailsPage.c7bdce1681292e793dec.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Form/Form.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Form/FormGroup.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/FormSelect/FormSelect.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/FormSelect/FormSelectOption.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/LabelGroup/LabelGroup.js","webpack:///./node_modules/@patternfly/react-tokens/dist/esm/c_form_control_textarea_Height.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/TextArea/TextArea.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/power-off-icon.js","webpack:///./src/Components/PresentationalComponents/CSAwRuleBox/CSAwRuleSummary.js","webpack:///./src/Components/PresentationalComponents/ErrorHandler/ErrorHandler.js","webpack:///./src/Components/PresentationalComponents/Snippets/GroupedCVELabels.js","webpack:///./src/Components/PresentationalComponents/Snippets/KnownExploitLabel.js","webpack:///./src/Components/PresentationalComponents/CVEDetailsPageDescription/CVEDetailsPageDescription.js","webpack:///./src/Components/PresentationalComponents/CvssVector/vectorNames.js","webpack:///./src/Components/PresentationalComponents/CvssVector/CvssVector.js","webpack:///./src/Components/PresentationalComponents/CVEDetailsPageSidebar/SnippetWithHeaderAndPopover.js","webpack:///./src/Components/PresentationalComponents/CVEDetailsPageSidebar/CVEDetailsPageSidebar.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/InsightsLabel/InsightsLabel.js","webpack:///./node_modules/react-router-hash-link/dist/react-router-hash-link.esm.js","webpack:///./src/Components/PresentationalComponents/CSAwRuleBox/CSAwRuleBox.js","webpack:///./src/Components/PresentationalComponents/KnownExploitSummary/KnownExploitSummary.js","webpack:///./src/Components/PresentationalComponents/CSAwRuleBox/NotVulnerableBox.js","webpack:///./src/Components/PresentationalComponents/CVEDetailsPageSummary/CVEDetailsPageSummary.js","webpack:///./src/Components/SmartComponents/HybridInventory/HybridInventoryTabs.js","webpack:///./src/Components/SmartComponents/CVEDetailsPage/CVEDetailTableTitle.js","webpack:///./src/Components/SmartComponents/CVEDetailsPage/cveDetailHelpers.js","webpack:///./src/Components/SmartComponents/CVEDetailsPage/CVEDetailsPage.js","webpack:///./src/Components/SmartComponents/Modals/BaseModal.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Form/form';\nimport { css } from '@patternfly/react-styles';\nconst FormBase = (_a) => {\n    var { children = null, className = '', isHorizontal = false, isWidthLimited = false, maxWidth = '', innerRef } = _a, props = __rest(_a, [\"children\", \"className\", \"isHorizontal\", \"isWidthLimited\", \"maxWidth\", \"innerRef\"]);\n    return (React.createElement(\"form\", Object.assign({ noValidate: true }, (maxWidth && {\n        style: Object.assign({ '--pf-c-form--m-limit-width--MaxWidth': maxWidth }, props.style)\n    }), props, { className: css(styles.form, isHorizontal && styles.modifiers.horizontal, (isWidthLimited || maxWidth) && styles.modifiers.limitWidth, className), ref: innerRef }), children));\n};\nexport const Form = React.forwardRef((props, ref) => React.createElement(FormBase, Object.assign({ innerRef: ref }, props)));\nForm.displayName = 'Form';\n//# sourceMappingURL=Form.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Form/form';\nimport { ASTERISK } from '../../helpers/htmlConstants';\nimport { css } from '@patternfly/react-styles';\nimport { ValidatedOptions } from '../../helpers/constants';\nimport { GenerateId } from '../../helpers/GenerateId/GenerateId';\nexport const FormGroup = (_a) => {\n    var { children = null, className = '', label, labelInfo, labelIcon, isRequired = false, validated = 'default', isInline = false, hasNoPaddingTop = false, isStack = false, helperText, isHelperTextBeforeField = false, helperTextInvalid, helperTextIcon, helperTextInvalidIcon, fieldId, role } = _a, props = __rest(_a, [\"children\", \"className\", \"label\", \"labelInfo\", \"labelIcon\", \"isRequired\", \"validated\", \"isInline\", \"hasNoPaddingTop\", \"isStack\", \"helperText\", \"isHelperTextBeforeField\", \"helperTextInvalid\", \"helperTextIcon\", \"helperTextInvalidIcon\", \"fieldId\", \"role\"]);\n    const validHelperText = typeof helperText !== 'string' ? (helperText) : (React.createElement(\"div\", { className: css(styles.formHelperText, validated === ValidatedOptions.success && styles.modifiers.success, validated === ValidatedOptions.warning && styles.modifiers.warning), id: `${fieldId}-helper`, \"aria-live\": \"polite\" },\n        helperTextIcon && React.createElement(\"span\", { className: css(styles.formHelperTextIcon) }, helperTextIcon),\n        helperText));\n    const inValidHelperText = typeof helperTextInvalid !== 'string' ? (helperTextInvalid) : (React.createElement(\"div\", { className: css(styles.formHelperText, styles.modifiers.error), id: `${fieldId}-helper`, \"aria-live\": \"polite\" },\n        helperTextInvalidIcon && React.createElement(\"span\", { className: css(styles.formHelperTextIcon) }, helperTextInvalidIcon),\n        helperTextInvalid));\n    const showValidHelperTxt = (validationType) => validationType !== ValidatedOptions.error && helperText ? validHelperText : '';\n    const helperTextToDisplay = validated === ValidatedOptions.error && helperTextInvalid ? inValidHelperText : showValidHelperTxt(validated);\n    const isGroupOrRadioGroup = role === 'group' || role === 'radiogroup';\n    const LabelComponent = isGroupOrRadioGroup ? 'span' : 'label';\n    const labelContent = (React.createElement(React.Fragment, null,\n        React.createElement(LabelComponent, Object.assign({ className: css(styles.formLabel) }, (!isGroupOrRadioGroup && { htmlFor: fieldId })),\n            React.createElement(\"span\", { className: css(styles.formLabelText) }, label),\n            isRequired && (React.createElement(\"span\", { className: css(styles.formLabelRequired), \"aria-hidden\": \"true\" },\n                ' ',\n                ASTERISK))),\n        ' ',\n        React.isValidElement(labelIcon) && labelIcon));\n    return (React.createElement(GenerateId, null, randomId => (React.createElement(\"div\", Object.assign({ className: css(styles.formGroup, className) }, (role && { role }), (isGroupOrRadioGroup && { 'aria-labelledby': `${fieldId || randomId}-legend` }), props),\n        label && (React.createElement(\"div\", Object.assign({ className: css(styles.formGroupLabel, labelInfo && styles.modifiers.info, hasNoPaddingTop && styles.modifiers.noPaddingTop) }, (isGroupOrRadioGroup && { id: `${fieldId || randomId}-legend` })),\n            labelInfo && (React.createElement(React.Fragment, null,\n                React.createElement(\"div\", { className: css(styles.formGroupLabelMain) }, labelContent),\n                React.createElement(\"div\", { className: css(styles.formGroupLabelInfo) }, labelInfo))),\n            !labelInfo && labelContent)),\n        React.createElement(\"div\", { className: css(styles.formGroupControl, isInline && styles.modifiers.inline, isStack && styles.modifiers.stack) },\n            isHelperTextBeforeField && helperTextToDisplay,\n            children,\n            !isHelperTextBeforeField && helperTextToDisplay)))));\n};\nFormGroup.displayName = 'FormGroup';\n//# sourceMappingURL=FormGroup.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/FormControl/form-control';\nimport { css } from '@patternfly/react-styles';\nimport { ValidatedOptions } from '../../helpers/constants';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nexport class FormSelect extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = (event) => {\n            this.props.onChange(event.currentTarget.value, event);\n        };\n        if (!props.id && !props['aria-label']) {\n            // eslint-disable-next-line no-console\n            console.error('FormSelect requires either an id or aria-label to be specified');\n        }\n        this.state = {\n            ouiaStateId: getDefaultOUIAId(FormSelect.displayName, props.validated)\n        };\n    }\n    render() {\n        const _a = this.props, { children, className, value, validated, isDisabled, isRequired, isIconSprite, ouiaId, ouiaSafe } = _a, props = __rest(_a, [\"children\", \"className\", \"value\", \"validated\", \"isDisabled\", \"isRequired\", \"isIconSprite\", \"ouiaId\", \"ouiaSafe\"]);\n        /* find selected option and get placeholder flag */\n        const selectedOption = React.Children.toArray(children).find((option) => option.props.value === value);\n        const isSelectedPlaceholder = selectedOption && selectedOption.props.isPlaceholder;\n        return (React.createElement(\"select\", Object.assign({}, props, { className: css(styles.formControl, isIconSprite && styles.modifiers.iconSprite, className, validated === ValidatedOptions.success && styles.modifiers.success, validated === ValidatedOptions.warning && styles.modifiers.warning, isSelectedPlaceholder && styles.modifiers.placeholder), \"aria-invalid\": validated === ValidatedOptions.error }, getOUIAProps(FormSelect.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe), { onChange: this.handleChange, disabled: isDisabled, required: isRequired, value: value }), children));\n    }\n}\nFormSelect.displayName = 'FormSelect';\nFormSelect.defaultProps = {\n    className: '',\n    value: '',\n    validated: 'default',\n    isDisabled: false,\n    isRequired: false,\n    isIconSprite: false,\n    onBlur: () => undefined,\n    onFocus: () => undefined,\n    onChange: () => undefined,\n    ouiaSafe: true\n};\n//# sourceMappingURL=FormSelect.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nexport const FormSelectOption = (_a) => {\n    var { className = '', value = '', isDisabled = false, label, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isPlaceholder = false } = _a, props = __rest(_a, [\"className\", \"value\", \"isDisabled\", \"label\", \"isPlaceholder\"]);\n    return (React.createElement(\"option\", Object.assign({}, props, { className: className, value: value, disabled: isDisabled }), label));\n};\nFormSelectOption.displayName = 'FormSelectOption';\n//# sourceMappingURL=FormSelectOption.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/LabelGroup/label-group';\nimport labelStyles from '@patternfly/react-styles/css/components/Label/label';\nimport { css } from '@patternfly/react-styles';\nimport { Button } from '../Button';\nimport { Label } from '../Label';\nimport { Tooltip } from '../Tooltip';\nimport TimesCircleIcon from '@patternfly/react-icons/dist/esm/icons/times-circle-icon';\nimport { fillTemplate } from '../../helpers';\nimport { GenerateId } from '../../helpers/GenerateId/GenerateId';\nexport class LabelGroup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.headingRef = React.createRef();\n        this.toggleCollapse = () => {\n            this.setState(prevState => ({\n                isOpen: !prevState.isOpen,\n                isTooltipVisible: Boolean(this.headingRef.current && this.headingRef.current.offsetWidth < this.headingRef.current.scrollWidth)\n            }));\n        };\n        this.state = {\n            isOpen: this.props.defaultIsOpen,\n            isTooltipVisible: false\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            isTooltipVisible: Boolean(this.headingRef.current && this.headingRef.current.offsetWidth < this.headingRef.current.scrollWidth)\n        });\n    }\n    renderLabel(id) {\n        const { categoryName, tooltipPosition } = this.props;\n        const { isTooltipVisible } = this.state;\n        return isTooltipVisible ? (React.createElement(Tooltip, { position: tooltipPosition, content: categoryName },\n            React.createElement(\"span\", { tabIndex: 0, ref: this.headingRef, className: css(styles.labelGroupLabel) },\n                React.createElement(\"span\", { \"aria-hidden\": \"true\", id: id }, categoryName)))) : (React.createElement(\"span\", { ref: this.headingRef, className: css(styles.labelGroupLabel), \"aria-hidden\": \"true\", id: id }, categoryName));\n    }\n    render() {\n        const _a = this.props, { categoryName, children, className, isClosable, isCompact, closeBtnAriaLabel, 'aria-label': ariaLabel, onClick, numLabels, expandedText, collapsedText, \n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        defaultIsOpen, tooltipPosition, isVertical, isEditable, hasEditableTextArea, editableTextAreaProps, addLabelControl } = _a, \n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        rest = __rest(_a, [\"categoryName\", \"children\", \"className\", \"isClosable\", \"isCompact\", \"closeBtnAriaLabel\", 'aria-label', \"onClick\", \"numLabels\", \"expandedText\", \"collapsedText\", \"defaultIsOpen\", \"tooltipPosition\", \"isVertical\", \"isEditable\", \"hasEditableTextArea\", \"editableTextAreaProps\", \"addLabelControl\"]);\n        const { isOpen } = this.state;\n        const renderedChildren = React.Children.toArray(children);\n        const numChildren = renderedChildren.length;\n        const collapsedTextResult = fillTemplate(collapsedText, {\n            remaining: numChildren - numLabels\n        });\n        const renderLabelGroup = (id) => {\n            const labelArray = !isOpen ? renderedChildren.slice(0, numLabels) : renderedChildren;\n            const content = (React.createElement(React.Fragment, null,\n                categoryName && this.renderLabel(id),\n                React.createElement(\"ul\", Object.assign({ className: css(styles.labelGroupList) }, (categoryName && { 'aria-labelledby': id }), (!categoryName && { 'aria-label': ariaLabel }), { role: \"list\" }, rest),\n                    labelArray.map((child, i) => (React.createElement(\"li\", { className: css(styles.labelGroupListItem), key: i }, child))),\n                    numChildren > numLabels && (React.createElement(\"li\", { className: css(styles.labelGroupListItem) },\n                        React.createElement(Label, { isOverflowLabel: true, onClick: this.toggleCollapse, className: css(isCompact && labelStyles.modifiers.compact) }, isOpen ? expandedText : collapsedTextResult))),\n                    addLabelControl && React.createElement(\"li\", { className: css(styles.labelGroupListItem) }, addLabelControl),\n                    isEditable && hasEditableTextArea && (React.createElement(\"li\", { className: css(styles.labelGroupListItem, styles.modifiers.textarea) },\n                        React.createElement(\"textarea\", Object.assign({ className: css(styles.labelGroupTextarea), rows: 1, tabIndex: 0 }, editableTextAreaProps)))))));\n            const close = (React.createElement(\"div\", { className: css(styles.labelGroupClose) },\n                React.createElement(Button, { variant: \"plain\", \"aria-label\": closeBtnAriaLabel, onClick: onClick, id: `remove_group_${id}`, \"aria-labelledby\": `remove_group_${id} ${id}` },\n                    React.createElement(TimesCircleIcon, { \"aria-hidden\": \"true\" }))));\n            return (React.createElement(\"div\", { className: css(styles.labelGroup, className, categoryName && styles.modifiers.category, isVertical && styles.modifiers.vertical, isEditable && styles.modifiers.editable) },\n                React.createElement(\"div\", { className: css(styles.labelGroupMain) }, content),\n                isClosable && close));\n        };\n        return numChildren === 0 && addLabelControl === undefined ? null : (React.createElement(GenerateId, null, randomId => renderLabelGroup(this.props.id || randomId)));\n    }\n}\nLabelGroup.displayName = 'LabelGroup';\nLabelGroup.defaultProps = {\n    expandedText: 'Show Less',\n    collapsedText: '${remaining} more',\n    categoryName: '',\n    defaultIsOpen: false,\n    numLabels: 3,\n    isClosable: false,\n    isCompact: false,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onClick: (_e) => undefined,\n    closeBtnAriaLabel: 'Close label group',\n    tooltipPosition: 'top',\n    'aria-label': 'Label group category',\n    isVertical: false,\n    isEditable: false,\n    hasEditableTextArea: false\n};\n//# sourceMappingURL=LabelGroup.js.map","export const c_form_control_textarea_Height = {\n  \"name\": \"--pf-c-form-control--textarea--Height\",\n  \"value\": \"auto\",\n  \"var\": \"var(--pf-c-form-control--textarea--Height)\"\n};\nexport default c_form_control_textarea_Height;","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/FormControl/form-control';\nimport heightToken from '@patternfly/react-tokens/dist/esm/c_form_control_textarea_Height';\nimport { css } from '@patternfly/react-styles';\nimport { capitalize, ValidatedOptions, canUseDOM } from '../../helpers';\nexport var TextAreResizeOrientation;\n(function (TextAreResizeOrientation) {\n    TextAreResizeOrientation[\"horizontal\"] = \"horizontal\";\n    TextAreResizeOrientation[\"vertical\"] = \"vertical\";\n    TextAreResizeOrientation[\"both\"] = \"both\";\n})(TextAreResizeOrientation || (TextAreResizeOrientation = {}));\nexport var TextAreaReadOnlyVariant;\n(function (TextAreaReadOnlyVariant) {\n    TextAreaReadOnlyVariant[\"default\"] = \"default\";\n    TextAreaReadOnlyVariant[\"plain\"] = \"plain\";\n})(TextAreaReadOnlyVariant || (TextAreaReadOnlyVariant = {}));\nexport class TextAreaBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.inputRef = React.createRef();\n        this.setAutoHeight = (field) => {\n            field.style.setProperty(heightToken.name, 'inherit');\n            const computed = window.getComputedStyle(field);\n            // Calculate the height\n            const height = parseInt(computed.getPropertyValue('border-top-width')) +\n                parseInt(computed.getPropertyValue('padding-top')) +\n                field.scrollHeight +\n                parseInt(computed.getPropertyValue('padding-bottom')) +\n                parseInt(computed.getPropertyValue('border-bottom-width'));\n            field.style.setProperty(heightToken.name, `${height}px`);\n        };\n        this.handleChange = (event) => {\n            // https://gomakethings.com/automatically-expand-a-textarea-as-the-user-types-using-vanilla-javascript/\n            const field = event.currentTarget;\n            if (this.props.autoResize && canUseDOM) {\n                this.setAutoHeight(field);\n            }\n            if (this.props.onChange) {\n                this.props.onChange(field.value, event);\n            }\n        };\n        if (!props.id && !props['aria-label']) {\n            // eslint-disable-next-line no-console\n            console.error('TextArea: TextArea requires either an id or aria-label to be specified');\n        }\n    }\n    componentDidMount() {\n        const inputRef = this.props.innerRef || this.inputRef;\n        if (this.props.autoResize && canUseDOM) {\n            const field = inputRef.current;\n            this.setAutoHeight(field);\n        }\n    }\n    render() {\n        const _a = this.props, { className, value, validated, isRequired, isDisabled, isIconSprite, isReadOnly, readOnlyVariant, resizeOrientation, innerRef, disabled, \n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        autoResize, onChange } = _a, \n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        props = __rest(_a, [\"className\", \"value\", \"validated\", \"isRequired\", \"isDisabled\", \"isIconSprite\", \"isReadOnly\", \"readOnlyVariant\", \"resizeOrientation\", \"innerRef\", \"disabled\", \"autoResize\", \"onChange\"]);\n        const orientation = `resize${capitalize(resizeOrientation)}`;\n        return (React.createElement(\"textarea\", Object.assign({ className: css(styles.formControl, isIconSprite && styles.modifiers.iconSprite, readOnlyVariant === 'plain' && styles.modifiers.plain, className, resizeOrientation !== TextAreResizeOrientation.both && styles.modifiers[orientation], validated === ValidatedOptions.success && styles.modifiers.success, validated === ValidatedOptions.warning && styles.modifiers.warning), onChange: this.handleChange }, (typeof this.props.defaultValue !== 'string' && { value }), { \"aria-invalid\": validated === ValidatedOptions.error, required: isRequired, disabled: isDisabled || disabled, readOnly: !!readOnlyVariant || isReadOnly, ref: innerRef || this.inputRef }, props)));\n    }\n}\nTextAreaBase.displayName = 'TextArea';\nTextAreaBase.defaultProps = {\n    innerRef: React.createRef(),\n    className: '',\n    isRequired: false,\n    isDisabled: false,\n    isIconSprite: false,\n    validated: 'default',\n    resizeOrientation: 'both',\n    'aria-label': null\n};\nexport const TextArea = React.forwardRef((props, ref) => (React.createElement(TextAreaBase, Object.assign({}, props, { innerRef: ref }))));\nTextArea.displayName = 'TextArea';\n//# sourceMappingURL=TextArea.js.map","import { createIcon } from '../createIcon';\n\nexport const PowerOffIconConfig = {\n  name: 'PowerOffIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M400 54.1c63 45 104 118.6 104 201.9 0 136.8-110.8 247.7-247.5 248C120 504.3 8.2 393 8 256.4 7.9 173.1 48.9 99.3 111.8 54.2c11.7-8.3 28-4.8 35 7.7L162.6 90c5.9 10.5 3.1 23.8-6.6 31-41.5 30.8-68 79.6-68 134.9-.1 92.3 74.5 168.1 168 168.1 91.6 0 168.6-74.2 168-169.1-.3-51.8-24.7-101.8-68.1-134-9.7-7.2-12.4-20.5-6.5-30.9l15.8-28.1c7-12.4 23.2-16.1 34.8-7.8zM296 264V24c0-13.3-10.7-24-24-24h-32c-13.3 0-24 10.7-24 24v240c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const PowerOffIcon = createIcon(PowerOffIconConfig);\n\nexport default PowerOffIcon;","import React from 'react';\nimport { marked } from 'marked';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport sanitizeHtml from 'sanitize-html';\nimport { Truncate } from '@redhat-cloud-services/frontend-components/Truncate';\nimport { StackItem, TextContent } from '@patternfly/react-core';\nimport { TRUNCATE_TEXT_THRESHOLD } from '../../../Helpers/constants';\nimport messages from '../../../Messages';\n\n/**\n * extend marked's renderer in order to open link in new tab\n */\nlet renderer = new marked.Renderer();\nrenderer.link = function() {\n    let link = marked.Renderer.prototype.link.apply(this, arguments);\n    return link.replace('<a ', '<a target=\"_blank\" rel=\"noopener noreferrer\" ');\n};\n\nmarked.setOptions({ renderer });\n\nconst CSAwRuleSummary = ({ text, truncate, intl, ...props }) => {\n    const dangerousHtml = (text) => ({ __html: sanitizeHtml(text) });\n\n    return (text &&\n        <StackItem {...props}>\n            <TextContent className=\"rule-description\">\n                {truncate && text.length > TRUNCATE_TEXT_THRESHOLD\n                    ? (\n                        <Truncate\n                            length={TRUNCATE_TEXT_THRESHOLD}\n                            expandText={intl.formatMessage(messages.readMore)}\n                            collapseText={intl.formatMessage(messages.readLess)}\n                            text={marked(text)}\n                            spaceBetween\n                        />\n                    ) : (\n                        <span dangerouslySetInnerHTML={dangerousHtml(marked(text))} />\n                    )\n                }\n            </TextContent>\n        </StackItem>\n    );\n\n};\n\nCSAwRuleSummary.defaultProps = {\n    truncate: true,\n    link: null\n};\n\nCSAwRuleSummary.propTypes = {\n    intl: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.object\n    ]),\n    truncate: PropTypes.bool,\n    text: PropTypes.string.isRequired\n};\n\nexport default injectIntl(CSAwRuleSummary);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { InvalidObject } from '@redhat-cloud-services/frontend-components/InvalidObject';\nimport { Unavailable } from '@redhat-cloud-services/frontend-components/Unavailable';\nimport { ErrorState } from '@redhat-cloud-services/frontend-components/ErrorState';\nimport { NotAuthorized } from '../EmptyStates/EmptyStates';\nimport { SERVICE_NAME } from '../../../Helpers/constants';\n\nconst ErrorHandler = ({ code }) => {\n    switch (parseInt(code)) {\n        case 403:\n            return <NotAuthorized serviceName={SERVICE_NAME}/>;\n\n        case 404:\n            return <InvalidObject />;\n\n        case 500:\n        case 502:\n        case 503:\n            return <Unavailable />;\n\n        default:\n            return <ErrorState />;\n    }\n};\n\nErrorHandler.propTypes = {\n    code: propTypes.oneOf([propTypes.number, propTypes.string])\n};\n\nexport default ErrorHandler;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { LabelGroup } from '@patternfly/react-core';\nimport KnownExploitLabel from './KnownExploitLabel';\nimport CSAwLabel from './CSAwLabel';\n\nconst GroupedCVELabels = ({ hasExploit, hasRule, isCompact }) =>\n    (hasExploit || hasRule) && (\n        <LabelGroup className=\"cve-labels-grouped--nowrap\">\n            {hasExploit && <KnownExploitLabel isCompact={isCompact}/>}\n            {hasRule && <CSAwLabel isCompact={isCompact}/>}\n        </LabelGroup>\n    );\n\nGroupedCVELabels.propTypes = {\n    hasExploit: propTypes.bool.isRequired,\n    hasRule: propTypes.bool.isRequired,\n    isCompact: propTypes.bool\n};\n\nexport default GroupedCVELabels;\n","import React from 'react';\nimport { Label, Tooltip } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport messages from '../../../Messages';\n\nconst KnownExploitLabel = ({ style, className, isCompact }) => (\n    <Tooltip content={<FormattedMessage {...messages.knownExploitDescription} />}>\n        <Label color=\"red\" style={{ ...style }} className={['cve-labels', className]} isCompact={isCompact}>\n            <FormattedMessage {...messages.knownExploit} />\n        </Label>\n    </Tooltip>\n);\n\nKnownExploitLabel.propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    isCompact: PropTypes.bool\n};\n\nexport default KnownExploitLabel;\n","import { Stack, StackItem, Text, TextContent, TextVariants, Flex, FlexItem } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport { CVEPageContext } from '../../SmartComponents/CVEDetailsPage/CVEDetailsPage';\nimport WithLoader, { LoaderType } from '../WithLoader/WithLoader';\nimport { NoDescriptionAvailable } from '../EmptyStates/EmptyStates';\n\nconst CVEDetailsPageDescription = ({ cveAttributes, intl }) => {\n    const {\n        public_date: publishDate,\n        description,\n        rh_link: link\n    } = cveAttributes;\n    const hasDescription = description && description !== 'unknown';\n\n    return (\n        <CVEPageContext.Consumer>\n            {context =>\n                <Stack hasGutter>\n                    {\n                        hasDescription && (\n                            <StackItem className=\"pf-u-mt-sm\">\n                                <Flex>\n                                    <FlexItem>{intl.formatMessage(messages.publishDate)}:</FlexItem>\n                                    <FlexItem grow={{ default: 'grow' }}>\n                                        <WithLoader\n                                            isLoading={context.isLoading}\n                                            variant={LoaderType.inlineSkeleton}\n                                            size=\"sm\"\n                                        >\n                                            {publishDate}\n                                        </WithLoader>\n                                    </FlexItem>\n                                </Flex>\n                            </StackItem>\n                        )\n                    }\n                    <StackItem>\n                        <WithLoader\n                            isLoading={context.isLoading}\n                            variant={LoaderType.rectangle}\n                            style={{ height: '132px', width: '100%' }}\n                        >\n                            {\n                                hasDescription ? (\n                                    <TextContent style={{ textAlign: 'justify' }}>\n                                        <Text component={TextVariants.p}>{description}</Text>\n                                    </TextContent>\n                                ) : <NoDescriptionAvailable/>\n                            }\n                        </WithLoader>\n                    </StackItem>\n                    <StackItem className=\"pf-u-mt-sm pf-u-mb-md\">\n                        For most up-to-date information, {link}\n                    </StackItem>\n                </Stack>\n            }\n        </CVEPageContext.Consumer>\n\n    );\n};\n\nCVEDetailsPageDescription.propTypes = {\n    cveAttributes: propTypes.any,\n    intl: propTypes.any\n};\n\nexport default injectIntl(CVEDetailsPageDescription);\n","import { intl } from '../../../Utilities/IntlProvider';\nimport messages from '../../../Messages';\n\nexport const V3names = {\n    AV: {\n        name: intl.formatMessage(messages.vectorNamesV3AV),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNetwork),\n            A: intl.formatMessage(messages.vectorValuesAdjacent),\n            L: intl.formatMessage(messages.vectorValuesLocal),\n            P: intl.formatMessage(messages.vectorValuesPhysical)\n        }\n    },\n    AC: {\n        name: intl.formatMessage(messages.vectorNamesV3AC),\n        values: {\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    PR: {\n        name: intl.formatMessage(messages.vectorNamesV3PR),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    UI: {\n        name: intl.formatMessage(messages.vectorNamesV3UI),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            R: intl.formatMessage(messages.vectorValuesRequired)\n        }\n    },\n    S: {\n        name: intl.formatMessage(messages.vectorNamesV3S),\n        values: {\n            U: intl.formatMessage(messages.vectorValuesUnchanged),\n            C: intl.formatMessage(messages.vectorValuesChanged)\n        }\n    },\n    C: {\n        name: intl.formatMessage(messages.vectorNamesV3C),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    I: {\n        name: intl.formatMessage(messages.vectorNamesV3I),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    A: {\n        name: intl.formatMessage(messages.vectorNamesV3A),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    CVSS: {\n        name: intl.formatMessage(messages.vectorNamesCvssVersion),\n        values: {\n            '3.0': 3.0\n        }\n    }\n};\n\nexport const V2names = {\n    AV: {\n        name: intl.formatMessage(messages.vectorNamesV2AV),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNetwork),\n            A: intl.formatMessage(messages.vectorValuesAdjacentNetwork),\n            L: intl.formatMessage(messages.vectorValuesLocal)\n        }\n    },\n    AC: {\n        name: intl.formatMessage(messages.vectorNamesV2AC),\n        values: {\n            N: intl.formatMessage(messages.vectorValuesNone),\n            L: intl.formatMessage(messages.vectorValuesLow),\n            H: intl.formatMessage(messages.vectorValuesHigh)\n        }\n    },\n    Au: {\n        name: intl.formatMessage(messages.vectorNamesV2AU),\n        values: {\n            M: intl.formatMessage(messages.vectorValuesMultiple),\n            S: intl.formatMessage(messages.vectorValuesSingle),\n            N: intl.formatMessage(messages.vectorValuesNone)\n        }\n    },\n    C: {\n        name: intl.formatMessage(messages.vectorNamesV2C),\n        values: {\n            C: intl.formatMessage(messages.vectorValuesComplete),\n            P: intl.formatMessage(messages.vectorValuesPartial),\n            N: intl.formatMessage(messages.vectorValuesNone)\n        }\n    },\n    I: {\n        name: intl.formatMessage(messages.vectorNamesV2I),\n        values: {\n            C: intl.formatMessage(messages.vectorValuesComplete),\n            P: intl.formatMessage(messages.vectorValuesPartial),\n            N: intl.formatMessage(messages.vectorValuesNone)\n        }\n    },\n    A: {\n        name: intl.formatMessage(messages.vectorNamesV2A),\n        values: {\n            C: intl.formatMessage(messages.vectorValuesComplete),\n            P: intl.formatMessage(messages.vectorValuesPartial),\n            N: intl.formatMessage(messages.vectorValuesNone)\n        }\n    }\n};\n","import { Popover, TextContent } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { Table, TableBody, TableHeader, TableVariant } from '@patternfly/react-table';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { CVEPageContext } from '../../SmartComponents/CVEDetailsPage/CVEDetailsPage';\nimport WithLoader, { LoaderType } from '../WithLoader/WithLoader';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport { V3names, V2names } from './vectorNames';\nimport Label from '../Snippets/Label';\n\nexport const parseVector = (vector, namesMapping) => {\n    let res = {};\n    vector &&\n        vector.split('/').forEach(curr => {\n            let [key, val] = curr.split(':');\n            const name = namesMapping[key] && namesMapping[key].name;\n            const value = (namesMapping[key] && namesMapping[key].values[val]) || 'N/A';\n            if (name) {\n                res[name] = value;\n            }\n        });\n    return res;\n};\n\nconst CvssVector = ({ cvss2_metrics: CVSS2Vector, cvss3_metrics: CVSS3Vector, score, intl }) => {\n    const cvssVer = (CVSS3Vector && 'CVSS 3.0') || (CVSS2Vector && 'CVSS 2.0') || 'CVSS 3.0';\n    const cvssVector = CVSS3Vector || CVSS2Vector;\n    const namesMapping = (CVSS3Vector && V3names) || (CVSS2Vector && V2names);\n    const parsedVector = parseVector(cvssVector, namesMapping);\n    const notAvailable = 'N/A';\n    delete parsedVector.cvssVersion;\n\n    return (\n        <CVEPageContext.Consumer>\n            {context => (\n                <TextContent>\n                    <Popover\n                        id=\"popover-cvss\"\n                        position=\"bottom\"\n                        maxWidth=\"100%\"\n                        enableFlip\n                        headerContent={`${cvssVer} ${intl.formatMessage(messages.cvssVectorPopoverTitle)}`}\n                        bodyContent={\n                            <WithLoader isLoading={context.isLoading} colSize={2} rowSize={8} variant={LoaderType.compactTable}>\n                                {cvssVector ?\n                                    (<Table\n                                        aria-label=\"Metric breakdown\"\n                                        variant={TableVariant.compact}\n                                        gridBreakPoint=\"\"\n                                        cells={\n                                            [intl.formatMessage(messages.cvssVectorMetric),\n                                                intl.formatMessage(messages.cvssVectorValue)]\n                                        }\n                                        rows={Object.entries(parsedVector)}\n                                    >\n                                        <TableHeader />\n                                        <TableBody />\n                                    </Table>\n                                    ) : (notAvailable)}\n                            </WithLoader>\n                        }\n                    >\n                        <Label isLarge className=\"pf-u-mb-xs pointer\">\n                            {cvssVer} {intl.formatMessage(messages.cvssVectorVectorString)}\n                            <OutlinedQuestionCircleIcon\n                                color=\"var(--pf-global--secondary-color--100)\"\n                                className=\"pf-u-ml-xs\"\n                            />\n                        </Label>\n                    </Popover>\n\n                    <WithLoader isLoading={context.isLoading} style={{ width: '320px' }}>\n                        <span className=\"pf-u-mr-md\">{score}</span>\n                        <span id=\"cvss-vector-content\">\n                            {intl.formatMessage(messages.vector) + ': '}\n                            {cvssVector?.substring(cvssVector.indexOf('/') + 1) || notAvailable}\n                        </span>\n                    </WithLoader>\n                </TextContent>\n            )}\n        </CVEPageContext.Consumer>\n    );\n};\n\nCvssVector.propTypes = {\n    cvss2_metrics: propTypes.string,\n    cvss3_metrics: propTypes.string,\n    score: propTypes.any,\n    intl: propTypes.any\n};\n\nexport default injectIntl(CvssVector);\n","import { Popover, Stack, StackItem } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport Label from '../Snippets/Label';\n\nconst SnippetWithHeaderAndPopover = ({ title, value, content }) => (\n    <Popover id=\"popover\" bodyContent={content} headerContent=\"\" position=\"bottom\"\n        appendTo={document.querySelector('.vulnerability')}>\n        <Stack className=\"popover-content\">\n            <StackItem>\n                <Label isLarge>{title}</Label>\n            </StackItem>\n            <StackItem>\n                <a>{value}</a>\n            </StackItem>\n        </Stack>\n    </Popover>\n);\n\nSnippetWithHeaderAndPopover.propTypes = {\n    title: propTypes.any,\n    value: propTypes.any,\n    content: propTypes.any\n};\n\nexport default SnippetWithHeaderAndPopover;\n","import { Stack, StackItem, Split, SplitItem, TextContent, Button } from '@patternfly/react-core';\nimport parseCvssScore from '@redhat-cloud-services/frontend-components-utilities/parseCvssScore';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { getImpactDetails } from '../../../Helpers/MiscHelper';\nimport CvssVector from '../CvssVector/CvssVector';\nimport messages from '../../../Messages';\nimport SnippetWithHeaderAndPopover from './SnippetWithHeaderAndPopover';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { STATUS_OPTIONS } from '../../../Helpers/constants';\nimport { useIntl } from 'react-intl';\nimport { Shield } from '@redhat-cloud-services/frontend-components/Shield';\nimport Label from '../Snippets/Label';\nimport { CVEPageContext } from '../../SmartComponents/CVEDetailsPage/CVEDetailsPage';\nimport WithLoader from '../WithLoader/WithLoader';\n\nconst CVEDetailsPageSidebar = ({ cveAttributes, canEditStatusOrBusinessRisk, showStatusModal, showBusinessRiskModal }) => {\n    const intl = useIntl();\n    const cveDetails = getImpactDetails(cveAttributes.impact || 'Unknown');\n\n    const {\n        business_risk: businessRisk,\n        business_risk_justification: businessRiskJustification,\n        status,\n        status_justification: statusJustification,\n        systems_status_detail: systemsStatusDetail,\n        systems_status_divergent: systemsStatusDivergent\n    } = cveAttributes;\n\n    const detailRows =\n        systemsStatusDetail &&\n        Object.keys(systemsStatusDetail).map(item => [\n            STATUS_OPTIONS.find(status => status.value === item.toString()).label,\n            systemsStatusDetail[item].toString()\n        ]);\n\n    const BusinessRiskPopoverContent = (\n        <Stack className=\"pf-u-p-xs\">\n            <StackItem>\n                <Label className=\"pf-u-mb-xs\">\n                    {intl.formatMessage(messages.justificationNote)}\n                </Label>\n            </StackItem>\n            <StackItem>{businessRiskJustification || '--'}</StackItem>\n            {canEditStatusOrBusinessRisk && <StackItem className=\"pf-u-mt-sm\">\n                <Button\n                    variant=\"secondary\"\n                    onClick={showBusinessRiskModal}\n                >\n                    {intl.formatMessage(messages.editBusinessRisk)}\n                </Button>\n            </StackItem>}\n        </Stack>\n    );\n\n    const StatusPopoverContent = (\n        <Stack className=\"pf-u-p-xs\">\n            <StackItem>\n                <Label className=\"pf-u-mb-xs\">\n                    {intl.formatMessage(messages.cveStatus)}\n                </Label>\n                {status || '--'}\n                <Label className=\"pf-u-mb-xs pf-u-mt-sm\">\n                    {intl.formatMessage(messages.justificationNote)}\n                </Label>\n                {statusJustification || '--'}\n            </StackItem>\n            {systemsStatusDivergent > 0 && (\n                <StackItem>\n                    <TextContent>\n                        <hr className=\"pf-u-mt-sm pf-u-mb-sm\" />\n                    </TextContent>\n                    <Label isLarge>\n                        {intl.formatMessage(messages.cveDetailsPageSystemsWTCves)}\n                    </Label>\n                    <Table\n                        aria-label=\"Status details\"\n                        gridBreakPoint=\"\"\n                        cells={[intl.formatMessage(messages.statusLabel), intl.formatMessage(messages.count)]}\n                        rows={detailRows}\n                        className=\"status-breakdown-table\"\n                        variant=\"compact\"\n                    >\n                        <TableHeader />\n                        <TableBody />\n                    </Table>\n                </StackItem>\n            )}\n            {canEditStatusOrBusinessRisk && <StackItem className=\"pf-u-mt-sm\">\n                <Button variant=\"secondary\" onClick={showStatusModal}>{intl.formatMessage(messages.editStatus)}</Button>\n            </StackItem>}\n        </Stack>\n    );\n\n    return (\n        <CVEPageContext.Consumer>\n            {context => (\n                <Stack hasGutter>\n                    <StackItem>\n                        <Split hasGutter>\n                            <SplitItem>\n                                <SnippetWithHeaderAndPopover\n                                    title={intl.formatMessage(messages.businessRiskLabel)}\n                                    value={\n                                        <WithLoader isLoading={context.isLoading} style={{ width: '100px' }}>\n                                            {businessRisk}\n                                        </WithLoader>}\n                                    content={BusinessRiskPopoverContent}\n                                />\n                            </SplitItem>\n                            <SplitItem className=\"pf-u-ml-lg\">\n                                <SnippetWithHeaderAndPopover\n                                    title={intl.formatMessage(messages.statusLabel)}\n                                    content={StatusPopoverContent}\n                                    value={\n                                        <WithLoader isLoading={context.isLoading} style={{ width: '100px' }}>\n                                            <span>\n                                                {systemsStatusDivergent > 0 && (\n                                                    <ExclamationTriangleIcon color=\"var(--pf-global--primary-color--100)\" />\n                                                )}{' '}\n                                                {status}\n                                            </span>\n                                        </WithLoader>\n                                    }\n                                />\n                            </SplitItem>\n                        </Split>\n                    </StackItem>\n\n                    <StackItem>\n                        <Label className=\"pf-u-mb-xs\" isLarge>\n                            {intl.formatMessage(messages.impact)}\n                        </Label>\n                        <WithLoader isLoading={context.isLoading} style={{ width: '100px' }}>\n                            <span id=\"severity-shield\" style={{ color: cveDetails.color }}>\n                                <Shield impact={cveDetails.title} hasLabel />\n                            </span>\n                        </WithLoader>\n                    </StackItem>\n\n                    <StackItem>\n                        <CvssVector\n                            cvss2_metrics={cveAttributes.cvss2_metrics}\n                            cvss3_metrics={cveAttributes.cvss3_metrics}\n                            score={parseCvssScore(cveAttributes.cvss2_score, cveAttributes.cvss3_score)}\n                        />\n                    </StackItem>\n                </Stack>\n            )}\n        </CVEPageContext.Consumer>\n    );\n};\n\nCVEDetailsPageSidebar.propTypes = {\n    cveAttributes: propTypes.any,\n    canEditStatusOrBusinessRisk: propTypes.bool,\n    showStatusModal: propTypes.func,\n    showBusinessRiskModal: propTypes.func\n};\n\nexport default CVEDetailsPageSidebar;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { AngleDoubleDownIcon } from '@patternfly/react-icons';\nimport { AngleDoubleUpIcon } from '@patternfly/react-icons';\nimport { CriticalRiskIcon } from '@patternfly/react-icons';\nimport { EqualsIcon } from '@patternfly/react-icons';\nimport { Label } from '@patternfly/react-core';\nvar VALUE_TO_STATE = {\n    1: { icon: _jsx(AngleDoubleDownIcon, {}), text: 'Low', color: 'blue' },\n    2: { icon: _jsx(EqualsIcon, {}), text: 'Moderate', color: 'gold' },\n    3: { icon: _jsx(AngleDoubleUpIcon, {}), text: 'Important', color: 'orange' },\n    4: { icon: _jsx(CriticalRiskIcon, {}), text: 'Critical', color: 'red' },\n};\nvar InsightsLabel = function (_a) {\n    var _b = _a.value, value = _b === void 0 ? 1 : _b, text = _a.text, hideIcon = _a.hideIcon, rest = _a.rest, props = __rest(_a, [\"value\", \"text\", \"hideIcon\", \"rest\"]);\n    return (_jsx(Label, __assign({}, rest, props, { color: VALUE_TO_STATE[value].color, icon: !hideIcon && VALUE_TO_STATE[value].icon }, { children: text || VALUE_TO_STATE[value].text })));\n};\nexport default InsightsLabel;\n//# sourceMappingURL=InsightsLabel.js.map","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, NavLink } from 'react-router-dom';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nvar hashFragment = '';\r\nvar observer = null;\r\nvar asyncTimerId = null;\r\nvar scrollFunction = null;\r\nfunction reset() {\r\n    hashFragment = '';\r\n    if (observer !== null)\r\n        observer.disconnect();\r\n    if (asyncTimerId !== null) {\r\n        window.clearTimeout(asyncTimerId);\r\n        asyncTimerId = null;\r\n    }\r\n}\r\nfunction isInteractiveElement(element) {\r\n    var formTags = ['BUTTON', 'INPUT', 'SELECT', 'TEXTAREA'];\r\n    var linkTags = ['A', 'AREA'];\r\n    return ((formTags.includes(element.tagName) && !element.hasAttribute('disabled')) ||\r\n        (linkTags.includes(element.tagName) && element.hasAttribute('href')));\r\n}\r\nfunction getElAndScroll() {\r\n    var element = null;\r\n    if (hashFragment === '#') {\r\n        // use document.body instead of document.documentElement because of a bug in smoothscroll-polyfill in safari\r\n        // see https://github.com/iamdustan/smoothscroll/issues/138\r\n        // while smoothscroll-polyfill is not included, it is the recommended way to implement smoothscroll\r\n        // in browsers that don't natively support el.scrollIntoView({ behavior: 'smooth' })\r\n        element = document.body;\r\n    }\r\n    else {\r\n        // check for element with matching id before assume '#top' is the top of the document\r\n        // see https://html.spec.whatwg.org/multipage/browsing-the-web.html#target-element\r\n        var id = hashFragment.replace('#', '');\r\n        element = document.getElementById(id);\r\n        if (element === null && hashFragment === '#top') {\r\n            // see above comment for why document.body instead of document.documentElement\r\n            element = document.body;\r\n        }\r\n    }\r\n    if (element !== null) {\r\n        scrollFunction(element);\r\n        // update focus to where the page is scrolled to\r\n        // unfortunately this doesn't work in safari (desktop and iOS) when blur() is called\r\n        var originalTabIndex = element.getAttribute('tabindex');\r\n        if (originalTabIndex === null && !isInteractiveElement(element)) {\r\n            element.setAttribute('tabindex', -1);\r\n        }\r\n        element.focus({ preventScroll: true });\r\n        if (originalTabIndex === null && !isInteractiveElement(element)) {\r\n            // for some reason calling blur() in safari resets the focus region to where it was previously,\r\n            // if blur() is not called it works in safari, but then are stuck with default focus styles\r\n            // on an element that otherwise might never had focus styles applied, so not an option\r\n            element.blur();\r\n            element.removeAttribute('tabindex');\r\n        }\r\n        reset();\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nfunction hashLinkScroll(timeout) {\r\n    // Push onto callback queue so it runs after the DOM is updated\r\n    window.setTimeout(function () {\r\n        if (getElAndScroll() === false) {\r\n            if (observer === null) {\r\n                observer = new MutationObserver(getElAndScroll);\r\n            }\r\n            observer.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                subtree: true,\r\n            });\r\n            // if the element doesn't show up in specified timeout or 10 seconds, stop checking\r\n            asyncTimerId = window.setTimeout(function () {\r\n                reset();\r\n            }, timeout || 10000);\r\n        }\r\n    }, 0);\r\n}\r\nfunction genericHashLink(As) {\r\n    return React.forwardRef(function (props, ref) {\r\n        var linkHash = '';\r\n        if (typeof props.to === 'string' && props.to.includes('#')) {\r\n            linkHash = \"#\" + props.to.split('#').slice(1).join('#');\r\n        }\r\n        else if (typeof props.to === 'object' &&\r\n            typeof props.to.hash === 'string') {\r\n            linkHash = props.to.hash;\r\n        }\r\n        var passDownProps = {};\r\n        if (As === NavLink) {\r\n            passDownProps.isActive = function (match, location) {\r\n                return match && match.isExact && location.hash === linkHash;\r\n            };\r\n        }\r\n        function handleClick(e) {\r\n            reset();\r\n            hashFragment = props.elementId ? \"#\" + props.elementId : linkHash;\r\n            if (props.onClick)\r\n                props.onClick(e);\r\n            if (hashFragment !== '' &&\r\n                // ignore non-vanilla click events, same as react-router\r\n                // below logic adapted from react-router: https://github.com/ReactTraining/react-router/blob/fc91700e08df8147bd2bb1be19a299cbb14dbcaa/packages/react-router-dom/modules/Link.js#L43-L48\r\n                !e.defaultPrevented && // onClick prevented default\r\n                e.button === 0 && // ignore everything but left clicks\r\n                (!props.target || props.target === '_self') && // let browser handle \"target=_blank\" etc\r\n                !(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) // ignore clicks with modifier keys\r\n            ) {\r\n                scrollFunction =\r\n                    props.scroll ||\r\n                        (function (el) {\r\n                            return props.smooth\r\n                                ? el.scrollIntoView({ behavior: 'smooth' })\r\n                                : el.scrollIntoView();\r\n                        });\r\n                hashLinkScroll(props.timeout);\r\n            }\r\n        }\r\n        var filteredProps = __rest(props, [\"scroll\", \"smooth\", \"timeout\", \"elementId\"]);\r\n        return (React.createElement(As, __assign({}, passDownProps, filteredProps, { onClick: handleClick, ref: ref }), props.children));\r\n    });\r\n}\r\nvar HashLink = genericHashLink(Link);\r\nvar NavHashLink = genericHashLink(NavLink);\r\nif (process.env.NODE_ENV !== 'production') {\r\n    HashLink.displayName = 'HashLink';\r\n    NavHashLink.displayName = 'NavHashLink';\r\n    var propTypes = {\r\n        onClick: PropTypes.func,\r\n        children: PropTypes.node,\r\n        scroll: PropTypes.func,\r\n        timeout: PropTypes.number,\r\n        elementId: PropTypes.string,\r\n        to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n    };\r\n    HashLink.propTypes = propTypes;\r\n    NavHashLink.propTypes = propTypes;\r\n}\n\nexport { HashLink, NavHashLink, genericHashLink };\n//# sourceMappingURL=react-router-hash-link.esm.js.map\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Stack,\n    StackItem,\n    Text,\n    TextContent,\n    TextVariants,\n    Tooltip,\n    SplitItem,\n    Split,\n    Grid,\n    GridItem,\n    Card,\n    CardBody,\n    ExpandableSection,\n    Button\n} from '@patternfly/react-core';\nimport { InsightsLabel } from '@redhat-cloud-services/frontend-components/InsightsLabel';\nimport {\n    CheckCircleIcon,\n    OutlinedQuestionCircleIcon,\n    ExternalLinkAltIcon,\n    PowerOffIcon\n} from '@patternfly/react-icons';\nimport { injectIntl } from 'react-intl';\nimport Label from '../Snippets/Label';\nimport messages from '../../../Messages';\nimport {\n    RISK_OF_CHANGE_TOOLTIP,\n    RISK_OF_CHANGE_LABEL,\n    RH_KB_URL,\n    CVES_PATH,\n    impactTextList\n} from '../../../Helpers/constants';\nimport CSAwLabel from '../Snippets/CSAwLabel';\nimport CSAwRuleSummary from './CSAwRuleSummary';\nimport './CSAwRuleBox.scss';\nimport { HashLink } from 'react-router-hash-link';\n\nconst CSAwRuleBox = ({ rules, synopsis, intl, setHeaderFilters, headerFilters }) => {\n    const sortedRules = [].concat(rules).sort((a, b) => (b.systems_affected - a.systems_affected));\n    const handleExposedSystemFilter = (ruleId) => {\n        setHeaderFilters(headerFilters?.rule !== ruleId\n            ? { rule: ruleId }\n            : { rule: undefined }\n        );\n    };\n\n    /*eslint-disable max-len*/\n    return (\n        sortedRules && sortedRules.map((rule, index) => (\n            rule.summary && (\n                <Card className=\"card-box\" key={rule.rule_id} ouiaId={'security-rule-card-' + index}>\n                    <ExpandableSection toggleText={\n                        <Split isWrappable>\n                            <SplitItem className=\"pf-u-mr-xl\">\n                                <TextContent>\n                                    <Text component={TextVariants.h4}>\n                                        <CSAwLabel className=\"pf-u-mr-sm\" />\n                                        {rule.description}\n                                    </Text>\n                                </TextContent>\n                            </SplitItem>\n                            <SplitItem id=\"filter-affected-systems-split\" className=\"pf-u-mr-xl\">\n                                {rule.rule_id &&\n                                    <TextContent>\n                                        <Button\n                                            id=\"filter-affected-systems\"\n                                            onClick={event => {\n                                                handleExposedSystemFilter(rule.rule_id);\n                                                event.stopPropagation();\n                                            }}\n                                            isActive={headerFilters?.rule === rule?.rule_id}\n                                            isSmall\n                                            isInline\n                                            variant=\"secondary\"\n                                        >\n                                            <HashLink\n                                                smooth\n                                                key={rule.rule_id}\n                                                to={\n                                                    `/insights/vulnerability/cves/${synopsis}/?rule=${rule.rule_id}#systems-exposed-table-header`\n                                                }\n                                            >\n                                                {\n                                                    intl.formatMessage(\n                                                        messages.filterByAffectedSystems,\n                                                        {\n                                                            count: rule.systems_affected ?? -1\n                                                        }\n                                                    )\n                                                }\n                                            </HashLink>\n                                        </Button>\n                                    </TextContent>}\n                            </SplitItem>\n                        </Split>\n                    }>\n                        <CardBody className=\"rule-card-body\">\n                            <Grid hasGutter>\n                                <GridItem md={9} sm={12}>\n                                    <Stack hasGutter>\n                                        <StackItem>\n                                            <CSAwRuleSummary text={rule.summary} />\n                                        </StackItem>\n                                        <StackItem>\n                                            <TextContent>\n                                                <Split>\n                                                    {rule.rule_impact && (\n                                                        <SplitItem>\n                                                            <Label className=\"label pf-u-mb-xs\">\n                                                                {intl.formatMessage(messages.impact)}\n                                                            </Label>\n                                                            <Tooltip\n                                                                content={Object.values(impactTextList)[rule.rule_impact - 1]}\n                                                            >\n                                                                <InsightsLabel\n                                                                    value={rule.rule_impact}\n                                                                    className=\"severity-label\"\n                                                                />\n                                                            </Tooltip>\n                                                        </SplitItem>\n                                                    )}\n                                                    <SplitItem>\n                                                        <Label className=\"label pf-u-mb-xs\">\n                                                            {intl.formatMessage(messages.riskOfChange)}\n                                                        </Label>\n                                                        <Tooltip\n                                                            content={RISK_OF_CHANGE_TOOLTIP[rule.change_risk]}\n                                                        >\n                                                            {RISK_OF_CHANGE_LABEL[rule.change_risk]}\n                                                        </Tooltip>\n                                                    </SplitItem>\n                                                    <SplitItem>\n                                                        <Label className=\"label pf-u-mb-xs\">\n                                                            {intl.formatMessage(messages.remediationLabel)}\n                                                        </Label>\n                                                        <Split>\n                                                            <SplitItem>\n                                                                {!rule.playbook_count\n                                                                    ? intl.formatMessage(messages.no)\n                                                                    : (\n                                                                        <Fragment>\n                                                                            <CheckCircleIcon\n                                                                                className=\"checkCircleIcon pf-u-mr-xs\"\n                                                                            />\n                                                                            {intl.formatMessage(messages.yes)}\n                                                                            <Tooltip\n                                                                                content={intl.formatMessage(\n                                                                                    messages.ansibleRemediationTooltip\n                                                                                )}\n                                                                            >\n                                                                                <OutlinedQuestionCircleIcon\n                                                                                    className=\"l-sm-spacer\n                                                                                        outlinedQuestionCircleIcon\"\n                                                                                />\n                                                                            </Tooltip>\n                                                                        </Fragment>\n                                                                    )\n                                                                }\n                                                            </SplitItem>\n                                                            <SplitItem className=\"pf-u-ml-md\">\n                                                                {rule.reboot_required &&\n                                                                    <Text>\n                                                                        <PowerOffIcon\n                                                                            className=\"pf-u-mr-xs powerOffIcon\"\n                                                                        />\n                                                                        {intl.formatMessage(messages.rebootRequired)}\n                                                                    </Text>\n                                                                }\n                                                            </SplitItem>\n                                                        </Split>\n                                                    </SplitItem>\n\n                                                </Split>\n                                            </TextContent>\n                                        </StackItem>\n\n                                        {\n                                            rule.kbase_node_id &&\n                                            <StackItem>\n                                                <TextContent>\n                                                    <Text\n                                                        className=\"pf-u-mt-xs\"\n                                                        component={TextVariants.p}\n                                                    >\n                                                        <a\n                                                            className=\"kb-link\"\n                                                            href={`${RH_KB_URL}/${rule.kbase_node_id}`}\n                                                            target=\"_blank\"\n                                                            rel=\"noopener noreferrer\"\n                                                        >\n                                                            {\n                                                                intl.formatMessage(messages.knowledgebaseArticle)\n                                                            }\n                                                            <ExternalLinkAltIcon className=\"l-sm-spacer\" />\n                                                        </a>\n                                                    </Text>\n                                                </TextContent>\n                                            </StackItem>\n                                        }\n\n                                    </Stack>\n                                </GridItem>\n                                <GridItem md={3} sm={12}>\n                                    <TextContent>\n                                        <Label>\n                                            {intl.formatMessage(messages.associatedCves)}\n                                        </Label>\n                                        <Text component={TextVariants.p} className=\"pf-u-mt-xs associated-cves\">\n                                            {synopsis} ({intl.formatMessage(messages.current)})\n                                            {\n                                                rule.associated_cves\n                                                    .filter(cve => cve !== synopsis)\n                                                    .map((cve, _i) =>\n                                                        <a\n                                                            className=\"associated-cve-link\"\n                                                            key={_i}\n                                                            href={`${CVES_PATH}/${cve}`}\n                                                        >\n                                                            {cve}\n                                                        </a>\n                                                    )\n                                                    .reduce((prev, curr) => [prev, ', ', curr], [''])\n                                            }\n                                        </Text>\n                                    </TextContent>\n                                </GridItem>\n                            </Grid>\n                        </CardBody>\n                    </ExpandableSection>\n                </Card>\n            )\n        ))\n    );\n};\n/*eslint-enable max-len*/\n\nCSAwRuleBox.defaultProps = {\n    rules: []\n};\n\nCSAwRuleBox.propTypes = {\n    intl: PropTypes.any,\n    rules: PropTypes.array,\n    synopsis: PropTypes.string,\n    changeExposedSystemsParameters: PropTypes.func,\n    setHeaderFilters: PropTypes.func,\n    headerFilters: PropTypes.object\n};\n\nexport default injectIntl(CSAwRuleBox);\n","import React from 'react';\nimport { Card, CardBody, Text, TextVariants, TextContent, ExpandableSection } from '@patternfly/react-core';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport KnownExploitLabel from '../Snippets/KnownExploitLabel';\n\nexport const KnownExploitSummary = () => {\n    const intl = useIntl();\n    return (\n        <Card className=\"card-box\" ouiaId=\"known-exploit-card\">\n            <ExpandableSection toggleText={\n                <TextContent>\n                    <Text component={TextVariants.h4}>\n                        <KnownExploitLabel className=\"pf-u-mr-sm\"/>\n                        {intl.formatMessage(messages.knownExploitHeader)}\n                    </Text>\n                </TextContent>\n            }>\n                <CardBody>\n                    {intl.formatMessage(messages.knownExploitDescription)}\n                </CardBody>\n            </ExpandableSection>\n        </Card>\n    );\n};\n\nexport default KnownExploitSummary;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Text,\n    TextContent,\n    TextVariants,\n    SplitItem,\n    Split,\n    Card,\n    CardBody,\n    ExpandableSection,\n    Button\n} from '@patternfly/react-core';\nimport { InsightsLink } from '@redhat-cloud-services/frontend-components/InsightsLink';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport './CSAwRuleBox.scss';\nimport NotVulnerableLabel from '../Snippets/NotVulnerableLabel';\nimport { ONLY_NON_VULNERABLE_SYSTEMS } from '../../../Helpers/constants';\n\nconst NotVulnerableBox = ({ synopsis, notVulnerableSystemCount, setHeaderFilters, headerFilters }) => {\n    const intl = useIntl();\n    const handleExposedSystemFilter = () => {\n        setHeaderFilters(headerFilters?.rule !== ONLY_NON_VULNERABLE_SYSTEMS\n            ? { rule: ONLY_NON_VULNERABLE_SYSTEMS }\n            : { rule: undefined }\n        );\n    };\n\n    return (\n        notVulnerableSystemCount > 0 &&\n        <Card className=\"card-box\" ouiaId=\"not-vulnerable-box\">\n            <ExpandableSection toggleText={\n                <Split>\n                    <SplitItem className=\"pf-u-mr-xl\">\n                        <TextContent>\n                            <Text component={TextVariants.h4}>\n                                <NotVulnerableLabel className=\"pf-u-mr-sm\" />\n                                {intl.formatMessage(messages.notVulnerableBoxTitle)}\n                            </Text>\n                        </TextContent>\n                    </SplitItem>\n                    <SplitItem id=\"filter-affected-systems-split\" className=\"pf-u-mr-xl\">\n                        <TextContent>\n                            <Button\n                                id=\"filter-affected-systems\"\n                                onClick={event => {\n                                    handleExposedSystemFilter();\n                                    event.stopPropagation();\n                                }}\n                                isActive={headerFilters?.rule === ONLY_NON_VULNERABLE_SYSTEMS}\n                                isSmall\n                                isInline\n                                variant=\"secondary\"\n                            >\n                                <InsightsLink\n                                    to={`/cves/${synopsis}`}\n                                >\n                                    {\n                                        intl.formatMessage(\n                                            messages.filterByAffectedSystems,\n                                            {\n                                                count: notVulnerableSystemCount\n                                            }\n                                        )\n                                    }\n                                </InsightsLink>\n                            </Button>\n                        </TextContent>\n                    </SplitItem>\n                </Split>\n            }>\n                <CardBody className=\"rule-card-body\">\n                    {intl.formatMessage(messages.notVulnerableDescription, { multiple: true })}\n                </CardBody>\n            </ExpandableSection>\n        </Card>\n    );\n};\n\nNotVulnerableBox.propTypes = {\n    synopsis: PropTypes.string,\n    notVulnerableSystemCount: PropTypes.number,\n    setHeaderFilters: PropTypes.func,\n    headerFilters: PropTypes.object\n};\n\nexport default NotVulnerableBox;\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport CVEDetailsPageDescription from '../CVEDetailsPageDescription/CVEDetailsPageDescription';\nimport CVEDetailsPageSidebar from '../CVEDetailsPageSidebar/CVEDetailsPageSidebar';\nimport CSAwRuleBox from '../CSAwRuleBox/CSAwRuleBox';\nimport { KnownExploitSummary } from '../KnownExploitSummary/KnownExploitSummary';\nimport NotVulnerableBox from '../CSAwRuleBox/NotVulnerableBox';\n\nconst CVEDetailsPageSummary = ({\n    data,\n    canEditStatusOrBusinessRisk,\n    showStatusModal,\n    showBusinessRiskModal,\n    setHeaderFilters,\n    headerFilters\n}) => {\n    return (\n        <Grid hasGutter>\n            <GridItem md={8} sm={12}>\n                <CVEDetailsPageDescription cveAttributes={data.data} />\n            </GridItem>\n\n            <GridItem md={4} sm={12} className=\"pf-u-mt-sm pf-u-ml-sm\">\n                <CVEDetailsPageSidebar\n                    cveAttributes={data.data}\n                    canEditStatusOrBusinessRisk={canEditStatusOrBusinessRisk}\n                    showStatusModal={showStatusModal}\n                    showBusinessRiskModal={showBusinessRiskModal}\n                />\n            </GridItem>\n            {\n                data.data.known_exploit && <KnownExploitSummary/>\n            }\n\n            <CSAwRuleBox\n                synopsis={data.data.synopsis}\n                rules={data.data.rules}\n                setHeaderFilters={setHeaderFilters}\n                headerFilters={headerFilters}\n            />\n            <NotVulnerableBox\n                synopsis={data.data.synopsis}\n                notVulnerableSystemCount={data.data.affected_but_not_vulnerable}\n                setHeaderFilters={setHeaderFilters}\n                headerFilters={headerFilters}\n            />\n        </Grid>\n    );\n};\n\nCVEDetailsPageSummary.propTypes = {\n    data: propTypes.object,\n    canEditStatusOrBusinessRisk: propTypes.bool,\n    showStatusModal: propTypes.func,\n    showBusinessRiskModal: propTypes.func,\n    setHeaderFilters: propTypes.func,\n    headerFilters: propTypes.object\n};\n\nexport default CVEDetailsPageSummary;\n","import React, { Suspense, Fragment, lazy } from 'react';\nimport propTypes from 'prop-types';\nimport AsynComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\nimport { useParams } from 'react-router-dom';\nimport useFeatureFlag from '../../../Utilities/useFeatureFlag';\nimport { useContext } from 'react';\nimport { AccountStatContext } from '../../../Utilities/VulnerabilityRoutes';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport { CVEPageContext } from '../CVEDetailsPage/CVEDetailsPage';\n\nconst ImmutableDevices = lazy(() =>\n    import(\n        /* webpackChunkName: \"ImmutableDevices\" */ './ImmutableDevicesTab/ImmutableDevices'\n    )\n);\n\nconst SystemsExposedTable = lazy(() =>\n    import(\n        /* webpackChunkName: \"SystemsExposedTable\" */ '../SystemsExposedTable/SystemsExposedTable'\n    )\n);\n\nconst HybridInventory = ({\n    isImmutableTabOpen,\n    ...tabProps\n}) => {\n    const { cve } = useParams();\n    const isEdgeParityEnabled = useFeatureFlag('vulnerability.edge_parity');\n    const { hasEdgeDevices } = useContext(AccountStatContext);\n    const { conventionalCount, edgeCount, areCountsLoading } = useContext(CVEPageContext);\n\n    return areCountsLoading ?\n        <Bullseye>\n            <Spinner size=\"lg\" />\n        </Bullseye>\n        : (\n            <AsynComponent\n                key=\"hybridInventory\"\n                appName=\"inventory\"\n                module=\"./HybridInventoryTabs\"\n                ConventionalSystemsTab={<Suspense fallback={Fragment}>\n                    <SystemsExposedTable {...tabProps} />\n                </Suspense>}\n                ImmutableDevicesTab={<Suspense fallback={Fragment}>\n                    <ImmutableDevices {...tabProps} />\n                </Suspense>}\n                tabPathname={`/insights/vulnerability/cves/${cve}`}\n                isImmutableTabOpen={isImmutableTabOpen}\n                fallback={<div />}\n                columns\n                isEdgeParityEnabled={isEdgeParityEnabled}\n                hasConventionalSystems={conventionalCount > 0 || edgeCount <= 0}\n                accountHasEdgeImages={hasEdgeDevices}\n            />\n        );\n};\n\nHybridInventory.propTypes = {\n    isImmutableTabOpen: propTypes.bool\n};\n\nexport default HybridInventory;\n","import React, { useContext } from 'react';\nimport { Skeleton, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport useFeatureFlag from '../../../Utilities/useFeatureFlag';\nimport { AccountStatContext } from '../../../Utilities/VulnerabilityRoutes';\nimport { CVEPageContext } from './CVEDetailsPage';\n\nconst CVEDetailTableTitle = () => {\n    const isEdgeParityEnabled = useFeatureFlag('vulnerability.edge_parity');\n    const { hasEdgeDevices } = useContext(AccountStatContext);\n    const { conventionalCount, edgeCount, areCountsLoading } = useContext(CVEPageContext);\n\n    const totalCount = conventionalCount + edgeCount;\n\n    return areCountsLoading\n        ?\n        <Skeleton width=\"25%\" screenreaderText=\"Loading contents\" aria-label=\"Table title skeleton\" />\n        : (<TextContent aria-label=\"Affected systems table title\">\n            <Text component={TextVariants.h2} id=\"systems-exposed-table-header\">\n                {hasEdgeDevices && isEdgeParityEnabled\n                    ? `${totalCount} Total ${totalCount > 1 ? 'systems' : 'system' } affected`\n                    : 'Systems'\n                }\n            </Text>\n        </TextContent>);\n};\n\nexport default CVEDetailTableTitle;\n","import { getAffectedSystemsByCVE } from '../../../Helpers/APIHelper';\n\nconst getTotalItems = apiResult => (apiResult?.meta?.total_items || 0);\n\nexport const fetchHybridSystemsCounts = async (\n    cveName,\n    isEdgeParityEnabled,\n    setHybridSystemsCounts\n) => {\n    try {\n        const conventionalCount = await getAffectedSystemsByCVE({ id: cveName, host_type: 'rpmdnf', limit: 1 })\n            .then(getTotalItems);\n\n        const edgeCount = isEdgeParityEnabled\n            ? await getAffectedSystemsByCVE({ id: cveName, host_type: 'edge', limit: 1 }).then(getTotalItems)\n            : 0;\n\n        setHybridSystemsCounts({\n            conventionalCount,\n            edgeCount,\n            areCountsLoading: false\n        });\n    }\n    catch {\n        setHybridSystemsCounts({\n            conventionalCount: 0,\n            edgeCount: 0,\n            areCountsLoading: false\n        });\n    }\n};\n","import { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport React, { useMemo, useState, useEffect, Fragment } from 'react';\nimport { Stack, StackItem } from '@patternfly/react-core';\nimport { createCveDetailsPage } from '../../../Helpers/CVEHelper';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    fetchCveDetails,\n    clearInventoryStore,\n    clearCveStore\n} from '../../../Store/Actions/Actions';\nimport { PATHS, PERMISSIONS, SERVICE_NAME } from '../../../Helpers/constants';\nimport CVEDetailsPageSummary from '../../PresentationalComponents/CVEDetailsPageSummary/CVEDetailsPageSummary';\nimport { kebabItemEditBusinessRisk, kebabItemEditStatus } from '../../PresentationalComponents/Kebab/KebabItems';\nimport BusinessRiskModal from '../Modals/BusinessRiskModal';\nimport CveStatusModal from '../Modals/CveStatusModal';\nimport Header from '../../PresentationalComponents/Header/Header';\nimport GroupedCVELabels from '../../PresentationalComponents/Snippets/GroupedCVELabels';\nimport ErrorHandler from '../../PresentationalComponents/ErrorHandler/ErrorHandler';\nimport { useRbac } from '../../../Helpers/Hooks';\nimport { NotAuthorized } from '../../PresentationalComponents/EmptyStates/EmptyStates';\nimport { clearNotifications } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { useParams } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport HybridInventory from '../HybridInventory/HybridInventoryTabs';\nimport CVEDetailTableTitle from './CVEDetailTableTitle';\nimport { fetchHybridSystemsCounts } from './cveDetailHelpers';\nimport useFeatureFlag from '../../../Utilities/useFeatureFlag';\n\nexport const CVEPageContext = React.createContext({ isLoading: true });\n\nconst CVEDetailsPage = (props) => {\n    const dispatch = useDispatch();\n    const inventoryRef = React.createRef();\n    const { cve: cveName } = useParams();\n    const [headerFilters, setHeaderFilters] = useState({});\n    const [hybridSystemsCounts, setHybridSystemsCounts] = useState({\n        conventionalCount: 0,\n        edgeCount: 0,\n        areCountsLoading: true\n    });\n\n    const intl = useIntl();\n\n    const [[canEditPairStatus, canEditStatusOrBusinessRisk, canExport, canReadVulnerabilityResults], isRbacLoading] = useRbac([\n        PERMISSIONS.setPairStatus,\n        PERMISSIONS.setCveStatusAndBusinessRisk,\n        PERMISSIONS.basicReporting,\n        PERMISSIONS.readVulnerabilityResults\n    ]);\n\n    const [BusinessModal, setBusinessRisk] = useState(() => () => null);\n    const [StatusModal, setStatusModal] = useState(() => () => null);\n\n    const details = useSelector(\n        ({ CVEDetailsPageStore }) => CVEDetailsPageStore.cveDetails\n    );\n    const cveDetails = useMemo(() => createCveDetailsPage(details), [details]);\n    const totalItems = useSelector(({ entities }) => entities?.total);\n\n    const isEdgeParityEnabled = useFeatureFlag('vulnerability.edge_parity');\n    useEffect(() => {\n        dispatch(fetchCveDetails(cveName));\n        fetchHybridSystemsCounts(\n            cveName,\n            isEdgeParityEnabled,\n            setHybridSystemsCounts\n        );\n    }, [dispatch, cveName]);\n\n    const refreshInventory = () => {\n        dispatch(clearInventoryStore());\n\n        // timestamp is used to force inventory to refresh\n        // if it wasn't there inventory might ignore request to refresh because parameters are the same\n        inventoryRef.current.onRefreshData(({ timestamp: Date.now(), page: 1 }));\n    };\n\n    const showBusinessRiskModal = cves => {\n        setBusinessRisk(\n            () => () =>\n                <BusinessRiskModal open cves={cves} updateRef={() => dispatch(fetchCveDetails(cveName))} />\n        );\n    };\n\n    const showStatusModal = cves => {\n        setStatusModal(\n            () => () =>\n                <CveStatusModal\n                    cves={cves}\n                    updateRef={overwriteSystemsStatus => {\n                        dispatch(fetchCveDetails(cveName));\n                        overwriteSystemsStatus && refreshInventory();\n                    }}\n                    canEditPairStatus={canEditPairStatus}\n                />\n        );\n    };\n\n    useEffect(() => {\n        return () => {\n            dispatch(clearCveStore());\n            dispatch(clearNotifications());\n        };\n    }, [dispatch]);\n\n    const { error, data } = cveDetails;\n\n    const cveStatusDetails = {\n        id: cveName,\n        status_id: cveDetails.data.status_id,\n        justification: cveDetails.data.status_justification,\n        exposed_systems_count: totalItems || 0\n    };\n\n    const cveBusinessRiskDetails = {\n        business_risk_id: cveDetails.data.business_risk_id,\n        id: cveName,\n        justification: cveDetails.data.business_risk_justification\n    };\n\n    const kebabItems = [\n        kebabItemEditBusinessRisk(showBusinessRiskModal, [cveBusinessRiskDetails]),\n        kebabItemEditStatus(showStatusModal, [cveStatusDetails])\n    ];\n    const { rules } = data;\n    const filterRuleValues = rules && rules.map(\n        ({ rule_id: ruleId, description }) => ({ value: ruleId, label: description })\n    );\n\n    const createBreadcrumbs = lastSegment =>\n        [\n            {\n                title: PATHS.cvesPage.title,\n                to: PATHS.cvesPage.to,\n                isLoaded: true\n            },\n            {\n                title: lastSegment,\n                isActive: true,\n                isLoaded: true\n            }\n        ];\n\n    return (\n        <CVEPageContext.Provider value={\n            cveDetails && { isLoading: cveDetails.isLoading || isRbacLoading, ...hybridSystemsCounts }\n        }>\n            {canReadVulnerabilityResults ? (\n                error?.hasError ? (\n                    <React.Fragment>\n                        <Header title={cveName} breadcrumbs={createBreadcrumbs(intl.formatMessage(messages.unknownCveId))}/>\n                        <ErrorHandler code={error?.errorCode} />\n                    </React.Fragment>\n                ) : (\n                    <Fragment>\n                        <Header\n                            title={data.celebrity_name ? cveName + ' - ' + data.celebrity_name : cveName}\n                            actions={canEditStatusOrBusinessRisk && kebabItems}\n                            actionsOuiaId=\"cve-actions\"\n                            breadcrumbs={createBreadcrumbs(cveName)}\n                            labels={[\n                                <GroupedCVELabels\n                                    key=\"labels\"\n                                    hasExploit={!!details.payload.data?.attributes.known_exploit}\n                                    hasRule={details.payload.data?.attributes.rules.length > 0}\n                                />\n                            ]}\n                        >\n                            <CVEDetailsPageSummary\n                                canEditStatusOrBusinessRisk={canEditStatusOrBusinessRisk}\n                                data={cveDetails}\n                                showStatusModal={() => showStatusModal([cveStatusDetails])}\n                                showBusinessRiskModal={() => showBusinessRiskModal([cveBusinessRiskDetails])}\n                                setHeaderFilters={setHeaderFilters}\n                                headerFilters={headerFilters}\n                            />\n                            <StatusModal />\n                            <BusinessModal />\n                        </Header>\n                        <Main>\n                            <Stack hasGutter>\n                                <StackItem>\n                                    <CVEDetailTableTitle />\n                                </StackItem>\n                                <StackItem>\n                                    <HybridInventory\n                                        cveName={cveName}\n                                        filterRuleValues={filterRuleValues}\n                                        cveStatusDetails={cveStatusDetails}\n                                        hasSecurityRule={rules?.length > 0}\n                                        canEditPairStatus={canEditPairStatus}\n                                        canExport={canExport}\n                                        inventoryRef={inventoryRef}\n                                        refreshInventory={refreshInventory}\n                                        headerFilters={headerFilters}\n                                        {...props}\n                                    />\n                                </StackItem>\n                            </Stack>\n                        </Main>\n                    </Fragment>\n                )) : (\n                <React.Fragment>\n                    <Header title={cveName} breadcrumbs={createBreadcrumbs(cveName)} />\n                    <NotAuthorized serviceName={SERVICE_NAME} />\n                </React.Fragment>\n            )}\n        </CVEPageContext.Provider>\n    );\n};\n\nexport default CVEDetailsPage;\n","import { Button, FormGroup, FormSelect, FormSelectOption, Modal, TextArea } from '@patternfly/react-core';\nimport {\n    addNotification\n} from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport propTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { NotAuthorizedNotification, ReadOnlyNotification, STATUS_OPTIONS } from '../../../Helpers/constants';\nimport messages from '../../../Messages';\nimport { FormattedMessage } from 'react-intl';\n\nexport function useStatusSelect(initialValue) {\n    const [statusId, setStatusId] = useState(initialValue);\n    const [props, setProps] = useState({});\n\n    const StatusSelect = (\n        <FormGroup label={<FormattedMessage {...messages.statusLabel} />} fieldId=\"statusId\">\n            <FormSelect aria-label=\"Select Input\" onChange={selection => setStatusId(selection)} value={statusId} {...props}>\n                {STATUS_OPTIONS.map(({ value, label }) => (\n                    <FormSelectOption key={value} value={value} label={label} />\n                ))}\n            </FormSelect>\n        </FormGroup>\n    );\n\n    return { StatusSelect, statusId, setStatusId, setProps };\n}\n\nexport function useJustificationInput(initialValue) {\n    const [justification, setJustification] = useState(initialValue);\n    const [props, setProps] = useState({});\n\n    const JustificationInput = (\n        <FormGroup label={<FormattedMessage {...messages.justificationLabel} />} fieldId=\"label\">\n            <TextArea\n                key=\"input\"\n                type=\"text\"\n                onChange={value => setJustification(value)}\n                value={justification}\n                resizeOrientation=\"vertical\"\n                aria-label=\"justification note\"\n                style={{ minHeight: '2.25rem' }}\n                {...props}\n            />\n        </FormGroup>\n    );\n    return { JustificationInput, justification, setJustification, setProps };\n}\n\nexport const BaseModal = ({ items, title, onSave, onSuccessNotification, onFailureNotification, ouiaId, children }) => {\n    const [targetItems, setTargetItems] = useState(items);\n\n    const dispatch = useDispatch();\n\n    const handleClose = () => {\n        setTargetItems(undefined);\n    };\n\n    const handleSave = () => {\n        onSave()\n            .then(() => dispatch(addNotification(onSuccessNotification)))\n            .catch((error) => dispatch(addNotification(\n                error.status === '503' ? ReadOnlyNotification :\n                    error.status === '403' ? NotAuthorizedNotification\n                        : onFailureNotification)));\n        handleClose();\n    };\n\n    return (\n        <Modal\n            variant=\"small\"\n            title={title}\n            isOpen={Boolean(targetItems)}\n            onClose={handleClose}\n            actions={[\n                <Button key=\"save\" variant=\"primary\" ouiaId=\"save\" onClick={handleSave}>\n                    <FormattedMessage {...messages.save} />\n                </Button>,\n                <Button key=\"cancel\" variant=\"secondary\" ouiaId=\"close\" onClick={handleClose}>\n                    <FormattedMessage {...messages.cancel} />\n                </Button>\n            ]}\n            ouiaId={ouiaId}\n        >\n            {children}\n        </Modal>\n    );\n};\n\nBaseModal.propTypes = {\n    children: propTypes.any,\n    onClose: propTypes.func,\n    items: propTypes.array,\n    updateRef: propTypes.func,\n    title: propTypes.string,\n    onSave: propTypes.func,\n    onSuccessNotification: propTypes.object,\n    onFailureNotification: propTypes.object,\n    ouiaId: propTypes.string\n};\n\nexport default BaseModal;\n"],"names":["FormBase","_a","children","className","isHorizontal","isWidthLimited","maxWidth","innerRef","props","__rest","Object","assign","noValidate","style","css","form","modifiers","horizontal","limitWidth","ref","Form","displayName","FormGroup","label","labelInfo","labelIcon","isRequired","validated","isInline","hasNoPaddingTop","isStack","helperText","isHelperTextBeforeField","helperTextInvalid","helperTextIcon","helperTextInvalidIcon","fieldId","role","validHelperText","formHelperText","success","warning","id","formHelperTextIcon","inValidHelperText","error","helperTextToDisplay","isGroupOrRadioGroup","LabelComponent","labelContent","formLabel","htmlFor","formLabelText","formLabelRequired","randomId","formGroup","formGroupLabel","info","noPaddingTop","formGroupLabelMain","formGroupLabelInfo","formGroupControl","inline","stack","FormSelect","constructor","super","this","handleChange","event","onChange","currentTarget","value","console","state","ouiaStateId","render","isDisabled","isIconSprite","ouiaId","ouiaSafe","selectedOption","toArray","find","option","isSelectedPlaceholder","isPlaceholder","formControl","iconSprite","placeholder","undefined","disabled","required","defaultProps","onBlur","onFocus","FormSelectOption","LabelGroup","headingRef","toggleCollapse","setState","prevState","isOpen","isTooltipVisible","Boolean","current","offsetWidth","scrollWidth","defaultIsOpen","componentDidMount","renderLabel","categoryName","tooltipPosition","position","content","tabIndex","labelGroupLabel","isClosable","isCompact","closeBtnAriaLabel","ariaLabel","onClick","numLabels","expandedText","collapsedText","isVertical","isEditable","hasEditableTextArea","editableTextAreaProps","addLabelControl","rest","renderedChildren","numChildren","length","collapsedTextResult","remaining","renderLabelGroup","labelArray","slice","labelGroupList","map","child","i","labelGroupListItem","key","isOverflowLabel","compact","textarea","labelGroupTextarea","rows","close","labelGroupClose","variant","labelGroup","category","vertical","editable","labelGroupMain","_e","TextAreResizeOrientation","TextAreaReadOnlyVariant","TextAreaBase","inputRef","setAutoHeight","field","setProperty","computed","window","getComputedStyle","height","parseInt","getPropertyValue","scrollHeight","autoResize","isReadOnly","readOnlyVariant","resizeOrientation","orientation","plain","both","defaultValue","readOnly","TextArea","PowerOffIconConfig","name","width","svgPath","yOffset","xOffset","PowerOffIcon","renderer","marked","Renderer","link","prototype","apply","arguments","replace","setOptions","CSAwRuleSummary","_ref","text","truncate","intl","_objectWithoutProperties","_excluded","React","StackItem","TextContent","TRUNCATE_TEXT_THRESHOLD","Truncate","expandText","formatMessage","messages","readMore","collapseText","readLess","spaceBetween","dangerouslySetInnerHTML","__html","sanitizeHtml","dangerousHtml","propTypes","PropTypes","injectIntl","ErrorHandler","code","NotAuthorized","serviceName","SERVICE_NAME","InvalidObject","Unavailable","ErrorState","GroupedCVELabels","hasExploit","hasRule","KnownExploitLabel","CSAwLabel","Tooltip","FormattedMessage","knownExploitDescription","Label","color","_objectSpread","knownExploit","CVEDetailsPageDescription","cveAttributes","publishDate","public_date","description","rh_link","hasDescription","CVEPageContext","Consumer","context","Stack","hasGutter","Flex","FlexItem","grow","default","WithLoader","isLoading","LoaderType","inlineSkeleton","size","rectangle","textAlign","Text","component","TextVariants","p","NoDescriptionAvailable","V3names","AV","vectorNamesV3AV","values","N","vectorValuesNetwork","A","vectorValuesAdjacent","L","vectorValuesLocal","P","vectorValuesPhysical","AC","vectorNamesV3AC","vectorValuesLow","H","vectorValuesHigh","PR","vectorNamesV3PR","vectorValuesNone","UI","vectorNamesV3UI","R","vectorValuesRequired","S","vectorNamesV3S","U","vectorValuesUnchanged","C","vectorValuesChanged","vectorNamesV3C","I","vectorNamesV3I","vectorNamesV3A","CVSS","vectorNamesCvssVersion","V2names","vectorNamesV2AV","vectorValuesAdjacentNetwork","vectorNamesV2AC","Au","vectorNamesV2AU","M","vectorValuesMultiple","vectorValuesSingle","vectorNamesV2C","vectorValuesComplete","vectorValuesPartial","vectorNamesV2I","vectorNamesV2A","CvssVector","vector","namesMapping","res","CVSS2Vector","cvss2_metrics","CVSS3Vector","cvss3_metrics","score","cvssVer","cvssVector","parsedVector","split","forEach","curr","_curr$split","_curr$split2","_slicedToArray","val","cvssVersion","Popover","enableFlip","headerContent","concat","cvssVectorPopoverTitle","bodyContent","colSize","rowSize","compactTable","Table","TableVariant","gridBreakPoint","cells","cvssVectorMetric","cvssVectorValue","entries","TableHeader","TableBody","isLarge","cvssVectorVectorString","OutlinedQuestionCircleIcon","substring","indexOf","SnippetWithHeaderAndPopover","title","appendTo","document","querySelector","CVEDetailsPageSidebar","canEditStatusOrBusinessRisk","showStatusModal","showBusinessRiskModal","useIntl","cveDetails","getImpactDetails","impact","businessRisk","business_risk","businessRiskJustification","business_risk_justification","status","statusJustification","status_justification","systemsStatusDetail","systems_status_detail","systemsStatusDivergent","systems_status_divergent","detailRows","keys","item","STATUS_OPTIONS","toString","BusinessRiskPopoverContent","justificationNote","Button","editBusinessRisk","StatusPopoverContent","cveStatus","cveDetailsPageSystemsWTCves","statusLabel","count","editStatus","Split","SplitItem","businessRiskLabel","ExclamationTriangleIcon","Shield","hasLabel","parseCvssScore","cvss2_score","cvss3_score","__assign","t","s","n","hasOwnProperty","call","VALUE_TO_STATE","icon","AngleDoubleDownIcon","EqualsIcon","AngleDoubleUpIcon","CriticalRiskIcon","_b","hideIcon","e","getOwnPropertySymbols","propertyIsEnumerable","hashFragment","observer","asyncTimerId","scrollFunction","disconnect","clearTimeout","isInteractiveElement","element","includes","tagName","hasAttribute","getElAndScroll","body","getElementById","originalTabIndex","getAttribute","setAttribute","focus","preventScroll","blur","removeAttribute","genericHashLink","As","linkHash","to","join","hash","passDownProps","NavLink","isActive","match","location","isExact","filteredProps","timeout","elementId","defaultPrevented","button","target","metaKey","altKey","ctrlKey","shiftKey","scroll","el","smooth","scrollIntoView","behavior","setTimeout","MutationObserver","observe","attributes","childList","subtree","HashLink","Link","CSAwRuleBox","rules","synopsis","setHeaderFilters","headerFilters","sortedRules","sort","a","b","systems_affected","rule","index","_rule$systems_affecte","summary","Card","rule_id","ExpandableSection","toggleText","isWrappable","h4","ruleId","stopPropagation","isSmall","filterByAffectedSystems","CardBody","Grid","GridItem","md","sm","rule_impact","impactTextList","InsightsLabel","riskOfChange","RISK_OF_CHANGE_TOOLTIP","change_risk","RISK_OF_CHANGE_LABEL","remediationLabel","playbook_count","Fragment","CheckCircleIcon","yes","ansibleRemediationTooltip","no","reboot_required","rebootRequired","kbase_node_id","href","RH_KB_URL","rel","knowledgebaseArticle","ExternalLinkAltIcon","associatedCves","associated_cves","filter","cve","_i","CVES_PATH","reduce","prev","changeExposedSystemsParameters","KnownExploitSummary","knownExploitHeader","NotVulnerableBox","notVulnerableSystemCount","NotVulnerableLabel","notVulnerableBoxTitle","ONLY_NON_VULNERABLE_SYSTEMS","InsightsLink","notVulnerableDescription","multiple","CVEDetailsPageSummary","data","known_exploit","affected_but_not_vulnerable","ImmutableDevices","lazy","SystemsExposedTable","HybridInventory","isImmutableTabOpen","tabProps","useParams","isEdgeParityEnabled","useFeatureFlag","hasEdgeDevices","useContext","AccountStatContext","_useContext2","conventionalCount","edgeCount","areCountsLoading","Bullseye","Spinner","AsynComponent","appName","module","ConventionalSystemsTab","Suspense","fallback","ImmutableDevicesTab","tabPathname","columns","hasConventionalSystems","accountHasEdgeImages","totalCount","Skeleton","screenreaderText","h2","getTotalItems","apiResult","_apiResult$meta","meta","total_items","fetchHybridSystemsCounts","_asyncToGenerator","_regeneratorRuntime","_callee","cveName","setHybridSystemsCounts","_context","next","getAffectedSystemsByCVE","host_type","limit","then","sent","t0","t1","stop","_x","_x2","_x3","_details$payload$data","_details$payload$data2","dispatch","useDispatch","inventoryRef","_useState","useState","_useState2","_useState3","_useState4","hybridSystemsCounts","_useRbac","useRbac","PERMISSIONS","setPairStatus","setCveStatusAndBusinessRisk","basicReporting","readVulnerabilityResults","_useRbac2","_useRbac2$","canEditPairStatus","canExport","canReadVulnerabilityResults","isRbacLoading","_useState5","_useState6","BusinessModal","setBusinessRisk","_useState7","_useState8","StatusModal","setStatusModal","details","useSelector","CVEDetailsPageStore","useMemo","createCveDetailsPage","totalItems","_ref2","entities","total","useEffect","fetchCveDetails","refreshInventory","clearInventoryStore","onRefreshData","timestamp","Date","now","page","cves","BusinessRiskModal","open","updateRef","CveStatusModal","overwriteSystemsStatus","clearCveStore","clearNotifications","cveStatusDetails","status_id","justification","exposed_systems_count","cveBusinessRiskDetails","business_risk_id","kebabItems","kebabItemEditBusinessRisk","kebabItemEditStatus","filterRuleValues","_ref3","createBreadcrumbs","lastSegment","PATHS","cvesPage","isLoaded","Provider","hasError","Header","breadcrumbs","unknownCveId","errorCode","celebrity_name","actions","actionsOuiaId","labels","payload","Main","CVEDetailTableTitle","_extends","hasSecurityRule","useStatusSelect","initialValue","statusId","setStatusId","setProps","StatusSelect","selection","useJustificationInput","setJustification","JustificationInput","justificationLabel","type","minHeight","BaseModal","items","onSave","onSuccessNotification","onFailureNotification","_useState9","_useState10","targetItems","setTargetItems","handleClose","Modal","onClose","addNotification","ReadOnlyNotification","NotAuthorizedNotification","save","cancel"],"sourceRoot":""}