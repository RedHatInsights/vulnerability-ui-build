{"version":3,"file":"js/ImmutableDevices.5b01148aa84a29cd5a92.js","mappings":"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","sources":["webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/SearchFilter.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/SecurityRuleFilter.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-utilities/esm/helpers/urlPathHelpers.js","webpack:///./src/Components/SmartComponents/HybridInventory/ImmutableDevicesTab/helpers.js","webpack:///./src/Components/SmartComponents/HybridInventory/ImmutableDevicesTab/ImmutableDevices.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-utilities/esm/useInsightsNavigate/useInsightsNavigate.js","webpack:///./src/Helpers/TableToolbarHelper.js","webpack:///./src/Store/Reducers/InventoryEntitiesReducer.js","webpack:///./node_modules/lodash/unionWith.js"],"sourcesContent":["import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { intl } from '../../../../Utilities/IntlProvider';\n\nimport debounce from 'lodash/debounce';\nimport React from 'react';\n\nconst useSearchFilter = (urlParam, label, placeholder, search, apply) => {\n    const [searchValue, setSearchValue] = React.useState();\n    const [handleSearch] = React.useState(() =>\n        debounce(newValue =>  {\n            if (newValue !== undefined) {\n                apply({ [urlParam]: newValue, page: 1 });\n            }},\n        400)\n    );\n\n    React.useEffect(() => setSearchValue(search), [search]);\n\n    return {\n        type: conditionalFilterType.text,\n        label: intl.formatMessage(label),\n        key: urlParam,\n        filterValues: {\n            'aria-label': 'search-field',\n            id: `search-${label.id}`,\n            onChange: (event, value) => {\n                setSearchValue(value);\n                handleSearch(value);\n            },\n            placeholder: intl.formatMessage(placeholder),\n            value: searchValue\n        }\n    };\n};\n\nexport default useSearchFilter;\n","\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { RULE_PRESENCE_OPTIONS } from '../../../../Helpers/constants';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\nimport unionWith from 'lodash/unionWith';\nimport isEqual from 'lodash/isEqual';\n\nconst securityRuleFilter = (apply, currentFilter = {}, dynamicFilters = [], config = {}) => {\n    let currentValue = [];\n\n    if (currentFilter.rule_presence) {\n        currentValue = currentValue.concat(currentFilter.rule_presence.split(','));\n    }\n\n    if (currentFilter.rule) {\n        currentValue = currentValue.concat(currentFilter.rule.split(','));\n    }\n\n    const filterBySecurityRule = values => {\n        apply({\n            ...config.isDynamic && { rule: values.join(',') || undefined },\n            ...!config.isDynamic && { rule_presence: values.join(',') || undefined },\n            page: 1\n        });\n    };\n\n    const dropdownItems\t= () => {\n        const items = config.dropdownItems ? config.dropdownItems : RULE_PRESENCE_OPTIONS;\n\n        return unionWith(items, dynamicFilters, isEqual).map(({ label, value }) => ({ label, value }));\n    };\n\n    return {\n        label: intl.formatMessage(messages.filterSecurityRules),\n        type: conditionalFilterType.checkbox,\n        key: 'security_rule',\n        filterValues: {\n            onChange: (event, value) => {\n                filterBySecurityRule(value);\n            },\n            items: dropdownItems(),\n            value: currentValue\n        }\n    };\n};\n\nexport default securityRuleFilter;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nexport var buildInsightsPath = function (chrome, app, toProp, forcePreview) {\n    var inAppPath = (typeof toProp === 'object' ? toProp.pathname : toProp) || '';\n    var isAbsolutePath = /^\\//.test(inAppPath);\n    var environmentPath = forcePreview ? '/preview' : '';\n    var appPath = app || chrome.getApp();\n    var pathname = isAbsolutePath ? [environmentPath, chrome.getBundle(), appPath, inAppPath.replace(/^\\//, '')].join('/') : inAppPath;\n    return typeof toProp === 'object'\n        ? __assign(__assign({}, toProp), { pathname: pathname }) : pathname;\n};\n//# sourceMappingURL=urlPathHelpers.js.map","import { getAffectedSystemsByCVE, useGetImageData } from '../../../../Helpers/APIHelper';\nimport { SYSTEMS_EXPOSED_HEADER } from '../../../../Helpers/constants';\n\nexport const fetchFullDeviceInfo = async (parameters, fetchImagesData) => {\n    const vulnerableSystems = await getAffectedSystemsByCVE(parameters);\n    const deviceIds = vulnerableSystems?.data.map(data => data.id);\n\n    if (deviceIds.length) {\n        const deviceData = await fetchImagesData({ devices_uuid: deviceIds });\n        vulnerableSystems.data?.forEach(system => {\n            const systemDevice = deviceData?.data?.devices?.find(device => device.DeviceUUID === system.id);\n            return system.attributes = { ...system.attributes, ...systemDevice };\n        });\n    }\n\n    return vulnerableSystems;\n};\n\nexport const useGetEntities = ({ id, setUrlParams, createRows }) => {\n    const fetchImagesData = useGetImageData();\n    const getEntities = async (\n        _items,\n        { orderBy, orderDirection, page, per_page: perPage, edgeParams, filters }\n    ) => {\n        const { hostnameOrId: filter } = filters;\n        const sort = `${orderDirection === 'ASC' ? '' : '-'}${orderBy}`;\n\n        const params = {\n            filter,\n            ...edgeParams,\n            ...filters?.hostGroupFilter ? {\n                group_names: filters.hostGroupFilter.join(',')\n            } : {},\n            page,\n            page_size: perPage,\n            sort\n        };\n\n        setUrlParams?.({ ...params });\n\n        const items = await fetchFullDeviceInfo(\n            {\n                ...id && { id },\n                ...params\n            },\n            fetchImagesData\n        );\n\n        return {\n            results: typeof createRows === 'function'\n                ? createRows(items || {})\n                : items?.data?.map(row => ({ id: row.id, ...row.attributes })),\n            total: items?.meta?.total_items,\n            page: items?.meta?.page,\n            perPage: items?.meta?.page_size,\n            meta: {\n                page: items?.meta?.page,\n                sort: items?.meta?.sort,\n                page_size: items?.meta?.page_size,\n                cves_without_errata: items?.meta?.cves_without_errata\n            }\n        };\n    };\n\n    return getEntities;\n};\n\nexport const mergeAppColumns = (defaultColumns) => {\n    const osColumn = SYSTEMS_EXPOSED_HEADER.find((column) => column.key === 'os');\n    const advisoryColumn = SYSTEMS_EXPOSED_HEADER.find((column) => column.key === 'advisories_list');\n\n    const osIndex = defaultColumns.findIndex(column =>{\n        return column.key === 'system_profile';\n    });\n    if (osIndex !== -1) {\n        defaultColumns[osIndex] = osColumn;\n    }\n\n    return [...defaultColumns, ...[advisoryColumn || []]];\n};\n","import React, { useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport { useUrlParams } from '../../../../Helpers/MiscHelper';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useInsightsNavigate from '@redhat-cloud-services/frontend-components-utilities/useInsightsNavigate';\nimport ReducerRegistry from '../../../../Utilities/ReducerRegistry';\nimport { createExposedDevicesRows } from '../../../../Helpers/CVEHelper';\nimport { inventoryEntitiesReducer } from '../../../../Store/Reducers/InventoryEntitiesReducer';\nimport {\n    changeExposedDevicesParameters\n} from '../../../../Store/Actions/Actions';\nimport {\n    SYSTEMS_EXPOSED_ALLOWED_PARAMS,\n    PERMISSIONS,\n    DEFAULT_PAGE_SIZE,\n    RULE_PRESENCE_OPTIONS,\n    CVE_DETAILS_FILTER_PARAMS\n} from '../../../../Helpers/constants';\nimport ErrorHandler from '../../../PresentationalComponents/ErrorHandler/ErrorHandler';\nimport { EmptyStateNoSystems } from '../../../PresentationalComponents/EmptyStates/EmptyStates';\nimport { useGetEntities, mergeAppColumns } from './helpers.js';\nimport Spinner from '@redhat-cloud-services/frontend-components/Spinner';\nimport { buildActiveFilters, removeFilters, isFilterInDefaultState } from '../../../../Helpers/TableToolbarHelper';\nimport useSearchFilter from '../../../PresentationalComponents/Filters/PrimaryToolbarFilters/SearchFilter';\nimport useSecurityRuleFilter from '../../../PresentationalComponents/Filters/PrimaryToolbarFilters/SecurityRuleFilter';\nimport AsynComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\nimport { useRbac } from '../../../../Helpers/Hooks';\nimport messages from '../../../../Messages';\n\nconst ImmutableDevices = ({ intl, cveName, filterRuleValues, inventoryRef, headerFilters }) => {\n    const [[canReadHostsInventory], isLoadingInventory] = useRbac([\n        PERMISSIONS.readHosts\n    ], 'inventory');\n\n    const dispatch = useDispatch();\n    const navigate = useInsightsNavigate('inventory');\n    const [urlParameters, setUrlParams] = useUrlParams(SYSTEMS_EXPOSED_ALLOWED_PARAMS);\n\n    const totalItems = useSelector(({ entities }) => entities?.total);\n    const error = useSelector(({ entities }) => entities?.error || {});\n\n    const parameters = useSelector(\n        ({ ImmutableDevicesStore }) => ImmutableDevicesStore.parameters);\n\n    const apply = (params) => dispatch(changeExposedDevicesParameters(params));\n\n    useEffect(() => apply(urlParameters), []);\n\n    useEffect(() => setUrlParams({ ...parameters, ...headerFilters }), [parameters, headerFilters]);\n\n    const getEntities = useGetEntities(\n        {\n            id: cveName,\n            createRows: createExposedDevicesRows\n        }\n    );\n\n    useEffect(() => {\n        apply(headerFilters);\n    }, [headerFilters]);\n\n    const searchFilter = useSearchFilter(\n        'filter',\n        messages.systemsSearchName,\n        messages.searchFilterByName,\n        parameters.filter,\n        apply\n    );\n\n    const advisoryNameFilter = useSearchFilter(\n        'advisory',\n        messages.advisoryName,\n        messages.searchFilterByAdvisoryName,\n        parameters.advisory,\n        apply\n    );\n    const securityRuleFilter = useSecurityRuleFilter(\n        apply,\n        parameters,\n        filterRuleValues,\n        {\n            isDynamic: true,\n            dropdownItems: RULE_PRESENCE_OPTIONS.filter(item => item.value !== 'true')\n        }\n    );\n\n    const activeFilters = {\n        filters: buildActiveFilters({ ...parameters }, filterRuleValues),\n        onDelete: (_, chips, reset) => removeFilters(chips, apply, reset, {}),\n        deleteTitle: intl.formatMessage(messages.resetFilters),\n        showDeleteButton: !isFilterInDefaultState(parameters, {}, CVE_DETAILS_FILTER_PARAMS)\n    };\n\n    const onRowClick = (_key, systemId) => {\n        navigate(`/${systemId}?appName=vulnerabilities`);\n    };\n\n    return isLoadingInventory ? <Spinner centered /> :\n        error?.hasError && !canReadHostsInventory    ? <ErrorHandler code={error?.errorCode} />\n            : (<AsynComponent\n                appName=\"inventory\"\n                ref={inventoryRef}\n                module=\"./ImmutableDevices\"\n                fallback={<div />}\n                store={ReducerRegistry.getStore()}\n                onLoad={({ mergeWithEntities }) => {\n                    ReducerRegistry.register({\n                        ...mergeWithEntities(\n                            inventoryEntitiesReducer([]),\n                            {\n                                page: Number(parameters.page || 1),\n                                perPage: DEFAULT_PAGE_SIZE,\n                                ...(parameters.sort && {\n                                    sortBy: {\n                                        key: parameters.sort.replace(/^-/, ''),\n                                        direction: parameters.sort.match(/^-/) ? 'desc' : 'asc'\n                                    }\n                                })\n                            }\n                        )\n                    });\n                }}\n                key=\"immutableDevices\"\n                customFilters={{\n                    edgeParams: {\n                        ...parameters,\n                        host_type: 'edge'\n                    }\n                }}\n                getEntities={getEntities}\n                showActions={totalItems !== 0}\n                hideFilters={{ all: true, hostGroupFilter: false, operatingSystem: false }}\n                noSystemsTable={<EmptyStateNoSystems />}\n                mergeAppColumns={mergeAppColumns}\n                filterConfig={{\n                    items: [\n                        searchFilter,\n                        securityRuleFilter,\n                        advisoryNameFilter\n                    ]\n                }}\n                activeFiltersConfig={activeFilters}\n                onRowClick={onRowClick}\n            />\n            );\n};\n\nImmutableDevices.propTypes = {\n    cveName: propTypes.string,\n    intl: propTypes.object,\n    filterRuleValues: propTypes.object,\n    inventoryRef: propTypes.object,\n    headerFilters: propTypes.object\n};\n\nexport default injectIntl(ImmutableDevices);\n","import { useNavigate } from 'react-router-dom';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport { buildInsightsPath } from '../helpers/urlPathHelpers';\nvar useInsightsNavigate = function (app, forcePreview) {\n    var navigate = useNavigate();\n    var chrome = useChrome();\n    return function (to, preview) { return navigate(buildInsightsPath(chrome, app, to, preview || forcePreview)); };\n};\nexport default useInsightsNavigate;\n//# sourceMappingURL=useInsightsNavigate.js.map","import messages from '../Messages';\nimport { FILTERS, ONLY_NON_VULNERABLE_SYSTEMS } from './constants';\nimport { intl } from '../Utilities/IntlProvider';\nimport isEqual from 'lodash/isEqual';\n\nexport const handleChangePage = (_event, page, apply) => apply({ page });\n\nexport const handleSetPageSize = (_event, perPage, apply) => apply({ page_size: perPage, page: 1 });\n\nexport const exportConfig = (methods) => (\n    { onSelect: (_event, fileType) => methods.downloadReport(fileType) }\n);\n\nexport const buildActiveFilters = (currentFilters, filterRuleValues = []) => {\n    const { filter: nameFilter, advisory: advisoryFilter } = currentFilters;\n\n    const buildChip = (key, parameter) => (\n        FILTERS[key].items.reduce((object, item) => {\n            if (parameter === item.value) {\n                object.name = item.label;\n                object.value = item.value;\n            }\n            else if (key === 'rule_presence') {\n                const filteredRule = filterRuleValues.find(({ value }) => value === parameter);\n\n                ['true', 'false', ONLY_NON_VULNERABLE_SYSTEMS].includes(parameter)\n                    ? object.name = FILTERS.rule_presence.items.find(e => e.value === parameter).label\n                    : object.name = filteredRule && filteredRule.label || parameter;\n\n                object.value = parameter;\n            }\n\n            return object;\n        }, {})\n    );\n\n    const buildChips = (paramValues, key) => {\n        return paramValues.reduce((values, parameter) => {\n            values.push(buildChip(key, parameter));\n            return values;\n        }, []);\n    };\n\n    const hasValue = (filters, key) => Object.keys(filters).includes(key) && !['', undefined].includes(filters[key]);\n\n    // FIXME please!!!\n    const filterChips = Object.keys(FILTERS).reduce((array, key) => {\n        if (key === 'rule_presence' && (hasValue(currentFilters, 'rule_presence') || hasValue(currentFilters, 'rule'))) {\n            const multiValue = [].concat(\n                currentFilters.rule_presence ? currentFilters.rule_presence.split(',') : [],\n                currentFilters.rule ? currentFilters.rule.split(',') : []);\n            array.push({ key, multiValue, category: FILTERS[key].title, chips: buildChips(multiValue, key) });\n        }\n        else if (key === 'cvss_filter' && (hasValue(currentFilters, 'cvss_from') || hasValue(currentFilters, 'cvss_to'))) {\n            const cvssFrom = (currentFilters.cvss_from && parseFloat(currentFilters.cvss_from).toFixed(1)) || '0.0';\n            const cvssTo = (currentFilters.cvss_to && parseFloat(currentFilters.cvss_to).toFixed(1)) || '10.0';\n\n            if (cvssFrom !== '0.0' || cvssTo !== '10.0') {\n                array.push({ key, category: FILTERS[key].title, chips: [{ name: `${cvssFrom} - ${cvssTo}` }] });\n            }\n        }\n        else if (key === 'rhel_version' && hasValue(currentFilters, 'rhel_version')) {\n            array.push({\n                key,\n                multiValue: currentFilters.rhel_version.split(','),\n                category: 'Operating system',\n                chips: currentFilters.rhel_version\n                    .split(',')\n                    .map((v) => ({ value: v, name: `RHEL ${v}` }))\n            });\n        }\n        else if (hasValue(currentFilters, key)) {\n            const multiValue = typeof currentFilters[key] === 'string' && currentFilters[key].split(',');\n            const filteredValues = (multiValue && multiValue.length > 1)\n                && buildChips(multiValue, key)\n                || [buildChip(key, currentFilters[key])];\n\n            array.push({ key, multiValue, category: FILTERS[key].title, chips: filteredValues });\n        }\n\n        return array;\n    }, []);\n\n    nameFilter && filterChips.push(\n        {\n            key: 'filter',\n            category: intl.formatMessage(messages.searchLabel),\n            chips: [{ name: nameFilter }]\n        }\n    );\n\n    advisoryFilter && filterChips.push(\n        {\n            key: 'advisory',\n            category: intl.formatMessage(messages.advisoryName),\n            chips: [{ name: advisoryFilter }]\n        }\n    );\n\n    return filterChips;\n};\n\nexport const removeFilters = (chips, apply, reset = false, defaultFilters = {}) => {\n    if (reset) {\n        apply({ ...defaultFilters, page: 1, reset });\n        return;\n    }\n\n    const emptyFilter = chips.reduce((obj, item) => {\n        if (item.key === 'rule_presence') {\n            const remainingValues = item.multiValue.filter(value => !item.chips.some(chip => chip.value === value));\n            obj.rule_presence = remainingValues.filter(value => ['true', 'false'].includes(value)).join(',') || '';\n            obj.rule = remainingValues.filter(value => !['true', 'false'].includes(value)).join(',') || '';\n        }\n        else if (item.key === 'filter' || item.key === 'advisory' || (item.multiValue && item.multiValue.length === 1)) {\n            obj[item.key] = '';\n        }\n        else if (item.key === 'cvss_filter') {\n            obj.cvss_filter = undefined;\n            obj.cvss_from = undefined;\n            obj.cvss_to = undefined;\n        }\n        else {\n            obj[item.key] = item.multiValue.filter(value => !item.chips.some(chip => chip.value === value)).join(',');\n        }\n\n        if (obj[item.key] === '') {\n            obj[item.key] = undefined;\n        }\n\n        return obj;\n    }, {});\n\n    apply({ ...emptyFilter, page: 1 });\n};\n\nexport const isFilterInDefaultState = (currentParams, defaultParams, filterParams) => {\n    // filter out params which have nothing to do with filter chips, like page, sort, etc.\n    currentParams = filterParams.reduce((acc, param) => (\n        {\n            ...acc,\n            ...currentParams[param] && { [param]: currentParams[param] }\n        }\n    ), {});\n\n    return isEqual(currentParams, defaultParams);\n};\n","import { selectRows } from './reducersHelper';\nimport * as ActionTypes from '../ActionTypes';\nimport { DEFAULT_PAGE_SIZE } from '../../Helpers/constants';\n\nexport const initialState = {\n    columns: [],\n    rows: [],\n    entities: [],\n    loaded: false,\n    tagsLoaded: false,\n    allTagsLoaded: false,\n    invConfig: {},\n    sortBy: {\n        key: 'updated',\n        direction: 'desc'\n    },\n    page: 1,\n    perPage: DEFAULT_PAGE_SIZE,\n    selectedRows: [],\n    selectedRowsCount: 0\n};\n\nfunction modifyInventory(columns, state, action) {\n    if (!state.selectedRows) {\n        state.selectedRows = [];\n    }\n\n    if (!state.sortBy) {\n        state.sortBy = {\n            key: 'updated',\n            direction: 'desc'\n        };\n    }\n\n    if (state.loaded) {\n        return {\n            ...state,\n            columns,\n            rows: state.rows.map(row => ({\n                ...row,\n                selected: state.selectedRows.some(selectedRow => selectedRow.id === row.id) || false\n            })),\n            meta: action.payload.meta\n        };\n    }\n\n    return state;\n}\n\nexport const inventoryEntitiesReducer = (columns) => (state = initialState, action) => {\n    let newState = { ...state };\n\n    switch (action.type) {\n        case ActionTypes.LOAD_ENTITIES + '_FULFILLED':\n            return modifyInventory(columns, newState, action);\n        case ActionTypes.SELECT_ENTITY:\n            return selectRows(newState, action, action.selecting);\n        case ActionTypes.EXPAND_ROW:\n            return {\n                ...newState,\n                rows: newState.rows.map(row => ({\n                    ...row,\n                    isOpen: row.id === action.payload.id ? action.payload.isOpen : row.isOpen\n                }))\n            };\n        case ActionTypes.CLEAR_INVENTORY_STORE:\n            return initialState;\n        default:\n            return newState;\n    }\n};\n","var baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    baseUniq = require('./_baseUniq'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    last = require('./last');\n\n/**\n * This method is like `_.union` except that it accepts `comparator` which\n * is invoked to compare elements of `arrays`. Result values are chosen from\n * the first array in which the value occurs. The comparator is invoked\n * with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.unionWith(objects, others, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n */\nvar unionWith = baseRest(function(arrays) {\n  var comparator = last(arrays);\n  comparator = typeof comparator == 'function' ? comparator : undefined;\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n});\n\nmodule.exports = unionWith;\n"],"names":["urlParam","label","placeholder","search","apply","_React$useState","React","_React$useState2","_slicedToArray","searchValue","setSearchValue","_React$useState3","debounce","newValue","_apply","undefined","_defineProperty","handleSearch","type","conditionalFilterType","text","intl","formatMessage","key","filterValues","id","concat","onChange","event","value","items","currentFilter","arguments","length","dynamicFilters","config","currentValue","rule_presence","split","rule","messages","filterSecurityRules","checkbox","values","_objectSpread","isDynamic","join","page","dropdownItems","RULE_PRESENCE_OPTIONS","unionWith","isEqual","map","_ref","__assign","Object","assign","t","s","i","n","p","prototype","hasOwnProperty","call","this","fetchFullDeviceInfo","_asyncToGenerator","_regeneratorRuntime","_callee","parameters","fetchImagesData","vulnerableSystems","deviceIds","_vulnerableSystems$da","deviceData","_context","prev","next","getAffectedSystemsByCVE","sent","data","devices_uuid","forEach","system","_deviceData$data","_deviceData$data$devi","systemDevice","devices","find","device","DeviceUUID","attributes","abrupt","stop","_x","_x2","mergeAppColumns","defaultColumns","osColumn","SYSTEMS_EXPOSED_HEADER","column","advisoryColumn","osIndex","findIndex","_toConsumableArray","ImmutableDevices","cveName","filterRuleValues","inventoryRef","headerFilters","_useRbac","useRbac","PERMISSIONS","readHosts","_useRbac2","canReadHostsInventory","isLoadingInventory","dispatch","useDispatch","navigate","app","forcePreview","useNavigate","chrome","useChrome","to","preview","toProp","inAppPath","pathname","isAbsolutePath","test","environmentPath","appPath","getApp","getBundle","replace","buildInsightsPath","useInsightsNavigate","_useUrlParams","useUrlParams","SYSTEMS_EXPOSED_ALLOWED_PARAMS","_useUrlParams2","urlParameters","setUrlParams","totalItems","useSelector","_ref2","entities","total","error","_ref3","_ref4","ImmutableDevicesStore","params","changeExposedDevicesParameters","useEffect","getEntities","createRows","useGetImageData","_callee2","_items","_items$data","_items$meta","_items$meta2","_items$meta3","_items$meta4","_items$meta5","_items$meta6","_items$meta7","orderBy","orderDirection","perPage","edgeParams","filters","filter","sort","_context2","per_page","hostnameOrId","hostGroupFilter","group_names","page_size","results","row","meta","total_items","cves_without_errata","_x3","_x4","useGetEntities","createExposedDevicesRows","searchFilter","useSearchFilter","systemsSearchName","searchFilterByName","advisoryNameFilter","advisoryName","searchFilterByAdvisoryName","advisory","securityRuleFilter","useSecurityRuleFilter","item","activeFilters","buildActiveFilters","onDelete","_","chips","reset","removeFilters","deleteTitle","resetFilters","showDeleteButton","isFilterInDefaultState","CVE_DETAILS_FILTER_PARAMS","Spinner","centered","hasError","ErrorHandler","code","errorCode","AsynComponent","appName","ref","module","fallback","store","ReducerRegistry","getStore","onLoad","_ref5","mergeWithEntities","register","inventoryEntitiesReducer","Number","DEFAULT_PAGE_SIZE","sortBy","direction","match","customFilters","host_type","showActions","hideFilters","all","operatingSystem","noSystemsTable","EmptyStateNoSystems","filterConfig","activeFiltersConfig","onRowClick","_key","systemId","propTypes","injectIntl","handleChangePage","_event","handleSetPageSize","exportConfig","methods","onSelect","fileType","downloadReport","currentFilters","nameFilter","advisoryFilter","buildChip","parameter","FILTERS","reduce","object","name","filteredRule","ONLY_NON_VULNERABLE_SYSTEMS","includes","e","buildChips","paramValues","push","hasValue","keys","filterChips","array","multiValue","category","title","cvssFrom","cvss_from","parseFloat","toFixed","cvssTo","cvss_to","rhel_version","v","filteredValues","searchLabel","obj","remainingValues","some","chip","cvss_filter","currentParams","defaultParams","filterParams","acc","param","initialState","columns","rows","loaded","tagsLoaded","allTagsLoaded","invConfig","selectedRows","selectedRowsCount","action","newState","ActionTypes","state","selected","selectedRow","payload","modifyInventory","selectRows","selecting","isOpen","baseFlatten","baseRest","baseUniq","isArrayLikeObject","last","arrays","comparator","exports"],"sourceRoot":""}