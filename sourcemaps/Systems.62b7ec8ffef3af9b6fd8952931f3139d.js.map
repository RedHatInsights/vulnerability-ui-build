{"version":3,"file":"js/Systems.1658247604277.c487e61e7548cf7cf7df.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-table/dist/esm/components/Table/TableTypes.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/ErrorState/DefaultErrorMessage.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/ErrorState/ErrorState.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/InvalidObject/icon-404.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/InvalidObject/InvalidObject.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/InventoryLoadError.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/InventoryTable.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Unavailable/Unavailable.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/OsVersionFilter.js","webpack:///./src/Components/PresentationalComponents/Kebab/KebabItems.js","webpack:///./src/Components/SmartComponents/Reports/Common/CVElabels.js","webpack:///./src/Components/SmartComponents/Reports/Common/firstPagePDF.js","webpack:///./src/Components/SmartComponents/Reports/Common/tablePage.js","webpack:///./src/Components/SmartComponents/Reports/DownloadSystemsReport.js","webpack:///./src/Components/PresentationalComponents/Filters/PrimaryToolbarFilters/ExcludedFilter.js","webpack:///./src/Components/SmartComponents/SystemsPage/SystemsTableToolbar.js","webpack:///./src/Components/SmartComponents/SystemsPage/SystemsPage.js","webpack:///./src/Store/Reducers/InventoryEntitiesReducer.js","webpack:///./node_modules/@babel/runtime/helpers/esm/classCallCheck.js"],"sourcesContent":["export var TableGridBreakpoint;\n(function (TableGridBreakpoint) {\n    TableGridBreakpoint[\"none\"] = \"\";\n    TableGridBreakpoint[\"grid\"] = \"grid\";\n    TableGridBreakpoint[\"gridMd\"] = \"grid-md\";\n    TableGridBreakpoint[\"gridLg\"] = \"grid-lg\";\n    TableGridBreakpoint[\"gridXl\"] = \"grid-xl\";\n    TableGridBreakpoint[\"grid2xl\"] = \"grid-2xl\";\n})(TableGridBreakpoint || (TableGridBreakpoint = {}));\nexport var TableVariant;\n(function (TableVariant) {\n    TableVariant[\"compact\"] = \"compact\";\n})(TableVariant || (TableVariant = {}));\n//# sourceMappingURL=TableTypes.js.map","import React from 'react';\nvar DefaultErrorMessage = function () {\n    var redirectLink = 'https://access.redhat.com/support';\n    var statusLink = 'https://status.redhat.com';\n    return (React.createElement(React.Fragment, null,\n        \"If the problem persists, contact \",\n        React.createElement(\"a\", { href: redirectLink }, \"Red Hat Support\"),\n        \" or check our \",\n        React.createElement(\"a\", { href: statusLink }, \" status page\"),\n        \" for known outages.\"));\n};\nexport default DefaultErrorMessage;\n//# sourceMappingURL=DefaultErrorMessage.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons/';\nimport DefaultErrorMessage from './DefaultErrorMessage';\nimport { Title, EmptyState, EmptyStateVariant, EmptyStateIcon, EmptyStateBody, Button, Stack, StackItem, } from '@patternfly/react-core';\nimport '../ErrorState/error-state.css';\nvar ErrorState = function (_a) {\n    var _b = _a.errorTitle, errorTitle = _b === void 0 ? 'Something went wrong' : _b, errorDescription = _a.errorDescription, props = __rest(_a, [\"errorTitle\", \"errorDescription\"]);\n    return (React.createElement(EmptyState, __assign({ variant: EmptyStateVariant.large }, props, { className: \"ins-c-error-state\" }),\n        React.createElement(EmptyStateIcon, { icon: ExclamationCircleIcon }),\n        React.createElement(Title, { headingLevel: \"h4\", size: \"lg\" }, errorTitle),\n        React.createElement(EmptyStateBody, null,\n            React.createElement(Stack, null,\n                !errorDescription && React.createElement(StackItem, null, \"There was a problem processing the request. Please try again.\"),\n                React.createElement(StackItem, null, errorDescription || React.createElement(DefaultErrorMessage, null)))),\n        document.referrer ? (React.createElement(Button, { variant: \"primary\", onClick: function () { return history.back(); } }, \"Return to last page\")) : (React.createElement(Button, { variant: \"primary\", component: \"a\", href: \".\", target: \"_blank\", rel: \"noopener noreferrer\" }, \"Go to home page\"))));\n};\nexport default ErrorState;\n//# sourceMappingURL=ErrorState.js.map","import React from 'react';\nimport '../InvalidObject/icon-404.css';\nvar Icon404 = function () { return (React.createElement(\"svg\", { className: \"Icon404\", id: \"Icon404\", \"data-name\": \"Layer 1\", xmlns: \"http://www.w3.org/2000/svg\", xmlnsXlink: \"http://www.w3.org/1999/xlink\", viewBox: \"0 0 131 131\" },\n    React.createElement(\"defs\", null,\n        React.createElement(\"mask\", { id: \"mask\", x: \"0\", y: \"0\", width: \"131\", height: \"131\", maskUnits: \"userSpaceOnUse\" },\n            React.createElement(\"g\", { transform: \"translate(-2.89 -3.07)\" },\n                React.createElement(\"g\", { id: \"mask-2\" },\n                    React.createElement(\"polygon\", { id: \"path-1\", className: \"cls-1\", points: \"2.89 134.07 133.89 134.07 133.89 3.07 2.89 3.07 2.89 134.07\" }))))),\n    React.createElement(\"title\", null, \"404path-not-found\"),\n    React.createElement(\"g\", { className: \"cls-2\" },\n        React.createElement(\"g\", { id: \"Group\" },\n            React.createElement(\"g\", { id: \"Page-1\" },\n                React.createElement(\"path\", { id: \"Fill-1\", className: \"cls-3\", d: \"M8,95.56a1.83,1.83,0,0,0-2,1.68c-.21,1.86-.23,3.05-.23,3.1a1.88,1.88,0,0,0,1.79,2h0a1.89,1.89,0,0,0,1.82-1.91s0-1,.2-2.67A1.91,1.91,0,0,0,8,95.56\", transform: \"translate(-2.89 -3.07)\" }),\n                React.createElement(\"path\", { id: \"Fill-3\", className: \"cls-3\", d: \"M104.29,104.42a26.42,26.42,0,0,1-4.72,1.89,1.89,1.89,0,0,0-1.25,2.32,1.82,1.82,0,0,0,1.74,1.36,1.73,1.73,0,0,0,.5-.07,29.3,29.3,0,0,0,5.36-2.16,1.89,1.89,0,0,0,.8-2.52,1.78,1.78,0,0,0-2.43-.82\", transform: \"translate(-2.89 -3.07)\" }),\n                React.createElement(\"path\", { id: \"Fill-5\", className: \"cls-3\", d: \"M74.84,57.4A1.88,1.88,0,0,0,76.2,58a1.9,1.9,0,0,0,1.21-.44,1.68,1.68,0,0,0,.15-2.45,19.81,19.81,0,0,1-2.85-3.9,1.88,1.88,0,0,0-2.47-.71,1.7,1.7,0,0,0-.75,2.34,23.82,23.82,0,0,0,3.35,4.58\", transform: \"translate(-2.89 -3.07)\" }),\n                React.createElement(\"path\", { id: \"Fill-7\", className: \"cls-3\", d: \"M75.44,105.24a1.76,1.76,0,0,0-2.17,1.29,1.84,1.84,0,0,0,1.23,2.26A45.56,45.56,0,0,0,79.84,110a1.23,1.23,0,0,0,.27,0,1.78,1.78,0,0,0,1.74-1.56,1.82,1.82,0,0,0-1.47-2.1,40.81,40.81,0,0,1-4.94-1.09\", transform: \"translate(-2.89 -3.07)\" }),\n                React.createElement(\"path\", { id: \"Fill-9\", className: \"cls-3\", d: \"M92.56,107.11a49.67,49.67,0,0,1-5,0h-.07a1.8,1.8,0,0,0-1.73,1.82,1.82,1.82,0,0,0,1.67,2c1,0,2,.07,3.07.07.78,0,1.54,0,2.29-.08a1.83,1.83,0,0,0,1.63-2,1.77,1.77,0,0,0-1.83-1.77\", transform: \"translate(-2.89 -3.07)\" }),\n                React.createElement(\"path\", { id: \"Fill-11\", className: \"cls-3\", d: \"M65.38,100.76a1.62,1.62,0,0,0-2.41.32,2,2,0,0,0,.3,2.62,28.62,28.62,0,0,0,4.55,3.19,1.6,1.6,0,0,0,.78.21,1.69,1.69,0,0,0,1.52-1,2,2,0,0,0-.73-2.52,26,26,0,0,1-4-2.81\", transform: \"translate(-2.89 -3.07)\" }),\n                React.createElement(\"path\", { id: \"Fill-13\", className: \"cls-3\", d: \"M109.71,70.18a2,2,0,0,0,1.1.32,2,2,0,0,0,1.53-.69,1.57,1.57,0,0,0-.42-2.35,26.14,26.14,0,0,0-5.3-2.61,2,2,0,0,0-2.45.91,1.63,1.63,0,0,0,1,2.19,23.39,23.39,0,0,1,4.51,2.23\", transform: \"translate(-2.89 -3.07)\" }),\n                React.createElement(\"path\", { id: \"Fill-15\", className: \"cls-3\", d: \"M70.28,38.72a1.74,1.74,0,0,0-1.85,1.63c0,.46,0,.93,0,1.39A23,23,0,0,0,68.78,46a1.74,1.74,0,1,0,3.43-.63,18.84,18.84,0,0,1-.32-3.58c0-.39,0-.79,0-1.18a1.73,1.73,0,0,0-1.64-1.84\", transform: \"translate(-2.89 -3.07)\" }),\n                React.createElement(\"path\", { id: \"Fill-17\", className: \"cls-3\", d: \"M76.35,27.53a2.08,2.08,0,0,0-2.68.25,20.42,20.42,0,0,0-3.2,4.71,1.64,1.64,0,0,0,1,2.23,2,2,0,0,0,.75.14,1.93,1.93,0,0,0,1.75-1,16.54,16.54,0,0,1,2.67-3.93,1.57,1.57,0,0,0-.29-2.38\", transform: \"translate(-2.89 -3.07)\" }),\n                React.createElement(\"path\", { id: \"Fill-19\", className: \"cls-3\", d: \"M98.18,66.63l.26,0a1.74,1.74,0,0,0,.24-3.47,40.77,40.77,0,0,0-5.42-.39h0a1.74,1.74,0,0,0,0,3.48,37,37,0,0,1,4.94.36\", transform: \"translate(-2.89 -3.07)\" }),\n                React.createElement(\"path\", { id: \"Fill-21\", className: \"cls-3\", d: \"M79.88,26.19a1.92,1.92,0,0,0,1-.26,25.06,25.06,0,0,1,4.62-2.13,1.71,1.71,0,0,0,1.09-2.24,1.87,1.87,0,0,0-2.37-1A30.71,30.71,0,0,0,78.89,23a1.7,1.7,0,0,0-.59,2.41,1.9,1.9,0,0,0,1.58.82\", transform: \"translate(-2.89 -3.07)\" }),\n                React.createElement(\"path\", { id: \"Fill-23\", className: \"cls-3\", d: \"M86.28,65.61a1.79,1.79,0,0,0,.51.07,1.84,1.84,0,0,0,1.76-1.32,1.83,1.83,0,0,0-1.26-2.26,21.06,21.06,0,0,1-4.6-2,1.83,1.83,0,1,0-1.82,3.17,24.64,24.64,0,0,0,5.41,2.29\", transform: \"translate(-2.89 -3.07)\" }),\n                React.createElement(\"path\", { id: \"Fill-25\", className: \"cls-3\", d: \"M47.85,80.53A1.7,1.7,0,0,0,47.61,83a41.72,41.72,0,0,1,3,4.06,1.84,1.84,0,0,0,2.49.52,1.71,1.71,0,0,0,.55-2.4,44.19,44.19,0,0,0-3.27-4.4,1.85,1.85,0,0,0-2.54-.23\", transform: \"translate(-2.89 -3.07)\" }),\n                React.createElement(\"path\", { id: \"Fill-27\", className: \"cls-3\", d: \"M12.51,84.2A1.84,1.84,0,0,0,10,85a33.19,33.19,0,0,0-2.24,5.32A1.83,1.83,0,0,0,9,92.57a1.77,1.77,0,0,0,.56.08,1.83,1.83,0,0,0,1.74-1.26,29.21,29.21,0,0,1,2-4.72,1.81,1.81,0,0,0-.76-2.47\", transform: \"translate(-2.89 -3.07)\" }),\n                React.createElement(\"path\", { id: \"Fill-29\", className: \"cls-3\", d: \"M54.77,91a1.7,1.7,0,0,0-.54,2.4,50.54,50.54,0,0,0,3.24,4.38,1.85,1.85,0,0,0,1.41.64A1.81,1.81,0,0,0,60,98.05a1.69,1.69,0,0,0,.27-2.45,47.21,47.21,0,0,1-3-4.08A1.84,1.84,0,0,0,54.77,91\", transform: \"translate(-2.89 -3.07)\" }),\n                React.createElement(\"path\", { id: \"Fill-31\", className: \"cls-3\", d: \"M112.48,97.29a22.47,22.47,0,0,1-3.09,3.78,1.89,1.89,0,0,0-.09,2.56,1.64,1.64,0,0,0,1.25.58,1.67,1.67,0,0,0,1.16-.48,25.42,25.42,0,0,0,3.57-4.38,1.87,1.87,0,0,0-.43-2.52,1.64,1.64,0,0,0-2.37.46\", transform: \"translate(-2.89 -3.07)\" }),\n                React.createElement(\"path\", { id: \"Fill-33\", className: \"cls-3\", d: \"M118.61,84a1.84,1.84,0,0,0-2,1.65,18.6,18.6,0,0,1-.93,4.74,1.74,1.74,0,0,0,1.26,2.2,2.15,2.15,0,0,0,.56.07,1.88,1.88,0,0,0,1.82-1.24,21.56,21.56,0,0,0,1.09-5.57A1.81,1.81,0,0,0,118.61,84\", transform: \"translate(-2.89 -3.07)\" }),\n                React.createElement(\"path\", { id: \"Fill-35\", className: \"cls-3\", d: \"M117.66,81.1a1.88,1.88,0,0,0,.52-.08,1.85,1.85,0,0,0,1.18-2.3,21.55,21.55,0,0,0-2.43-5.45,1.73,1.73,0,0,0-2.46-.54,1.88,1.88,0,0,0-.52,2.55,17.79,17.79,0,0,1,2,4.51,1.8,1.8,0,0,0,1.7,1.31\", transform: \"translate(-2.89 -3.07)\" }),\n                React.createElement(\"path\", { id: \"Fill-37\", className: \"cls-3\", d: \"M39,73.46a1.84,1.84,0,0,0-2.27,1.24A1.81,1.81,0,0,0,37.93,77a18,18,0,0,1,4.54,2,1.89,1.89,0,0,0,1,.27A1.85,1.85,0,0,0,45,78.3a1.8,1.8,0,0,0-.61-2.5A22.68,22.68,0,0,0,39,73.46\", transform: \"translate(-2.89 -3.07)\" }),\n                React.createElement(\"path\", { id: \"Fill-39\", className: \"cls-3\", d: \"M18.61,75.53A20.68,20.68,0,0,0,14,79a1.81,1.81,0,0,0,0,2.53,1.7,1.7,0,0,0,1.26.55,1.72,1.72,0,0,0,1.22-.51,17,17,0,0,1,3.81-2.86A1.82,1.82,0,0,0,21,76.26a1.73,1.73,0,0,0-2.37-.73\", transform: \"translate(-2.89 -3.07)\" }),\n                React.createElement(\"path\", { id: \"Fill-41\", className: \"cls-3\", d: \"M26.51,72.76a1.77,1.77,0,0,0,.27,3.52l.28,0A26,26,0,0,1,31.92,76a1.84,1.84,0,0,0,1.79-1.72A1.76,1.76,0,0,0,32,72.44a30.51,30.51,0,0,0-5.51.32\", transform: \"translate(-2.89 -3.07)\" }),\n                React.createElement(\"path\", { id: \"Fill-43\", className: \"cls-3\", d: \"M92.47,22.34l.27,0q1.33-.16,2.76-.27a1.83,1.83,0,0,0,1.78-1.92,1.87,1.87,0,0,0-2.07-1.64c-1,.07-2,.17-3,.29a1.83,1.83,0,0,0-1.65,2,1.89,1.89,0,0,0,1.91,1.54\", transform: \"translate(-2.89 -3.07)\" }),\n                React.createElement(\"path\", { id: \"Fill-45\", className: \"cls-3\", d: \"M133,66.72H118.94V44.44h9.27a.89.89,0,1,0,0-1.78h-9.27V36.71a.9.9,0,0,0-1.8,0v5.95H94.41V37.38a.9.9,0,0,0-1.79,0v5.28H77a.89.89,0,0,0,0,1.78H92.62v13a.9.9,0,1,0,1.79,0v-13h22.73V67.68a.89.89,0,0,0,.9.89.86.86,0,0,0,.36-.07H133a.89.89,0,1,0,0-1.78\", transform: \"translate(-2.89 -3.07)\" }),\n                React.createElement(\"path\", { id: \"Fill-47\", className: \"cls-3\", d: \"M128.16,92.65h-4.92a1,1,0,0,0,0,1.93h4.92a1,1,0,0,0,0-1.93\", transform: \"translate(-2.89 -3.07)\" }),\n                React.createElement(\"path\", { id: \"Fill-49\", className: \"cls-3\", d: \"M109.87,116.68H93.2v-1.27a.9.9,0,1,0-1.8,0v1.27H69.05v-5.55a.9.9,0,1,0-1.8,0v5.55H44.82V93.89h4.27a.9.9,0,0,0,0-1.8H44.82V83.92a.9.9,0,1,0-1.79,0v8.17H20.3V84.37a.9.9,0,1,0-1.8,0v7.72H13.42a.9.9,0,1,0,0,1.8H18.5v17.39a.9.9,0,0,0,1.8,0V93.89H43v22.79H26.28a.9.9,0,1,0,0,1.8H43v9.9a.9.9,0,1,0,1.79,0v-9.9H67.25v14.69a.9.9,0,1,0,1.8,0V118.48H91.4v10.2a.9.9,0,1,0,1.8,0v-10.2h16.67a.9.9,0,0,0,0-1.8\", transform: \"translate(-2.89 -3.07)\" }),\n                React.createElement(\"g\", { className: \"cls-4\" },\n                    React.createElement(\"path\", { id: \"Fill-51\", className: \"cls-3\", d: \"M20.55,67.5H43.31V45H20.55Zm-1.79,3a.9.9,0,1,0,1.79,0V69.3H43.31v2.1a.9.9,0,0,0,1.8,0V69.3H67.56V92.38H63.3a.9.9,0,1,0,0,1.79h4.26v3.3a.9.9,0,1,0,1.8,0v-3.3h23v9.14a.9.9,0,0,0,1.8,0V94.17H111.8a.9.9,0,1,0,0-1.79H94.21V71a.9.9,0,0,0-1.8,0V92.38h-23V69.3h12.8a.9.9,0,0,0,0-1.8H69.36v-10a.9.9,0,0,0-1.8,0v10H45.11V45h18a.9.9,0,1,0,0-1.8h-18V20.46H67.56V26a.9.9,0,1,0,1.8,0V20.46h6.06a.9.9,0,1,0,0-1.8H69.36V4a.9.9,0,0,0-1.8,0V18.66H45.11v-10a.9.9,0,1,0-1.8,0v10H26.24a.9.9,0,0,0,0,1.8H43.31V43.23H20.55V26.6a.9.9,0,1,0-1.79,0V43.23H8.88a.9.9,0,0,0,0,1.8h9.88V67.5h-15a.9.9,0,1,0,0,1.8h15Z\", transform: \"translate(-2.89 -3.07)\" })),\n                React.createElement(\"g\", { className: \"cls-4\" },\n                    React.createElement(\"path\", { id: \"Fill-53\", className: \"cls-3\", d: \"M117.51,104.21a.94.94,0,0,0-1,.92V111a1,1,0,0,0,1.93,0v-5.87a1,1,0,0,0-1-.92\", transform: \"translate(-2.89 -3.07)\" })),\n                React.createElement(\"g\", { className: \"cls-4\" },\n                    React.createElement(\"path\", { id: \"Fill-54\", className: \"cls-3\", d: \"M106.16,7.75a13.31,13.31,0,0,1,3.35-.41,6.07,6.07,0,0,1,4.09,1.23A4.42,4.42,0,0,1,115,12.09a5.92,5.92,0,0,1-.77,3.12,20.1,20.1,0,0,1-3.72,3.86,11.51,11.51,0,0,0-2.92,3.55,10.22,10.22,0,0,0-.78,4.29v1.21h2.8v-.74a7,7,0,0,1,.71-3.39,13.86,13.86,0,0,1,2.9-3.19,30,30,0,0,0,3.56-3.55,8.29,8.29,0,0,0,1.25-2.34,8.66,8.66,0,0,0,.43-2.87,7.61,7.61,0,0,0-2.3-5.91A9.3,9.3,0,0,0,109.72,4a17.8,17.8,0,0,0-8.58,2.21l1.28,3a17.6,17.6,0,0,1,3.74-1.51\", transform: \"translate(-2.89 -3.07)\" })),\n                React.createElement(\"g\", { className: \"cls-4\" },\n                    React.createElement(\"path\", { id: \"Fill-55\", className: \"cls-3\", d: \"M108.35,31c-1.59,0-2.39,1-2.39,2.9a3,3,0,0,0,.67,2.2,2.36,2.36,0,0,0,1.72.68,2.21,2.21,0,0,0,1.78-.76,3.16,3.16,0,0,0,.64-2.12,3.27,3.27,0,0,0-.63-2.16,2.22,2.22,0,0,0-1.79-.74\", transform: \"translate(-2.89 -3.07)\" }))))))); };\nexport default Icon404;\n//# sourceMappingURL=icon-404.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport Icon404 from './icon-404';\nimport { Title, Button } from '@patternfly/react-core';\nimport '../InvalidObject/invalidObject.css';\nvar isBeta = function () {\n    return window.location.pathname.split('/')[1] === 'beta' ? '/beta' : '';\n};\nvar InvalidObject = function (_a) {\n    var props = __rest(_a, []);\n    return (React.createElement(\"section\", __assign({}, props, { className: \"pf-l-page__main-section pf-c-page__main-section ins-c-component_invalid-component\" }),\n        React.createElement(Title, { headingLevel: \"h1\", size: \"3xl\" }, \"We lost that page\"),\n        React.createElement(Icon404, null),\n        React.createElement(Title, { headingLevel: \"h1\", size: \"xl\", className: \"ins-c-text__sorry\" }, \"Let's find you a new one. Try a new search or return home.\"),\n        React.createElement(Button, { variant: \"link\", component: \"a\", href: \"\".concat(window.location.origin).concat(isBeta()) }, \"Return to homepage\")));\n};\nexport default InvalidObject;\n//# sourceMappingURL=InvalidObject.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { useEffect } from 'react';\nvar InventoryLoadError = function (_a) {\n    var component = _a.component, props = __rest(_a, [\"component\"]);\n    useEffect(function () {\n        console.error(\"Unable to load inventory component. Failed to load \".concat(component, \".\"), props);\n    }, []);\n    return (React.createElement(\"div\", null,\n        React.createElement(\"h1\", null, \"Unable to load inventory component\"),\n        React.createElement(\"h2\", null,\n            \"Failed to load \",\n            component),\n        React.createElement(\"code\", null, \"More info can be found in browser console output.\")));\n};\nexport default InventoryLoadError;\n//# sourceMappingURL=InventoryLoadError.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { ScalprumComponent } from '@scalprum/react-core';\nimport { useHistory } from 'react-router-dom';\nimport { useStore } from 'react-redux';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport InventoryLoadError from './InventoryLoadError';\nimport classNames from 'classnames';\nvar BaseInvTable = function (props) {\n    var history = useHistory();\n    var store = useStore();\n    var Cmp = props.component;\n    return (React.createElement(Cmp, { className: classNames(props.className, 'inventory') },\n        React.createElement(Suspense, { fallback: props.fallback },\n            React.createElement(ScalprumComponent, __assign({ history: history, store: store, appName: \"inventory\", module: \"./InventoryTable\", scope: \"inventory\", ErrorComponent: React.createElement(InventoryLoadError, __assign({ component: \"InventoryDetailHead\", history: history, store: store }, props)), ref: props.innerRef }, props)))));\n};\nBaseInvTable.propTypes = {\n    fallback: PropTypes.node,\n    innerRef: PropTypes.object,\n    component: PropTypes.string,\n    className: PropTypes.string,\n};\nvar InvTable = React.forwardRef(function (props, ref) { return React.createElement(BaseInvTable, __assign({ innerRef: ref }, props)); });\nInvTable.propTypes = {\n    fallback: PropTypes.node,\n    component: PropTypes.string,\n    className: PropTypes.string,\n};\nInvTable.defaultProps = {\n    fallback: (React.createElement(Bullseye, { className: \"pf-u-p-lg\" },\n        React.createElement(Spinner, { size: \"xl\" }))),\n    component: 'section',\n};\nexport default InvTable;\n//# sourceMappingURL=InventoryTable.js.map","import React from 'react';\nimport { EmptyState, EmptyStateIcon, EmptyStateVariant, EmptyStateBody, Title } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport '../Unavailable/Unavailable.css';\nvar Unavailable = function () {\n    return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"ins-c-empty-state__unavailable pf-m-redhat-font\" },\n        React.createElement(EmptyStateIcon, { icon: ExclamationCircleIcon }),\n        React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, \"This page is temporarily unavailable\"),\n        React.createElement(EmptyStateBody, null,\n            \"Try refreshing the page. If the problem persists, contact your organization administrator or visit our\",\n            React.createElement(\"a\", { href: \"https://status.redhat.com/\", target: \"_blank\", rel: \"noopener noreferrer\" },\n                ' ',\n                \"status page\"),\n            ' ',\n            \"for known outages.\")));\n};\nexport default Unavailable;\n//# sourceMappingURL=Unavailable.js.map","import React from 'react';\nimport { RHEL_VERSIONS } from '../../../../Helpers/constants';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { Select, SelectOption } from '@patternfly/react-core';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\n\nconst useOsVersionFilter = (filterValue, apply) => {\n    const [isOpen, setOpen] = React.useState(false);\n    const [numOptions, setNumOptions] = React.useState(10);\n    const versionFromNewestToOldest = RHEL_VERSIONS.slice().reverse();\n\n    let selectedVersionsArray = filterValue ? filterValue.split(',') : [];\n\n    const onOptionSelect = (_, changedLabel) => {\n        const changedValue = RHEL_VERSIONS.find(version => version.label === changedLabel).value;\n        let newValue;\n\n        if (selectedVersionsArray.includes(changedValue)) {\n            newValue = selectedVersionsArray;\n            newValue.splice(newValue.indexOf(changedValue), 1);\n        }\n        else {\n            newValue = [...selectedVersionsArray, changedValue];\n        }\n\n        apply({ rhel_version: newValue.join(','), page: 1 });\n    };\n\n    const onToggle = (isOpen) => {\n        setOpen(isOpen);\n    };\n\n    const onViewMoreClick = () => {\n        setNumOptions(versionFromNewestToOldest.length);\n    };\n\n    return {\n        type: conditionalFilterType.custom,\n        label: intl.formatMessage(messages.osFilterLabel),\n        filterValues: {\n            children: (\n                <Select\n                    variant=\"checkbox\"\n                    onToggle={onToggle}\n                    onSelect={onOptionSelect}\n                    selections={selectedVersionsArray.map(item => RHEL_VERSIONS.find(version => version.value === item).label)}\n                    isOpen={isOpen}\n                    aria-label=\"os-version-filter\"\n                    placeholderText={intl.formatMessage(messages.osFilterPlaceholder)}\n                    {...(numOptions < versionFromNewestToOldest.length\n                        && { loadingVariant: { text: intl.formatMessage(messages.viewMore), onClick: onViewMoreClick } })}\n                    style={{ maxHeight: '420px', overflow: 'auto' }}\n                >\n                    {versionFromNewestToOldest.slice(0, numOptions).map((option, index) => (\n                        <SelectOption\n                            isDisabled={option.disabled}\n                            key={index}\n                            value={option.label}\n                            description={option?.description}\n                        />\n                    ))}\n                </Select>\n            )\n        }\n    };\n};\n\nexport default useOsVersionFilter;\n","import { DropdownItem } from '@patternfly/react-core';\nimport React from 'react';\nimport messages from '../../../Messages';\nimport { FormattedMessage } from 'react-intl';\n\nexport const kebabItemDownloadJSON = (downloadReport, { ...props }) => (\n    <DropdownItem key=\"json\" component=\"button\" onClick={() => downloadReport('json')} {...props}>\n        <FormattedMessage {...messages.kebabExportAsJson} />\n    </DropdownItem>\n);\n\nexport const kebabItemDownloadCSV = (downloadReport, { ...props }) => (\n    <DropdownItem key=\"csv\" component=\"button\" onClick={() => downloadReport('csv')} {...props}>\n        <FormattedMessage {...messages.kebabExportAsCsv} />\n    </DropdownItem>\n);\n\nexport const kebabItemDownloadPDF = (loading, downloadReport, { ...props }) => (\n    <DropdownItem key=\"pdf\" component=\"button\" onClick={() => downloadReport(true)} {...props}>\n        {loading ? <FormattedMessage {...messages.loading} /> : <FormattedMessage {...messages.kebabExportAsPDF} />}\n    </DropdownItem>\n);\n\nexport const kebabItemEditBusinessRisk = (showBusinessRiskModal, cves, { ...props }) => (\n    <DropdownItem key=\"editBusinessRisk\" component=\"button\" onClick={() => showBusinessRiskModal(cves)} {...props}>\n        <FormattedMessage {...messages.kebabEditBusinessRisk} />\n    </DropdownItem>\n);\n\nexport const kebabItemEditStatus = (showStatusModal, cves, inventoryIds,  { ...props }) => (\n    <DropdownItem key=\"editStatus\" component=\"button\" onClick={() => showStatusModal(cves, inventoryIds)} {...props}>\n        <FormattedMessage {...messages.kebabEditStatus} />\n    </DropdownItem>\n);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { View } from '@react-pdf/renderer';\nimport { InsightsLabel } from '@redhat-cloud-services/frontend-components-pdf-generator';\n\nimport styles from './styles';\nimport messages from '../../../../Messages';\n\nconst CVElabels = ({ intl, hasRule, hasExploit, isSmall = false }) => (\n    <View style={styles.labelsWrapper}>\n        {hasExploit &&\n            <View style={{ ...styles.label, width: isSmall ? 62 : 70 }}>\n                <InsightsLabel\n                    icon={false}\n                    width={isSmall ? 62 : 75}\n                    variant={4}\n                    label={intl.formatMessage(messages.knownExploit)}\n                    textStyle={isSmall ? { ...styles.smallText, left: -56 } : undefined}\n                    labelStyle={{\n                        border: 'solid',\n                        borderWidth: 1,\n                        borderColor: '#c9190b',\n                        height: isSmall ? 12 : 20\n                    }}\n                />\n            </View>\n        }\n        {hasRule &&\n            <View style={styles.label}>\n                <InsightsLabel\n                    icon={false}\n                    width={isSmall ? 59 : 63}\n                    label={intl.formatMessage(messages.securityRuleLabel)}\n                    textStyle={isSmall ? styles.smallText : undefined}\n                    labelStyle={{\n                        border: 'solid',\n                        borderWidth: 1,\n                        borderColor: '#bee1f4',\n                        height: isSmall ? 12 : 20\n                    }}\n                />\n            </View>\n        }\n    </View>\n);\n\nCVElabels.propTypes = {\n    hasRule: propTypes.bool,\n    hasExploit: propTypes.bool,\n    intl: propTypes.any,\n    isSmall: propTypes.bool\n};\n\nexport default CVElabels;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Paragraph } from '@redhat-cloud-services/frontend-components-pdf-generator';\nimport { Text, View } from '@react-pdf/renderer';\nimport messages from '../../../../Messages';\nimport tablePage from './tablePage';\nimport {\n    PUBLIC_DATE_OPTIONS,\n    DEFAULT_FILTER_DATA,\n    FILTERS, CVE_REPORT_FILTERS,\n    SYSTEM_REPORT_FILTERS\n} from '../../../../Helpers/constants';\nimport { intlFormatWithBold } from '../../../../Helpers/ReportsHelper';\nimport styles from './styles';\nimport CheckboxCustomFilter\n    from '../../../PresentationalComponents/Filters/CustomFilters/CheckboxCustomFilter';\n\nconst firstPagePDF = ({ data, meta, filters, intl, isReportDynamic, reportData, user, type }) => {\n    // if data isn't converted to object convert it\n    const filtersBuilder = (isReportDynamic) ? filters : filters.reduce((obj, item) => {\n        obj[item.key] = {\n            filter: item.category,\n            values: item.key === 'publish_date'\n                ? PUBLIC_DATE_OPTIONS.find(val => val.value === item.chips[0].value).timespan_label\n                : item.chips.map(({ name }) => name).join(', '),\n            isAllChosen: (type === 'cves' ? CVE_REPORT_FILTERS : SYSTEM_REPORT_FILTERS)[item.key]?.component\n                === CheckboxCustomFilter\n                ? item.chips.length === FILTERS[item.key]?.items.length\n                : null\n        };\n        return obj;\n    }, {});\n\n    let cvefilterStringSegments = [\n        { name: 'impact', msg: messages.CVEsPDFreportFiltersSeverity, lowercase: true },\n        { name: 'business_risk_id', msg: messages.CVEsPDFreportFiltersBusinessRisk, lowercase: true },\n        { name: 'status_id', msg: messages.CVEsPDFreportFiltersStatus, lowercase: true },\n        { name: 'rule_presence', msg: messages.CVEsPDFreportFiltersDefinedValue, lowercase: true },\n        { name: 'known_exploit', msg: messages.CVEsPDFreportFiltersDefinedValue, lowercase: true },\n        { name: 'rhel_version', msg: messages.CVEsPDFreportFiltersOsVersion }\n    ];\n\n    let systemsFilterStringSegments = [\n        { name: 'filter', msg: messages.systemsPDFreportFiltersSearchTerm, lowercase: true },\n        { name: 'rhel_version', msg: messages.systemsPDFreportFiltersOsVersion }\n    ];\n\n    let filterStringSegments = type === 'cves' ? cvefilterStringSegments : systemsFilterStringSegments;\n\n    // find and tag first present filter segment\n    for (let i = 0; i < filterStringSegments.length; i++) {\n        if (filtersBuilder.hasOwnProperty(filterStringSegments[i].name)) {\n            filterStringSegments[i].isFirst = true;\n            break;\n        }\n    }\n\n    // find and tag last present filter segment\n    for (let i = filterStringSegments.length - 1; i >= 0; i--) {\n        if (filtersBuilder.hasOwnProperty(filterStringSegments[i].name)) {\n            filterStringSegments[i].isLast = true;\n            break;\n        }\n    }\n\n    const generateCvesFiltersParagraph = () =>\n        <Paragraph>\n            {\n                intlFormatWithBold(messages.customReportSearchTermCvssAndPublishDate,\n                    {\n                        hasSearchTerm: filtersBuilder.hasOwnProperty('filter') ? 'yes' : 'no',\n                        searchTerm: filtersBuilder.filter && filtersBuilder.filter.values,\n                        score: (\n                            filtersBuilder.cvss_filter && filtersBuilder.cvss_filter.values\n                        ) || DEFAULT_FILTER_DATA.cvss_filter.from.toFixed(1) + ' - ' +\n                            DEFAULT_FILTER_DATA.cvss_filter.to.toFixed(1),\n                        published: (\n                            filtersBuilder.publish_date && filtersBuilder.publish_date.values\n                        ) || intlFormatWithBold(messages.customReportTimespanAnytime)\n                    }\n                )\n            }\n            {\n                filterStringSegments.map(filter => (\n                    filtersBuilder.hasOwnProperty(filter.name) && !filtersBuilder[filter.name]?.isAllChosen\n                ) && intlFormatWithBold(filter.msg,\n                    {\n                        values: filter.lowercase ?\n                            filtersBuilder[filter.name].values.toLowerCase() :\n                            filtersBuilder[filter.name].values,\n                        prefix: filter.isLast ? intl.formatMessage(messages.customReportAnd) : ';'\n                    }\n                ))\n            }\n            {filtersBuilder.tags ? '.\\n\\n' : ''}\n            {\n                filtersBuilder.tags ? intl.formatMessage(messages.tagFilterParagraph) + ' ' +\n                filtersBuilder.tags.values.map(tag => `${tag.namespace}:${tag.key}=${tag.value}`).slice(0, 10).join(', ') : ''\n            }\n            {\n                filtersBuilder.tags?.values.length > 10 && ' '\n                + intl.formatMessage(messages.tagFilterParagraphAndMore, { count: filtersBuilder.tags.values.length - 10 })\n            }\n            {'.\\n\\n'}\n        </Paragraph>;\n\n    const generateSystemsFiltersParagraph = () => {\n        const includedValues = filters.find(filter => filter.key === 'excluded')?.multiValue;\n\n        return (Object.values(filtersBuilder)?.filter(filter => filter.isAllChosen !== true)?.length > 0 ? (\n            <Paragraph>\n                {\n                    intl.formatMessage(messages.systemsPDFreportSubHeader)\n                }\n                {\n                    includedValues?.length === 1 && (includedValues[0] === 'true'\n                        ? ' ' + intl.formatMessage(messages.systemsPDFreportFiltersExcluded)\n                        : ' ' + intl.formatMessage(messages.systemsPDFreportFiltersIncluded))\n                }\n                {\n                    filterStringSegments.map(filter => (\n                        filtersBuilder.hasOwnProperty(filter.name) && !filtersBuilder[filter.name]?.isAllChosen\n                    ) && intlFormatWithBold(filter.msg,\n                        {\n                            values: filter.lowercase ?\n                                filtersBuilder[filter.name].values.toLowerCase() :\n                                filtersBuilder[filter.name].values,\n                            prefix: filter.isFirst ? '' : (filter.isLast ? intl.formatMessage(messages.customReportAnd) : ';')\n                        }\n                    ))\n                }\n                {'.\\n\\n'}\n            </Paragraph>\n        ) : null\n        );\n    };\n\n    return (\n        <Fragment key=\"first-section\">\n            {\n                isReportDynamic && (\n                    <Paragraph>\n                        {intlFormatWithBold(messages.customReportIntroductionText)}\n                    </Paragraph>\n                )\n            }\n\n            {type === 'cves' ? generateCvesFiltersParagraph() : generateSystemsFiltersParagraph()}\n\n            {type === 'cves' && (\n                <Paragraph>\n                    <Text>\n                        {intlFormatWithBold(messages.CVEsPDFreportSubHeader, {\n                            cve_count: meta.total_items.toString(),\n                            system_count: meta.system_count.toString()\n                        })}\n\n                        {(isReportDynamic && reportData.header?.includes('known_exploit') || !isReportDynamic) &&\n                            intlFormatWithBold(messages.CVEsPDFreportSubHeaderExploit, {\n                                knownExploitCount: meta.knownExploitCount.toString()\n                            })\n                        }\n                    </Text>\n                </Paragraph>\n            )}\n\n            {\n                reportData && reportData.userNotes ?\n                    (\n                        <View style={styles.userNotes}>\n                            <Paragraph style={styles.userNotesTitle}>\n                                <Text style={styles.bold}>\n                                    {intl.formatMessage(messages.customReportUserNoteLabel)}\n                                </Text>\n                            </Paragraph>\n                            <Paragraph>\n                                <Text>{reportData.userNotes}</Text>\n                            </Paragraph>\n                            <Paragraph>\n                                {user && user.identity &&\n                                    <Text style={styles.italic}>\n                                        {intl.formatMessage(messages.customReportUserNotesGenerated, {\n                                            name: `${user.identity.user.first_name} ${user.identity.user.last_name}`\n                                        })}\n                                    </Text>\n                                }\n                            </Paragraph>\n                        </View>\n                    ) : null\n            }\n\n            <View style={styles.mt16}>\n                {tablePage({ data, intl, header: reportData && reportData.header, type, isReportDynamic })}\n            </View>\n        </Fragment>\n    );\n};\n\nfirstPagePDF.defaultProps = {\n    user: undefined\n};\n\nfirstPagePDF.propTypes = {\n    intl: PropTypes.any,\n    filters: PropTypes.array,\n    data: PropTypes.object,\n    meta: PropTypes.object,\n    reportData: PropTypes.object,\n    isReportDynamic: PropTypes.bool,\n    user: PropTypes.object,\n    type: PropTypes.string\n};\n\nexport default firstPagePDF;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { View, Text, Link } from '@react-pdf/renderer';\nimport { Table } from '@redhat-cloud-services/frontend-components-pdf-generator';\nimport { processDate } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { CVES_PATH } from '../../../../Helpers/constants';\nimport messages from '../../../../Messages';\nimport styles from './styles';\nimport { formatDate } from '../../../../Helpers/MiscHelper';\nimport CVElabels from '../Common/CVElabels';\n\nconst tablePage = ({ data, page, intl, header, type, isReportDynamic = false }) => {\n    const POSSIBLE_HEADERS = [\n        {\n            name: 'publish_date',\n            header: { value: intl.formatMessage(messages.publishDate) }\n        },\n        {\n            name: 'cvss_filter',\n            header: { value: intl.formatMessage(messages.cvssBaseScore) },\n            hit: 'cvss_score'\n        },\n        {\n            name: 'impact',\n            header: { value: intl.formatMessage(messages.impact) },\n            hit: 'impact'\n        },\n        {\n            name: 'affecting',\n            header: { value: intl.formatMessage(messages.systemsExposed) },\n            hit: 'systems_affected'\n        },\n        {\n            name: 'business_risk_id',\n            header: { value: intl.formatMessage(messages.businessRisk) },\n            hit: 'business_risk'\n        },\n        {\n            name: 'status_id',\n            header: { value: intl.formatMessage(messages.status) },\n            hit: 'status'\n        }\n    ];\n    // eslint-disable-next-line react/prop-types\n    const columnBuilder = ({ value, style }) => <Text key={value} style={style}>{value}</Text>;\n    let hitColumns = ['cvss_score', 'impact', 'systems_affected', 'business_risk', 'status'];\n\n    let headerContent = [];\n\n    // if the header is undefined we use default header (all params)\n    if (header) {\n        headerContent.push({ value: intl.formatMessage(messages.cveId) });\n        hitColumns = [];\n\n        POSSIBLE_HEADERS.forEach(item => {\n            if (header.includes(item.name)) {\n                headerContent.push(item.header);\n                item.hit && hitColumns.push(item.hit);\n            }\n        });\n    }\n    else if (type === 'cves') {\n        headerContent = [\n            { value: intl.formatMessage(messages.cveId) }\n        ].concat(POSSIBLE_HEADERS.map(item => item.header));\n    }\n    else {\n        hitColumns = ['display_name', 'os', 'cve_count', 'updated'];\n\n        headerContent = [\n            { value: intl.formatMessage(messages.systemsColumnHeaderName), id: 'name' },\n            { value: intl.formatMessage(messages.systemsColumnHeaderOSFull) },\n            { value: intl.formatMessage(messages.systemsColumnHeaderCveCount) },\n            { value: intl.formatMessage(messages.systemsColumnHeaderUpdated) }\n        ];\n    }\n\n    const hasRules = (cve) => {\n        const hasRule = cve.rules && cve.rules.length > 0;\n        return isReportDynamic ? hasRule && header.includes('rule_presence') : hasRule;\n    };\n\n    const hasExploit = ({ known_exploit: knownExploit }) => (\n        isReportDynamic ? knownExploit && header.includes('known_exploit') : knownExploit\n    );\n\n    const cveRows = [\n        ...data.map(({ attributes: cve }) => {\n            const synopsisCell = (\n                <View style={[styles.bodyCell, styles.cveCell]}>\n                    <View>\n                        <Text>\n                            <Link\n                                style={styles.link}\n                                src={`${CVES_PATH}/${cve.synopsis}`}\n                            >\n                                {cve.synopsis}\n                            </Link>\n                        </Text>\n                    </View>\n                    <CVElabels hasExploit={hasExploit(cve)} hasRule={hasRules(cve)} intl={intl} isSmall />\n                </View>\n            );\n\n            const publishDateCell = (\n                (!header || header.includes('publish_date')) &&\n                <Text key={cve.public_date} style={[styles.bodyCell, styles.cveCell]}>\n                    {processDate(cve.public_date)}\n                </Text>\n            );\n\n            return [\n                synopsisCell,\n                publishDateCell,\n                ...hitColumns.map(item => columnBuilder({ value: cve[item], style: [styles.bodyCell, styles.cveCell] }))\n            ];\n        })\n    ];\n\n    const systemRows = [\n        ...data.map(({ attributes: system }) => {\n            return [\n                columnBuilder({ value: system.display_name, style: [styles.bodyCell, styles.systemNameCell] }),\n                columnBuilder({ value: system.os, style: [styles.bodyCell, styles.systemCell] }),\n                columnBuilder({\n                    value: system.opt_out\n                        ? intl.formatMessage(messages.systemsTableExcluded)\n                        : system.cve_count, style: [styles.bodyCell, styles.systemCell]\n                }),\n                columnBuilder({ value: formatDate(system.updated, true), style: [styles.bodyCell, styles.systemCell] })\n            ];\n        })\n    ];\n\n    return <Fragment key={page}>\n        <Table\n            withHeader\n            rows={[\n                headerContent.map(item => columnBuilder({\n                    ...item,\n                    style: [styles.headerCell, type === 'cves'\n                        ? styles.cveCell\n                        : item.id === 'name'\n                            ? styles.systemNameCell\n                            : styles.systemCell]\n                })),\n                ... (type === 'cves') ? cveRows : systemRows\n            ]}\n        />\n        {data.length === 0 && <Text>{intl.formatMessage(messages.customReportNoItems)}</Text>}\n    </Fragment>;\n};\n\ntablePage.propTypes = {\n    data: PropTypes.object,\n    intl: PropTypes.any,\n    page: PropTypes.number,\n    header: PropTypes.array,\n    type: PropTypes.string,\n    isReportDynamic: PropTypes.bool\n};\n\nexport default tablePage;\n","\nimport React, { useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { DownloadButton } from '@redhat-cloud-services/frontend-components-pdf-generator';\nimport { getSystems } from '../../../Helpers/APIHelper';\nimport { chunkArray } from '../../../Helpers/MiscHelper';\nimport messages from '../../../Messages';\nimport firstPagePDF from './Common/firstPagePDF';\nimport tablePage from './Common/tablePage';\nimport DownloadReport from '../../../Helpers/DownloadReport';\nimport { NotAuthorizedNotification, PDF_REPORT_PER_PAGE } from '../../../Helpers/constants';\nimport { useNotification } from '../../../Helpers/Hooks';\n\nconst DownloadSystemsReport = ({\n    filters,\n    params,\n    reportData = {},\n    buttonProps,\n    label,\n    ...props\n}) => {\n    const intl = useIntl();\n    const [loading, setLoading] = useState(false);\n    const [addNotification, clearNotifications] = useNotification();\n    const { systemsReportRestPages, systemsReportFirstPage } = PDF_REPORT_PER_PAGE;\n\n    useEffect(() => {\n        setLoading(true);\n        addNotification({ msg: intl.formatMessage(messages.notificationReportDownloadStart) });\n    }, []);\n\n    const otherPagesPDF = data => chunkArray(data, systemsReportRestPages);\n\n    const systemsFetch = async () => {\n        let data;\n        let meta;\n\n        try {\n            ({ data, meta } = await getSystems({\n                ...params,\n                ...DownloadReport.defaultParams,\n                report: 'true'\n            }));\n        }\n        catch (error) {\n            clearNotifications();\n            addNotification(error.status === '403' ? NotAuthorizedNotification : {\n                variant: 'danger',\n                autoDismiss: false,\n                msg: intl.formatMessage(messages.notificationReportDownloadFailureTitle),\n                description: intl.formatMessage(messages.notificationReportDownloadFailureBody)\n            });\n\n            setLoading(false);\n\n            return [];\n        }\n\n        const firstPage = firstPagePDF({\n            data: data.splice(0, systemsReportFirstPage),\n            meta,\n            filters,\n            intl\n        });\n\n        const otherPages = otherPagesPDF(data);\n\n        setLoading(false);\n\n        clearNotifications();\n        addNotification({ variant: 'success', msg: intl.formatMessage(messages.notificationReportDownloadSuccess) });\n\n        return [\n            firstPage,\n            ...otherPages.map((systemPage, index) =>\n                tablePage({ data: systemPage, page: index, intl, header: reportData && reportData.header })\n            )\n        ];\n    };\n\n    return (\n        <div>\n            <DownloadButton\n                {...props}\n                fallback={null}\n                label={loading ? intl.formatMessage(messages.loading) : intl.formatMessage(label)}\n                asyncFunction={systemsFetch}\n                buttonProps={{ component: 'button', ...buttonProps }}\n                reportName={intl.formatMessage(messages.systemPDFReportName)}\n                type=\"\"\n                fileName={`${DownloadReport.filename('system-list')}.pdf`}\n                allPagesHaveTitle={false}\n                size=\"A4\"\n                orientation=\"landscape\"\n            />\n        </div>\n    );\n};\n\nDownloadSystemsReport.defaultProps = {\n    label: messages.kebabExportAsPDF\n};\n\nDownloadSystemsReport.propTypes = {\n    filters: propTypes.oneOfType([\n        propTypes.array,\n        propTypes.object\n    ]),\n    params: propTypes.object,\n    reportData: propTypes.object,\n    buttonProps: propTypes.object,\n    label: propTypes.oneOfType([\n        propTypes.array,\n        propTypes.object\n    ])\n};\n\nexport default DownloadSystemsReport;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { intl } from '../../../../Utilities/IntlProvider';\nimport messages from '../../../../Messages';\nimport { EXCLUDED_FILTER_OPTIONS } from '../../../../Helpers/constants';\n\nconst excludedFilter = (apply, currentFilter = {}) => {\n    let { excluded: currentValue } = currentFilter;\n\n    const filterByExcluded = (values) => {\n        apply({\n            excluded: values.length > 0 ? values?.join(',') : undefined,\n            page: 1\n        });\n    };\n\n    return {\n        label: intl.formatMessage(messages.filterSystemsIncludedInAnalysis),\n        type: conditionalFilterType.checkbox,\n        urlParam: 'excluded',\n        filterValues: {\n            onChange: (event, value) => {\n                filterByExcluded(value);\n            },\n            items: EXCLUDED_FILTER_OPTIONS.map(({ label, value }) => ({ label, value })),\n            value: currentValue?.length > 0 ? currentValue?.split(',') : undefined\n        }\n    };\n};\n\nexport default excludedFilter;\n","import React, { Fragment, useState, useMemo } from 'react';\nimport propTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport { useDispatch } from 'react-redux';\nimport { dataShape } from '../../../Helpers/MiscHelper';\nimport { fetchSystems } from '../../../Store/Actions/Actions';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport useSearchFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/SearchFilter';\nimport { exportConfig, buildActiveFilters, removeFilters, isFilterInDefaultState } from '../../../Helpers/TableToolbarHelper';\nimport DownloadReport from '../../../Helpers/DownloadReport';\nimport DownloadSystemsReport from '../Reports/DownloadSystemsReport';\nimport { kebabItemDownloadPDF } from '../../PresentationalComponents/Kebab/KebabItems';\nimport excludedFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/ExcludedFilter';\nimport { SYSTEMS_DEFAULT_FILTERS, SYSTEMS_FILTER_PARAMS } from '../../../Helpers/constants';\nimport { useBulkSelect } from '../../../Helpers/Hooks';\nimport {\n    addNotification,\n    clearNotifications\n} from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport useOsVersionFilter from '../../PresentationalComponents/Filters/PrimaryToolbarFilters/OsVersionFilter';\n\nconst SystemsTableToolbar = ({\n    selectedRows,\n    selectedRowsCount,\n    intl,\n    canExport,\n    canSetExcludedIncluded,\n    canReadExcluded,\n    parameters,\n    rawData,\n    methods\n}) => {\n    const [exportPDF, setExportPDF] = useState(false);\n    const { apply, handleSelect, doOptOut, setColumnModalOpen } = methods;\n    const dispatch = useDispatch();\n\n    const downloadReport = format => {\n        let params = { ...parameters };\n        DownloadReport.exec(\n            fetchSystems,\n            params,\n            format,\n            'system-list',\n            notification => dispatch(\n                addNotification(notification)\n            ),\n            () => dispatch(clearNotifications())\n        );\n    };\n\n    const kebabProps = useMemo(() => {\n        return {\n            selectedExcluded: selectedRows.some(({ opt_out: optOut }) => optOut === true),\n            selectedIncluded: selectedRows.some(({ opt_out: optOut }) => optOut === false)\n        };\n    }, [selectedRows]);\n\n    const kebabOptions = [\n        '',\n        ...canSetExcludedIncluded ? [{\n            label: intl.formatMessage(messages.systemKebabExcludeAnalysis, { count: selectedRowsCount }),\n            onClick: () => doOptOut(selectedRows, selectedRows?.[0].display_name, true),\n            props: { isDisabled: !selectedRowsCount || !kebabProps.selectedIncluded }\n        },\n        {\n            label: intl.formatMessage(messages.systemKebabIncludeAnalysis, { count: selectedRowsCount }),\n            onClick: () => doOptOut(selectedRows, selectedRows?.[0].display_name, false, selectedRows),\n            props: { isDisabled: !selectedRowsCount || !kebabProps.selectedExcluded }\n        }] : [],\n        {\n            label: intl.formatMessage(messages.columnManagementModalTitle),\n            onClick: () => setColumnModalOpen(true)\n        }\n    ];\n\n    const bulkSelectProps = useBulkSelect({\n        rawData,\n        selectedRows,\n        selectedRowsCount,\n        handleSelect,\n        // TODO: change it back to fetchSystemsIds when the endpoint returns also a display_name\n        fetchResource: ops => fetchSystems({ ...parameters, ...ops })\n    });\n\n    let filterConfigItems = [\n        useSearchFilter(\n            'filter',\n            messages.systemsSearchName,\n            messages.searchFilterByName,\n            parameters.filter,\n            apply\n        ),\n        ...canReadExcluded ? [excludedFilter(apply, parameters)] : [],\n        useOsVersionFilter(\n            parameters.rhel_version,\n            apply\n        )\n    ];\n\n    return <Fragment>\n        <PrimaryToolbar\n            className=\"vuln-systems-primary-toolbar\"\n            bulkSelect={bulkSelectProps}\n            actionsConfig={{\n                actions: kebabOptions,\n                dropdownProps: { ouiaId: 'toolbar-actions' }\n            }}\n            filterConfig={{\n                items: filterConfigItems\n            }}\n            activeFiltersConfig={{\n                filters: buildActiveFilters(parameters),\n                onDelete: (_, chips, reset) => removeFilters(chips, methods.apply, reset, SYSTEMS_DEFAULT_FILTERS),\n                deleteTitle: intl.formatMessage(messages.resetFilters),\n                showDeleteButton: !isFilterInDefaultState(\n                    parameters,\n                    canReadExcluded ? SYSTEMS_DEFAULT_FILTERS : {},\n                    SYSTEMS_FILTER_PARAMS)\n            }}\n            exportConfig={canExport ? {\n                isDisabled: rawData.meta.totalItems === 0,\n                extraItems: [kebabItemDownloadPDF(exportPDF, setExportPDF)],\n                ouiaId: 'export',\n                ...exportConfig({ downloadReport })\n            } : null}\n        />\n\n        {exportPDF &&\n            <DownloadSystemsReport\n                showButton={false}\n                params={parameters}\n                filters={buildActiveFilters(parameters)}\n                onSuccess={() => setExportPDF(false)}\n            />\n        }\n\n    </Fragment>;\n\n};\n\nSystemsTableToolbar.propTypes = {\n    rawData: dataShape,\n    canExport: propTypes.bool,\n    canSetExcludedIncluded: propTypes.bool,\n    canReadExcluded: propTypes.bool,\n    parameters: propTypes.object,\n    selectedRows: propTypes.array,\n    selectedRowsCount: propTypes.number,\n    methods: propTypes.shape({\n        doOptOut: propTypes.func,\n        apply: propTypes.func,\n        handleSelect: propTypes.func,\n        setColumnModalOpen: propTypes.func\n    }),\n    intl: propTypes.any\n};\n\nexport default injectIntl(SystemsTableToolbar);\n","import React, { useEffect, useState, Fragment } from 'react';\nimport { useIntl } from 'react-intl';\nimport messages from '../../../Messages';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport SystemsTableToolbar from './SystemsTableToolbar';\nimport { PERMISSIONS, SYSTEMS_ALLOWED_PARAMS } from '../../../Helpers/constants';\nimport ReducerRegistry from '../../../Utilities/ReducerRegistry';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { systemTableRowActions } from '../../../Helpers/CVEHelper';\nimport Header from '../../PresentationalComponents/Header/Header';\nimport { inventoryEntitiesReducer } from '../../../Store/Reducers/InventoryEntitiesReducer';\nimport {\n    changeSystemsParams,\n    clearSystemStore,\n    clearInventoryStore,\n    selectRows,\n    changeColumnsSystemList\n} from '../../../Store/Actions/Actions';\nimport { useUrlParams } from '../../../Helpers/MiscHelper';\nimport { InventoryTable } from '@redhat-cloud-services/frontend-components/Inventory';\nimport ErrorHandler from '../../PresentationalComponents/ErrorHandler/ErrorHandler';\nimport { TableVariant } from '@patternfly/react-table';\nimport { useGetEntities, useOptOutSystems, useRbac } from '../../../Helpers/Hooks';\nimport * as APIHelper from '../../../Helpers/APIHelper';\nimport { EmptyStateNoSystems } from '../../PresentationalComponents/EmptyStates/EmptyStates';\nimport ColumnManagementModal from '../Modals/ColumnManagementModal';\nimport { clearNotifications } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport NoAccessPage from '../../PresentationalComponents/StaticPages/NoAccessPage';\nimport Spinner from '@redhat-cloud-services/frontend-components/Spinner';\n\nconst SystemsPage = () => {\n    const [[canReadVulnerabilityResults,\n        canSetExcludedIncluded,\n        canExport,\n        canReadExcluded],\n    isLoading] = useRbac([\n        PERMISSIONS.readVulnerabilityResults,\n        PERMISSIONS.setExcludedIncluded,\n        PERMISSIONS.basicReporting,\n        PERMISSIONS.readExcluded\n    ]);\n\n    const [[\n        canReadHostsInventory],\n    isLoadingInventory] = useRbac([\n        PERMISSIONS.readHosts\n    ], 'inventory');\n\n    const inventoryRef = React.createRef();\n    const dispatch = useDispatch();\n    const intl = useIntl();\n    const [urlParameters, setUrlParams] = useUrlParams(SYSTEMS_ALLOWED_PARAMS);\n\n    const items = useSelector(({ entities }) => entities?.rows || [], shallowEqual);\n    const totalItems = useSelector(({ entities }) => entities?.total);\n    const meta = useSelector(({ entities }) => entities?.meta);\n    const selectedRows = useSelector(({ entities }) => entities?.selectedRows || []);\n    const selectedRowsCount = useSelector(({ entities }) => entities?.selectedRowsCount ?? 0);\n    const isLoaded = useSelector(({ entities }) => entities?.loaded || false);\n\n    let parameters = useSelector(({ SystemsPageStore }) => SystemsPageStore.params, shallowEqual);\n    if (!canReadExcluded) {\n        parameters.excluded = '';\n    }\n\n    const { hasError, errorCode } = useSelector(({ SystemsPageStore }) => SystemsPageStore.error);\n    const columns = useSelector(({ SystemsPageStore }) => SystemsPageStore.columns);\n\n    const [isColumnModalOpen, setColumnModalOpen] = useState(false);\n\n    const mergeColumns = inventoryColumns => {\n        return columns\n            .filter(column => column.isShown ?? column.isShownByDefault)\n            .map(column => ({ ...inventoryColumns.find(({ key }) => column.key === key), ...column }));\n    };\n\n    useEffect(() => {\n        return () => {\n            dispatch(clearSystemStore());\n            dispatch(clearInventoryStore());\n            dispatch(clearNotifications());\n        };\n    }, [dispatch]);\n\n    const apply = (params) => dispatch(changeSystemsParams(params));\n\n    useEffect(() => apply(urlParameters), []);\n\n    useEffect(() => setUrlParams({ ...parameters, ...meta }), [setUrlParams, parameters, meta]);\n\n    const handleSelect = (payload, selecting) => dispatch(selectRows(payload, selecting));\n\n    const onRefreshInventory = () => (\n        dispatch(clearInventoryStore()),\n        inventoryRef.current.onRefreshData(({ page: 1 }))\n    );\n\n    const doOptOut = useOptOutSystems(onRefreshInventory);\n    const getEntities = useGetEntities(APIHelper.getSystems, {});\n\n    const [columnCounter, setColumnCount] = useState(0);\n    useEffect(() => setColumnCount(columnCounter + 1), [columns]);\n\n    return (\n        isLoading ? <Spinner centered/> :\n            canReadVulnerabilityResults ? <Fragment>\n                <ColumnManagementModal\n                    appliedColumns={columns}\n                    applyColumns={newColumns => dispatch(changeColumnsSystemList(newColumns))}\n                    isModalOpen={isColumnModalOpen}\n                    setModalOpen={setColumnModalOpen}\n                />\n                <Header title={intl.formatMessage(messages.vulnerabilitySystemsHeader)} showBreadcrumb={false}/>\n                <Main>\n                    {isLoadingInventory ? <Spinner centered/> :\n                        hasError && !canReadHostsInventory\n                            ? <ErrorHandler code={errorCode}/>\n                            : (\n                                <InventoryTable\n                                    disableDefaultColumns\n                                    onLoad={({ mergeWithEntities }) => {\n                                        ReducerRegistry.register({\n                                            ...mergeWithEntities(\n                                                inventoryEntitiesReducer(columns),\n                                                {\n                                                    page: Number(parameters.page || 1),\n                                                    perPage: Number(parameters.page_size || 20),\n                                                    ...(parameters.sort && {\n                                                        sortBy: {\n                                                            key: parameters.sort.replace(/^-/, ''),\n                                                            direction: parameters.sort.match(/^-/) ? 'desc' : 'asc'\n                                                        }\n                                                    })\n                                                }\n                                            )\n                                        });\n                                    }}\n                                    tableProps={{\n                                        isStickyHeader: true,\n                                        canSelectAll: false,\n                                        actionResolver: totalItems > 0 && canSetExcludedIncluded\n                                            && ((rowData) => systemTableRowActions(rowData, doOptOut)),\n                                        variant: TableVariant.compact\n                                    }}\n                                    paginationProps={{\n                                        isDisabled: !totalItems\n                                    }}\n                                    showTagModal\n                                    isFullView\n                                    ref={inventoryRef}\n                                    autoRefresh\n                                    customFilters={{\n                                        vulnerabilityParams: {\n                                            ...parameters\n                                        }\n                                    }}\n                                    columnsCounter={columnCounter}\n                                    columns={defaultColumns => mergeColumns(defaultColumns)}\n                                    getEntities={getEntities}\n                                    hideFilters={{ all: true }}\n                                    noSystemsTable={<EmptyStateNoSystems/>}\n                                >\n                                    <SystemsTableToolbar\n                                        canExport={canExport}\n                                        canSetExcludedIncluded={canSetExcludedIncluded}\n                                        canReadExcluded={canReadExcluded}\n                                        parameters={parameters}\n                                        rawData={{ data: items, meta: { totalItems }, isLoaded }}\n                                        selectedRows={selectedRows}\n                                        selectedRowsCount={selectedRowsCount}\n                                        methods={{\n                                            doOptOut,\n                                            apply,\n                                            handleSelect,\n                                            setColumnModalOpen\n                                        }}\n                                        actions\n                                    />\n                                </InventoryTable>\n                            )}\n                </Main>\n            </Fragment> : <NoAccessPage/>\n    );\n};\n\nexport default SystemsPage;\n","import { selectRows } from './reducersHelper';\nimport * as ActionTypes from '../ActionTypes';\n\nexport const initialState = {\n    columns: [],\n    rows: [],\n    entities: [],\n    loaded: false,\n    tagsLoaded: false,\n    allTagsLoaded: false,\n    invConfig: {},\n    sortBy: {\n        key: 'updated',\n        direction: 'desc'\n    },\n    page: 1,\n    perPage: 20,\n    selectedRows: [],\n    selectedRowsCount: 0\n};\n\nfunction modifyInventory(columns, state, action) {\n    let advisory = columns.find(({ key }) => key === 'advisory');\n\n    if (!state.selectedRows) {\n        state.selectedRows = [];\n    }\n\n    if (!state.sortBy) {\n        state.sortBy = {\n            key: 'updated',\n            direction: 'desc'\n        };\n    }\n\n    if (state.loaded) {\n        let hasPatchAccess = state.rows.some(({ patchAccess }) => patchAccess);\n\n        if (!hasPatchAccess && advisory) {\n            advisory.isShown = false;\n        }\n\n        return {\n            ...state,\n            columns,\n            rows: state.rows.map(row => ({\n                ...row,\n                selected: state.selectedRows.some(selectedRow => selectedRow.id === row.id) || false\n            })),\n            meta: action.payload.meta\n        };\n    }\n\n    return state;\n}\n\nexport const inventoryEntitiesReducer = (columns) => (state = initialState, action) => {\n    let newState = { ...state };\n\n    switch (action.type) {\n        case ActionTypes.LOAD_ENTITIES + '_FULFILLED':\n            return modifyInventory(columns, newState, action);\n        case ActionTypes.SELECT_ENTITY:\n            return selectRows(newState, action, action.selecting);\n        case ActionTypes.EXPAND_ROW:\n            return {\n                ...newState,\n                rows: newState.rows.map(row => ({\n                    ...row,\n                    isOpen: row.id === action.payload.id ? action.payload.isOpen : row.isOpen\n                }))\n            };\n        case ActionTypes.CLEAR_INVENTORY_STORE:\n            return initialState;\n        default:\n            return newState;\n    }\n};\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}"],"names":["TableGridBreakpoint","TableVariant","href","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","_a","_b","errorTitle","errorDescription","props","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","EmptyState","variant","EmptyStateVariant","className","EmptyStateIcon","icon","Title","headingLevel","size","EmptyStateBody","Stack","StackItem","document","referrer","Button","onClick","history","back","component","target","rel","id","xmlns","xmlnsXlink","viewBox","x","y","width","height","maskUnits","transform","points","d","concat","window","location","origin","pathname","split","useEffect","console","error","BaseInvTable","store","Cmp","Suspense","fallback","ScalprumComponent","appName","module","scope","ErrorComponent","ref","innerRef","propTypes","InvTable","defaultProps","Bullseye","Spinner","ExclamationCircleIcon","filterValue","React","isOpen","setOpen","numOptions","setNumOptions","versionFromNewestToOldest","RHEL_VERSIONS","reverse","selectedVersionsArray","type","conditionalFilterType","label","intl","messages","filterValues","children","onToggle","onSelect","_","changedLabel","newValue","changedValue","version","value","includes","splice","rhel_version","join","page","selections","map","item","placeholderText","loadingVariant","text","style","maxHeight","overflow","slice","option","index","isDisabled","disabled","key","description","kebabItemDownloadPDF","loading","downloadReport","kebabItemEditBusinessRisk","showBusinessRiskModal","cves","kebabItemEditStatus","showStatusModal","inventoryIds","CVElabels","hasRule","hasExploit","isSmall","styles","formatMessage","textStyle","left","undefined","labelStyle","border","borderWidth","borderColor","firstPagePDF","data","meta","filters","isReportDynamic","reportData","user","filtersBuilder","reduce","obj","filter","category","values","PUBLIC_DATE_OPTIONS","val","chips","timespan_label","name","isAllChosen","CVE_REPORT_FILTERS","SYSTEM_REPORT_FILTERS","CheckboxCustomFilter","FILTERS","items","cvefilterStringSegments","msg","lowercase","systemsFilterStringSegments","filterStringSegments","isFirst","isLast","includedValues","Fragment","intlFormatWithBold","hasSearchTerm","searchTerm","score","cvss_filter","DEFAULT_FILTER_DATA","published","publish_date","toLowerCase","prefix","tags","tag","namespace","count","find","multiValue","cve_count","total_items","toString","system_count","header","knownExploitCount","userNotes","identity","first_name","last_name","tablePage","PropTypes","POSSIBLE_HEADERS","hit","columnBuilder","hitColumns","headerContent","push","forEach","hasRules","cve","rules","cveRows","knownExploit","attributes","src","CVES_PATH","synopsis","known_exploit","public_date","processDate","systemRows","system","display_name","os","opt_out","formatDate","updated","withHeader","rows","DownloadSystemsReport","params","buttonProps","useIntl","useState","setLoading","useNotification","addNotification","clearNotifications","systemsReportRestPages","PDF_REPORT_PER_PAGE","systemsReportFirstPage","otherPagesPDF","chunkArray","systemsFetch","getSystems","DownloadReport","report","status","NotAuthorizedNotification","autoDismiss","firstPage","otherPages","systemPage","asyncFunction","reportName","fileName","allPagesHaveTitle","orientation","currentFilter","currentValue","excluded","filterByExcluded","urlParam","onChange","event","EXCLUDED_FILTER_OPTIONS","SystemsTableToolbar","selectedRows","selectedRowsCount","canExport","canSetExcludedIncluded","canReadExcluded","parameters","rawData","methods","exportPDF","setExportPDF","handleSelect","doOptOut","setColumnModalOpen","dispatch","useDispatch","kebabProps","useMemo","selectedExcluded","some","selectedIncluded","kebabOptions","bulkSelectProps","useBulkSelect","fetchResource","ops","fetchSystems","filterConfigItems","useSearchFilter","excludedFilter","useOsVersionFilter","PrimaryToolbar","bulkSelect","actionsConfig","actions","dropdownProps","ouiaId","filterConfig","activeFiltersConfig","buildActiveFilters","onDelete","reset","removeFilters","SYSTEMS_DEFAULT_FILTERS","deleteTitle","showDeleteButton","isFilterInDefaultState","SYSTEMS_FILTER_PARAMS","exportConfig","totalItems","extraItems","format","notification","showButton","onSuccess","dataShape","injectIntl","useRbac","PERMISSIONS","canReadVulnerabilityResults","isLoading","canReadHostsInventory","isLoadingInventory","inventoryRef","useUrlParams","SYSTEMS_ALLOWED_PARAMS","urlParameters","setUrlParams","useSelector","entities","shallowEqual","total","isLoaded","loaded","SystemsPageStore","hasError","errorCode","columns","isColumnModalOpen","clearSystemStore","clearInventoryStore","changeSystemsParams","useOptOutSystems","current","onRefreshData","getEntities","useGetEntities","APIHelper","columnCounter","setColumnCount","centered","ColumnManagementModal","appliedColumns","applyColumns","newColumns","changeColumnsSystemList","isModalOpen","setModalOpen","Header","title","showBreadcrumb","Main","ErrorHandler","code","InventoryTable","disableDefaultColumns","onLoad","mergeWithEntities","ReducerRegistry","inventoryEntitiesReducer","Number","perPage","page_size","sort","sortBy","replace","direction","match","tableProps","isStickyHeader","canSelectAll","actionResolver","rowData","systemTableRowActions","paginationProps","showTagModal","isFullView","autoRefresh","customFilters","vulnerabilityParams","columnsCounter","defaultColumns","inventoryColumns","column","isShown","isShownByDefault","hideFilters","all","noSystemsTable","payload","selecting","selectRows","NoAccessPage","initialState","tagsLoaded","allTagsLoaded","invConfig","modifyInventory","state","action","advisory","patchAccess","row","selected","selectedRow","newState","ActionTypes","_classCallCheck","instance","Constructor","TypeError"],"sourceRoot":""}