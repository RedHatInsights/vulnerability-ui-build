{"version":3,"file":"js/SystemDetailsPage.1639404687813.87fbda5b5ae38363a571.js","mappings":"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","sources":["webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/InventoryLoadError.js","webpack:///./src/Components/SmartComponents/SystemDetailsPage/SystemDetails.js","webpack:///./src/Store/Reducers/SystemDetailsPageStore.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/DetailWrapper.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/InventoryDetailHead.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/AppInfo.js","webpack:///./src/Components/SmartComponents/SystemDetailsPage/SystemDetailsPage.js"],"sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nvar InventoryLoadError = function InventoryLoadError(_ref) {\n  var component = _ref.component,\n      props = _objectWithoutProperties(_ref, [\"component\"]);\n\n  useEffect(function () {\n    console.error(\"Unable to load iventory component. Failed to load \".concat(component, \".\"), props);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"h1\", null, \"Unable to load inventory component\"), /*#__PURE__*/React.createElement(\"h2\", null, \"Failed to load \", component), /*#__PURE__*/React.createElement(\"code\", null, \"More info can be found in browser console output.\"));\n};\n\nInventoryLoadError.propTypes = {\n  component: PropTypes.string\n};\nexport default InventoryLoadError;","import React from 'react';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { ConnectedSystemCves } from '../SystemCves/SystemCves';\nimport { EmptyStateExcludedSystem } from '../../PresentationalComponents/EmptyStates/EmptyStates';\n\nconst SystemDetails = ({ entity, isOptOut, optOutSystemHandler, loaded }) => {\n    return entity && loaded && isOptOut ? (\n        <EmptyStateExcludedSystem buttonAction={() => optOutSystemHandler(false)} />\n    ) : (\n        <ConnectedSystemCves\n            entity={{ id: entity?.id, display_name: entity?.display_name }}\n            allowedCveActions={['EDIT_STATUS', 'REMEDIATE']}\n            showHeaderLabel\n            setPageTitle\n        />\n    );\n};\n\nSystemDetails.propTypes = {\n    entity: propTypes.object,\n    isOptOut: propTypes.bool,\n    loaded: propTypes.bool,\n    optOutSystemHandler: propTypes.func\n};\n\nfunction mapStateToProps({ entityDetails: { entity, opt_out: isOptOut, loaded } }) {\n    return {\n        entity,\n        isOptOut,\n        loaded\n    };\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        null\n    )(SystemDetails)\n);\n","import React from 'react';\nimport SystemDetails from '../../Components/SmartComponents/SystemDetailsPage/SystemDetails';\nimport { FETCH_SYSTEM_DETAILS } from '../ActionTypes';\n\nexport const initialState = {\n    loaded: false\n};\n\nexport const systemDetailsPageStore = (INVENTORY_ACTION_TYPES, optOutSystemHandler) => (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_SYSTEM_DETAILS + '_FULFILLED':\n            return {\n                ...state,\n                ...action.payload.data\n            };\n        case INVENTORY_ACTION_TYPES.LOAD_ENTITY_FULFILLED:\n            return {\n                ...state,\n                loaded: true,\n                activeApps: [\n                    {\n                        title: 'Vulnerabilities',\n                        name: 'vulnerabilities',\n                        component: () => <SystemDetails optOutSystemHandler={optOutSystemHandler} />\n                    }\n                ]\n            };\n        case INVENTORY_ACTION_TYPES.LOAD_ENTITY_REJECTED:\n            return {\n                ...state,\n                loaded: true,\n                activeApps: [\n                    {\n                        title: 'Vulnerabilities',\n                        name: 'vulnerabilities',\n                        component: () => <SystemDetails />\n                    }\n                ]\n            };\n        default:\n            return state;\n    }\n};\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { ScalprumComponent } from '@scalprum/react-core';\nimport { useHistory } from 'react-router-dom';\nimport { useStore } from 'react-redux';\nimport { Bullseye } from \"@patternfly/react-core/dist/esm/layouts/Bullseye/Bullseye.js\";\nimport { Spinner } from \"@patternfly/react-core/dist/esm/components/Spinner/Spinner.js\";\nimport InventoryLoadError from './InventoryLoadError';\n\nvar BaseDetailWrapper = function BaseDetailWrapper(props) {\n  var history = useHistory();\n  var store = useStore();\n  return /*#__PURE__*/React.createElement(Suspense, {\n    fallback: props.fallback\n  }, /*#__PURE__*/React.createElement(ScalprumComponent, _extends({\n    history: history,\n    store: store,\n    appName: \"inventory\",\n    module: \"./DetailWrapper\",\n    scope: \"inventory\",\n    ErrorComponent: /*#__PURE__*/React.createElement(InventoryLoadError, _extends({\n      component: \"InventoryDetailHead\",\n      history: history,\n      store: store\n    }, props)),\n    ref: props.innerRef\n  }, props)));\n};\n\nBaseDetailWrapper.propTypes = {\n  fallback: PropTypes.node,\n  innerRef: PropTypes.object\n};\n/**\n * Inventory sub component.\n *\n * This component wraps entire system detail in order to show loading state and drawer (if enabled).\n */\n\nvar DetailWrapper = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(BaseDetailWrapper, _extends({\n    innerRef: ref\n  }, props));\n});\nDetailWrapper.propTypes = {\n  /** React Suspense fallback component. <a href=\"https://reactjs.org/docs/code-splitting.html#reactlazy\" target=\"_blank\">Learn more</a>. */\n  fallback: PropTypes.node\n};\nDetailWrapper.defaultProps = {\n  fallback: /*#__PURE__*/React.createElement(Bullseye, {\n    className: \"pf-u-p-lg\"\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    size: \"xl\"\n  }))\n};\nexport default DetailWrapper;","import _extends from \"@babel/runtime/helpers/extends\";\nimport React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { ScalprumComponent } from '@scalprum/react-core';\nimport { useHistory } from 'react-router-dom';\nimport { useStore } from 'react-redux';\nimport { Bullseye } from \"@patternfly/react-core/dist/esm/layouts/Bullseye/Bullseye.js\";\nimport { Spinner } from \"@patternfly/react-core/dist/esm/components/Spinner/Spinner.js\";\nimport InventoryLoadError from './InventoryLoadError';\n\nvar BaseInventoryDetailHead = function BaseInventoryDetailHead(props) {\n  var history = useHistory();\n  var store = useStore();\n  return /*#__PURE__*/React.createElement(Suspense, {\n    fallback: props.fallback\n  }, /*#__PURE__*/React.createElement(ScalprumComponent, _extends({\n    history: history,\n    store: store,\n    appName: \"inventory\",\n    module: \"./InventoryDetailHead\",\n    scope: \"inventory\",\n    ErrorComponent: /*#__PURE__*/React.createElement(InventoryLoadError, _extends({\n      component: \"InventoryDetailHead\",\n      history: history,\n      store: store\n    }, props)),\n    ref: props.innerRef\n  }, props)));\n};\n\nBaseInventoryDetailHead.propTypes = {\n  fallback: PropTypes.node,\n  innerRef: PropTypes.object\n};\n/**\n * Inventory sub component.\n *\n * This component shows system information (tags, facts and basic operations).\n */\n\nvar InventoryDetailHead = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(BaseInventoryDetailHead, _extends({\n    innerProps: ref\n  }, props));\n});\nInventoryDetailHead.propTypes = {\n  /** React Suspense fallback component. <a href=\"https://reactjs.org/docs/code-splitting.html#reactlazy\" target=\"_blank\">Learn more</a>. */\n  fallback: PropTypes.node\n};\nInventoryDetailHead.defaultProps = {\n  fallback: /*#__PURE__*/React.createElement(Bullseye, {\n    className: \"pf-u-p-lg\"\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    size: \"xl\"\n  }))\n};\nexport default InventoryDetailHead;","import _extends from \"@babel/runtime/helpers/extends\";\nimport React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { ScalprumComponent } from '@scalprum/react-core';\nimport { useHistory } from 'react-router-dom';\nimport { useStore } from 'react-redux';\nimport { Bullseye } from \"@patternfly/react-core/dist/esm/layouts/Bullseye/Bullseye.js\";\nimport { Spinner } from \"@patternfly/react-core/dist/esm/components/Spinner/Spinner.js\";\nimport InventoryLoadError from './InventoryLoadError';\n\nvar BaseAppInfo = function BaseAppInfo(props) {\n  var history = useHistory();\n  var store = useStore();\n  return /*#__PURE__*/React.createElement(Suspense, {\n    fallback: props.fallback\n  }, /*#__PURE__*/React.createElement(ScalprumComponent, _extends({\n    history: history,\n    store: store,\n    appName: \"inventory\",\n    module: \"./AppInfo\",\n    scope: \"inventory\",\n    ErrorComponent: /*#__PURE__*/React.createElement(InventoryLoadError, _extends({\n      component: \"InventoryDetailHead\",\n      history: history,\n      store: store\n    }, props)),\n    ref: props.innerRef\n  }, props)));\n};\n\nBaseAppInfo.propTypes = {\n  fallback: PropTypes.node,\n  innerRef: PropTypes.object\n};\n/**\n * Inventory sub component.\n *\n * This component shows tab(s) with detail information about selected system.\n */\n\nvar AppInfo = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(BaseAppInfo, _extends({\n    innerRef: ref\n  }, props));\n});\nAppInfo.propTypes = {\n  /** React Suspense fallback component. <a href=\"https://reactjs.org/docs/code-splitting.html#reactlazy\" target=\"_blank\">Learn more</a>. */\n  fallback: PropTypes.node\n};\nAppInfo.defaultProps = {\n  fallback: /*#__PURE__*/React.createElement(Bullseye, {\n    className: \"pf-u-p-lg\"\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    size: \"xl\"\n  }))\n};\nexport default AppInfo;","import { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { addNotification, clearNotifications } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport propTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { fetchSystemDetails, optOutSystemsAction } from '../../../Store/Actions/Actions';\nimport { systemDetailsPageStore } from '../../../Store/Reducers/SystemDetailsPageStore';\nimport ReducerRegistry from '../../../Utilities/ReducerRegistry';\nimport Header from '../../PresentationalComponents/Header/Header';\nimport { injectIntl } from 'react-intl';\nimport { PATHS, ReadOnlyNotification } from '../../../Helpers/constants';\nimport messages from '../../../Messages';\n\nimport { AppInfo, DetailWrapper, InventoryDetailHead } from '@redhat-cloud-services/frontend-components/Inventory';\n\nconst InventoryDetail = ({ fetchSystemDetails, systemDetails = {}, optOutSystem, match, addNotification, intl, errors }) => {\n    const dispatch = useDispatch();\n\n    const inventoryId = match.params.inventoryId;\n\n    useEffect(() => {\n        fetchSystemDetails(inventoryId);\n    }, [fetchSystemDetails, inventoryId]);\n\n    useEffect(() => {\n        return () => {\n            dispatch(clearNotifications());\n        };\n    }, [dispatch]);\n\n    const notifications = systemName => ({\n        exclude: {\n            success: {\n                variant: 'success',\n                title: intl.formatMessage(messages.notificationExcludeSuccess, { count: 1, systemName })\n            },\n            failure: {\n                variant: 'danger',\n                autoDismiss: false,\n                title: intl.formatMessage(messages.notificationExcludeFailureTitle, { count: 1, systemName }),\n                description: intl.formatMessage(messages.notificationDetailExcludeFailureBody, { count: 1 })\n            }\n        },\n        include: {\n            success: {\n                variant: 'success',\n                title: intl.formatMessage(messages.notificationIncludeSuccessTitle, { count: 1, systemName }),\n                description: intl.formatMessage(messages.notificationIncludeSuccessBody, { count: 1 })\n            },\n            failure: {\n                variant: 'danger',\n                autoDismiss: false,\n                title: intl.formatMessage(messages.notificationIncludeFailureTitle, { count: 1, systemName }),\n                description: intl.formatMessage(messages.notificationDetailIncludeFailureBody, { count: 1 })\n            }\n        }\n    });\n\n    const handleOptOutSystem = toExclude => {\n        optOutSystem(inventoryId, toExclude).then(() => {\n            const systemName = systemDetails.entity.display_name;\n\n            fetchSystemDetails(inventoryId);\n            addNotification(toExclude\n                ? notifications(systemName).exclude.success\n                : notifications(systemName).include.success);\n        }).catch(error => {\n            const systemName = systemDetails.entity.display_name;\n\n            addNotification(error.status === '503' ? ReadOnlyNotification : toExclude\n                ? notifications(systemName).exclude.failure\n                : notifications(systemName).include.failure);\n        });\n    };\n\n    const { opt_out: isOptOut = false, entity, loaded } = systemDetails;\n\n    return (\n        <DetailWrapper>\n            <Header\n                title=\"\"\n                breadcrumbs={[\n                    {\n                        title: PATHS.systemsPage.title,\n                        to: PATHS.systemsPage.to,\n                        loaded: true\n                    },\n                    {\n                        title: entity?.display_name || intl.formatMessage(messages.invalidSystem),\n                        isActive: true,\n                        loaded\n                    }\n                ]}\n            >\n                {!errors && (\n                    <InventoryDetailHead\n                        onLoad={({ mergeWithEntities, mergeWithDetail, INVENTORY_ACTION_TYPES }) => {\n                            ReducerRegistry.register({\n                                ...mergeWithEntities(),\n                                ...mergeWithDetail(systemDetailsPageStore(INVENTORY_ACTION_TYPES, handleOptOutSystem))\n                            });\n                        }}\n                        hideBack\n                        actions={\n                            entity && [\n                                isOptOut\n                                    ? {\n                                        title: intl.formatMessage(messages.inventoryKebabOptionsResume),\n                                        onClick: () => handleOptOutSystem(false)\n                                    }\n                                    : {\n                                        title: intl.formatMessage(messages.inventoryKebabOptionsExclude),\n                                        onClick: () => handleOptOutSystem(true)\n                                    }\n                            ]\n                        }\n                    />\n                )}\n            </Header>\n            <Main>\n                <AppInfo optOutSystemHandler={handleOptOutSystem} />\n            </Main>\n        </DetailWrapper>\n    );\n};\n\nInventoryDetail.propTypes = {\n    fetchSystemDetails: propTypes.func,\n    systemDetails: propTypes.object,\n    optOutSystem: propTypes.func,\n    match: propTypes.object,\n    addNotification: propTypes.func,\n    intl: propTypes.any,\n    errors: propTypes.object\n};\n\nfunction mapStateToProps(state) {\n    return {\n        errors: state.SystemCvesStore.cveList.payload.errors,\n        systemDetails: state.entityDetails\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        optOutSystem: (system, toExclude) => dispatch(optOutSystemsAction([system], toExclude)),\n        fetchSystemDetails: system => dispatch(fetchSystemDetails(system)),\n        addNotification: notification => dispatch(addNotification(notification))\n    };\n};\n\nexport default withRouter(\n    injectIntl(\n        connect(\n            mapStateToProps,\n            mapDispatchToProps\n        )(InventoryDetail)\n    )\n);\n"],"names":["InventoryLoadError","_ref","component","props","useEffect","console","error","concat","propTypes","SystemDetails","entity","isOptOut","optOutSystemHandler","loaded","buttonAction","id","display_name","allowedCveActions","showHeaderLabel","setPageTitle","withRouter","connect","entityDetails","opt_out","initialState","BaseDetailWrapper","history","store","Suspense","fallback","ScalprumComponent","appName","module","scope","ErrorComponent","ref","innerRef","DetailWrapper","defaultProps","Bullseye","className","Spinner","size","BaseInventoryDetailHead","InventoryDetailHead","innerProps","BaseAppInfo","AppInfo","InventoryDetail","fetchSystemDetails","systemDetails","optOutSystem","match","addNotification","intl","errors","dispatch","useDispatch","inventoryId","params","clearNotifications","notifications","systemName","exclude","success","variant","title","formatMessage","messages","count","failure","autoDismiss","description","include","handleOptOutSystem","toExclude","then","status","ReadOnlyNotification","Header","breadcrumbs","PATHS","to","isActive","onLoad","mergeWithEntities","mergeWithDetail","INVENTORY_ACTION_TYPES","ReducerRegistry","state","action","type","FETCH_SYSTEM_DETAILS","payload","data","LOAD_ENTITY_FULFILLED","activeApps","name","LOAD_ENTITY_REJECTED","systemDetailsPageStore","hideBack","actions","onClick","Main","injectIntl","SystemCvesStore","cveList","system","optOutSystemsAction","notification"],"sourceRoot":""}