{"version":3,"file":"js/SystemDetailsPage.b786f54e98707dde684d.js","mappings":"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","sources":["webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/InventoryLoadError.js","webpack:///./src/Components/SmartComponents/SystemDetailsPage/SystemDetails.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/DetailWrapper.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/InventoryDetailHead.js","webpack:///./src/Components/SmartComponents/SystemDetailsPage/SystemDetailsPage.js"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useEffect } from 'react';\nvar InventoryLoadError = function (_a) {\n    var component = _a.component, props = __rest(_a, [\"component\"]);\n    useEffect(function () {\n        console.error(\"Unable to load inventory component. Failed to load \".concat(component, \".\"), props);\n    }, []);\n    return (_jsxs(\"div\", { children: [_jsx(\"h1\", { children: \"Unable to load inventory component\" }), _jsxs(\"h2\", { children: [\"Failed to load \", component] }), _jsx(\"code\", { children: \"More info can be found in browser console output.\" })] }));\n};\nexport default InventoryLoadError;\n//# sourceMappingURL=InventoryLoadError.js.map","import React from 'react';\nimport propTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { ConnectedSystemCves } from '../SystemCves/SystemCves';\nimport {\n    EmptyStateExcludedSystem,\n    NotAuthorized\n} from '../../PresentationalComponents/EmptyStates/EmptyStates';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\nimport { intl } from '../../../Utilities/IntlProvider';\nimport messages from '../../../Messages';\nimport { PERMISSIONS, SERVICE_NAME } from '../../../Helpers/constants';\nimport { useRbac } from '../../../Helpers/Hooks';\n\nconst SystemDetails = ({ optOutSystemHandler }) => {\n    const { loaded, opt_out: isOptOut } = useSelector(({ SystemDetailsPageStore }) => SystemDetailsPageStore) ?? {};\n    const { entity } = useSelector(state => state.entityDetails) ?? {};\n\n    const [[\n        canExport,\n        canReadVulnerabilityResults,\n        canEditPairStatus,\n        canReadExcluded\n    ], isRbacLoading] = useRbac([\n        PERMISSIONS.basicReporting,\n        PERMISSIONS.readVulnerabilityResults,\n        PERMISSIONS.setPairStatus,\n        PERMISSIONS.readExcluded]\n    );\n\n    if (isRbacLoading) {\n        return <Spinner centered />;\n    } else if (canReadVulnerabilityResults) {\n        if (entity && loaded && isOptOut) {\n            if (canReadExcluded) {\n                return <EmptyStateExcludedSystem buttonAction={() => optOutSystemHandler(entity.display_name, false)} />;\n            } else {\n                return <NotAuthorized title={intl.formatMessage(messages.notAuthorizedNoAccessForSystem)} />;\n            }\n        } else if (entity) {\n            return <ConnectedSystemCves\n                entity={{ id: entity?.id, display_name: entity?.display_name, insights_id: entity?.insights_id }}\n                showHeaderLabel\n                setPageTitle\n                canExport={canExport}\n                canEditPairStatus={canEditPairStatus}\n            />;\n        } else {\n            return loaded ? null : <Spinner centered />;\n        }\n    } else {\n        return <NotAuthorized serviceName={SERVICE_NAME} />;\n    }\n};\n\nSystemDetails.propTypes = {\n    optOutSystemHandler: propTypes.func\n};\n\nexport default SystemDetails;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { ScalprumComponent } from '@scalprum/react-core';\nimport { useHistory } from 'react-router-dom';\nimport { useStore } from 'react-redux';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport InventoryLoadError from './InventoryLoadError';\nimport classNames from 'classnames';\nvar BaseDetailWrapper = function (props) {\n    var history = useHistory();\n    var store = useStore();\n    var Cmp = props.component;\n    return (_jsx(Cmp, __assign({ className: classNames(props.className, 'inventory') }, { children: _jsx(Suspense, __assign({ fallback: props.fallback }, { children: _jsx(ScalprumComponent, __assign({ history: history, store: store, appName: \"inventory\", module: \"./DetailWrapper\", scope: \"inventory\", ErrorComponent: _jsx(InventoryLoadError, __assign({ component: \"InventoryDetailHead\", history: history, store: store }, props)), ref: props.innerRef }, props)) })) })));\n};\nBaseDetailWrapper.propTypes = {\n    fallback: PropTypes.node,\n    innerRef: PropTypes.object,\n    component: PropTypes.string,\n    className: PropTypes.string,\n};\nvar DetailWrapper = React.forwardRef(function (props, ref) { return _jsx(BaseDetailWrapper, __assign({ innerRef: ref }, props)); });\nDetailWrapper.propTypes = {\n    fallback: PropTypes.node,\n    component: PropTypes.string,\n    className: PropTypes.string,\n};\nDetailWrapper.defaultProps = {\n    fallback: (_jsx(Bullseye, __assign({ className: \"pf-u-p-lg\" }, { children: _jsx(Spinner, { size: \"xl\" }) }))),\n    component: 'section',\n};\nexport default DetailWrapper;\n//# sourceMappingURL=DetailWrapper.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { ScalprumComponent } from '@scalprum/react-core';\nimport { useHistory } from 'react-router-dom';\nimport { useStore } from 'react-redux';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport InventoryLoadError from './InventoryLoadError';\nimport classNames from 'classnames';\nvar BaseInventoryDetailHead = function (props) {\n    var history = useHistory();\n    var store = useStore();\n    var Cmp = props.component;\n    return (_jsx(Cmp, __assign({ className: classNames(props.className, 'inventory') }, { children: _jsx(Suspense, __assign({ fallback: props.fallback }, { children: _jsx(ScalprumComponent, __assign({ history: history, store: store, appName: \"inventory\", module: \"./InventoryDetailHead\", scope: \"inventory\", ErrorComponent: _jsx(InventoryLoadError, __assign({ component: \"InventoryDetailHead\", history: history, store: store }, props)), ref: props.innerRef }, props)) })) })));\n};\nBaseInventoryDetailHead.propTypes = {\n    fallback: PropTypes.node,\n    innerRef: PropTypes.object,\n    component: PropTypes.string,\n    className: PropTypes.string,\n};\nvar InventoryDetailHead = React.forwardRef(function (props, ref) { return _jsx(BaseInventoryDetailHead, __assign({ innerProps: ref }, props)); });\nInventoryDetailHead.propTypes = {\n    fallback: PropTypes.node,\n    component: PropTypes.string,\n    className: PropTypes.string,\n};\nInventoryDetailHead.defaultProps = {\n    fallback: (_jsx(Bullseye, __assign({ className: \"pf-u-p-lg\" }, { children: _jsx(Spinner, { size: \"xl\" }) }))),\n    component: 'section',\n};\nexport default InventoryDetailHead;\n//# sourceMappingURL=InventoryDetailHead.js.map","import { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { addNotification, clearNotifications } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouteMatch } from 'react-router-dom';\nimport { fetchSystemDetails, optOutSystemsAction } from '../../../Store/Actions/Actions';\nimport SystemDetails from './SystemDetails';\nimport Header from '../../PresentationalComponents/Header/Header';\nimport { useIntl } from 'react-intl';\nimport {\n    NotAuthorizedNotification,\n    PATHS,\n    PERMISSIONS,\n    ReadOnlyNotification\n} from '../../../Helpers/constants';\nimport messages from '../../../Messages';\n\nimport { DetailWrapper, InventoryDetailHead } from '@redhat-cloud-services/frontend-components/Inventory';\nimport { useRbac } from '../../../Helpers/Hooks';\nimport ReducerRegistry from '../../../Utilities/ReducerRegistry';\n\nconst InventoryDetail = () => {\n    const dispatch = useDispatch();\n    const match = useRouteMatch();\n    const intl = useIntl();\n\n    const { loaded, opt_out: isOptOut } = useSelector(({ SystemDetailsPageStore }) => SystemDetailsPageStore) ?? {};\n    const { entity } = useSelector(state => state.entityDetails) ?? {};\n\n    const errors = useSelector(({ SystemCvesStore }) => SystemCvesStore.cveList.payload.errors);\n\n    const [[canSetExcludedIncluded]] = useRbac([PERMISSIONS.setExcludedIncluded]);\n\n    const inventoryId = match.params.inventoryId;\n\n    useEffect(() => {\n        dispatch(fetchSystemDetails(inventoryId));\n    }, [dispatch, inventoryId]);\n\n    useEffect(() => {\n        return () => {\n            dispatch(clearNotifications());\n        };\n    }, [dispatch]);\n\n    const notifications = systemName => ({\n        exclude: {\n            success: {\n                variant: 'success',\n                title: intl.formatMessage(messages.notificationDisableSuccess, { count: 1, systemName })\n            },\n            failure: {\n                variant: 'danger',\n                autoDismiss: false,\n                title: intl.formatMessage(messages.notificationDisableFailureTitle, { count: 1, systemName }),\n                description: intl.formatMessage(messages.notificationDetailDisableFailureBody, { count: 1 })\n            }\n        },\n        include: {\n            success: {\n                variant: 'success',\n                title: intl.formatMessage(messages.notificationEnableSuccessTitle, { count: 1, systemName }),\n                description: intl.formatMessage(messages.notificationEnableSuccessBody, { count: 1 })\n            },\n            failure: {\n                variant: 'danger',\n                autoDismiss: false,\n                title: intl.formatMessage(messages.notificationEnableFailureTitle, { count: 1, systemName }),\n                description: intl.formatMessage(messages.notificationDetailEnableFailureBody, { count: 1 })\n            }\n        }\n    });\n\n    const handleOptOutSystem = (systemName, toExclude) => {\n        dispatch(optOutSystemsAction([inventoryId], toExclude)).then(() => {\n            dispatch(fetchSystemDetails(inventoryId));\n            dispatch(addNotification(toExclude\n                ? notifications(systemName).exclude.success\n                : notifications(systemName).include.success));\n        }).catch(error => {\n            dispatch(addNotification(\n                error.status === '503' ? ReadOnlyNotification :\n                    error.status === '403' ? NotAuthorizedNotification :\n                        toExclude\n                            ? notifications(systemName).exclude.failure\n                            : notifications(systemName).include.failure));\n        });\n    };\n\n    return (\n        <DetailWrapper\n            inventoryId={inventoryId}\n            onLoad={({ mergeWithDetail }) => {\n                ReducerRegistry.register({\n                    ...mergeWithDetail()\n                });\n            }}\n        >\n            <section className=\"inventory\">\n                <Header\n                    title=\"\"\n                    breadcrumbs={[\n                        {\n                            title: PATHS.systemsPage.title,\n                            to: PATHS.systemsPage.to,\n                            isLoaded: true\n                        },\n                        {\n                            title: entity?.display_name || intl.formatMessage(messages.invalidSystem),\n                            isActive: true,\n                            isLoaded: loaded\n                        }\n                    ]}\n                >\n                    {!errors && (\n                        <InventoryDetailHead\n                            hideBack\n                            actions={\n                                entity && canSetExcludedIncluded && [\n                                    isOptOut\n                                        ? {\n                                            title: intl.formatMessage(messages.inventoryKebabOptionsEnable),\n                                            onClick: () => handleOptOutSystem(entity?.display_name, false)\n                                        }\n                                        : {\n                                            title: intl.formatMessage(messages.inventoryKebabOptionsDisable),\n                                            onClick: () => handleOptOutSystem(entity?.display_name, true)\n                                        }\n                                ]\n                            }\n                        />\n                    )}\n                </Header>\n            </section>\n            <Main>\n                <SystemDetails optOutSystemHandler={handleOptOutSystem} />\n            </Main>\n        </DetailWrapper>\n    );\n};\n\nexport default InventoryDetail;\n"],"names":["_a","component","props","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","__rest","useEffect","console","error","concat","children","SystemDetails","_ref","_useSelector","_useSelector2","optOutSystemHandler","_ref2","useSelector","_ref3","SystemDetailsPageStore","loaded","isOptOut","opt_out","entity","state","entityDetails","_useRbac","useRbac","PERMISSIONS","basicReporting","readVulnerabilityResults","setPairStatus","readExcluded","_useRbac2","_slicedToArray","_useRbac2$","canExport","canReadVulnerabilityResults","canEditPairStatus","canReadExcluded","React","Spinner","centered","EmptyStateExcludedSystem","buttonAction","display_name","NotAuthorized","title","intl","formatMessage","messages","notAuthorizedNoAccessForSystem","ConnectedSystemCves","id","insights_id","showHeaderLabel","setPageTitle","serviceName","SERVICE_NAME","propTypes","__assign","assign","n","arguments","apply","this","BaseDetailWrapper","history","store","Cmp","className","Suspense","fallback","ScalprumComponent","appName","module","scope","ErrorComponent","InventoryLoadError","ref","innerRef","DetailWrapper","defaultProps","Bullseye","size","BaseInventoryDetailHead","InventoryDetailHead","innerProps","dispatch","useDispatch","match","useRouteMatch","useIntl","errors","_ref4","SystemCvesStore","cveList","payload","setExcludedIncluded","canSetExcludedIncluded","inventoryId","params","fetchSystemDetails","clearNotifications","notifications","systemName","exclude","success","variant","notificationDisableSuccess","count","failure","autoDismiss","notificationDisableFailureTitle","description","notificationDetailDisableFailureBody","include","notificationEnableSuccessTitle","notificationEnableSuccessBody","notificationEnableFailureTitle","notificationDetailEnableFailureBody","handleOptOutSystem","toExclude","optOutSystemsAction","then","addNotification","status","ReadOnlyNotification","NotAuthorizedNotification","onLoad","_ref5","mergeWithDetail","ReducerRegistry","register","_objectSpread","Header","breadcrumbs","PATHS","systemsPage","to","isLoaded","invalidSystem","isActive","hideBack","actions","inventoryKebabOptionsEnable","onClick","inventoryKebabOptionsDisable","Main"],"sourceRoot":""}